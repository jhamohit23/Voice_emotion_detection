WARNING 2024-06-11 13:17:30,049 - From C:\Users\Dell\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\backend\common\global_state.py:82: The name tf.reset_default_graph is deprecated. Please use tf.compat.v1.reset_default_graph instead.

ERROR 2024-06-11 13:23:14,880 - Error loading data: name 'pd' is not defined
WARNING 2024-06-11 13:23:15,713 - From C:\Users\Dell\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\backend\common\global_state.py:82: The name tf.reset_default_graph is deprecated. Please use tf.compat.v1.reset_default_graph instead.

ERROR 2024-06-11 13:24:00,820 - Error loading data: name 'pd' is not defined
ERROR 2024-06-11 13:24:00,820 - Error loading data: name 'pd' is not defined
WARNING 2024-06-11 13:24:01,995 - From C:\Users\Dell\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\backend\common\global_state.py:82: The name tf.reset_default_graph is deprecated. Please use tf.compat.v1.reset_default_graph instead.

ERROR 2024-06-11 13:24:43,713 - Error preparing data: name 'extract_features' is not defined
ERROR 2024-06-11 13:24:43,713 - Error preparing data: name 'extract_features' is not defined
WARNING 2024-06-11 13:24:44,498 - From C:\Users\Dell\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\backend\common\global_state.py:82: The name tf.reset_default_graph is deprecated. Please use tf.compat.v1.reset_default_graph instead.

WARNING 2024-06-11 13:27:09,377 - From C:\Users\Dell\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\backend\common\global_state.py:82: The name tf.reset_default_graph is deprecated. Please use tf.compat.v1.reset_default_graph instead.

WARNING 2024-06-11 13:29:36,935 - From C:\Users\Dell\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\backend\common\global_state.py:82: The name tf.reset_default_graph is deprecated. Please use tf.compat.v1.reset_default_graph instead.

WARNING 2024-06-11 13:31:39,540 - From C:\Users\Dell\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\backend\common\global_state.py:82: The name tf.reset_default_graph is deprecated. Please use tf.compat.v1.reset_default_graph instead.

WARNING 2024-06-11 13:34:05,634 - From C:\Users\Dell\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\backend\common\global_state.py:82: The name tf.reset_default_graph is deprecated. Please use tf.compat.v1.reset_default_graph instead.

DEBUG 2024-06-11 13:35:27,632 - bytecode dump:
>          0	NOP(arg=None, lineno=1141)
           2	RESUME(arg=0, lineno=1141)
           4	LOAD_FAST(arg=0, lineno=1144)
           6	LOAD_CONST(arg=1, lineno=1144)
           8	BINARY_SUBSCR(arg=None, lineno=1144)
          18	STORE_FAST(arg=3, lineno=1144)
          20	LOAD_FAST(arg=1, lineno=1145)
          22	UNARY_NEGATIVE(arg=None, lineno=1145)
          24	LOAD_FAST(arg=3, lineno=1145)
          26	SWAP(arg=2, lineno=1145)
          28	COPY(arg=2, lineno=1145)
          30	COMPARE_OP(arg=1, lineno=1145)
          36	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1145)
          38	LOAD_FAST(arg=1, lineno=1145)
          40	COMPARE_OP(arg=1, lineno=1145)
          46	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1145)
          48	JUMP_FORWARD(arg=2, lineno=1145)
>         50	POP_TOP(arg=None, lineno=1145)
          52	JUMP_FORWARD(arg=2, lineno=1145)
>         54	LOAD_CONST(arg=1, lineno=1146)
          56	STORE_FAST(arg=3, lineno=1146)
>         58	LOAD_FAST(arg=0, lineno=1148)
          60	LOAD_CONST(arg=2, lineno=1148)
          62	BINARY_SUBSCR(arg=None, lineno=1148)
          72	STORE_FAST(arg=4, lineno=1148)
          74	LOAD_FAST(arg=1, lineno=1149)
          76	UNARY_NEGATIVE(arg=None, lineno=1149)
          78	LOAD_FAST(arg=4, lineno=1149)
          80	SWAP(arg=2, lineno=1149)
          82	COPY(arg=2, lineno=1149)
          84	COMPARE_OP(arg=1, lineno=1149)
          90	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1149)
          92	LOAD_FAST(arg=1, lineno=1149)
          94	COMPARE_OP(arg=1, lineno=1149)
         100	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1149)
         102	JUMP_FORWARD(arg=2, lineno=1149)
>        104	POP_TOP(arg=None, lineno=1149)
         106	JUMP_FORWARD(arg=2, lineno=1149)
>        108	LOAD_CONST(arg=1, lineno=1150)
         110	STORE_FAST(arg=4, lineno=1150)
>        112	LOAD_FAST(arg=2, lineno=1152)
         114	POP_JUMP_FORWARD_IF_FALSE(arg=42, lineno=1152)
         116	LOAD_GLOBAL(arg=1, lineno=1153)
         128	LOAD_ATTR(arg=1, lineno=1153)
         138	LOAD_FAST(arg=3, lineno=1153)
         140	PRECALL(arg=1, lineno=1153)
         144	CALL(arg=1, lineno=1153)
         154	LOAD_GLOBAL(arg=1, lineno=1153)
         166	LOAD_ATTR(arg=1, lineno=1153)
         176	LOAD_FAST(arg=4, lineno=1153)
         178	PRECALL(arg=1, lineno=1153)
         182	CALL(arg=1, lineno=1153)
         192	COMPARE_OP(arg=3, lineno=1153)
         198	RETURN_VALUE(arg=None, lineno=1153)
>        200	LOAD_GLOBAL(arg=1, lineno=1155)
         212	LOAD_ATTR(arg=2, lineno=1155)
         222	LOAD_FAST(arg=3, lineno=1155)
         224	PRECALL(arg=1, lineno=1155)
         228	CALL(arg=1, lineno=1155)
         238	LOAD_GLOBAL(arg=1, lineno=1155)
         250	LOAD_ATTR(arg=2, lineno=1155)
         260	LOAD_FAST(arg=4, lineno=1155)
         262	PRECALL(arg=1, lineno=1155)
         266	CALL(arg=1, lineno=1155)
         276	COMPARE_OP(arg=3, lineno=1155)
         282	RETURN_VALUE(arg=None, lineno=1155)
DEBUG 2024-06-11 13:35:27,632 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 13:35:27,632 - stack: []
DEBUG 2024-06-11 13:35:27,632 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=0, inst=NOP(arg=None, lineno=1141)
DEBUG 2024-06-11 13:35:27,632 - stack []
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=2, inst=RESUME(arg=0, lineno=1141)
DEBUG 2024-06-11 13:35:27,632 - stack []
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1144)
DEBUG 2024-06-11 13:35:27,632 - stack []
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1144)
DEBUG 2024-06-11 13:35:27,632 - stack ['$x4.0']
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1144)
DEBUG 2024-06-11 13:35:27,632 - stack ['$x4.0', '$const6.1']
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=18, inst=STORE_FAST(arg=3, lineno=1144)
DEBUG 2024-06-11 13:35:27,632 - stack ['$8binary_subscr.2']
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=1145)
DEBUG 2024-06-11 13:35:27,632 - stack []
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=22, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
DEBUG 2024-06-11 13:35:27,632 - stack ['$threshold20.3']
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=24, inst=LOAD_FAST(arg=3, lineno=1145)
DEBUG 2024-06-11 13:35:27,632 - stack ['$22unary_negative.4']
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=26, inst=SWAP(arg=2, lineno=1145)
DEBUG 2024-06-11 13:35:27,632 - stack ['$22unary_negative.4', '$x024.5']
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=28, inst=COPY(arg=2, lineno=1145)
DEBUG 2024-06-11 13:35:27,632 - stack ['$x024.5', '$22unary_negative.4']
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=30, inst=COMPARE_OP(arg=1, lineno=1145)
DEBUG 2024-06-11 13:35:27,632 - stack ['$x024.5', '$22unary_negative.4', '$x024.5']
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=36, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1145)
DEBUG 2024-06-11 13:35:27,632 - stack ['$x024.5', '$30compare_op.6']
DEBUG 2024-06-11 13:35:27,632 - end state. edges=[Edge(pc=38, stack=('$x024.5',), blockstack=(), npush=0), Edge(pc=50, stack=('$x024.5',), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:35:27,632 - pending: deque([State(pc_initial=38 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
DEBUG 2024-06-11 13:35:27,632 - stack: ['$phi38.0']
DEBUG 2024-06-11 13:35:27,632 - state.pc_initial: State(pc_initial=38 nstack_initial=1)
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=38, inst=LOAD_FAST(arg=1, lineno=1145)
DEBUG 2024-06-11 13:35:27,632 - stack ['$phi38.0']
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=40, inst=COMPARE_OP(arg=1, lineno=1145)
DEBUG 2024-06-11 13:35:27,632 - stack ['$phi38.0', '$threshold38.1']
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=46, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1145)
DEBUG 2024-06-11 13:35:27,632 - stack ['$40compare_op.2']
DEBUG 2024-06-11 13:35:27,632 - end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:35:27,632 - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=48 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
DEBUG 2024-06-11 13:35:27,632 - stack: ['$phi50.0']
DEBUG 2024-06-11 13:35:27,632 - state.pc_initial: State(pc_initial=50 nstack_initial=1)
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=50, inst=POP_TOP(arg=None, lineno=1145)
DEBUG 2024-06-11 13:35:27,632 - stack ['$phi50.0']
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=52, inst=JUMP_FORWARD(arg=2, lineno=1145)
DEBUG 2024-06-11 13:35:27,632 - stack []
DEBUG 2024-06-11 13:35:27,632 - end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:35:27,632 - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
DEBUG 2024-06-11 13:35:27,632 - stack: []
DEBUG 2024-06-11 13:35:27,632 - state.pc_initial: State(pc_initial=48 nstack_initial=0)
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=48, inst=JUMP_FORWARD(arg=2, lineno=1145)
DEBUG 2024-06-11 13:35:27,632 - stack []
DEBUG 2024-06-11 13:35:27,632 - end state. edges=[Edge(pc=54, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:35:27,632 - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=54 nstack_initial=0)])
DEBUG 2024-06-11 13:35:27,632 - stack: []
DEBUG 2024-06-11 13:35:27,632 - state.pc_initial: State(pc_initial=58 nstack_initial=0)
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1148)
DEBUG 2024-06-11 13:35:27,632 - stack []
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=60, inst=LOAD_CONST(arg=2, lineno=1148)
DEBUG 2024-06-11 13:35:27,632 - stack ['$x58.0']
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=62, inst=BINARY_SUBSCR(arg=None, lineno=1148)
DEBUG 2024-06-11 13:35:27,632 - stack ['$x58.0', '$const60.1']
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=72, inst=STORE_FAST(arg=4, lineno=1148)
DEBUG 2024-06-11 13:35:27,632 - stack ['$62binary_subscr.2']
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=74, inst=LOAD_FAST(arg=1, lineno=1149)
DEBUG 2024-06-11 13:35:27,632 - stack []
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=1149)
DEBUG 2024-06-11 13:35:27,632 - stack ['$threshold74.3']
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=78, inst=LOAD_FAST(arg=4, lineno=1149)
DEBUG 2024-06-11 13:35:27,632 - stack ['$76unary_negative.4']
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=80, inst=SWAP(arg=2, lineno=1149)
DEBUG 2024-06-11 13:35:27,632 - stack ['$76unary_negative.4', '$x178.5']
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=82, inst=COPY(arg=2, lineno=1149)
DEBUG 2024-06-11 13:35:27,632 - stack ['$x178.5', '$76unary_negative.4']
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=84, inst=COMPARE_OP(arg=1, lineno=1149)
DEBUG 2024-06-11 13:35:27,632 - stack ['$x178.5', '$76unary_negative.4', '$x178.5']
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=90, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1149)
DEBUG 2024-06-11 13:35:27,632 - stack ['$x178.5', '$84compare_op.6']
DEBUG 2024-06-11 13:35:27,632 - end state. edges=[Edge(pc=92, stack=('$x178.5',), blockstack=(), npush=0), Edge(pc=104, stack=('$x178.5',), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:35:27,632 - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=54 nstack_initial=0), State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1)])
DEBUG 2024-06-11 13:35:27,632 - pending: deque([State(pc_initial=54 nstack_initial=0), State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1)])
DEBUG 2024-06-11 13:35:27,632 - stack: []
DEBUG 2024-06-11 13:35:27,632 - state.pc_initial: State(pc_initial=54 nstack_initial=0)
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=1146)
DEBUG 2024-06-11 13:35:27,632 - stack []
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=56, inst=STORE_FAST(arg=3, lineno=1146)
DEBUG 2024-06-11 13:35:27,632 - stack ['$const54.0']
DEBUG 2024-06-11 13:35:27,632 - end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:35:27,632 - pending: deque([State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1), State(pc_initial=58 nstack_initial=0)])
DEBUG 2024-06-11 13:35:27,632 - stack: ['$phi92.0']
DEBUG 2024-06-11 13:35:27,632 - state.pc_initial: State(pc_initial=92 nstack_initial=1)
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=92, inst=LOAD_FAST(arg=1, lineno=1149)
DEBUG 2024-06-11 13:35:27,632 - stack ['$phi92.0']
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=94, inst=COMPARE_OP(arg=1, lineno=1149)
DEBUG 2024-06-11 13:35:27,632 - stack ['$phi92.0', '$threshold92.1']
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=100, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1149)
DEBUG 2024-06-11 13:35:27,632 - stack ['$94compare_op.2']
DEBUG 2024-06-11 13:35:27,632 - end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=112, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:35:27,632 - pending: deque([State(pc_initial=104 nstack_initial=1), State(pc_initial=58 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 13:35:27,632 - stack: ['$phi104.0']
DEBUG 2024-06-11 13:35:27,632 - state.pc_initial: State(pc_initial=104 nstack_initial=1)
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=104, inst=POP_TOP(arg=None, lineno=1149)
DEBUG 2024-06-11 13:35:27,632 - stack ['$phi104.0']
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=106, inst=JUMP_FORWARD(arg=2, lineno=1149)
DEBUG 2024-06-11 13:35:27,632 - stack []
DEBUG 2024-06-11 13:35:27,632 - end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:35:27,632 - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 13:35:27,632 - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 13:35:27,632 - stack: []
DEBUG 2024-06-11 13:35:27,632 - state.pc_initial: State(pc_initial=102 nstack_initial=0)
DEBUG 2024-06-11 13:35:27,632 - dispatch pc=102, inst=JUMP_FORWARD(arg=2, lineno=1149)
DEBUG 2024-06-11 13:35:27,632 - stack []
DEBUG 2024-06-11 13:35:27,632 - end state. edges=[Edge(pc=108, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:35:27,638 - pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=108 nstack_initial=0)])
DEBUG 2024-06-11 13:35:27,638 - stack: []
DEBUG 2024-06-11 13:35:27,638 - state.pc_initial: State(pc_initial=112 nstack_initial=0)
DEBUG 2024-06-11 13:35:27,638 - dispatch pc=112, inst=LOAD_FAST(arg=2, lineno=1152)
DEBUG 2024-06-11 13:35:27,638 - stack []
DEBUG 2024-06-11 13:35:27,638 - dispatch pc=114, inst=POP_JUMP_FORWARD_IF_FALSE(arg=42, lineno=1152)
DEBUG 2024-06-11 13:35:27,638 - stack ['$zero_pos112.0']
DEBUG 2024-06-11 13:35:27,638 - end state. edges=[Edge(pc=116, stack=(), blockstack=(), npush=0), Edge(pc=200, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:35:27,638 - pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0)])
DEBUG 2024-06-11 13:35:27,638 - pending: deque([State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0)])
DEBUG 2024-06-11 13:35:27,638 - stack: []
DEBUG 2024-06-11 13:35:27,638 - state.pc_initial: State(pc_initial=108 nstack_initial=0)
DEBUG 2024-06-11 13:35:27,638 - dispatch pc=108, inst=LOAD_CONST(arg=1, lineno=1150)
DEBUG 2024-06-11 13:35:27,638 - stack []
DEBUG 2024-06-11 13:35:27,638 - dispatch pc=110, inst=STORE_FAST(arg=4, lineno=1150)
DEBUG 2024-06-11 13:35:27,638 - stack ['$const108.0']
DEBUG 2024-06-11 13:35:27,638 - end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:35:27,638 - pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 13:35:27,638 - stack: []
DEBUG 2024-06-11 13:35:27,638 - state.pc_initial: State(pc_initial=116 nstack_initial=0)
DEBUG 2024-06-11 13:35:27,638 - dispatch pc=116, inst=LOAD_GLOBAL(arg=1, lineno=1153)
DEBUG 2024-06-11 13:35:27,638 - stack []
DEBUG 2024-06-11 13:35:27,638 - dispatch pc=128, inst=LOAD_ATTR(arg=1, lineno=1153)
DEBUG 2024-06-11 13:35:27,638 - stack ['$null$116.1', '$116load_global.0']
DEBUG 2024-06-11 13:35:27,638 - dispatch pc=138, inst=LOAD_FAST(arg=3, lineno=1153)
DEBUG 2024-06-11 13:35:27,638 - stack ['$null$116.1', '$128load_attr.2']
DEBUG 2024-06-11 13:35:27,638 - dispatch pc=140, inst=PRECALL(arg=1, lineno=1153)
DEBUG 2024-06-11 13:35:27,638 - stack ['$null$116.1', '$128load_attr.2', '$x0138.3']
DEBUG 2024-06-11 13:35:27,638 - dispatch pc=144, inst=CALL(arg=1, lineno=1153)
DEBUG 2024-06-11 13:35:27,638 - stack ['$null$116.1', '$128load_attr.2', '$x0138.3']
DEBUG 2024-06-11 13:35:27,638 - dispatch pc=154, inst=LOAD_GLOBAL(arg=1, lineno=1153)
DEBUG 2024-06-11 13:35:27,638 - stack ['$144call.4']
DEBUG 2024-06-11 13:35:27,638 - dispatch pc=166, inst=LOAD_ATTR(arg=1, lineno=1153)
DEBUG 2024-06-11 13:35:27,638 - stack ['$144call.4', '$null$154.6', '$154load_global.5']
DEBUG 2024-06-11 13:35:27,638 - dispatch pc=176, inst=LOAD_FAST(arg=4, lineno=1153)
DEBUG 2024-06-11 13:35:27,638 - stack ['$144call.4', '$null$154.6', '$166load_attr.7']
DEBUG 2024-06-11 13:35:27,638 - dispatch pc=178, inst=PRECALL(arg=1, lineno=1153)
DEBUG 2024-06-11 13:35:27,638 - stack ['$144call.4', '$null$154.6', '$166load_attr.7', '$x1176.8']
DEBUG 2024-06-11 13:35:27,638 - dispatch pc=182, inst=CALL(arg=1, lineno=1153)
DEBUG 2024-06-11 13:35:27,638 - stack ['$144call.4', '$null$154.6', '$166load_attr.7', '$x1176.8']
DEBUG 2024-06-11 13:35:27,638 - dispatch pc=192, inst=COMPARE_OP(arg=3, lineno=1153)
DEBUG 2024-06-11 13:35:27,638 - stack ['$144call.4', '$182call.9']
DEBUG 2024-06-11 13:35:27,638 - dispatch pc=198, inst=RETURN_VALUE(arg=None, lineno=1153)
DEBUG 2024-06-11 13:35:27,638 - stack ['$192compare_op.10']
DEBUG 2024-06-11 13:35:27,640 - end state. edges=[]
DEBUG 2024-06-11 13:35:27,640 - pending: deque([State(pc_initial=200 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 13:35:27,640 - stack: []
DEBUG 2024-06-11 13:35:27,640 - state.pc_initial: State(pc_initial=200 nstack_initial=0)
DEBUG 2024-06-11 13:35:27,640 - dispatch pc=200, inst=LOAD_GLOBAL(arg=1, lineno=1155)
DEBUG 2024-06-11 13:35:27,640 - stack []
DEBUG 2024-06-11 13:35:27,640 - dispatch pc=212, inst=LOAD_ATTR(arg=2, lineno=1155)
DEBUG 2024-06-11 13:35:27,640 - stack ['$null$200.1', '$200load_global.0']
DEBUG 2024-06-11 13:35:27,640 - dispatch pc=222, inst=LOAD_FAST(arg=3, lineno=1155)
DEBUG 2024-06-11 13:35:27,640 - stack ['$null$200.1', '$212load_attr.2']
DEBUG 2024-06-11 13:35:27,640 - dispatch pc=224, inst=PRECALL(arg=1, lineno=1155)
DEBUG 2024-06-11 13:35:27,640 - stack ['$null$200.1', '$212load_attr.2', '$x0222.3']
DEBUG 2024-06-11 13:35:27,640 - dispatch pc=228, inst=CALL(arg=1, lineno=1155)
DEBUG 2024-06-11 13:35:27,640 - stack ['$null$200.1', '$212load_attr.2', '$x0222.3']
DEBUG 2024-06-11 13:35:27,640 - dispatch pc=238, inst=LOAD_GLOBAL(arg=1, lineno=1155)
DEBUG 2024-06-11 13:35:27,640 - stack ['$228call.4']
DEBUG 2024-06-11 13:35:27,640 - dispatch pc=250, inst=LOAD_ATTR(arg=2, lineno=1155)
DEBUG 2024-06-11 13:35:27,640 - stack ['$228call.4', '$null$238.6', '$238load_global.5']
DEBUG 2024-06-11 13:35:27,640 - dispatch pc=260, inst=LOAD_FAST(arg=4, lineno=1155)
DEBUG 2024-06-11 13:35:27,640 - stack ['$228call.4', '$null$238.6', '$250load_attr.7']
DEBUG 2024-06-11 13:35:27,640 - dispatch pc=262, inst=PRECALL(arg=1, lineno=1155)
DEBUG 2024-06-11 13:35:27,640 - stack ['$228call.4', '$null$238.6', '$250load_attr.7', '$x1260.8']
DEBUG 2024-06-11 13:35:27,640 - dispatch pc=266, inst=CALL(arg=1, lineno=1155)
DEBUG 2024-06-11 13:35:27,640 - stack ['$228call.4', '$null$238.6', '$250load_attr.7', '$x1260.8']
DEBUG 2024-06-11 13:35:27,640 - dispatch pc=276, inst=COMPARE_OP(arg=3, lineno=1155)
DEBUG 2024-06-11 13:35:27,640 - stack ['$228call.4', '$266call.9']
DEBUG 2024-06-11 13:35:27,640 - dispatch pc=282, inst=RETURN_VALUE(arg=None, lineno=1155)
DEBUG 2024-06-11 13:35:27,640 - stack ['$276compare_op.10']
DEBUG 2024-06-11 13:35:27,640 - end state. edges=[]
DEBUG 2024-06-11 13:35:27,640 - pending: deque([State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 13:35:27,640 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 13:35:27,640 - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=38 nstack_initial=1): {'$phi38.0'},
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): set(),
             State(pc_initial=54 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=1): {'$phi92.0'},
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=104 nstack_initial=1): set(),
             State(pc_initial=108 nstack_initial=0): set(),
             State(pc_initial=112 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=200 nstack_initial=0): set()})
DEBUG 2024-06-11 13:35:27,640 - defmap: {'$phi104.0': State(pc_initial=58 nstack_initial=0),
 '$phi38.0': State(pc_initial=0 nstack_initial=0),
 '$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi92.0': State(pc_initial=58 nstack_initial=0)}
DEBUG 2024-06-11 13:35:27,640 - phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))},
             '$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}})
DEBUG 2024-06-11 13:35:27,640 - changing phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))},
             '$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}})
DEBUG 2024-06-11 13:35:27,640 - keep phismap: {'$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
 '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}}
DEBUG 2024-06-11 13:35:27,640 - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi38.0': '$x024.5'},
             State(pc_initial=58 nstack_initial=0): {'$phi92.0': '$x178.5'}})
DEBUG 2024-06-11 13:35:27,640 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 13:35:27,640 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'value': '$8binary_subscr.2'}), (20, {'res': '$threshold20.3'}), (22, {'value': '$threshold20.3', 'res': '$22unary_negative.4'}), (24, {'res': '$x024.5'}), (30, {'lhs': '$22unary_negative.4', 'rhs': '$x024.5', 'res': '$30compare_op.6'}), (32, {}), (34, {}), (36, {'pred': '$30compare_op.6'})), outgoing_phis={'$phi38.0': '$x024.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={38: ('$x024.5',), 50: ('$x024.5',)})
DEBUG 2024-06-11 13:35:27,640 - block_infos State(pc_initial=38 nstack_initial=1):
AdaptBlockInfo(insts=((38, {'res': '$threshold38.1'}), (40, {'lhs': '$phi38.0', 'rhs': '$threshold38.1', 'res': '$40compare_op.2'}), (42, {}), (44, {}), (46, {'pred': '$40compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: (), 58: ()})
DEBUG 2024-06-11 13:35:27,640 - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={54: ()})
DEBUG 2024-06-11 13:35:27,640 - block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((52, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ()})
DEBUG 2024-06-11 13:35:27,640 - block_infos State(pc_initial=54 nstack_initial=0):
AdaptBlockInfo(insts=((54, {'res': '$const54.0'}), (56, {'value': '$const54.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ()})
DEBUG 2024-06-11 13:35:27,640 - block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$x58.0'}), (60, {'res': '$const60.1'}), (62, {'index': '$const60.1', 'target': '$x58.0', 'res': '$62binary_subscr.2'}), (64, {}), (66, {}), (68, {}), (70, {}), (72, {'value': '$62binary_subscr.2'}), (74, {'res': '$threshold74.3'}), (76, {'value': '$threshold74.3', 'res': '$76unary_negative.4'}), (78, {'res': '$x178.5'}), (84, {'lhs': '$76unary_negative.4', 'rhs': '$x178.5', 'res': '$84compare_op.6'}), (86, {}), (88, {}), (90, {'pred': '$84compare_op.6'})), outgoing_phis={'$phi92.0': '$x178.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: ('$x178.5',), 104: ('$x178.5',)})
DEBUG 2024-06-11 13:35:27,640 - block_infos State(pc_initial=92 nstack_initial=1):
AdaptBlockInfo(insts=((92, {'res': '$threshold92.1'}), (94, {'lhs': '$phi92.0', 'rhs': '$threshold92.1', 'res': '$94compare_op.2'}), (96, {}), (98, {}), (100, {'pred': '$94compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 112: ()})
DEBUG 2024-06-11 13:35:27,640 - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={108: ()})
DEBUG 2024-06-11 13:35:27,640 - block_infos State(pc_initial=104 nstack_initial=1):
AdaptBlockInfo(insts=((106, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ()})
DEBUG 2024-06-11 13:35:27,640 - block_infos State(pc_initial=108 nstack_initial=0):
AdaptBlockInfo(insts=((108, {'res': '$const108.0'}), (110, {'value': '$const108.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ()})
DEBUG 2024-06-11 13:35:27,640 - block_infos State(pc_initial=112 nstack_initial=0):
AdaptBlockInfo(insts=((112, {'res': '$zero_pos112.0'}), (114, {'pred': '$zero_pos112.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={116: (), 200: ()})
DEBUG 2024-06-11 13:35:27,640 - block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'idx': 0, 'res': '$116load_global.0'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {}), (128, {'item': '$116load_global.0', 'res': '$128load_attr.2'}), (130, {}), (132, {}), (134, {}), (136, {}), (138, {'res': '$x0138.3'}), (140, {}), (142, {}), (144, {'func': '$128load_attr.2', 'args': ['$x0138.3'], 'kw_names': None, 'res': '$144call.4'}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'idx': 0, 'res': '$154load_global.5'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {}), (166, {'item': '$154load_global.5', 'res': '$166load_attr.7'}), (168, {}), (170, {}), (172, {}), (174, {}), (176, {'res': '$x1176.8'}), (178, {}), (180, {}), (182, {'func': '$166load_attr.7', 'args': ['$x1176.8'], 'kw_names': None, 'res': '$182call.9'}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'lhs': '$144call.4', 'rhs': '$182call.9', 'res': '$192compare_op.10'}), (194, {}), (196, {}), (198, {'retval': '$192compare_op.10', 'castval': '$198return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 13:35:27,640 - block_infos State(pc_initial=200 nstack_initial=0):
AdaptBlockInfo(insts=((200, {'idx': 0, 'res': '$200load_global.0'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {'item': '$200load_global.0', 'res': '$212load_attr.2'}), (214, {}), (216, {}), (218, {}), (220, {}), (222, {'res': '$x0222.3'}), (224, {}), (226, {}), (228, {'func': '$212load_attr.2', 'args': ['$x0222.3'], 'kw_names': None, 'res': '$228call.4'}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'idx': 0, 'res': '$238load_global.5'}), (240, {}), (242, {}), (244, {}), (246, {}), (248, {}), (250, {'item': '$238load_global.5', 'res': '$250load_attr.7'}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {'res': '$x1260.8'}), (262, {}), (264, {}), (266, {'func': '$250load_attr.7', 'args': ['$x1260.8'], 'kw_names': None, 'res': '$266call.9'}), (268, {}), (270, {}), (272, {}), (274, {}), (276, {'lhs': '$228call.4', 'rhs': '$266call.9', 'res': '$276compare_op.10'}), (278, {}), (280, {}), (282, {'retval': '$276compare_op.10', 'castval': '$282return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 13:35:27,640 - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const6.1 = const(int, 0)                ['$const6.1']
    x0 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$const6.1', 'x', 'x0']
    $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$22unary_negative.4', 'threshold']
    $30compare_op.6 = $22unary_negative.4 <= x0 ['$22unary_negative.4', '$30compare_op.6', 'x0']
    bool36 = global(bool: <class 'bool'>)    ['bool36']
    $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.6', '$36pred', 'bool36']
    $phi38.0 = x0                            ['$phi38.0', 'x0']
    branch $36pred, 38, 50                   ['$36pred']
label 38:
    $40compare_op.2 = $phi38.0 <= threshold  ['$40compare_op.2', '$phi38.0', 'threshold']
    bool46 = global(bool: <class 'bool'>)    ['bool46']
    $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.2', '$46pred', 'bool46']
    branch $46pred, 48, 58                   ['$46pred']
label 48:
    jump 54                                  []
label 50:
    jump 58                                  []
label 54:
    x0 = const(int, 0)                       ['x0']
    jump 58                                  []
label 58:
    $const60.1 = const(int, -1)              ['$const60.1']
    x1 = getitem(value=x, index=$const60.1, fn=<built-in function getitem>) ['$const60.1', 'x', 'x1']
    $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$76unary_negative.4', 'threshold']
    $84compare_op.6 = $76unary_negative.4 <= x1 ['$76unary_negative.4', '$84compare_op.6', 'x1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None) ['$84compare_op.6', '$90pred', 'bool90']
    $phi92.0 = x1                            ['$phi92.0', 'x1']
    branch $90pred, 92, 104                  ['$90pred']
label 92:
    $94compare_op.2 = $phi92.0 <= threshold  ['$94compare_op.2', '$phi92.0', 'threshold']
    bool100 = global(bool: <class 'bool'>)   ['bool100']
    $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$94compare_op.2', 'bool100']
    branch $100pred, 102, 112                ['$100pred']
label 102:
    jump 108                                 []
label 104:
    jump 112                                 []
label 108:
    x1 = const(int, 0)                       ['x1']
    jump 112                                 []
label 112:
    bool114 = global(bool: <class 'bool'>)   ['bool114']
    $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$114pred', 'bool114', 'zero_pos']
    branch $114pred, 116, 200                ['$114pred']
label 116:
    $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$116load_global.0']
    $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit) ['$116load_global.0', '$128load_attr.2']
    $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$128load_attr.2', '$144call.4', 'x0']
    $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$154load_global.5']
    $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit) ['$154load_global.5', '$166load_attr.7']
    $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_attr.7', '$182call.9', 'x1']
    $192compare_op.10 = $144call.4 != $182call.9 ['$144call.4', '$182call.9', '$192compare_op.10']
    $198return_value.11 = cast(value=$192compare_op.10) ['$192compare_op.10', '$198return_value.11']
    return $198return_value.11               ['$198return_value.11']
label 200:
    $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$200load_global.0']
    $212load_attr.2 = getattr(value=$200load_global.0, attr=sign) ['$200load_global.0', '$212load_attr.2']
    $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$212load_attr.2', '$228call.4', 'x0']
    $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$238load_global.5']
    $250load_attr.7 = getattr(value=$238load_global.5, attr=sign) ['$238load_global.5', '$250load_attr.7']
    $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None) ['$250load_attr.7', '$266call.9', 'x1']
    $276compare_op.10 = $228call.4 != $266call.9 ['$228call.4', '$266call.9', '$276compare_op.10']
    $282return_value.11 = cast(value=$276compare_op.10) ['$276compare_op.10', '$282return_value.11']
    return $282return_value.11               ['$282return_value.11']

DEBUG 2024-06-11 13:35:28,093 - bytecode dump:
>          0	NOP(arg=None, lineno=1039)
           2	RESUME(arg=0, lineno=1039)
           4	LOAD_FAST(arg=0, lineno=1042)
           6	LOAD_CONST(arg=1, lineno=1042)
           8	BINARY_SUBSCR(arg=None, lineno=1042)
          18	LOAD_FAST(arg=0, lineno=1042)
          20	LOAD_CONST(arg=2, lineno=1042)
          22	BINARY_SUBSCR(arg=None, lineno=1042)
          32	COMPARE_OP(arg=4, lineno=1042)
          38	LOAD_FAST(arg=0, lineno=1042)
          40	LOAD_CONST(arg=1, lineno=1042)
          42	BINARY_SUBSCR(arg=None, lineno=1042)
          52	LOAD_FAST(arg=0, lineno=1042)
          54	LOAD_CONST(arg=3, lineno=1042)
          56	BINARY_SUBSCR(arg=None, lineno=1042)
          66	COMPARE_OP(arg=5, lineno=1042)
          72	BINARY_OP(arg=1, lineno=1042)
          76	RETURN_VALUE(arg=None, lineno=1042)
DEBUG 2024-06-11 13:35:28,093 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 13:35:28,093 - stack: []
DEBUG 2024-06-11 13:35:28,093 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 13:35:28,093 - dispatch pc=0, inst=NOP(arg=None, lineno=1039)
DEBUG 2024-06-11 13:35:28,093 - stack []
DEBUG 2024-06-11 13:35:28,093 - dispatch pc=2, inst=RESUME(arg=0, lineno=1039)
DEBUG 2024-06-11 13:35:28,093 - stack []
DEBUG 2024-06-11 13:35:28,093 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1042)
DEBUG 2024-06-11 13:35:28,093 - stack []
DEBUG 2024-06-11 13:35:28,093 - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1042)
DEBUG 2024-06-11 13:35:28,093 - stack ['$x4.0']
DEBUG 2024-06-11 13:35:28,093 - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1042)
DEBUG 2024-06-11 13:35:28,093 - stack ['$x4.0', '$const6.1']
DEBUG 2024-06-11 13:35:28,093 - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=1042)
DEBUG 2024-06-11 13:35:28,093 - stack ['$8binary_subscr.2']
DEBUG 2024-06-11 13:35:28,093 - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=1042)
DEBUG 2024-06-11 13:35:28,093 - stack ['$8binary_subscr.2', '$x18.3']
DEBUG 2024-06-11 13:35:28,093 - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=1042)
DEBUG 2024-06-11 13:35:28,093 - stack ['$8binary_subscr.2', '$x18.3', '$const20.4']
DEBUG 2024-06-11 13:35:28,093 - dispatch pc=32, inst=COMPARE_OP(arg=4, lineno=1042)
DEBUG 2024-06-11 13:35:28,093 - stack ['$8binary_subscr.2', '$22binary_subscr.5']
DEBUG 2024-06-11 13:35:28,093 - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=1042)
DEBUG 2024-06-11 13:35:28,093 - stack ['$32compare_op.6']
DEBUG 2024-06-11 13:35:28,093 - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1042)
DEBUG 2024-06-11 13:35:28,093 - stack ['$32compare_op.6', '$x38.7']
DEBUG 2024-06-11 13:35:28,093 - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=1042)
DEBUG 2024-06-11 13:35:28,093 - stack ['$32compare_op.6', '$x38.7', '$const40.8']
DEBUG 2024-06-11 13:35:28,093 - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1042)
DEBUG 2024-06-11 13:35:28,093 - stack ['$32compare_op.6', '$42binary_subscr.9']
DEBUG 2024-06-11 13:35:28,093 - dispatch pc=54, inst=LOAD_CONST(arg=3, lineno=1042)
DEBUG 2024-06-11 13:35:28,093 - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10']
DEBUG 2024-06-11 13:35:28,093 - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1042)
DEBUG 2024-06-11 13:35:28,093 - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10', '$const54.11']
DEBUG 2024-06-11 13:35:28,093 - dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=1042)
DEBUG 2024-06-11 13:35:28,093 - stack ['$32compare_op.6', '$42binary_subscr.9', '$56binary_subscr.12']
DEBUG 2024-06-11 13:35:28,093 - dispatch pc=72, inst=BINARY_OP(arg=1, lineno=1042)
DEBUG 2024-06-11 13:35:28,093 - stack ['$32compare_op.6', '$66compare_op.13']
DEBUG 2024-06-11 13:35:28,093 - dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=1042)
DEBUG 2024-06-11 13:35:28,093 - stack ['$binop_and_72.14']
DEBUG 2024-06-11 13:35:28,093 - end state. edges=[]
DEBUG 2024-06-11 13:35:28,093 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 13:35:28,093 - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG 2024-06-11 13:35:28,093 - defmap: {}
DEBUG 2024-06-11 13:35:28,093 - phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 13:35:28,093 - changing phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 13:35:28,093 - keep phismap: {}
DEBUG 2024-06-11 13:35:28,093 - new_out: defaultdict(<class 'dict'>, {})
DEBUG 2024-06-11 13:35:28,093 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 13:35:28,093 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4'}), (22, {'index': '$const20.4', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$32compare_op.6'}), (34, {}), (36, {}), (38, {'res': '$x38.7'}), (40, {'res': '$const40.8'}), (42, {'index': '$const40.8', 'target': '$x38.7', 'res': '$42binary_subscr.9'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$x52.10'}), (54, {'res': '$const54.11'}), (56, {'index': '$const54.11', 'target': '$x52.10', 'res': '$56binary_subscr.12'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'lhs': '$42binary_subscr.9', 'rhs': '$56binary_subscr.12', 'res': '$66compare_op.13'}), (68, {}), (70, {}), (72, {'op': '&', 'lhs': '$32compare_op.6', 'rhs': '$66compare_op.13', 'res': '$binop_and_72.14'}), (74, {}), (76, {'retval': '$binop_and_72.14', 'castval': '$76return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 13:35:28,093 - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $const20.4 = const(int, -1)              ['$const20.4']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4', 'x']
    $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5 ['$22binary_subscr.5', '$32compare_op.6', '$8binary_subscr.2']
    $const40.8 = const(int, 0)               ['$const40.8']
    $42binary_subscr.9 = getitem(value=x, index=$const40.8, fn=<built-in function getitem>) ['$42binary_subscr.9', '$const40.8', 'x']
    $const54.11 = const(int, 1)              ['$const54.11']
    $56binary_subscr.12 = getitem(value=x, index=$const54.11, fn=<built-in function getitem>) ['$56binary_subscr.12', '$const54.11', 'x']
    $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12 ['$42binary_subscr.9', '$56binary_subscr.12', '$66compare_op.13']
    $binop_and_72.14 = $32compare_op.6 & $66compare_op.13 ['$32compare_op.6', '$66compare_op.13', '$binop_and_72.14']
    $76return_value.15 = cast(value=$binop_and_72.14) ['$76return_value.15', '$binop_and_72.14']
    return $76return_value.15                ['$76return_value.15']

DEBUG 2024-06-11 13:35:28,097 - bytecode dump:
>          0	NOP(arg=None, lineno=1045)
           2	RESUME(arg=0, lineno=1045)
           4	LOAD_FAST(arg=0, lineno=1048)
           6	LOAD_CONST(arg=1, lineno=1048)
           8	BINARY_SUBSCR(arg=None, lineno=1048)
          18	LOAD_FAST(arg=0, lineno=1048)
          20	LOAD_CONST(arg=2, lineno=1048)
          22	BINARY_SUBSCR(arg=None, lineno=1048)
          32	COMPARE_OP(arg=0, lineno=1048)
          38	LOAD_FAST(arg=0, lineno=1048)
          40	LOAD_CONST(arg=1, lineno=1048)
          42	BINARY_SUBSCR(arg=None, lineno=1048)
          52	LOAD_FAST(arg=0, lineno=1048)
          54	LOAD_CONST(arg=3, lineno=1048)
          56	BINARY_SUBSCR(arg=None, lineno=1048)
          66	COMPARE_OP(arg=1, lineno=1048)
          72	BINARY_OP(arg=1, lineno=1048)
          76	RETURN_VALUE(arg=None, lineno=1048)
DEBUG 2024-06-11 13:35:28,097 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 13:35:28,097 - stack: []
DEBUG 2024-06-11 13:35:28,097 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 13:35:28,097 - dispatch pc=0, inst=NOP(arg=None, lineno=1045)
DEBUG 2024-06-11 13:35:28,097 - stack []
DEBUG 2024-06-11 13:35:28,097 - dispatch pc=2, inst=RESUME(arg=0, lineno=1045)
DEBUG 2024-06-11 13:35:28,097 - stack []
DEBUG 2024-06-11 13:35:28,097 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1048)
DEBUG 2024-06-11 13:35:28,097 - stack []
DEBUG 2024-06-11 13:35:28,097 - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1048)
DEBUG 2024-06-11 13:35:28,097 - stack ['$x4.0']
DEBUG 2024-06-11 13:35:28,097 - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1048)
DEBUG 2024-06-11 13:35:28,097 - stack ['$x4.0', '$const6.1']
DEBUG 2024-06-11 13:35:28,097 - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=1048)
DEBUG 2024-06-11 13:35:28,097 - stack ['$8binary_subscr.2']
DEBUG 2024-06-11 13:35:28,097 - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=1048)
DEBUG 2024-06-11 13:35:28,097 - stack ['$8binary_subscr.2', '$x18.3']
DEBUG 2024-06-11 13:35:28,097 - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=1048)
DEBUG 2024-06-11 13:35:28,097 - stack ['$8binary_subscr.2', '$x18.3', '$const20.4']
DEBUG 2024-06-11 13:35:28,097 - dispatch pc=32, inst=COMPARE_OP(arg=0, lineno=1048)
DEBUG 2024-06-11 13:35:28,097 - stack ['$8binary_subscr.2', '$22binary_subscr.5']
DEBUG 2024-06-11 13:35:28,097 - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=1048)
DEBUG 2024-06-11 13:35:28,097 - stack ['$32compare_op.6']
DEBUG 2024-06-11 13:35:28,097 - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1048)
DEBUG 2024-06-11 13:35:28,097 - stack ['$32compare_op.6', '$x38.7']
DEBUG 2024-06-11 13:35:28,097 - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=1048)
DEBUG 2024-06-11 13:35:28,097 - stack ['$32compare_op.6', '$x38.7', '$const40.8']
DEBUG 2024-06-11 13:35:28,097 - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1048)
DEBUG 2024-06-11 13:35:28,097 - stack ['$32compare_op.6', '$42binary_subscr.9']
DEBUG 2024-06-11 13:35:28,097 - dispatch pc=54, inst=LOAD_CONST(arg=3, lineno=1048)
DEBUG 2024-06-11 13:35:28,097 - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10']
DEBUG 2024-06-11 13:35:28,097 - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1048)
DEBUG 2024-06-11 13:35:28,097 - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10', '$const54.11']
DEBUG 2024-06-11 13:35:28,098 - dispatch pc=66, inst=COMPARE_OP(arg=1, lineno=1048)
DEBUG 2024-06-11 13:35:28,098 - stack ['$32compare_op.6', '$42binary_subscr.9', '$56binary_subscr.12']
DEBUG 2024-06-11 13:35:28,098 - dispatch pc=72, inst=BINARY_OP(arg=1, lineno=1048)
DEBUG 2024-06-11 13:35:28,098 - stack ['$32compare_op.6', '$66compare_op.13']
DEBUG 2024-06-11 13:35:28,098 - dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=1048)
DEBUG 2024-06-11 13:35:28,098 - stack ['$binop_and_72.14']
DEBUG 2024-06-11 13:35:28,098 - end state. edges=[]
DEBUG 2024-06-11 13:35:28,098 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 13:35:28,098 - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG 2024-06-11 13:35:28,098 - defmap: {}
DEBUG 2024-06-11 13:35:28,098 - phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 13:35:28,098 - changing phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 13:35:28,098 - keep phismap: {}
DEBUG 2024-06-11 13:35:28,098 - new_out: defaultdict(<class 'dict'>, {})
DEBUG 2024-06-11 13:35:28,098 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 13:35:28,098 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4'}), (22, {'index': '$const20.4', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$32compare_op.6'}), (34, {}), (36, {}), (38, {'res': '$x38.7'}), (40, {'res': '$const40.8'}), (42, {'index': '$const40.8', 'target': '$x38.7', 'res': '$42binary_subscr.9'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$x52.10'}), (54, {'res': '$const54.11'}), (56, {'index': '$const54.11', 'target': '$x52.10', 'res': '$56binary_subscr.12'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'lhs': '$42binary_subscr.9', 'rhs': '$56binary_subscr.12', 'res': '$66compare_op.13'}), (68, {}), (70, {}), (72, {'op': '&', 'lhs': '$32compare_op.6', 'rhs': '$66compare_op.13', 'res': '$binop_and_72.14'}), (74, {}), (76, {'retval': '$binop_and_72.14', 'castval': '$76return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 13:35:28,098 - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $const20.4 = const(int, -1)              ['$const20.4']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4', 'x']
    $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5 ['$22binary_subscr.5', '$32compare_op.6', '$8binary_subscr.2']
    $const40.8 = const(int, 0)               ['$const40.8']
    $42binary_subscr.9 = getitem(value=x, index=$const40.8, fn=<built-in function getitem>) ['$42binary_subscr.9', '$const40.8', 'x']
    $const54.11 = const(int, 1)              ['$const54.11']
    $56binary_subscr.12 = getitem(value=x, index=$const54.11, fn=<built-in function getitem>) ['$56binary_subscr.12', '$const54.11', 'x']
    $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12 ['$42binary_subscr.9', '$56binary_subscr.12', '$66compare_op.13']
    $binop_and_72.14 = $32compare_op.6 & $66compare_op.13 ['$32compare_op.6', '$66compare_op.13', '$binop_and_72.14']
    $76return_value.15 = cast(value=$binop_and_72.14) ['$76return_value.15', '$binop_and_72.14']
    return $76return_value.15                ['$76return_value.15']

ERROR 2024-06-11 13:35:28,514 - Error extracting features from data\ravdess\Actor_02\03-01-02-01-01-01-02.wav: module 'resampy' has no attribute 'resample'
ERROR 2024-06-11 13:35:28,514 - Error preparing data: module 'resampy' has no attribute 'resample'
DEBUG 2024-06-11 13:35:28,665 - bytecode dump:
>          0	NOP(arg=None, lineno=81)
           2	RESUME(arg=0, lineno=81)
           4	LOAD_GLOBAL(arg=1, lineno=86)
          16	LOAD_FAST(arg=0, lineno=86)
          18	LOAD_FAST(arg=1, lineno=86)
          20	LOAD_FAST(arg=2, lineno=86)
          22	LOAD_FAST(arg=3, lineno=86)
          24	LOAD_FAST(arg=4, lineno=86)
          26	LOAD_FAST(arg=5, lineno=86)
          28	LOAD_FAST(arg=6, lineno=86)
          30	PRECALL(arg=7, lineno=86)
          34	CALL(arg=7, lineno=86)
          44	POP_TOP(arg=None, lineno=86)
          46	LOAD_CONST(arg=0, lineno=86)
          48	RETURN_VALUE(arg=None, lineno=86)
DEBUG 2024-06-11 13:35:28,665 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 13:35:28,665 - stack: []
DEBUG 2024-06-11 13:35:28,665 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 13:35:28,665 - dispatch pc=0, inst=NOP(arg=None, lineno=81)
DEBUG 2024-06-11 13:35:28,665 - stack []
DEBUG 2024-06-11 13:35:28,665 - dispatch pc=2, inst=RESUME(arg=0, lineno=81)
DEBUG 2024-06-11 13:35:28,665 - stack []
DEBUG 2024-06-11 13:35:28,671 - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=86)
DEBUG 2024-06-11 13:35:28,671 - stack []
DEBUG 2024-06-11 13:35:28,671 - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=86)
DEBUG 2024-06-11 13:35:28,671 - stack ['$null$4.1', '$4load_global.0']
DEBUG 2024-06-11 13:35:28,672 - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=86)
DEBUG 2024-06-11 13:35:28,672 - stack ['$null$4.1', '$4load_global.0', '$x16.2']
DEBUG 2024-06-11 13:35:28,672 - dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=86)
DEBUG 2024-06-11 13:35:28,673 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3']
DEBUG 2024-06-11 13:35:28,673 - dispatch pc=22, inst=LOAD_FAST(arg=3, lineno=86)
DEBUG 2024-06-11 13:35:28,673 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4']
DEBUG 2024-06-11 13:35:28,673 - dispatch pc=24, inst=LOAD_FAST(arg=4, lineno=86)
DEBUG 2024-06-11 13:35:28,673 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5']
DEBUG 2024-06-11 13:35:28,673 - dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=86)
DEBUG 2024-06-11 13:35:28,673 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6']
DEBUG 2024-06-11 13:35:28,673 - dispatch pc=28, inst=LOAD_FAST(arg=6, lineno=86)
DEBUG 2024-06-11 13:35:28,673 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7']
DEBUG 2024-06-11 13:35:28,673 - dispatch pc=30, inst=PRECALL(arg=7, lineno=86)
DEBUG 2024-06-11 13:35:28,673 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
DEBUG 2024-06-11 13:35:28,673 - dispatch pc=34, inst=CALL(arg=7, lineno=86)
DEBUG 2024-06-11 13:35:28,673 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
DEBUG 2024-06-11 13:35:28,673 - dispatch pc=44, inst=POP_TOP(arg=None, lineno=86)
DEBUG 2024-06-11 13:35:28,673 - stack ['$34call.9']
DEBUG 2024-06-11 13:35:28,673 - dispatch pc=46, inst=LOAD_CONST(arg=0, lineno=86)
DEBUG 2024-06-11 13:35:28,673 - stack []
DEBUG 2024-06-11 13:35:28,673 - dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=86)
DEBUG 2024-06-11 13:35:28,673 - stack ['$const46.10']
DEBUG 2024-06-11 13:35:28,673 - end state. edges=[]
DEBUG 2024-06-11 13:35:28,673 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 13:35:28,673 - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG 2024-06-11 13:35:28,673 - defmap: {}
DEBUG 2024-06-11 13:35:28,673 - phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 13:35:28,673 - changing phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 13:35:28,673 - keep phismap: {}
DEBUG 2024-06-11 13:35:28,673 - new_out: defaultdict(<class 'dict'>, {})
DEBUG 2024-06-11 13:35:28,673 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 13:35:28,673 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {'res': '$t_out18.3'}), (20, {'res': '$interp_win20.4'}), (22, {'res': '$interp_delta22.5'}), (24, {'res': '$num_table24.6'}), (26, {'res': '$scale26.7'}), (28, {'res': '$y28.8'}), (30, {}), (32, {}), (34, {'func': '$4load_global.0', 'args': ['$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8'], 'kw_names': None, 'res': '$34call.9'}), (36, {}), (38, {}), (40, {}), (42, {}), (46, {'res': '$const46.10'}), (48, {'retval': '$const46.10', 'castval': '$48return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 13:35:28,673 - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x0000020B047327A0>)) ['$4load_global.0']
    $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None) ['$34call.9', '$4load_global.0', 'interp_delta', 'interp_win', 'num_table', 'scale', 't_out', 'x', 'y']
    $const46.10 = const(NoneType, None)      ['$const46.10']
    $48return_value.11 = cast(value=$const46.10) ['$48return_value.11', '$const46.10']
    return $48return_value.11                ['$48return_value.11']

DEBUG 2024-06-11 13:35:28,681 - ==== SSA block analysis pass on 0
DEBUG 2024-06-11 13:35:28,682 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000020B047E99D0>
DEBUG 2024-06-11 13:35:28,682 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:35:28,682 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:35:28,682 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:35:28,682 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:35:28,682 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:35:28,682 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:35:28,682 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:35:28,682 - on stmt: $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x0000020B047327A0>))
DEBUG 2024-06-11 13:35:28,682 - on stmt: $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,682 - on stmt: $const46.10 = const(NoneType, None)
DEBUG 2024-06-11 13:35:28,682 - on stmt: $48return_value.11 = cast(value=$const46.10)
DEBUG 2024-06-11 13:35:28,682 - on stmt: return $48return_value.11
DEBUG 2024-06-11 13:35:28,682 - defs defaultdict(<class 'list'>,
            {'$34call.9': [(<numba.core.ir.Assign object at 0x0000020B047D7090>,
                            0)],
             '$48return_value.11': [(<numba.core.ir.Assign object at 0x0000020B047D7B10>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000020B04807C50>,
                                  0)],
             '$const46.10': [(<numba.core.ir.Assign object at 0x0000020B047D7E90>,
                              0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x0000020B04805810>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x0000020B04806010>,
                             0)],
             'num_table': [(<numba.core.ir.Assign object at 0x0000020B04807A10>,
                            0)],
             'scale': [(<numba.core.ir.Assign object at 0x0000020B04805E50>,
                        0)],
             't_out': [(<numba.core.ir.Assign object at 0x0000020B04807890>,
                        0)],
             'x': [(<numba.core.ir.Assign object at 0x0000020B04804890>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000020B04807DD0>, 0)]})
DEBUG 2024-06-11 13:35:28,682 - SSA violators <numba.core.utils.OrderedSet object at 0x0000020B047E99D0>
DEBUG 2024-06-11 13:35:28,688 - bytecode dump:
>          0	NOP(arg=None, lineno=7)
           2	RESUME(arg=0, lineno=7)
           4	LOAD_GLOBAL(arg=1, lineno=9)
          16	LOAD_FAST(arg=5, lineno=9)
          18	LOAD_FAST(arg=4, lineno=9)
          20	BINARY_OP(arg=5, lineno=9)
          24	PRECALL(arg=1, lineno=9)
          28	CALL(arg=1, lineno=9)
          38	STORE_FAST(arg=7, lineno=9)
          40	LOAD_CONST(arg=1, lineno=10)
          42	STORE_FAST(arg=8, lineno=10)
          44	LOAD_CONST(arg=2, lineno=12)
          46	STORE_FAST(arg=9, lineno=12)
          48	LOAD_CONST(arg=1, lineno=13)
          50	STORE_FAST(arg=10, lineno=13)
          52	LOAD_CONST(arg=1, lineno=14)
          54	STORE_FAST(arg=11, lineno=14)
          56	LOAD_CONST(arg=2, lineno=15)
          58	STORE_FAST(arg=12, lineno=15)
          60	LOAD_CONST(arg=1, lineno=16)
          62	STORE_FAST(arg=13, lineno=16)
          64	LOAD_CONST(arg=1, lineno=17)
          66	STORE_FAST(arg=14, lineno=17)
          68	LOAD_FAST(arg=2, lineno=19)
          70	LOAD_ATTR(arg=1, lineno=19)
          80	LOAD_CONST(arg=2, lineno=19)
          82	BINARY_SUBSCR(arg=None, lineno=19)
          92	STORE_FAST(arg=15, lineno=19)
          94	LOAD_FAST(arg=0, lineno=20)
          96	LOAD_ATTR(arg=1, lineno=20)
         106	LOAD_CONST(arg=2, lineno=20)
         108	BINARY_SUBSCR(arg=None, lineno=20)
         118	STORE_FAST(arg=16, lineno=20)
         120	LOAD_FAST(arg=1, lineno=21)
         122	LOAD_ATTR(arg=1, lineno=21)
         132	LOAD_CONST(arg=2, lineno=21)
         134	BINARY_SUBSCR(arg=None, lineno=21)
         144	STORE_FAST(arg=17, lineno=21)
         146	LOAD_GLOBAL(arg=5, lineno=23)
         158	LOAD_FAST(arg=17, lineno=23)
         160	PRECALL(arg=1, lineno=23)
         164	CALL(arg=1, lineno=23)
         174	GET_ITER(arg=None, lineno=23)
>        176	NOP(arg=1, lineno=23)
         178	FOR_ITER(arg=301, lineno=23)
         180	STORE_FAST(arg=18, lineno=23)
         182	LOAD_FAST(arg=1, lineno=24)
         184	LOAD_FAST(arg=18, lineno=24)
         186	BINARY_SUBSCR(arg=None, lineno=24)
         196	STORE_FAST(arg=8, lineno=24)
         198	LOAD_GLOBAL(arg=1, lineno=27)
         210	LOAD_FAST(arg=8, lineno=27)
         212	PRECALL(arg=1, lineno=27)
         216	CALL(arg=1, lineno=27)
         226	STORE_FAST(arg=9, lineno=27)
         228	LOAD_FAST(arg=5, lineno=30)
         230	LOAD_FAST(arg=8, lineno=30)
         232	LOAD_FAST(arg=9, lineno=30)
         234	BINARY_OP(arg=10, lineno=30)
         238	BINARY_OP(arg=5, lineno=30)
         242	STORE_FAST(arg=10, lineno=30)
         244	LOAD_FAST(arg=10, lineno=33)
         246	LOAD_FAST(arg=4, lineno=33)
         248	BINARY_OP(arg=5, lineno=33)
         252	STORE_FAST(arg=11, lineno=33)
         254	LOAD_GLOBAL(arg=1, lineno=34)
         266	LOAD_FAST(arg=11, lineno=34)
         268	PRECALL(arg=1, lineno=34)
         272	CALL(arg=1, lineno=34)
         282	STORE_FAST(arg=12, lineno=34)
         284	LOAD_FAST(arg=11, lineno=37)
         286	LOAD_FAST(arg=12, lineno=37)
         288	BINARY_OP(arg=10, lineno=37)
         292	STORE_FAST(arg=13, lineno=37)
         294	LOAD_GLOBAL(arg=7, lineno=40)
         306	LOAD_FAST(arg=9, lineno=40)
         308	LOAD_CONST(arg=3, lineno=40)
         310	BINARY_OP(arg=0, lineno=40)
         314	LOAD_FAST(arg=15, lineno=40)
         316	LOAD_FAST(arg=12, lineno=40)
         318	BINARY_OP(arg=10, lineno=40)
         322	LOAD_FAST(arg=7, lineno=40)
         324	BINARY_OP(arg=2, lineno=40)
         328	PRECALL(arg=2, lineno=40)
         332	CALL(arg=2, lineno=40)
         342	STORE_FAST(arg=19, lineno=40)
         344	LOAD_GLOBAL(arg=9, lineno=41)
         356	LOAD_FAST(arg=19, lineno=41)
         358	PRECALL(arg=1, lineno=41)
         362	CALL(arg=1, lineno=41)
         372	GET_ITER(arg=None, lineno=41)
>        374	FOR_ITER(arg=62, lineno=41)
         376	STORE_FAST(arg=20, lineno=41)
         378	LOAD_FAST(arg=2, lineno=44)
         380	LOAD_FAST(arg=12, lineno=44)
         382	LOAD_FAST(arg=20, lineno=44)
         384	LOAD_FAST(arg=7, lineno=44)
         386	BINARY_OP(arg=5, lineno=44)
         390	BINARY_OP(arg=0, lineno=44)
         394	BINARY_SUBSCR(arg=None, lineno=44)
         404	LOAD_FAST(arg=13, lineno=45)
         406	LOAD_FAST(arg=3, lineno=45)
         408	LOAD_FAST(arg=12, lineno=45)
         410	LOAD_FAST(arg=20, lineno=45)
         412	LOAD_FAST(arg=7, lineno=45)
         414	BINARY_OP(arg=5, lineno=45)
         418	BINARY_OP(arg=0, lineno=45)
         422	BINARY_SUBSCR(arg=None, lineno=45)
         432	BINARY_OP(arg=5, lineno=45)
         436	BINARY_OP(arg=0, lineno=44)
         440	STORE_FAST(arg=14, lineno=43)
         442	LOAD_FAST(arg=6, lineno=47)
         444	LOAD_FAST(arg=18, lineno=47)
         446	COPY(arg=2, lineno=47)
         448	COPY(arg=2, lineno=47)
         450	BINARY_SUBSCR(arg=None, lineno=47)
         460	LOAD_FAST(arg=14, lineno=47)
         462	LOAD_FAST(arg=0, lineno=47)
         464	LOAD_FAST(arg=9, lineno=47)
         466	LOAD_FAST(arg=20, lineno=47)
         468	BINARY_OP(arg=10, lineno=47)
         472	BINARY_SUBSCR(arg=None, lineno=47)
         482	BINARY_OP(arg=5, lineno=47)
         486	BINARY_OP(arg=13, lineno=47)
         490	SWAP(arg=3, lineno=47)
         492	SWAP(arg=2, lineno=47)
         494	STORE_SUBSCR(arg=None, lineno=47)
         498	JUMP_BACKWARD(arg=63, lineno=47)
>        500	LOAD_FAST(arg=5, lineno=50)
         502	LOAD_FAST(arg=10, lineno=50)
         504	BINARY_OP(arg=10, lineno=50)
         508	STORE_FAST(arg=10, lineno=50)
         510	LOAD_FAST(arg=10, lineno=53)
         512	LOAD_FAST(arg=4, lineno=53)
         514	BINARY_OP(arg=5, lineno=53)
         518	STORE_FAST(arg=11, lineno=53)
         520	LOAD_GLOBAL(arg=1, lineno=54)
         532	LOAD_FAST(arg=11, lineno=54)
         534	PRECALL(arg=1, lineno=54)
         538	CALL(arg=1, lineno=54)
         548	STORE_FAST(arg=12, lineno=54)
         550	LOAD_FAST(arg=11, lineno=57)
         552	LOAD_FAST(arg=12, lineno=57)
         554	BINARY_OP(arg=10, lineno=57)
         558	STORE_FAST(arg=13, lineno=57)
         560	LOAD_GLOBAL(arg=7, lineno=60)
         572	LOAD_FAST(arg=16, lineno=60)
         574	LOAD_FAST(arg=9, lineno=60)
         576	BINARY_OP(arg=10, lineno=60)
         580	LOAD_CONST(arg=3, lineno=60)
         582	BINARY_OP(arg=10, lineno=60)
         586	LOAD_FAST(arg=15, lineno=60)
         588	LOAD_FAST(arg=12, lineno=60)
         590	BINARY_OP(arg=10, lineno=60)
         594	LOAD_FAST(arg=7, lineno=60)
         596	BINARY_OP(arg=2, lineno=60)
         600	PRECALL(arg=2, lineno=60)
         604	CALL(arg=2, lineno=60)
         614	STORE_FAST(arg=21, lineno=60)
         616	LOAD_GLOBAL(arg=9, lineno=61)
         628	LOAD_FAST(arg=21, lineno=61)
         630	PRECALL(arg=1, lineno=61)
         634	CALL(arg=1, lineno=61)
         644	GET_ITER(arg=None, lineno=61)
>        646	FOR_ITER(arg=65, lineno=61)
         648	STORE_FAST(arg=22, lineno=61)
         650	LOAD_FAST(arg=2, lineno=63)
         652	LOAD_FAST(arg=12, lineno=63)
         654	LOAD_FAST(arg=22, lineno=63)
         656	LOAD_FAST(arg=7, lineno=63)
         658	BINARY_OP(arg=5, lineno=63)
         662	BINARY_OP(arg=0, lineno=63)
         666	BINARY_SUBSCR(arg=None, lineno=63)
         676	LOAD_FAST(arg=13, lineno=64)
         678	LOAD_FAST(arg=3, lineno=64)
         680	LOAD_FAST(arg=12, lineno=64)
         682	LOAD_FAST(arg=22, lineno=64)
         684	LOAD_FAST(arg=7, lineno=64)
         686	BINARY_OP(arg=5, lineno=64)
         690	BINARY_OP(arg=0, lineno=64)
         694	BINARY_SUBSCR(arg=None, lineno=64)
         704	BINARY_OP(arg=5, lineno=64)
         708	BINARY_OP(arg=0, lineno=63)
         712	STORE_FAST(arg=14, lineno=62)
         714	LOAD_FAST(arg=6, lineno=66)
         716	LOAD_FAST(arg=18, lineno=66)
         718	COPY(arg=2, lineno=66)
         720	COPY(arg=2, lineno=66)
         722	BINARY_SUBSCR(arg=None, lineno=66)
         732	LOAD_FAST(arg=14, lineno=66)
         734	LOAD_FAST(arg=0, lineno=66)
         736	LOAD_FAST(arg=9, lineno=66)
         738	LOAD_FAST(arg=22, lineno=66)
         740	BINARY_OP(arg=0, lineno=66)
         744	LOAD_CONST(arg=3, lineno=66)
         746	BINARY_OP(arg=0, lineno=66)
         750	BINARY_SUBSCR(arg=None, lineno=66)
         760	BINARY_OP(arg=5, lineno=66)
         764	BINARY_OP(arg=13, lineno=66)
         768	SWAP(arg=3, lineno=66)
         770	SWAP(arg=2, lineno=66)
         772	STORE_SUBSCR(arg=None, lineno=66)
         776	JUMP_BACKWARD(arg=66, lineno=66)
>        778	NOP(arg=1, lineno=61)
         780	JUMP_BACKWARD(arg=303, lineno=61)
>        782	LOAD_CONST(arg=0, lineno=23)
         784	RETURN_VALUE(arg=None, lineno=23)
DEBUG 2024-06-11 13:35:28,688 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 13:35:28,688 - stack: []
DEBUG 2024-06-11 13:35:28,688 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 13:35:28,688 - dispatch pc=0, inst=NOP(arg=None, lineno=7)
DEBUG 2024-06-11 13:35:28,688 - stack []
DEBUG 2024-06-11 13:35:28,688 - dispatch pc=2, inst=RESUME(arg=0, lineno=7)
DEBUG 2024-06-11 13:35:28,688 - stack []
DEBUG 2024-06-11 13:35:28,688 - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=9)
DEBUG 2024-06-11 13:35:28,688 - stack []
DEBUG 2024-06-11 13:35:28,688 - dispatch pc=16, inst=LOAD_FAST(arg=5, lineno=9)
DEBUG 2024-06-11 13:35:28,688 - stack ['$null$4.1', '$4load_global.0']
WARNING 2024-06-11 13:35:28,688 - From C:\Users\Dell\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\backend\common\global_state.py:82: The name tf.reset_default_graph is deprecated. Please use tf.compat.v1.reset_default_graph instead.

DEBUG 2024-06-11 13:35:28,690 - dispatch pc=18, inst=LOAD_FAST(arg=4, lineno=9)
DEBUG 2024-06-11 13:35:28,830 - stack ['$null$4.1', '$4load_global.0', '$scale16.2']
DEBUG 2024-06-11 13:35:28,830 - dispatch pc=20, inst=BINARY_OP(arg=5, lineno=9)
DEBUG 2024-06-11 13:35:28,830 - stack ['$null$4.1', '$4load_global.0', '$scale16.2', '$num_table18.3']
DEBUG 2024-06-11 13:35:28,830 - dispatch pc=24, inst=PRECALL(arg=1, lineno=9)
DEBUG 2024-06-11 13:35:28,831 - stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
DEBUG 2024-06-11 13:35:28,831 - dispatch pc=28, inst=CALL(arg=1, lineno=9)
DEBUG 2024-06-11 13:35:28,831 - stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
DEBUG 2024-06-11 13:35:28,831 - dispatch pc=38, inst=STORE_FAST(arg=7, lineno=9)
DEBUG 2024-06-11 13:35:28,831 - stack ['$28call.5']
DEBUG 2024-06-11 13:35:28,831 - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=10)
DEBUG 2024-06-11 13:35:28,832 - stack []
DEBUG 2024-06-11 13:35:28,832 - dispatch pc=42, inst=STORE_FAST(arg=8, lineno=10)
DEBUG 2024-06-11 13:35:28,832 - stack ['$const40.6']
DEBUG 2024-06-11 13:35:28,832 - dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=12)
DEBUG 2024-06-11 13:35:28,832 - stack []
DEBUG 2024-06-11 13:35:28,832 - dispatch pc=46, inst=STORE_FAST(arg=9, lineno=12)
DEBUG 2024-06-11 13:35:28,832 - stack ['$const44.7']
DEBUG 2024-06-11 13:35:28,832 - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=13)
DEBUG 2024-06-11 13:35:28,832 - stack []
DEBUG 2024-06-11 13:35:28,832 - dispatch pc=50, inst=STORE_FAST(arg=10, lineno=13)
DEBUG 2024-06-11 13:35:28,832 - stack ['$const48.8']
DEBUG 2024-06-11 13:35:28,832 - dispatch pc=52, inst=LOAD_CONST(arg=1, lineno=14)
DEBUG 2024-06-11 13:35:28,832 - stack []
DEBUG 2024-06-11 13:35:28,832 - dispatch pc=54, inst=STORE_FAST(arg=11, lineno=14)
DEBUG 2024-06-11 13:35:28,832 - stack ['$const52.9']
DEBUG 2024-06-11 13:35:28,832 - dispatch pc=56, inst=LOAD_CONST(arg=2, lineno=15)
DEBUG 2024-06-11 13:35:28,832 - stack []
DEBUG 2024-06-11 13:35:28,832 - dispatch pc=58, inst=STORE_FAST(arg=12, lineno=15)
DEBUG 2024-06-11 13:35:28,832 - stack ['$const56.10']
DEBUG 2024-06-11 13:35:28,832 - dispatch pc=60, inst=LOAD_CONST(arg=1, lineno=16)
DEBUG 2024-06-11 13:35:28,832 - stack []
DEBUG 2024-06-11 13:35:28,832 - dispatch pc=62, inst=STORE_FAST(arg=13, lineno=16)
DEBUG 2024-06-11 13:35:28,832 - stack ['$const60.11']
DEBUG 2024-06-11 13:35:28,832 - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=17)
DEBUG 2024-06-11 13:35:28,832 - stack []
DEBUG 2024-06-11 13:35:28,832 - dispatch pc=66, inst=STORE_FAST(arg=14, lineno=17)
DEBUG 2024-06-11 13:35:28,832 - stack ['$const64.12']
DEBUG 2024-06-11 13:35:28,832 - dispatch pc=68, inst=LOAD_FAST(arg=2, lineno=19)
DEBUG 2024-06-11 13:35:28,832 - stack []
DEBUG 2024-06-11 13:35:28,832 - dispatch pc=70, inst=LOAD_ATTR(arg=1, lineno=19)
DEBUG 2024-06-11 13:35:28,832 - stack ['$interp_win68.13']
DEBUG 2024-06-11 13:35:28,832 - dispatch pc=80, inst=LOAD_CONST(arg=2, lineno=19)
DEBUG 2024-06-11 13:35:28,832 - stack ['$70load_attr.14']
DEBUG 2024-06-11 13:35:28,832 - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=19)
DEBUG 2024-06-11 13:35:28,832 - stack ['$70load_attr.14', '$const80.15']
DEBUG 2024-06-11 13:35:28,832 - dispatch pc=92, inst=STORE_FAST(arg=15, lineno=19)
DEBUG 2024-06-11 13:35:28,832 - stack ['$82binary_subscr.16']
DEBUG 2024-06-11 13:35:28,832 - dispatch pc=94, inst=LOAD_FAST(arg=0, lineno=20)
DEBUG 2024-06-11 13:35:28,832 - stack []
DEBUG 2024-06-11 13:35:28,832 - dispatch pc=96, inst=LOAD_ATTR(arg=1, lineno=20)
DEBUG 2024-06-11 13:35:28,832 - stack ['$x94.17']
DEBUG 2024-06-11 13:35:28,832 - dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=20)
DEBUG 2024-06-11 13:35:28,832 - stack ['$96load_attr.18']
DEBUG 2024-06-11 13:35:28,832 - dispatch pc=108, inst=BINARY_SUBSCR(arg=None, lineno=20)
DEBUG 2024-06-11 13:35:28,832 - stack ['$96load_attr.18', '$const106.19']
DEBUG 2024-06-11 13:35:28,832 - dispatch pc=118, inst=STORE_FAST(arg=16, lineno=20)
DEBUG 2024-06-11 13:35:28,832 - stack ['$108binary_subscr.20']
DEBUG 2024-06-11 13:35:28,832 - dispatch pc=120, inst=LOAD_FAST(arg=1, lineno=21)
DEBUG 2024-06-11 13:35:28,832 - stack []
DEBUG 2024-06-11 13:35:28,832 - dispatch pc=122, inst=LOAD_ATTR(arg=1, lineno=21)
DEBUG 2024-06-11 13:35:28,832 - stack ['$t_out120.21']
DEBUG 2024-06-11 13:35:28,832 - dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=21)
DEBUG 2024-06-11 13:35:28,832 - stack ['$122load_attr.22']
DEBUG 2024-06-11 13:35:28,832 - dispatch pc=134, inst=BINARY_SUBSCR(arg=None, lineno=21)
DEBUG 2024-06-11 13:35:28,832 - stack ['$122load_attr.22', '$const132.23']
DEBUG 2024-06-11 13:35:28,832 - dispatch pc=144, inst=STORE_FAST(arg=17, lineno=21)
DEBUG 2024-06-11 13:35:28,832 - stack ['$134binary_subscr.24']
DEBUG 2024-06-11 13:35:28,832 - dispatch pc=146, inst=LOAD_GLOBAL(arg=5, lineno=23)
DEBUG 2024-06-11 13:35:28,832 - stack []
DEBUG 2024-06-11 13:35:28,832 - dispatch pc=158, inst=LOAD_FAST(arg=17, lineno=23)
DEBUG 2024-06-11 13:35:28,832 - stack ['$null$146.26', '$146load_global.25']
DEBUG 2024-06-11 13:35:28,832 - dispatch pc=160, inst=PRECALL(arg=1, lineno=23)
DEBUG 2024-06-11 13:35:28,832 - stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
DEBUG 2024-06-11 13:35:28,832 - dispatch pc=164, inst=CALL(arg=1, lineno=23)
DEBUG 2024-06-11 13:35:28,832 - stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
DEBUG 2024-06-11 13:35:28,832 - dispatch pc=174, inst=GET_ITER(arg=None, lineno=23)
DEBUG 2024-06-11 13:35:28,832 - stack ['$164call.28']
DEBUG 2024-06-11 13:35:28,832 - end state. edges=[Edge(pc=176, stack=('$174get_iter.29',), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:35:28,832 - pending: deque([State(pc_initial=176 nstack_initial=1)])
DEBUG 2024-06-11 13:35:28,838 - stack: ['$phi176.0']
DEBUG 2024-06-11 13:35:28,838 - state.pc_initial: State(pc_initial=176 nstack_initial=1)
DEBUG 2024-06-11 13:35:28,838 - dispatch pc=176, inst=NOP(arg=1, lineno=23)
DEBUG 2024-06-11 13:35:28,838 - stack ['$phi176.0']
DEBUG 2024-06-11 13:35:28,838 - end state. edges=[Edge(pc=178, stack=('$phi176.0',), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:35:28,838 - pending: deque([State(pc_initial=178 nstack_initial=1)])
DEBUG 2024-06-11 13:35:28,838 - stack: ['$phi178.0']
DEBUG 2024-06-11 13:35:28,838 - state.pc_initial: State(pc_initial=178 nstack_initial=1)
DEBUG 2024-06-11 13:35:28,838 - dispatch pc=178, inst=FOR_ITER(arg=301, lineno=23)
DEBUG 2024-06-11 13:35:28,838 - stack ['$phi178.0']
DEBUG 2024-06-11 13:35:28,838 - end state. edges=[Edge(pc=782, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=('$phi178.0', '$178for_iter.2'), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:35:28,838 - pending: deque([State(pc_initial=782 nstack_initial=0), State(pc_initial=180 nstack_initial=2)])
DEBUG 2024-06-11 13:35:28,838 - stack: []
DEBUG 2024-06-11 13:35:28,838 - state.pc_initial: State(pc_initial=782 nstack_initial=0)
DEBUG 2024-06-11 13:35:28,838 - dispatch pc=782, inst=LOAD_CONST(arg=0, lineno=23)
DEBUG 2024-06-11 13:35:28,838 - stack []
DEBUG 2024-06-11 13:35:28,838 - dispatch pc=784, inst=RETURN_VALUE(arg=None, lineno=23)
DEBUG 2024-06-11 13:35:28,838 - stack ['$const782.0']
DEBUG 2024-06-11 13:35:28,839 - end state. edges=[]
DEBUG 2024-06-11 13:35:28,839 - pending: deque([State(pc_initial=180 nstack_initial=2)])
DEBUG 2024-06-11 13:35:28,839 - stack: ['$phi180.0', '$phi180.1']
DEBUG 2024-06-11 13:35:28,839 - state.pc_initial: State(pc_initial=180 nstack_initial=2)
DEBUG 2024-06-11 13:35:28,839 - dispatch pc=180, inst=STORE_FAST(arg=18, lineno=23)
DEBUG 2024-06-11 13:35:28,839 - stack ['$phi180.0', '$phi180.1']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=182, inst=LOAD_FAST(arg=1, lineno=24)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=184, inst=LOAD_FAST(arg=18, lineno=24)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0', '$t_out182.2']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=186, inst=BINARY_SUBSCR(arg=None, lineno=24)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0', '$t_out182.2', '$t184.3']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=196, inst=STORE_FAST(arg=8, lineno=24)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0', '$186binary_subscr.4']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=198, inst=LOAD_GLOBAL(arg=1, lineno=27)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=210, inst=LOAD_FAST(arg=8, lineno=27)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0', '$null$198.6', '$198load_global.5']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=212, inst=PRECALL(arg=1, lineno=27)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=216, inst=CALL(arg=1, lineno=27)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=226, inst=STORE_FAST(arg=9, lineno=27)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0', '$216call.8']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=228, inst=LOAD_FAST(arg=5, lineno=30)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=230, inst=LOAD_FAST(arg=8, lineno=30)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0', '$scale228.9']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=232, inst=LOAD_FAST(arg=9, lineno=30)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0', '$scale228.9', '$time_register230.10']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=234, inst=BINARY_OP(arg=10, lineno=30)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0', '$scale228.9', '$time_register230.10', '$n232.11']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=238, inst=BINARY_OP(arg=5, lineno=30)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0', '$scale228.9', '$binop_sub234.12']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=242, inst=STORE_FAST(arg=10, lineno=30)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0', '$binop_mul238.13']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=244, inst=LOAD_FAST(arg=10, lineno=33)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=246, inst=LOAD_FAST(arg=4, lineno=33)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0', '$frac244.14']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=248, inst=BINARY_OP(arg=5, lineno=33)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0', '$frac244.14', '$num_table246.15']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=252, inst=STORE_FAST(arg=11, lineno=33)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0', '$binop_mul248.16']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=254, inst=LOAD_GLOBAL(arg=1, lineno=34)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=266, inst=LOAD_FAST(arg=11, lineno=34)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0', '$null$254.18', '$254load_global.17']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=268, inst=PRECALL(arg=1, lineno=34)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=272, inst=CALL(arg=1, lineno=34)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=282, inst=STORE_FAST(arg=12, lineno=34)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0', '$272call.20']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=284, inst=LOAD_FAST(arg=11, lineno=37)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=286, inst=LOAD_FAST(arg=12, lineno=37)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0', '$index_frac284.21']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=288, inst=BINARY_OP(arg=10, lineno=37)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0', '$index_frac284.21', '$offset286.22']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=292, inst=STORE_FAST(arg=13, lineno=37)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0', '$binop_sub288.23']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=294, inst=LOAD_GLOBAL(arg=7, lineno=40)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=306, inst=LOAD_FAST(arg=9, lineno=40)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0', '$null$294.25', '$294load_global.24']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=308, inst=LOAD_CONST(arg=3, lineno=40)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=310, inst=BINARY_OP(arg=0, lineno=40)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26', '$const308.27']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=314, inst=LOAD_FAST(arg=15, lineno=40)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=316, inst=LOAD_FAST(arg=12, lineno=40)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=318, inst=BINARY_OP(arg=10, lineno=40)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29', '$offset316.30']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=322, inst=LOAD_FAST(arg=7, lineno=40)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=324, inst=BINARY_OP(arg=2, lineno=40)
DEBUG 2024-06-11 13:35:28,840 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31', '$index_step322.32']
DEBUG 2024-06-11 13:35:28,840 - dispatch pc=328, inst=PRECALL(arg=2, lineno=40)
DEBUG 2024-06-11 13:35:28,846 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
DEBUG 2024-06-11 13:35:28,846 - dispatch pc=332, inst=CALL(arg=2, lineno=40)
DEBUG 2024-06-11 13:35:28,846 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
DEBUG 2024-06-11 13:35:28,846 - dispatch pc=342, inst=STORE_FAST(arg=19, lineno=40)
DEBUG 2024-06-11 13:35:28,846 - stack ['$phi180.0', '$332call.34']
DEBUG 2024-06-11 13:35:28,847 - dispatch pc=344, inst=LOAD_GLOBAL(arg=9, lineno=41)
DEBUG 2024-06-11 13:35:28,847 - stack ['$phi180.0']
DEBUG 2024-06-11 13:35:28,847 - dispatch pc=356, inst=LOAD_FAST(arg=19, lineno=41)
DEBUG 2024-06-11 13:35:28,847 - stack ['$phi180.0', '$null$344.36', '$344load_global.35']
DEBUG 2024-06-11 13:35:28,847 - dispatch pc=358, inst=PRECALL(arg=1, lineno=41)
DEBUG 2024-06-11 13:35:28,847 - stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
DEBUG 2024-06-11 13:35:28,847 - dispatch pc=362, inst=CALL(arg=1, lineno=41)
DEBUG 2024-06-11 13:35:28,847 - stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
DEBUG 2024-06-11 13:35:28,847 - dispatch pc=372, inst=GET_ITER(arg=None, lineno=41)
DEBUG 2024-06-11 13:35:28,847 - stack ['$phi180.0', '$362call.38']
DEBUG 2024-06-11 13:35:28,847 - end state. edges=[Edge(pc=374, stack=('$phi180.0', '$372get_iter.39'), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:35:28,848 - pending: deque([State(pc_initial=374 nstack_initial=2)])
DEBUG 2024-06-11 13:35:28,848 - stack: ['$phi374.0', '$phi374.1']
DEBUG 2024-06-11 13:35:28,848 - state.pc_initial: State(pc_initial=374 nstack_initial=2)
DEBUG 2024-06-11 13:35:28,848 - dispatch pc=374, inst=FOR_ITER(arg=62, lineno=41)
DEBUG 2024-06-11 13:35:28,848 - stack ['$phi374.0', '$phi374.1']
DEBUG 2024-06-11 13:35:28,848 - end state. edges=[Edge(pc=500, stack=('$phi374.0',), blockstack=(), npush=0), Edge(pc=376, stack=('$phi374.0', '$phi374.1', '$374for_iter.3'), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:35:28,848 - pending: deque([State(pc_initial=500 nstack_initial=1), State(pc_initial=376 nstack_initial=3)])
DEBUG 2024-06-11 13:35:28,848 - stack: ['$phi500.0']
DEBUG 2024-06-11 13:35:28,848 - state.pc_initial: State(pc_initial=500 nstack_initial=1)
DEBUG 2024-06-11 13:35:28,848 - dispatch pc=500, inst=LOAD_FAST(arg=5, lineno=50)
DEBUG 2024-06-11 13:35:28,848 - stack ['$phi500.0']
DEBUG 2024-06-11 13:35:28,848 - dispatch pc=502, inst=LOAD_FAST(arg=10, lineno=50)
DEBUG 2024-06-11 13:35:28,848 - stack ['$phi500.0', '$scale500.1']
DEBUG 2024-06-11 13:35:28,848 - dispatch pc=504, inst=BINARY_OP(arg=10, lineno=50)
DEBUG 2024-06-11 13:35:28,848 - stack ['$phi500.0', '$scale500.1', '$frac502.2']
DEBUG 2024-06-11 13:35:28,848 - dispatch pc=508, inst=STORE_FAST(arg=10, lineno=50)
DEBUG 2024-06-11 13:35:28,848 - stack ['$phi500.0', '$binop_sub504.3']
DEBUG 2024-06-11 13:35:28,848 - dispatch pc=510, inst=LOAD_FAST(arg=10, lineno=53)
DEBUG 2024-06-11 13:35:28,848 - stack ['$phi500.0']
DEBUG 2024-06-11 13:35:28,848 - dispatch pc=512, inst=LOAD_FAST(arg=4, lineno=53)
DEBUG 2024-06-11 13:35:28,848 - stack ['$phi500.0', '$frac510.4']
DEBUG 2024-06-11 13:35:28,848 - dispatch pc=514, inst=BINARY_OP(arg=5, lineno=53)
DEBUG 2024-06-11 13:35:28,848 - stack ['$phi500.0', '$frac510.4', '$num_table512.5']
DEBUG 2024-06-11 13:35:28,848 - dispatch pc=518, inst=STORE_FAST(arg=11, lineno=53)
DEBUG 2024-06-11 13:35:28,848 - stack ['$phi500.0', '$binop_mul514.6']
DEBUG 2024-06-11 13:35:28,848 - dispatch pc=520, inst=LOAD_GLOBAL(arg=1, lineno=54)
DEBUG 2024-06-11 13:35:28,848 - stack ['$phi500.0']
DEBUG 2024-06-11 13:35:28,848 - dispatch pc=532, inst=LOAD_FAST(arg=11, lineno=54)
DEBUG 2024-06-11 13:35:28,848 - stack ['$phi500.0', '$null$520.8', '$520load_global.7']
DEBUG 2024-06-11 13:35:28,848 - dispatch pc=534, inst=PRECALL(arg=1, lineno=54)
DEBUG 2024-06-11 13:35:28,848 - stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
DEBUG 2024-06-11 13:35:28,848 - dispatch pc=538, inst=CALL(arg=1, lineno=54)
DEBUG 2024-06-11 13:35:28,848 - stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
DEBUG 2024-06-11 13:35:28,848 - dispatch pc=548, inst=STORE_FAST(arg=12, lineno=54)
DEBUG 2024-06-11 13:35:28,848 - stack ['$phi500.0', '$538call.10']
DEBUG 2024-06-11 13:35:28,848 - dispatch pc=550, inst=LOAD_FAST(arg=11, lineno=57)
DEBUG 2024-06-11 13:35:28,848 - stack ['$phi500.0']
DEBUG 2024-06-11 13:35:28,848 - dispatch pc=552, inst=LOAD_FAST(arg=12, lineno=57)
DEBUG 2024-06-11 13:35:28,848 - stack ['$phi500.0', '$index_frac550.11']
DEBUG 2024-06-11 13:35:28,848 - dispatch pc=554, inst=BINARY_OP(arg=10, lineno=57)
DEBUG 2024-06-11 13:35:28,848 - stack ['$phi500.0', '$index_frac550.11', '$offset552.12']
DEBUG 2024-06-11 13:35:28,848 - dispatch pc=558, inst=STORE_FAST(arg=13, lineno=57)
DEBUG 2024-06-11 13:35:28,848 - stack ['$phi500.0', '$binop_sub554.13']
DEBUG 2024-06-11 13:35:28,848 - dispatch pc=560, inst=LOAD_GLOBAL(arg=7, lineno=60)
DEBUG 2024-06-11 13:35:28,848 - stack ['$phi500.0']
DEBUG 2024-06-11 13:35:28,848 - dispatch pc=572, inst=LOAD_FAST(arg=16, lineno=60)
DEBUG 2024-06-11 13:35:28,848 - stack ['$phi500.0', '$null$560.15', '$560load_global.14']
DEBUG 2024-06-11 13:35:28,848 - dispatch pc=574, inst=LOAD_FAST(arg=9, lineno=60)
DEBUG 2024-06-11 13:35:28,848 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16']
DEBUG 2024-06-11 13:35:28,848 - dispatch pc=576, inst=BINARY_OP(arg=10, lineno=60)
DEBUG 2024-06-11 13:35:28,848 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16', '$n574.17']
DEBUG 2024-06-11 13:35:28,848 - dispatch pc=580, inst=LOAD_CONST(arg=3, lineno=60)
DEBUG 2024-06-11 13:35:28,848 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18']
DEBUG 2024-06-11 13:35:28,848 - dispatch pc=582, inst=BINARY_OP(arg=10, lineno=60)
DEBUG 2024-06-11 13:35:28,848 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18', '$const580.19']
DEBUG 2024-06-11 13:35:28,848 - dispatch pc=586, inst=LOAD_FAST(arg=15, lineno=60)
DEBUG 2024-06-11 13:35:28,848 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20']
DEBUG 2024-06-11 13:35:28,848 - dispatch pc=588, inst=LOAD_FAST(arg=12, lineno=60)
DEBUG 2024-06-11 13:35:28,848 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21']
DEBUG 2024-06-11 13:35:28,848 - dispatch pc=590, inst=BINARY_OP(arg=10, lineno=60)
DEBUG 2024-06-11 13:35:28,848 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21', '$offset588.22']
DEBUG 2024-06-11 13:35:28,848 - dispatch pc=594, inst=LOAD_FAST(arg=7, lineno=60)
DEBUG 2024-06-11 13:35:28,848 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23']
DEBUG 2024-06-11 13:35:28,848 - dispatch pc=596, inst=BINARY_OP(arg=2, lineno=60)
DEBUG 2024-06-11 13:35:28,848 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23', '$index_step594.24']
DEBUG 2024-06-11 13:35:28,848 - dispatch pc=600, inst=PRECALL(arg=2, lineno=60)
DEBUG 2024-06-11 13:35:28,848 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
DEBUG 2024-06-11 13:35:28,848 - dispatch pc=604, inst=CALL(arg=2, lineno=60)
DEBUG 2024-06-11 13:35:28,848 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
DEBUG 2024-06-11 13:35:28,848 - dispatch pc=614, inst=STORE_FAST(arg=21, lineno=60)
DEBUG 2024-06-11 13:35:28,848 - stack ['$phi500.0', '$604call.26']
DEBUG 2024-06-11 13:35:28,848 - dispatch pc=616, inst=LOAD_GLOBAL(arg=9, lineno=61)
DEBUG 2024-06-11 13:35:28,855 - stack ['$phi500.0']
DEBUG 2024-06-11 13:35:28,855 - dispatch pc=628, inst=LOAD_FAST(arg=21, lineno=61)
DEBUG 2024-06-11 13:35:28,855 - stack ['$phi500.0', '$null$616.28', '$616load_global.27']
DEBUG 2024-06-11 13:35:28,855 - dispatch pc=630, inst=PRECALL(arg=1, lineno=61)
DEBUG 2024-06-11 13:35:28,855 - stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
DEBUG 2024-06-11 13:35:28,855 - dispatch pc=634, inst=CALL(arg=1, lineno=61)
DEBUG 2024-06-11 13:35:28,855 - stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
DEBUG 2024-06-11 13:35:28,855 - dispatch pc=644, inst=GET_ITER(arg=None, lineno=61)
DEBUG 2024-06-11 13:35:28,855 - stack ['$phi500.0', '$634call.30']
DEBUG 2024-06-11 13:35:28,855 - end state. edges=[Edge(pc=646, stack=('$phi500.0', '$644get_iter.31'), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:35:28,855 - pending: deque([State(pc_initial=376 nstack_initial=3), State(pc_initial=646 nstack_initial=2)])
DEBUG 2024-06-11 13:35:28,855 - stack: ['$phi376.0', '$phi376.1', '$phi376.2']
DEBUG 2024-06-11 13:35:28,856 - state.pc_initial: State(pc_initial=376 nstack_initial=3)
DEBUG 2024-06-11 13:35:28,856 - dispatch pc=376, inst=STORE_FAST(arg=20, lineno=41)
DEBUG 2024-06-11 13:35:28,856 - stack ['$phi376.0', '$phi376.1', '$phi376.2']
DEBUG 2024-06-11 13:35:28,856 - dispatch pc=378, inst=LOAD_FAST(arg=2, lineno=44)
DEBUG 2024-06-11 13:35:28,856 - stack ['$phi376.0', '$phi376.1']
DEBUG 2024-06-11 13:35:28,856 - dispatch pc=380, inst=LOAD_FAST(arg=12, lineno=44)
DEBUG 2024-06-11 13:35:28,857 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3']
DEBUG 2024-06-11 13:35:28,857 - dispatch pc=382, inst=LOAD_FAST(arg=20, lineno=44)
DEBUG 2024-06-11 13:35:28,857 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4']
DEBUG 2024-06-11 13:35:28,857 - dispatch pc=384, inst=LOAD_FAST(arg=7, lineno=44)
DEBUG 2024-06-11 13:35:28,857 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5']
DEBUG 2024-06-11 13:35:28,857 - dispatch pc=386, inst=BINARY_OP(arg=5, lineno=44)
DEBUG 2024-06-11 13:35:28,857 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5', '$index_step384.6']
DEBUG 2024-06-11 13:35:28,857 - dispatch pc=390, inst=BINARY_OP(arg=0, lineno=44)
DEBUG 2024-06-11 13:35:28,857 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$binop_mul386.7']
DEBUG 2024-06-11 13:35:28,857 - dispatch pc=394, inst=BINARY_SUBSCR(arg=None, lineno=44)
DEBUG 2024-06-11 13:35:28,857 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$binop_add390.8']
DEBUG 2024-06-11 13:35:28,857 - dispatch pc=404, inst=LOAD_FAST(arg=13, lineno=45)
DEBUG 2024-06-11 13:35:28,857 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9']
DEBUG 2024-06-11 13:35:28,857 - dispatch pc=406, inst=LOAD_FAST(arg=3, lineno=45)
DEBUG 2024-06-11 13:35:28,857 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10']
DEBUG 2024-06-11 13:35:28,857 - dispatch pc=408, inst=LOAD_FAST(arg=12, lineno=45)
DEBUG 2024-06-11 13:35:28,857 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11']
DEBUG 2024-06-11 13:35:28,857 - dispatch pc=410, inst=LOAD_FAST(arg=20, lineno=45)
DEBUG 2024-06-11 13:35:28,857 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12']
DEBUG 2024-06-11 13:35:28,857 - dispatch pc=412, inst=LOAD_FAST(arg=7, lineno=45)
DEBUG 2024-06-11 13:35:28,857 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13']
DEBUG 2024-06-11 13:35:28,857 - dispatch pc=414, inst=BINARY_OP(arg=5, lineno=45)
DEBUG 2024-06-11 13:35:28,857 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13', '$index_step412.14']
DEBUG 2024-06-11 13:35:28,857 - dispatch pc=418, inst=BINARY_OP(arg=0, lineno=45)
DEBUG 2024-06-11 13:35:28,857 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$binop_mul414.15']
DEBUG 2024-06-11 13:35:28,857 - dispatch pc=422, inst=BINARY_SUBSCR(arg=None, lineno=45)
DEBUG 2024-06-11 13:35:28,857 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$binop_add418.16']
DEBUG 2024-06-11 13:35:28,857 - dispatch pc=432, inst=BINARY_OP(arg=5, lineno=45)
DEBUG 2024-06-11 13:35:28,857 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$422binary_subscr.17']
DEBUG 2024-06-11 13:35:28,857 - dispatch pc=436, inst=BINARY_OP(arg=0, lineno=44)
DEBUG 2024-06-11 13:35:28,857 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$binop_mul432.18']
DEBUG 2024-06-11 13:35:28,857 - dispatch pc=440, inst=STORE_FAST(arg=14, lineno=43)
DEBUG 2024-06-11 13:35:28,857 - stack ['$phi376.0', '$phi376.1', '$binop_add436.19']
DEBUG 2024-06-11 13:35:28,857 - dispatch pc=442, inst=LOAD_FAST(arg=6, lineno=47)
DEBUG 2024-06-11 13:35:28,857 - stack ['$phi376.0', '$phi376.1']
DEBUG 2024-06-11 13:35:28,857 - dispatch pc=444, inst=LOAD_FAST(arg=18, lineno=47)
DEBUG 2024-06-11 13:35:28,857 - stack ['$phi376.0', '$phi376.1', '$y442.20']
DEBUG 2024-06-11 13:35:28,857 - dispatch pc=446, inst=COPY(arg=2, lineno=47)
DEBUG 2024-06-11 13:35:28,857 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21']
DEBUG 2024-06-11 13:35:28,857 - dispatch pc=448, inst=COPY(arg=2, lineno=47)
DEBUG 2024-06-11 13:35:28,857 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20']
DEBUG 2024-06-11 13:35:28,857 - dispatch pc=450, inst=BINARY_SUBSCR(arg=None, lineno=47)
DEBUG 2024-06-11 13:35:28,857 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20', '$t444.21']
DEBUG 2024-06-11 13:35:28,857 - dispatch pc=460, inst=LOAD_FAST(arg=14, lineno=47)
DEBUG 2024-06-11 13:35:28,857 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22']
DEBUG 2024-06-11 13:35:28,857 - dispatch pc=462, inst=LOAD_FAST(arg=0, lineno=47)
DEBUG 2024-06-11 13:35:28,857 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23']
DEBUG 2024-06-11 13:35:28,857 - dispatch pc=464, inst=LOAD_FAST(arg=9, lineno=47)
DEBUG 2024-06-11 13:35:28,857 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24']
DEBUG 2024-06-11 13:35:28,857 - dispatch pc=466, inst=LOAD_FAST(arg=20, lineno=47)
DEBUG 2024-06-11 13:35:28,857 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25']
DEBUG 2024-06-11 13:35:28,857 - dispatch pc=468, inst=BINARY_OP(arg=10, lineno=47)
DEBUG 2024-06-11 13:35:28,857 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25', '$i466.26']
DEBUG 2024-06-11 13:35:28,857 - dispatch pc=472, inst=BINARY_SUBSCR(arg=None, lineno=47)
DEBUG 2024-06-11 13:35:28,857 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$binop_sub468.27']
DEBUG 2024-06-11 13:35:28,857 - dispatch pc=482, inst=BINARY_OP(arg=5, lineno=47)
DEBUG 2024-06-11 13:35:28,857 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$472binary_subscr.28']
DEBUG 2024-06-11 13:35:28,857 - dispatch pc=486, inst=BINARY_OP(arg=13, lineno=47)
DEBUG 2024-06-11 13:35:28,857 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$binop_mul482.29']
DEBUG 2024-06-11 13:35:28,857 - dispatch pc=490, inst=SWAP(arg=3, lineno=47)
DEBUG 2024-06-11 13:35:28,857 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$binop_iadd486.30']
DEBUG 2024-06-11 13:35:28,857 - dispatch pc=492, inst=SWAP(arg=2, lineno=47)
DEBUG 2024-06-11 13:35:28,857 - stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$t444.21', '$y442.20']
DEBUG 2024-06-11 13:35:28,857 - dispatch pc=494, inst=STORE_SUBSCR(arg=None, lineno=47)
DEBUG 2024-06-11 13:35:28,857 - stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$y442.20', '$t444.21']
DEBUG 2024-06-11 13:35:28,863 - dispatch pc=498, inst=JUMP_BACKWARD(arg=63, lineno=47)
DEBUG 2024-06-11 13:35:28,863 - stack ['$phi376.0', '$phi376.1']
DEBUG 2024-06-11 13:35:28,863 - end state. edges=[Edge(pc=374, stack=('$phi376.0', '$phi376.1'), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:35:28,863 - pending: deque([State(pc_initial=646 nstack_initial=2), State(pc_initial=374 nstack_initial=2)])
DEBUG 2024-06-11 13:35:28,863 - stack: ['$phi646.0', '$phi646.1']
DEBUG 2024-06-11 13:35:28,863 - state.pc_initial: State(pc_initial=646 nstack_initial=2)
DEBUG 2024-06-11 13:35:28,863 - dispatch pc=646, inst=FOR_ITER(arg=65, lineno=61)
DEBUG 2024-06-11 13:35:28,863 - stack ['$phi646.0', '$phi646.1']
DEBUG 2024-06-11 13:35:28,863 - end state. edges=[Edge(pc=778, stack=('$phi646.0',), blockstack=(), npush=0), Edge(pc=648, stack=('$phi646.0', '$phi646.1', '$646for_iter.3'), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:35:28,863 - pending: deque([State(pc_initial=374 nstack_initial=2), State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
DEBUG 2024-06-11 13:35:28,863 - pending: deque([State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
DEBUG 2024-06-11 13:35:28,863 - stack: ['$phi778.0']
DEBUG 2024-06-11 13:35:28,863 - state.pc_initial: State(pc_initial=778 nstack_initial=1)
DEBUG 2024-06-11 13:35:28,863 - dispatch pc=778, inst=NOP(arg=1, lineno=61)
DEBUG 2024-06-11 13:35:28,863 - stack ['$phi778.0']
DEBUG 2024-06-11 13:35:28,863 - dispatch pc=780, inst=JUMP_BACKWARD(arg=303, lineno=61)
DEBUG 2024-06-11 13:35:28,863 - stack ['$phi778.0']
DEBUG 2024-06-11 13:35:28,863 - end state. edges=[Edge(pc=176, stack=('$phi778.0',), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:35:28,863 - pending: deque([State(pc_initial=648 nstack_initial=3), State(pc_initial=176 nstack_initial=1)])
DEBUG 2024-06-11 13:35:28,865 - stack: ['$phi648.0', '$phi648.1', '$phi648.2']
DEBUG 2024-06-11 13:35:28,865 - state.pc_initial: State(pc_initial=648 nstack_initial=3)
DEBUG 2024-06-11 13:35:28,865 - dispatch pc=648, inst=STORE_FAST(arg=22, lineno=61)
DEBUG 2024-06-11 13:35:28,865 - stack ['$phi648.0', '$phi648.1', '$phi648.2']
DEBUG 2024-06-11 13:35:28,865 - dispatch pc=650, inst=LOAD_FAST(arg=2, lineno=63)
DEBUG 2024-06-11 13:35:28,865 - stack ['$phi648.0', '$phi648.1']
DEBUG 2024-06-11 13:35:28,865 - dispatch pc=652, inst=LOAD_FAST(arg=12, lineno=63)
DEBUG 2024-06-11 13:35:28,865 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3']
DEBUG 2024-06-11 13:35:28,865 - dispatch pc=654, inst=LOAD_FAST(arg=22, lineno=63)
DEBUG 2024-06-11 13:35:28,865 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4']
DEBUG 2024-06-11 13:35:28,865 - dispatch pc=656, inst=LOAD_FAST(arg=7, lineno=63)
DEBUG 2024-06-11 13:35:28,865 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5']
DEBUG 2024-06-11 13:35:28,865 - dispatch pc=658, inst=BINARY_OP(arg=5, lineno=63)
DEBUG 2024-06-11 13:35:28,865 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5', '$index_step656.6']
DEBUG 2024-06-11 13:35:28,865 - dispatch pc=662, inst=BINARY_OP(arg=0, lineno=63)
DEBUG 2024-06-11 13:35:28,865 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$binop_mul658.7']
DEBUG 2024-06-11 13:35:28,865 - dispatch pc=666, inst=BINARY_SUBSCR(arg=None, lineno=63)
DEBUG 2024-06-11 13:35:28,865 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$binop_add662.8']
DEBUG 2024-06-11 13:35:28,865 - dispatch pc=676, inst=LOAD_FAST(arg=13, lineno=64)
DEBUG 2024-06-11 13:35:28,865 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9']
DEBUG 2024-06-11 13:35:28,865 - dispatch pc=678, inst=LOAD_FAST(arg=3, lineno=64)
DEBUG 2024-06-11 13:35:28,865 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10']
DEBUG 2024-06-11 13:35:28,865 - dispatch pc=680, inst=LOAD_FAST(arg=12, lineno=64)
DEBUG 2024-06-11 13:35:28,865 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11']
DEBUG 2024-06-11 13:35:28,865 - dispatch pc=682, inst=LOAD_FAST(arg=22, lineno=64)
DEBUG 2024-06-11 13:35:28,865 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12']
DEBUG 2024-06-11 13:35:28,865 - dispatch pc=684, inst=LOAD_FAST(arg=7, lineno=64)
DEBUG 2024-06-11 13:35:28,865 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13']
DEBUG 2024-06-11 13:35:28,865 - dispatch pc=686, inst=BINARY_OP(arg=5, lineno=64)
DEBUG 2024-06-11 13:35:28,865 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13', '$index_step684.14']
DEBUG 2024-06-11 13:35:28,865 - dispatch pc=690, inst=BINARY_OP(arg=0, lineno=64)
DEBUG 2024-06-11 13:35:28,865 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$binop_mul686.15']
DEBUG 2024-06-11 13:35:28,865 - dispatch pc=694, inst=BINARY_SUBSCR(arg=None, lineno=64)
DEBUG 2024-06-11 13:35:28,865 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$binop_add690.16']
DEBUG 2024-06-11 13:35:28,865 - dispatch pc=704, inst=BINARY_OP(arg=5, lineno=64)
DEBUG 2024-06-11 13:35:28,865 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$694binary_subscr.17']
DEBUG 2024-06-11 13:35:28,865 - dispatch pc=708, inst=BINARY_OP(arg=0, lineno=63)
DEBUG 2024-06-11 13:35:28,865 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$binop_mul704.18']
DEBUG 2024-06-11 13:35:28,865 - dispatch pc=712, inst=STORE_FAST(arg=14, lineno=62)
DEBUG 2024-06-11 13:35:28,865 - stack ['$phi648.0', '$phi648.1', '$binop_add708.19']
DEBUG 2024-06-11 13:35:28,865 - dispatch pc=714, inst=LOAD_FAST(arg=6, lineno=66)
DEBUG 2024-06-11 13:35:28,865 - stack ['$phi648.0', '$phi648.1']
DEBUG 2024-06-11 13:35:28,865 - dispatch pc=716, inst=LOAD_FAST(arg=18, lineno=66)
DEBUG 2024-06-11 13:35:28,865 - stack ['$phi648.0', '$phi648.1', '$y714.20']
DEBUG 2024-06-11 13:35:28,865 - dispatch pc=718, inst=COPY(arg=2, lineno=66)
DEBUG 2024-06-11 13:35:28,865 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21']
DEBUG 2024-06-11 13:35:28,865 - dispatch pc=720, inst=COPY(arg=2, lineno=66)
DEBUG 2024-06-11 13:35:28,865 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20']
DEBUG 2024-06-11 13:35:28,865 - dispatch pc=722, inst=BINARY_SUBSCR(arg=None, lineno=66)
DEBUG 2024-06-11 13:35:28,865 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20', '$t716.21']
DEBUG 2024-06-11 13:35:28,865 - dispatch pc=732, inst=LOAD_FAST(arg=14, lineno=66)
DEBUG 2024-06-11 13:35:28,865 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22']
DEBUG 2024-06-11 13:35:28,865 - dispatch pc=734, inst=LOAD_FAST(arg=0, lineno=66)
DEBUG 2024-06-11 13:35:28,865 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23']
DEBUG 2024-06-11 13:35:28,865 - dispatch pc=736, inst=LOAD_FAST(arg=9, lineno=66)
DEBUG 2024-06-11 13:35:28,865 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24']
DEBUG 2024-06-11 13:35:28,865 - dispatch pc=738, inst=LOAD_FAST(arg=22, lineno=66)
DEBUG 2024-06-11 13:35:28,865 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25']
DEBUG 2024-06-11 13:35:28,865 - dispatch pc=740, inst=BINARY_OP(arg=0, lineno=66)
DEBUG 2024-06-11 13:35:28,865 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25', '$k738.26']
DEBUG 2024-06-11 13:35:28,865 - dispatch pc=744, inst=LOAD_CONST(arg=3, lineno=66)
DEBUG 2024-06-11 13:35:28,865 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27']
DEBUG 2024-06-11 13:35:28,865 - dispatch pc=746, inst=BINARY_OP(arg=0, lineno=66)
DEBUG 2024-06-11 13:35:28,865 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27', '$const744.28']
DEBUG 2024-06-11 13:35:28,865 - dispatch pc=750, inst=BINARY_SUBSCR(arg=None, lineno=66)
DEBUG 2024-06-11 13:35:28,865 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add746.29']
DEBUG 2024-06-11 13:35:28,871 - dispatch pc=760, inst=BINARY_OP(arg=5, lineno=66)
DEBUG 2024-06-11 13:35:28,871 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$750binary_subscr.30']
DEBUG 2024-06-11 13:35:28,871 - dispatch pc=764, inst=BINARY_OP(arg=13, lineno=66)
DEBUG 2024-06-11 13:35:28,871 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$binop_mul760.31']
DEBUG 2024-06-11 13:35:28,871 - dispatch pc=768, inst=SWAP(arg=3, lineno=66)
DEBUG 2024-06-11 13:35:28,872 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$binop_iadd764.32']
DEBUG 2024-06-11 13:35:28,872 - dispatch pc=770, inst=SWAP(arg=2, lineno=66)
DEBUG 2024-06-11 13:35:28,872 - stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$t716.21', '$y714.20']
DEBUG 2024-06-11 13:35:28,872 - dispatch pc=772, inst=STORE_SUBSCR(arg=None, lineno=66)
DEBUG 2024-06-11 13:35:28,872 - stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$y714.20', '$t716.21']
DEBUG 2024-06-11 13:35:28,872 - dispatch pc=776, inst=JUMP_BACKWARD(arg=66, lineno=66)
DEBUG 2024-06-11 13:35:28,872 - stack ['$phi648.0', '$phi648.1']
DEBUG 2024-06-11 13:35:28,872 - end state. edges=[Edge(pc=646, stack=('$phi648.0', '$phi648.1'), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:35:28,872 - pending: deque([State(pc_initial=176 nstack_initial=1), State(pc_initial=646 nstack_initial=2)])
DEBUG 2024-06-11 13:35:28,872 - pending: deque([State(pc_initial=646 nstack_initial=2)])
DEBUG 2024-06-11 13:35:28,873 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 13:35:28,873 - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=1): set(),
             State(pc_initial=178 nstack_initial=1): {'$phi178.0'},
             State(pc_initial=180 nstack_initial=2): {'$phi180.1'},
             State(pc_initial=374 nstack_initial=2): {'$phi374.1'},
             State(pc_initial=376 nstack_initial=3): {'$phi376.2'},
             State(pc_initial=500 nstack_initial=1): set(),
             State(pc_initial=646 nstack_initial=2): {'$phi646.1'},
             State(pc_initial=648 nstack_initial=3): {'$phi648.2'},
             State(pc_initial=778 nstack_initial=1): set(),
             State(pc_initial=782 nstack_initial=0): set()})
DEBUG 2024-06-11 13:35:28,873 - defmap: {'$phi176.0': State(pc_initial=0 nstack_initial=0),
 '$phi180.1': State(pc_initial=178 nstack_initial=1),
 '$phi374.1': State(pc_initial=180 nstack_initial=2),
 '$phi376.2': State(pc_initial=374 nstack_initial=2),
 '$phi646.1': State(pc_initial=500 nstack_initial=1),
 '$phi648.2': State(pc_initial=646 nstack_initial=2)}
DEBUG 2024-06-11 13:35:28,873 - phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi778.0',
                            State(pc_initial=778 nstack_initial=1))},
             '$phi178.0': {('$phi176.0',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi180.0': {('$phi178.0',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$phi180.0',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.0',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.1',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi376.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.1': {('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi646.0': {('$phi500.0',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.0',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.1',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi648.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.1': {('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))}})
DEBUG 2024-06-11 13:35:28,873 - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi374.0',
                            State(pc_initial=374 nstack_initial=2)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
DEBUG 2024-06-11 13:35:28,873 - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
DEBUG 2024-06-11 13:35:28,873 - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
DEBUG 2024-06-11 13:35:28,873 - keep phismap: {'$phi178.0': {('$174get_iter.29', State(pc_initial=0 nstack_initial=0))},
 '$phi180.1': {('$178for_iter.2', State(pc_initial=178 nstack_initial=1))},
 '$phi374.1': {('$372get_iter.39', State(pc_initial=180 nstack_initial=2))},
 '$phi376.2': {('$374for_iter.3', State(pc_initial=374 nstack_initial=2))},
 '$phi646.1': {('$644get_iter.31', State(pc_initial=500 nstack_initial=1))},
 '$phi648.2': {('$646for_iter.3', State(pc_initial=646 nstack_initial=2))}}
DEBUG 2024-06-11 13:35:28,873 - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi178.0': '$174get_iter.29'},
             State(pc_initial=178 nstack_initial=1): {'$phi180.1': '$178for_iter.2'},
             State(pc_initial=180 nstack_initial=2): {'$phi374.1': '$372get_iter.39'},
             State(pc_initial=374 nstack_initial=2): {'$phi376.2': '$374for_iter.3'},
             State(pc_initial=500 nstack_initial=1): {'$phi646.1': '$644get_iter.31'},
             State(pc_initial=646 nstack_initial=2): {'$phi648.2': '$646for_iter.3'}})
DEBUG 2024-06-11 13:35:28,873 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 13:35:28,873 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$scale16.2'}), (18, {'res': '$num_table18.3'}), (20, {'op': '*', 'lhs': '$scale16.2', 'rhs': '$num_table18.3', 'res': '$binop_mul20.4'}), (22, {}), (24, {}), (26, {}), (28, {'func': '$4load_global.0', 'args': ['$binop_mul20.4'], 'kw_names': None, 'res': '$28call.5'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {'value': '$28call.5'}), (40, {'res': '$const40.6'}), (42, {'value': '$const40.6'}), (44, {'res': '$const44.7'}), (46, {'value': '$const44.7'}), (48, {'res': '$const48.8'}), (50, {'value': '$const48.8'}), (52, {'res': '$const52.9'}), (54, {'value': '$const52.9'}), (56, {'res': '$const56.10'}), (58, {'value': '$const56.10'}), (60, {'res': '$const60.11'}), (62, {'value': '$const60.11'}), (64, {'res': '$const64.12'}), (66, {'value': '$const64.12'}), (68, {'res': '$interp_win68.13'}), (70, {'item': '$interp_win68.13', 'res': '$70load_attr.14'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$const80.15'}), (82, {'index': '$const80.15', 'target': '$70load_attr.14', 'res': '$82binary_subscr.16'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82binary_subscr.16'}), (94, {'res': '$x94.17'}), (96, {'item': '$x94.17', 'res': '$96load_attr.18'}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {'res': '$const106.19'}), (108, {'index': '$const106.19', 'target': '$96load_attr.18', 'res': '$108binary_subscr.20'}), (110, {}), (112, {}), (114, {}), (116, {}), (118, {'value': '$108binary_subscr.20'}), (120, {'res': '$t_out120.21'}), (122, {'item': '$t_out120.21', 'res': '$122load_attr.22'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {'res': '$const132.23'}), (134, {'index': '$const132.23', 'target': '$122load_attr.22', 'res': '$134binary_subscr.24'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {'value': '$134binary_subscr.24'}), (146, {'idx': 2, 'res': '$146load_global.25'}), (148, {}), (150, {}), (152, {}), (154, {}), (156, {}), (158, {'res': '$n_out158.27'}), (160, {}), (162, {}), (164, {'func': '$146load_global.25', 'args': ['$n_out158.27'], 'kw_names': None, 'res': '$164call.28'}), (166, {}), (168, {}), (170, {}), (172, {}), (174, {'value': '$164call.28', 'res': '$174get_iter.29'})), outgoing_phis={'$phi178.0': '$174get_iter.29'}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$174get_iter.29',)})
DEBUG 2024-06-11 13:35:28,873 - block_infos State(pc_initial=176 nstack_initial=1):
AdaptBlockInfo(insts=((176, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={178: ('$phi176.0',)})
DEBUG 2024-06-11 13:35:28,873 - block_infos State(pc_initial=178 nstack_initial=1):
AdaptBlockInfo(insts=((178, {'iterator': '$phi178.0', 'pair': '$178for_iter.1', 'indval': '$178for_iter.2', 'pred': '$178for_iter.3'}),), outgoing_phis={'$phi180.1': '$178for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={782: (), 180: ('$phi178.0', '$178for_iter.2')})
DEBUG 2024-06-11 13:35:28,873 - block_infos State(pc_initial=180 nstack_initial=2):
AdaptBlockInfo(insts=((180, {'value': '$phi180.1'}), (182, {'res': '$t_out182.2'}), (184, {'res': '$t184.3'}), (186, {'index': '$t184.3', 'target': '$t_out182.2', 'res': '$186binary_subscr.4'}), (188, {}), (190, {}), (192, {}), (194, {}), (196, {'value': '$186binary_subscr.4'}), (198, {'idx': 0, 'res': '$198load_global.5'}), (200, {}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'res': '$time_register210.7'}), (212, {}), (214, {}), (216, {'func': '$198load_global.5', 'args': ['$time_register210.7'], 'kw_names': None, 'res': '$216call.8'}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {'value': '$216call.8'}), (228, {'res': '$scale228.9'}), (230, {'res': '$time_register230.10'}), (232, {'res': '$n232.11'}), (234, {'op': '-', 'lhs': '$time_register230.10', 'rhs': '$n232.11', 'res': '$binop_sub234.12'}), (236, {}), (238, {'op': '*', 'lhs': '$scale228.9', 'rhs': '$binop_sub234.12', 'res': '$binop_mul238.13'}), (240, {}), (242, {'value': '$binop_mul238.13'}), (244, {'res': '$frac244.14'}), (246, {'res': '$num_table246.15'}), (248, {'op': '*', 'lhs': '$frac244.14', 'rhs': '$num_table246.15', 'res': '$binop_mul248.16'}), (250, {}), (252, {'value': '$binop_mul248.16'}), (254, {'idx': 0, 'res': '$254load_global.17'}), (256, {}), (258, {}), (260, {}), (262, {}), (264, {}), (266, {'res': '$index_frac266.19'}), (268, {}), (270, {}), (272, {'func': '$254load_global.17', 'args': ['$index_frac266.19'], 'kw_names': None, 'res': '$272call.20'}), (274, {}), (276, {}), (278, {}), (280, {}), (282, {'value': '$272call.20'}), (284, {'res': '$index_frac284.21'}), (286, {'res': '$offset286.22'}), (288, {'op': '-', 'lhs': '$index_frac284.21', 'rhs': '$offset286.22', 'res': '$binop_sub288.23'}), (290, {}), (292, {'value': '$binop_sub288.23'}), (294, {'idx': 3, 'res': '$294load_global.24'}), (296, {}), (298, {}), (300, {}), (302, {}), (304, {}), (306, {'res': '$n306.26'}), (308, {'res': '$const308.27'}), (310, {'op': '+', 'lhs': '$n306.26', 'rhs': '$const308.27', 'res': '$binop_add310.28'}), (312, {}), (314, {'res': '$nwin314.29'}), (316, {'res': '$offset316.30'}), (318, {'op': '-', 'lhs': '$nwin314.29', 'rhs': '$offset316.30', 'res': '$binop_sub318.31'}), (320, {}), (322, {'res': '$index_step322.32'}), (324, {'op': '//', 'lhs': '$binop_sub318.31', 'rhs': '$index_step322.32', 'res': '$binop_floordiv324.33'}), (326, {}), (328, {}), (330, {}), (332, {'func': '$294load_global.24', 'args': ['$binop_add310.28', '$binop_floordiv324.33'], 'kw_names': None, 'res': '$332call.34'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'value': '$332call.34'}), (344, {'idx': 4, 'res': '$344load_global.35'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {}), (356, {'res': '$i_max356.37'}), (358, {}), (360, {}), (362, {'func': '$344load_global.35', 'args': ['$i_max356.37'], 'kw_names': None, 'res': '$362call.38'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {'value': '$362call.38', 'res': '$372get_iter.39'})), outgoing_phis={'$phi374.1': '$372get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi180.0', '$372get_iter.39')})
DEBUG 2024-06-11 13:35:28,873 - block_infos State(pc_initial=374 nstack_initial=2):
AdaptBlockInfo(insts=((374, {'iterator': '$phi374.1', 'pair': '$374for_iter.2', 'indval': '$374for_iter.3', 'pred': '$374for_iter.4'}),), outgoing_phis={'$phi376.2': '$374for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={500: ('$phi374.0',), 376: ('$phi374.0', '$phi374.1', '$374for_iter.3')})
DEBUG 2024-06-11 13:35:28,873 - block_infos State(pc_initial=376 nstack_initial=3):
AdaptBlockInfo(insts=((376, {'value': '$phi376.2'}), (378, {'res': '$interp_win378.3'}), (380, {'res': '$offset380.4'}), (382, {'res': '$i382.5'}), (384, {'res': '$index_step384.6'}), (386, {'op': '*', 'lhs': '$i382.5', 'rhs': '$index_step384.6', 'res': '$binop_mul386.7'}), (388, {}), (390, {'op': '+', 'lhs': '$offset380.4', 'rhs': '$binop_mul386.7', 'res': '$binop_add390.8'}), (392, {}), (394, {'index': '$binop_add390.8', 'target': '$interp_win378.3', 'res': '$394binary_subscr.9'}), (396, {}), (398, {}), (400, {}), (402, {}), (404, {'res': '$eta404.10'}), (406, {'res': '$interp_delta406.11'}), (408, {'res': '$offset408.12'}), (410, {'res': '$i410.13'}), (412, {'res': '$index_step412.14'}), (414, {'op': '*', 'lhs': '$i410.13', 'rhs': '$index_step412.14', 'res': '$binop_mul414.15'}), (416, {}), (418, {'op': '+', 'lhs': '$offset408.12', 'rhs': '$binop_mul414.15', 'res': '$binop_add418.16'}), (420, {}), (422, {'index': '$binop_add418.16', 'target': '$interp_delta406.11', 'res': '$422binary_subscr.17'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {'op': '*', 'lhs': '$eta404.10', 'rhs': '$422binary_subscr.17', 'res': '$binop_mul432.18'}), (434, {}), (436, {'op': '+', 'lhs': '$394binary_subscr.9', 'rhs': '$binop_mul432.18', 'res': '$binop_add436.19'}), (438, {}), (440, {'value': '$binop_add436.19'}), (442, {'res': '$y442.20'}), (444, {'res': '$t444.21'}), (450, {'index': '$t444.21', 'target': '$y442.20', 'res': '$450binary_subscr.22'}), (452, {}), (454, {}), (456, {}), (458, {}), (460, {'res': '$weight460.23'}), (462, {'res': '$x462.24'}), (464, {'res': '$n464.25'}), (466, {'res': '$i466.26'}), (468, {'op': '-', 'lhs': '$n464.25', 'rhs': '$i466.26', 'res': '$binop_sub468.27'}), (470, {}), (472, {'index': '$binop_sub468.27', 'target': '$x462.24', 'res': '$472binary_subscr.28'}), (474, {}), (476, {}), (478, {}), (480, {}), (482, {'op': '*', 'lhs': '$weight460.23', 'rhs': '$472binary_subscr.28', 'res': '$binop_mul482.29'}), (484, {}), (486, {'op': '+=', 'lhs': '$450binary_subscr.22', 'rhs': '$binop_mul482.29', 'res': '$binop_iadd486.30'}), (488, {}), (494, {'target': '$y442.20', 'index': '$t444.21', 'value': '$binop_iadd486.30'}), (496, {}), (498, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi376.0', '$phi376.1')})
DEBUG 2024-06-11 13:35:28,873 - block_infos State(pc_initial=500 nstack_initial=1):
AdaptBlockInfo(insts=((500, {'res': '$scale500.1'}), (502, {'res': '$frac502.2'}), (504, {'op': '-', 'lhs': '$scale500.1', 'rhs': '$frac502.2', 'res': '$binop_sub504.3'}), (506, {}), (508, {'value': '$binop_sub504.3'}), (510, {'res': '$frac510.4'}), (512, {'res': '$num_table512.5'}), (514, {'op': '*', 'lhs': '$frac510.4', 'rhs': '$num_table512.5', 'res': '$binop_mul514.6'}), (516, {}), (518, {'value': '$binop_mul514.6'}), (520, {'idx': 0, 'res': '$520load_global.7'}), (522, {}), (524, {}), (526, {}), (528, {}), (530, {}), (532, {'res': '$index_frac532.9'}), (534, {}), (536, {}), (538, {'func': '$520load_global.7', 'args': ['$index_frac532.9'], 'kw_names': None, 'res': '$538call.10'}), (540, {}), (542, {}), (544, {}), (546, {}), (548, {'value': '$538call.10'}), (550, {'res': '$index_frac550.11'}), (552, {'res': '$offset552.12'}), (554, {'op': '-', 'lhs': '$index_frac550.11', 'rhs': '$offset552.12', 'res': '$binop_sub554.13'}), (556, {}), (558, {'value': '$binop_sub554.13'}), (560, {'idx': 3, 'res': '$560load_global.14'}), (562, {}), (564, {}), (566, {}), (568, {}), (570, {}), (572, {'res': '$n_orig572.16'}), (574, {'res': '$n574.17'}), (576, {'op': '-', 'lhs': '$n_orig572.16', 'rhs': '$n574.17', 'res': '$binop_sub576.18'}), (578, {}), (580, {'res': '$const580.19'}), (582, {'op': '-', 'lhs': '$binop_sub576.18', 'rhs': '$const580.19', 'res': '$binop_sub582.20'}), (584, {}), (586, {'res': '$nwin586.21'}), (588, {'res': '$offset588.22'}), (590, {'op': '-', 'lhs': '$nwin586.21', 'rhs': '$offset588.22', 'res': '$binop_sub590.23'}), (592, {}), (594, {'res': '$index_step594.24'}), (596, {'op': '//', 'lhs': '$binop_sub590.23', 'rhs': '$index_step594.24', 'res': '$binop_floordiv596.25'}), (598, {}), (600, {}), (602, {}), (604, {'func': '$560load_global.14', 'args': ['$binop_sub582.20', '$binop_floordiv596.25'], 'kw_names': None, 'res': '$604call.26'}), (606, {}), (608, {}), (610, {}), (612, {}), (614, {'value': '$604call.26'}), (616, {'idx': 4, 'res': '$616load_global.27'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {}), (628, {'res': '$k_max628.29'}), (630, {}), (632, {}), (634, {'func': '$616load_global.27', 'args': ['$k_max628.29'], 'kw_names': None, 'res': '$634call.30'}), (636, {}), (638, {}), (640, {}), (642, {}), (644, {'value': '$634call.30', 'res': '$644get_iter.31'})), outgoing_phis={'$phi646.1': '$644get_iter.31'}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi500.0', '$644get_iter.31')})
DEBUG 2024-06-11 13:35:28,873 - block_infos State(pc_initial=646 nstack_initial=2):
AdaptBlockInfo(insts=((646, {'iterator': '$phi646.1', 'pair': '$646for_iter.2', 'indval': '$646for_iter.3', 'pred': '$646for_iter.4'}),), outgoing_phis={'$phi648.2': '$646for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={778: ('$phi646.0',), 648: ('$phi646.0', '$phi646.1', '$646for_iter.3')})
DEBUG 2024-06-11 13:35:28,873 - block_infos State(pc_initial=648 nstack_initial=3):
AdaptBlockInfo(insts=((648, {'value': '$phi648.2'}), (650, {'res': '$interp_win650.3'}), (652, {'res': '$offset652.4'}), (654, {'res': '$k654.5'}), (656, {'res': '$index_step656.6'}), (658, {'op': '*', 'lhs': '$k654.5', 'rhs': '$index_step656.6', 'res': '$binop_mul658.7'}), (660, {}), (662, {'op': '+', 'lhs': '$offset652.4', 'rhs': '$binop_mul658.7', 'res': '$binop_add662.8'}), (664, {}), (666, {'index': '$binop_add662.8', 'target': '$interp_win650.3', 'res': '$666binary_subscr.9'}), (668, {}), (670, {}), (672, {}), (674, {}), (676, {'res': '$eta676.10'}), (678, {'res': '$interp_delta678.11'}), (680, {'res': '$offset680.12'}), (682, {'res': '$k682.13'}), (684, {'res': '$index_step684.14'}), (686, {'op': '*', 'lhs': '$k682.13', 'rhs': '$index_step684.14', 'res': '$binop_mul686.15'}), (688, {}), (690, {'op': '+', 'lhs': '$offset680.12', 'rhs': '$binop_mul686.15', 'res': '$binop_add690.16'}), (692, {}), (694, {'index': '$binop_add690.16', 'target': '$interp_delta678.11', 'res': '$694binary_subscr.17'}), (696, {}), (698, {}), (700, {}), (702, {}), (704, {'op': '*', 'lhs': '$eta676.10', 'rhs': '$694binary_subscr.17', 'res': '$binop_mul704.18'}), (706, {}), (708, {'op': '+', 'lhs': '$666binary_subscr.9', 'rhs': '$binop_mul704.18', 'res': '$binop_add708.19'}), (710, {}), (712, {'value': '$binop_add708.19'}), (714, {'res': '$y714.20'}), (716, {'res': '$t716.21'}), (722, {'index': '$t716.21', 'target': '$y714.20', 'res': '$722binary_subscr.22'}), (724, {}), (726, {}), (728, {}), (730, {}), (732, {'res': '$weight732.23'}), (734, {'res': '$x734.24'}), (736, {'res': '$n736.25'}), (738, {'res': '$k738.26'}), (740, {'op': '+', 'lhs': '$n736.25', 'rhs': '$k738.26', 'res': '$binop_add740.27'}), (742, {}), (744, {'res': '$const744.28'}), (746, {'op': '+', 'lhs': '$binop_add740.27', 'rhs': '$const744.28', 'res': '$binop_add746.29'}), (748, {}), (750, {'index': '$binop_add746.29', 'target': '$x734.24', 'res': '$750binary_subscr.30'}), (752, {}), (754, {}), (756, {}), (758, {}), (760, {'op': '*', 'lhs': '$weight732.23', 'rhs': '$750binary_subscr.30', 'res': '$binop_mul760.31'}), (762, {}), (764, {'op': '+=', 'lhs': '$722binary_subscr.22', 'rhs': '$binop_mul760.31', 'res': '$binop_iadd764.32'}), (766, {}), (772, {'target': '$y714.20', 'index': '$t716.21', 'value': '$binop_iadd764.32'}), (774, {}), (776, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi648.0', '$phi648.1')})
DEBUG 2024-06-11 13:35:28,873 - block_infos State(pc_initial=778 nstack_initial=1):
AdaptBlockInfo(insts=((778, {}), (780, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$phi778.0',)})
DEBUG 2024-06-11 13:35:28,873 - block_infos State(pc_initial=782 nstack_initial=0):
AdaptBlockInfo(insts=((782, {'res': '$const782.0'}), (784, {'retval': '$const782.0', 'castval': '$784return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 13:35:28,873 - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(int: <class 'int'>) ['$4load_global.0']
    $binop_mul20.4 = scale * num_table       ['$binop_mul20.4', 'num_table', 'scale']
    index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_global.0', '$binop_mul20.4', 'index_step']
    time_register = const(float, 0.0)        ['time_register']
    n = const(int, 0)                        ['n']
    frac = const(float, 0.0)                 ['frac']
    index_frac = const(float, 0.0)           ['index_frac']
    offset = const(int, 0)                   ['offset']
    eta = const(float, 0.0)                  ['eta']
    weight = const(float, 0.0)               ['weight']
    $70load_attr.14 = getattr(value=interp_win, attr=shape) ['$70load_attr.14', 'interp_win']
    $const80.15 = const(int, 0)              ['$const80.15']
    nwin = getitem(value=$70load_attr.14, index=$const80.15, fn=<built-in function getitem>) ['$70load_attr.14', '$const80.15', 'nwin']
    $96load_attr.18 = getattr(value=x, attr=shape) ['$96load_attr.18', 'x']
    $const106.19 = const(int, 0)             ['$const106.19']
    n_orig = getitem(value=$96load_attr.18, index=$const106.19, fn=<built-in function getitem>) ['$96load_attr.18', '$const106.19', 'n_orig']
    $122load_attr.22 = getattr(value=t_out, attr=shape) ['$122load_attr.22', 't_out']
    $const132.23 = const(int, 0)             ['$const132.23']
    n_out = getitem(value=$122load_attr.22, index=$const132.23, fn=<built-in function getitem>) ['$122load_attr.22', '$const132.23', 'n_out']
    $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>) ['$146load_global.25']
    $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None) ['$146load_global.25', '$164call.28', 'n_out']
    $174get_iter.29 = getiter(value=$164call.28) ['$164call.28', '$174get_iter.29']
    $phi178.0 = $174get_iter.29              ['$174get_iter.29', '$phi178.0']
    jump 176                                 []
label 176:
    jump 178                                 []
label 178:
    $178for_iter.1 = iternext(value=$phi178.0) ['$178for_iter.1', '$phi178.0']
    $178for_iter.2 = pair_first(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.2']
    $178for_iter.3 = pair_second(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.3']
    $phi180.1 = $178for_iter.2               ['$178for_iter.2', '$phi180.1']
    branch $178for_iter.3, 180, 782          ['$178for_iter.3']
label 180:
    t = $phi180.1                            ['$phi180.1', 't']
    time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>) ['t', 't_out', 'time_register']
    $198load_global.5 = global(int: <class 'int'>) ['$198load_global.5']
    n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None) ['$198load_global.5', 'n', 'time_register']
    $binop_sub234.12 = time_register - n     ['$binop_sub234.12', 'n', 'time_register']
    frac = scale * $binop_sub234.12          ['$binop_sub234.12', 'frac', 'scale']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $254load_global.17 = global(int: <class 'int'>) ['$254load_global.17']
    offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$254load_global.17', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $294load_global.24 = global(min: <built-in function min>) ['$294load_global.24']
    $const308.27 = const(int, 1)             ['$const308.27']
    $binop_add310.28 = n + $const308.27      ['$binop_add310.28', '$const308.27', 'n']
    $binop_sub318.31 = nwin - offset         ['$binop_sub318.31', 'nwin', 'offset']
    $binop_floordiv324.33 = $binop_sub318.31 // index_step ['$binop_floordiv324.33', '$binop_sub318.31', 'index_step']
    i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33', 'i_max']
    $344load_global.35 = global(range: <class 'range'>) ['$344load_global.35']
    $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$344load_global.35', '$362call.38', 'i_max']
    $372get_iter.39 = getiter(value=$362call.38) ['$362call.38', '$372get_iter.39']
    $phi374.1 = $372get_iter.39              ['$372get_iter.39', '$phi374.1']
    jump 374                                 []
label 374:
    $374for_iter.2 = iternext(value=$phi374.1) ['$374for_iter.2', '$phi374.1']
    $374for_iter.3 = pair_first(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.3']
    $374for_iter.4 = pair_second(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.4']
    $phi376.2 = $374for_iter.3               ['$374for_iter.3', '$phi376.2']
    branch $374for_iter.4, 376, 500          ['$374for_iter.4']
label 376:
    i = $phi376.2                            ['$phi376.2', 'i']
    $binop_mul386.7 = i * index_step         ['$binop_mul386.7', 'i', 'index_step']
    $binop_add390.8 = offset + $binop_mul386.7 ['$binop_add390.8', '$binop_mul386.7', 'offset']
    $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>) ['$394binary_subscr.9', '$binop_add390.8', 'interp_win']
    $binop_mul414.15 = i * index_step        ['$binop_mul414.15', 'i', 'index_step']
    $binop_add418.16 = offset + $binop_mul414.15 ['$binop_add418.16', '$binop_mul414.15', 'offset']
    $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>) ['$422binary_subscr.17', '$binop_add418.16', 'interp_delta']
    $binop_mul432.18 = eta * $422binary_subscr.17 ['$422binary_subscr.17', '$binop_mul432.18', 'eta']
    weight = $394binary_subscr.9 + $binop_mul432.18 ['$394binary_subscr.9', '$binop_mul432.18', 'weight']
    $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$450binary_subscr.22', 't', 'y']
    $binop_sub468.27 = n - i                 ['$binop_sub468.27', 'i', 'n']
    $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>) ['$472binary_subscr.28', '$binop_sub468.27', 'x']
    $binop_mul482.29 = weight * $472binary_subscr.28 ['$472binary_subscr.28', '$binop_mul482.29', 'weight']
    $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined) ['$450binary_subscr.22', '$binop_iadd486.30', '$binop_mul482.29']
    y[t] = $binop_iadd486.30                 ['$binop_iadd486.30', 't', 'y']
    jump 374                                 []
label 500:
    $binop_sub504.3 = scale - frac           ['$binop_sub504.3', 'frac', 'scale']
    frac = $binop_sub504.3                   ['$binop_sub504.3', 'frac']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $520load_global.7 = global(int: <class 'int'>) ['$520load_global.7']
    offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$520load_global.7', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $560load_global.14 = global(min: <built-in function min>) ['$560load_global.14']
    $binop_sub576.18 = n_orig - n            ['$binop_sub576.18', 'n', 'n_orig']
    $const580.19 = const(int, 1)             ['$const580.19']
    $binop_sub582.20 = $binop_sub576.18 - $const580.19 ['$binop_sub576.18', '$binop_sub582.20', '$const580.19']
    $binop_sub590.23 = nwin - offset         ['$binop_sub590.23', 'nwin', 'offset']
    $binop_floordiv596.25 = $binop_sub590.23 // index_step ['$binop_floordiv596.25', '$binop_sub590.23', 'index_step']
    k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$560load_global.14', '$binop_floordiv596.25', '$binop_sub582.20', 'k_max']
    $616load_global.27 = global(range: <class 'range'>) ['$616load_global.27']
    $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$616load_global.27', '$634call.30', 'k_max']
    $644get_iter.31 = getiter(value=$634call.30) ['$634call.30', '$644get_iter.31']
    $phi646.1 = $644get_iter.31              ['$644get_iter.31', '$phi646.1']
    jump 646                                 []
label 646:
    $646for_iter.2 = iternext(value=$phi646.1) ['$646for_iter.2', '$phi646.1']
    $646for_iter.3 = pair_first(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.3']
    $646for_iter.4 = pair_second(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.4']
    $phi648.2 = $646for_iter.3               ['$646for_iter.3', '$phi648.2']
    branch $646for_iter.4, 648, 778          ['$646for_iter.4']
label 648:
    k = $phi648.2                            ['$phi648.2', 'k']
    $binop_mul658.7 = k * index_step         ['$binop_mul658.7', 'index_step', 'k']
    $binop_add662.8 = offset + $binop_mul658.7 ['$binop_add662.8', '$binop_mul658.7', 'offset']
    $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>) ['$666binary_subscr.9', '$binop_add662.8', 'interp_win']
    $binop_mul686.15 = k * index_step        ['$binop_mul686.15', 'index_step', 'k']
    $binop_add690.16 = offset + $binop_mul686.15 ['$binop_add690.16', '$binop_mul686.15', 'offset']
    $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>) ['$694binary_subscr.17', '$binop_add690.16', 'interp_delta']
    $binop_mul704.18 = eta * $694binary_subscr.17 ['$694binary_subscr.17', '$binop_mul704.18', 'eta']
    weight = $666binary_subscr.9 + $binop_mul704.18 ['$666binary_subscr.9', '$binop_mul704.18', 'weight']
    $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$722binary_subscr.22', 't', 'y']
    $binop_add740.27 = n + k                 ['$binop_add740.27', 'k', 'n']
    $const744.28 = const(int, 1)             ['$const744.28']
    $binop_add746.29 = $binop_add740.27 + $const744.28 ['$binop_add740.27', '$binop_add746.29', '$const744.28']
    $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>) ['$750binary_subscr.30', '$binop_add746.29', 'x']
    $binop_mul760.31 = weight * $750binary_subscr.30 ['$750binary_subscr.30', '$binop_mul760.31', 'weight']
    $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined) ['$722binary_subscr.22', '$binop_iadd764.32', '$binop_mul760.31']
    y[t] = $binop_iadd764.32                 ['$binop_iadd764.32', 't', 'y']
    jump 646                                 []
label 778:
    jump 176                                 []
label 782:
    $const782.0 = const(NoneType, None)      ['$const782.0']
    $784return_value.1 = cast(value=$const782.0) ['$784return_value.1', '$const782.0']
    return $784return_value.1                ['$784return_value.1']

DEBUG 2024-06-11 13:35:28,905 - ==== SSA block analysis pass on 0
DEBUG 2024-06-11 13:35:28,905 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000020B04804650>
DEBUG 2024-06-11 13:35:28,905 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:35:28,905 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:35:28,905 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:35:28,905 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:35:28,905 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:35:28,905 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:35:28,905 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:35:28,905 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:28,905 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:35:28,905 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,905 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:35:28,905 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:35:28,905 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:35:28,905 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:35:28,905 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:35:28,905 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:35:28,905 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:35:28,905 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:35:28,905 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:35:28,905 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,905 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:35:28,905 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:35:28,905 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,905 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:35:28,905 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:35:28,905 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,905 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:35:28,905 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,905 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:35:28,905 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:35:28,905 - on stmt: jump 176
DEBUG 2024-06-11 13:35:28,905 - ==== SSA block analysis pass on 176
DEBUG 2024-06-11 13:35:28,905 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000020B04804650>
DEBUG 2024-06-11 13:35:28,905 - on stmt: jump 178
DEBUG 2024-06-11 13:35:28,905 - ==== SSA block analysis pass on 178
DEBUG 2024-06-11 13:35:28,905 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000020B04804650>
DEBUG 2024-06-11 13:35:28,905 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:35:28,913 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:35:28,913 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:35:28,913 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:35:28,913 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:35:28,913 - ==== SSA block analysis pass on 180
DEBUG 2024-06-11 13:35:28,913 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000020B04804650>
DEBUG 2024-06-11 13:35:28,913 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:35:28,913 - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,913 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:28,913 - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,913 - on stmt: $binop_sub234.12 = time_register - n
DEBUG 2024-06-11 13:35:28,913 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 13:35:28,913 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:35:28,913 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:28,913 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,915 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:35:28,915 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:35:28,915 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:35:28,915 - on stmt: $binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 13:35:28,915 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:35:28,915 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:35:28,915 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,915 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:35:28,915 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,915 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:35:28,915 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:35:28,915 - on stmt: jump 374
DEBUG 2024-06-11 13:35:28,915 - ==== SSA block analysis pass on 374
DEBUG 2024-06-11 13:35:28,915 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000020B04804650>
DEBUG 2024-06-11 13:35:28,915 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:35:28,915 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:35:28,915 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:35:28,915 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:35:28,915 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:35:28,915 - ==== SSA block analysis pass on 376
DEBUG 2024-06-11 13:35:28,915 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000020B04804650>
DEBUG 2024-06-11 13:35:28,915 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:35:28,915 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:35:28,915 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:35:28,917 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,917 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:35:28,917 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:35:28,917 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,917 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:35:28,917 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:35:28,917 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,917 - on stmt: $binop_sub468.27 = n - i
DEBUG 2024-06-11 13:35:28,917 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,917 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:35:28,917 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:35:28,917 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:35:28,917 - on stmt: jump 374
DEBUG 2024-06-11 13:35:28,917 - ==== SSA block analysis pass on 500
DEBUG 2024-06-11 13:35:28,917 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000020B04804650>
DEBUG 2024-06-11 13:35:28,917 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 13:35:28,917 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 13:35:28,917 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:35:28,917 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:28,917 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,917 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:35:28,917 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:35:28,917 - on stmt: $binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 13:35:28,917 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:35:28,917 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:35:28,917 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:35:28,917 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:35:28,917 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,917 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:35:28,917 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,917 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:35:28,917 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:35:28,917 - on stmt: jump 646
DEBUG 2024-06-11 13:35:28,917 - ==== SSA block analysis pass on 646
DEBUG 2024-06-11 13:35:28,917 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000020B04804650>
DEBUG 2024-06-11 13:35:28,917 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:35:28,917 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:35:28,921 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:35:28,921 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:35:28,921 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:35:28,921 - ==== SSA block analysis pass on 648
DEBUG 2024-06-11 13:35:28,921 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000020B04804650>
DEBUG 2024-06-11 13:35:28,922 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:35:28,922 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:35:28,922 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:35:28,922 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,922 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:35:28,922 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:35:28,922 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,922 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:35:28,922 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:35:28,922 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,922 - on stmt: $binop_add740.27 = n + k
DEBUG 2024-06-11 13:35:28,923 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:35:28,923 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:35:28,923 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,923 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:35:28,923 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:35:28,923 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:35:28,923 - on stmt: jump 646
DEBUG 2024-06-11 13:35:28,923 - ==== SSA block analysis pass on 778
DEBUG 2024-06-11 13:35:28,923 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000020B04804650>
DEBUG 2024-06-11 13:35:28,923 - on stmt: jump 176
DEBUG 2024-06-11 13:35:28,923 - ==== SSA block analysis pass on 782
DEBUG 2024-06-11 13:35:28,923 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000020B04804650>
DEBUG 2024-06-11 13:35:28,923 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:35:28,923 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:35:28,923 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:35:28,923 - defs defaultdict(<class 'list'>,
            {'$122load_attr.22': [(<numba.core.ir.Assign object at 0x0000020B0474F510>,
                                   0)],
             '$146load_global.25': [(<numba.core.ir.Assign object at 0x0000020B03703090>,
                                     0)],
             '$164call.28': [(<numba.core.ir.Assign object at 0x0000020B036F1F90>,
                              0)],
             '$174get_iter.29': [(<numba.core.ir.Assign object at 0x0000020B036F03D0>,
                                  0)],
             '$178for_iter.1': [(<numba.core.ir.Assign object at 0x0000020B03702DD0>,
                                 178)],
             '$178for_iter.2': [(<numba.core.ir.Assign object at 0x0000020B04721E50>,
                                 178)],
             '$178for_iter.3': [(<numba.core.ir.Assign object at 0x0000020B04720250>,
                                 178)],
             '$198load_global.5': [(<numba.core.ir.Assign object at 0x0000020B0473DA10>,
                                    180)],
             '$254load_global.17': [(<numba.core.ir.Assign object at 0x0000020B0473FD90>,
                                     180)],
             '$294load_global.24': [(<numba.core.ir.Assign object at 0x0000020B0473C450>,
                                     180)],
             '$344load_global.35': [(<numba.core.ir.Assign object at 0x0000020B04757810>,
                                     180)],
             '$362call.38': [(<numba.core.ir.Assign object at 0x0000020B04757490>,
                              180)],
             '$372get_iter.39': [(<numba.core.ir.Assign object at 0x0000020B04756690>,
                                  180)],
             '$374for_iter.2': [(<numba.core.ir.Assign object at 0x0000020B0473D8D0>,
                                 374)],
             '$374for_iter.3': [(<numba.core.ir.Assign object at 0x0000020B0473E350>,
                                 374)],
             '$374for_iter.4': [(<numba.core.ir.Assign object at 0x0000020B0473FF50>,
                                 374)],
             '$394binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000020B047572D0>,
                                      376)],
             '$422binary_subscr.17': [(<numba.core.ir.Assign object at 0x0000020B047554D0>,
                                       376)],
             '$450binary_subscr.22': [(<numba.core.ir.Assign object at 0x0000020B04756110>,
                                       376)],
             '$472binary_subscr.28': [(<numba.core.ir.Assign object at 0x0000020B036EEED0>,
                                       376)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000020B047FEAD0>,
                                  0)],
             '$520load_global.7': [(<numba.core.ir.Assign object at 0x0000020B0472B4D0>,
                                    500)],
             '$560load_global.14': [(<numba.core.ir.Assign object at 0x0000020B04763AD0>,
                                     500)],
             '$616load_global.27': [(<numba.core.ir.Assign object at 0x0000020B04761510>,
                                     500)],
             '$634call.30': [(<numba.core.ir.Assign object at 0x0000020B04760650>,
                              500)],
             '$644get_iter.31': [(<numba.core.ir.Assign object at 0x0000020B047604D0>,
                                  500)],
             '$646for_iter.2': [(<numba.core.ir.Assign object at 0x0000020B04755890>,
                                 646)],
             '$646for_iter.3': [(<numba.core.ir.Assign object at 0x0000020B04762B50>,
                                 646)],
             '$646for_iter.4': [(<numba.core.ir.Assign object at 0x0000020B04763CD0>,
                                 646)],
             '$666binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000020B04763490>,
                                      648)],
             '$694binary_subscr.17': [(<numba.core.ir.Assign object at 0x0000020B0476C490>,
                                       648)],
             '$70load_attr.14': [(<numba.core.ir.Assign object at 0x0000020B0474D710>,
                                  0)],
             '$722binary_subscr.22': [(<numba.core.ir.Assign object at 0x0000020B0476F890>,
                                       648)],
             '$750binary_subscr.30': [(<numba.core.ir.Assign object at 0x0000020B0476E0D0>,
                                       648)],
             '$784return_value.1': [(<numba.core.ir.Assign object at 0x0000020B0476FB50>,
                                     782)],
             '$96load_attr.18': [(<numba.core.ir.Assign object at 0x0000020B0474C350>,
                                  0)],
             '$binop_add310.28': [(<numba.core.ir.Assign object at 0x0000020B0473EB90>,
                                   180)],
             '$binop_add390.8': [(<numba.core.ir.Assign object at 0x0000020B047563D0>,
                                  376)],
             '$binop_add418.16': [(<numba.core.ir.Assign object at 0x0000020B04755610>,
                                   376)],
             '$binop_add662.8': [(<numba.core.ir.Assign object at 0x0000020B04763250>,
                                  648)],
             '$binop_add690.16': [(<numba.core.ir.Assign object at 0x0000020B0476E7D0>,
                                   648)],
             '$binop_add740.27': [(<numba.core.ir.Assign object at 0x0000020B0476E950>,
                                   648)],
             '$binop_add746.29': [(<numba.core.ir.Assign object at 0x0000020B0476E2D0>,
                                   648)],
             '$binop_floordiv324.33': [(<numba.core.ir.Assign object at 0x0000020B04754750>,
                                        180)],
             '$binop_floordiv596.25': [(<numba.core.ir.Assign object at 0x0000020B04761390>,
                                        500)],
             '$binop_iadd486.30': [(<numba.core.ir.Assign object at 0x0000020B036EF150>,
                                    376)],
             '$binop_iadd764.32': [(<numba.core.ir.Assign object at 0x0000020B0476D090>,
                                    648)],
             '$binop_mul20.4': [(<numba.core.ir.Assign object at 0x0000020B0474F9D0>,
                                 0)],
             '$binop_mul386.7': [(<numba.core.ir.Assign object at 0x0000020B047568D0>,
                                  376)],
             '$binop_mul414.15': [(<numba.core.ir.Assign object at 0x0000020B04755990>,
                                   376)],
             '$binop_mul432.18': [(<numba.core.ir.Assign object at 0x0000020B04754F10>,
                                   376)],
             '$binop_mul482.29': [(<numba.core.ir.Assign object at 0x0000020B036EE810>,
                                   376)],
             '$binop_mul658.7': [(<numba.core.ir.Assign object at 0x0000020B047638D0>,
                                  648)],
             '$binop_mul686.15': [(<numba.core.ir.Assign object at 0x0000020B0476C990>,
                                   648)],
             '$binop_mul704.18': [(<numba.core.ir.Assign object at 0x0000020B0476F410>,
                                   648)],
             '$binop_mul760.31': [(<numba.core.ir.Assign object at 0x0000020B0476CC10>,
                                   648)],
             '$binop_sub234.12': [(<numba.core.ir.Assign object at 0x0000020B0473E910>,
                                   180)],
             '$binop_sub318.31': [(<numba.core.ir.Assign object at 0x0000020B04756B50>,
                                   180)],
             '$binop_sub468.27': [(<numba.core.ir.Assign object at 0x0000020B04756E10>,
                                   376)],
             '$binop_sub504.3': [(<numba.core.ir.Assign object at 0x0000020B04754B50>,
                                  500)],
             '$binop_sub576.18': [(<numba.core.ir.Assign object at 0x0000020B04762810>,
                                   500)],
             '$binop_sub582.20': [(<numba.core.ir.Assign object at 0x0000020B04761DD0>,
                                   500)],
             '$binop_sub590.23': [(<numba.core.ir.Assign object at 0x0000020B04762050>,
                                   500)],
             '$const106.19': [(<numba.core.ir.Assign object at 0x0000020B0474E510>,
                               0)],
             '$const132.23': [(<numba.core.ir.Assign object at 0x0000020B03700490>,
                               0)],
             '$const308.27': [(<numba.core.ir.Assign object at 0x0000020B0473DA90>,
                               180)],
             '$const580.19': [(<numba.core.ir.Assign object at 0x0000020B04762450>,
                               500)],
             '$const744.28': [(<numba.core.ir.Assign object at 0x0000020B0476E310>,
                               648)],
             '$const782.0': [(<numba.core.ir.Assign object at 0x0000020B0476EF50>,
                              782)],
             '$const80.15': [(<numba.core.ir.Assign object at 0x0000020B0474D450>,
                              0)],
             '$phi178.0': [(<numba.core.ir.Assign object at 0x0000020B047B6DD0>,
                            0)],
             '$phi180.1': [(<numba.core.ir.Assign object at 0x0000020B04720F90>,
                            178)],
             '$phi374.1': [(<numba.core.ir.Assign object at 0x0000020B04722950>,
                            180)],
             '$phi376.2': [(<numba.core.ir.Assign object at 0x0000020B0473FC90>,
                            374)],
             '$phi646.1': [(<numba.core.ir.Assign object at 0x0000020B036EEA50>,
                            500)],
             '$phi648.2': [(<numba.core.ir.Assign object at 0x0000020B047619D0>,
                            646)],
             'eta': [(<numba.core.ir.Assign object at 0x0000020B0474EB50>, 0),
                     (<numba.core.ir.Assign object at 0x0000020B0473E490>, 180),
                     (<numba.core.ir.Assign object at 0x0000020B04763F10>,
                      500)],
             'frac': [(<numba.core.ir.Assign object at 0x0000020B0474E710>, 0),
                      (<numba.core.ir.Assign object at 0x0000020B0473CE10>,
                       180),
                      (<numba.core.ir.Assign object at 0x0000020B04797190>,
                       500)],
             'i': [(<numba.core.ir.Assign object at 0x0000020B0473C0D0>, 376)],
             'i_max': [(<numba.core.ir.Assign object at 0x0000020B04757B90>,
                        180)],
             'index_frac': [(<numba.core.ir.Assign object at 0x0000020B0474F2D0>,
                             0),
                            (<numba.core.ir.Assign object at 0x0000020B0473CBD0>,
                             180),
                            (<numba.core.ir.Assign object at 0x0000020B04728050>,
                             500)],
             'index_step': [(<numba.core.ir.Assign object at 0x0000020B0474FF50>,
                             0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x0000020B047954D0>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x0000020B04795FD0>,
                             0)],
             'k': [(<numba.core.ir.Assign object at 0x0000020B04760290>, 648)],
             'k_max': [(<numba.core.ir.Assign object at 0x0000020B047610D0>,
                        500)],
             'n': [(<numba.core.ir.Assign object at 0x0000020B0474EF50>, 0),
                   (<numba.core.ir.Assign object at 0x0000020B0473E290>, 180)],
             'n_orig': [(<numba.core.ir.Assign object at 0x0000020B04788F50>,
                         0)],
             'n_out': [(<numba.core.ir.Assign object at 0x0000020B047B7810>,
                        0)],
             'num_table': [(<numba.core.ir.Assign object at 0x0000020B04797490>,
                            0)],
             'nwin': [(<numba.core.ir.Assign object at 0x0000020B0474C490>, 0)],
             'offset': [(<numba.core.ir.Assign object at 0x0000020B0474E2D0>,
                         0),
                        (<numba.core.ir.Assign object at 0x0000020B0473F7D0>,
                         180),
                        (<numba.core.ir.Assign object at 0x0000020B0472B050>,
                         500)],
             'scale': [(<numba.core.ir.Assign object at 0x0000020B047AB0D0>,
                        0)],
             't': [(<numba.core.ir.Assign object at 0x0000020B047212D0>, 180)],
             't_out': [(<numba.core.ir.Assign object at 0x0000020B04795D10>,
                        0)],
             'time_register': [(<numba.core.ir.Assign object at 0x0000020B0474F490>,
                                0),
                               (<numba.core.ir.Assign object at 0x0000020B0473CDD0>,
                                180)],
             'weight': [(<numba.core.ir.Assign object at 0x0000020B0474E1D0>,
                         0),
                        (<numba.core.ir.Assign object at 0x0000020B04754E10>,
                         376),
                        (<numba.core.ir.Assign object at 0x0000020B0476FFD0>,
                         648)],
             'x': [(<numba.core.ir.Assign object at 0x0000020B04795B10>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000020B047AB4D0>, 0)]})
DEBUG 2024-06-11 13:35:28,923 - SSA violators <numba.core.utils.OrderedSet object at 0x0000020B047F18D0>
DEBUG 2024-06-11 13:35:28,923 - Fix SSA violator on var time_register
DEBUG 2024-06-11 13:35:28,923 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:35:28,923 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047ABE90>
DEBUG 2024-06-11 13:35:28,923 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:35:28,923 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:35:28,923 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:35:28,923 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:35:28,923 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:35:28,923 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:35:28,923 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:35:28,923 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:28,923 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:35:28,923 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,923 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:35:28,923 - first assign: time_register
DEBUG 2024-06-11 13:35:28,923 - replaced with: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:35:28,923 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:35:28,923 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:35:28,923 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:35:28,923 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:35:28,923 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:35:28,923 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:35:28,923 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:35:28,923 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:35:28,923 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,923 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:35:28,923 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:35:28,923 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,923 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:35:28,923 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:35:28,923 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,923 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:35:28,923 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,930 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:35:28,930 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:35:28,930 - on stmt: jump 176
DEBUG 2024-06-11 13:35:28,930 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:35:28,930 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047ABE90>
DEBUG 2024-06-11 13:35:28,930 - on stmt: jump 178
DEBUG 2024-06-11 13:35:28,930 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:35:28,930 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047ABE90>
DEBUG 2024-06-11 13:35:28,930 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:35:28,930 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:35:28,930 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:35:28,930 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:35:28,930 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:35:28,930 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:35:28,930 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047ABE90>
DEBUG 2024-06-11 13:35:28,930 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:35:28,930 - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,931 - replaced with: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,931 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:28,931 - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,931 - on stmt: $binop_sub234.12 = time_register - n
DEBUG 2024-06-11 13:35:28,931 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 13:35:28,932 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:35:28,932 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:28,932 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,932 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:35:28,932 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:35:28,932 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:35:28,932 - on stmt: $binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 13:35:28,932 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:35:28,932 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:35:28,932 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,932 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:35:28,932 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,932 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:35:28,932 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:35:28,932 - on stmt: jump 374
DEBUG 2024-06-11 13:35:28,932 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:35:28,932 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047ABE90>
DEBUG 2024-06-11 13:35:28,932 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:35:28,932 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:35:28,932 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:35:28,932 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:35:28,932 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:35:28,932 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:35:28,932 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047ABE90>
DEBUG 2024-06-11 13:35:28,932 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:35:28,932 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:35:28,932 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:35:28,932 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,932 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:35:28,932 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:35:28,932 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,932 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:35:28,932 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:35:28,932 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,932 - on stmt: $binop_sub468.27 = n - i
DEBUG 2024-06-11 13:35:28,932 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,932 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:35:28,932 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:35:28,932 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:35:28,932 - on stmt: jump 374
DEBUG 2024-06-11 13:35:28,932 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:35:28,932 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047ABE90>
DEBUG 2024-06-11 13:35:28,932 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 13:35:28,932 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 13:35:28,932 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:35:28,932 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:28,932 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,932 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:35:28,932 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:35:28,932 - on stmt: $binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 13:35:28,932 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:35:28,932 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:35:28,932 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:35:28,932 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:35:28,932 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,932 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:35:28,932 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,932 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:35:28,932 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:35:28,932 - on stmt: jump 646
DEBUG 2024-06-11 13:35:28,932 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:35:28,932 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047ABE90>
DEBUG 2024-06-11 13:35:28,932 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:35:28,932 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:35:28,932 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:35:28,938 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:35:28,938 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:35:28,938 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:35:28,938 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047ABE90>
DEBUG 2024-06-11 13:35:28,938 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:35:28,938 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:35:28,938 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:35:28,938 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,938 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:35:28,938 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:35:28,938 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,938 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:35:28,938 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:35:28,938 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,938 - on stmt: $binop_add740.27 = n + k
DEBUG 2024-06-11 13:35:28,939 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:35:28,939 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:35:28,939 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,939 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:35:28,939 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:35:28,940 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:35:28,940 - on stmt: jump 646
DEBUG 2024-06-11 13:35:28,940 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:35:28,940 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047ABE90>
DEBUG 2024-06-11 13:35:28,940 - on stmt: jump 176
DEBUG 2024-06-11 13:35:28,940 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:35:28,940 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047ABE90>
DEBUG 2024-06-11 13:35:28,940 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:35:28,940 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:35:28,940 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:35:28,940 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000020B047A9290>],
             180: [<numba.core.ir.Assign object at 0x0000020B0478A6D0>]})
DEBUG 2024-06-11 13:35:28,940 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:35:28,940 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B047ABE90>
DEBUG 2024-06-11 13:35:28,940 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:35:28,940 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:35:28,940 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:35:28,940 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:35:28,940 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:35:28,940 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:35:28,940 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:35:28,940 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:28,940 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:35:28,940 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,940 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:35:28,940 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:35:28,940 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:35:28,940 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:35:28,940 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:35:28,940 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:35:28,940 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:35:28,940 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:35:28,940 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:35:28,940 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,940 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:35:28,940 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:35:28,940 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,940 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:35:28,940 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:35:28,940 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,940 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:35:28,940 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,940 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:35:28,940 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:35:28,940 - on stmt: jump 176
DEBUG 2024-06-11 13:35:28,940 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:35:28,940 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B047ABE90>
DEBUG 2024-06-11 13:35:28,940 - on stmt: jump 178
DEBUG 2024-06-11 13:35:28,940 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:35:28,940 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B047ABE90>
DEBUG 2024-06-11 13:35:28,940 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:35:28,940 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:35:28,940 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:35:28,940 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:35:28,940 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:35:28,940 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:35:28,940 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B047ABE90>
DEBUG 2024-06-11 13:35:28,940 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:35:28,940 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,940 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:28,940 - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,940 - find_def var='time_register' stmt=n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,940 - replaced with: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,940 - on stmt: $binop_sub234.12 = time_register - n
DEBUG 2024-06-11 13:35:28,946 - find_def var='time_register' stmt=$binop_sub234.12 = time_register - n
DEBUG 2024-06-11 13:35:28,946 - replaced with: $binop_sub234.12 = time_register.1 - n
DEBUG 2024-06-11 13:35:28,946 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 13:35:28,947 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:35:28,947 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:28,947 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,947 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:35:28,947 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:35:28,947 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:35:28,947 - on stmt: $binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 13:35:28,947 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:35:28,947 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:35:28,947 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,947 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:35:28,947 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,948 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:35:28,948 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:35:28,948 - on stmt: jump 374
DEBUG 2024-06-11 13:35:28,948 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:35:28,948 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B047ABE90>
DEBUG 2024-06-11 13:35:28,948 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:35:28,948 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:35:28,948 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:35:28,948 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:35:28,948 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:35:28,948 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:35:28,948 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B047ABE90>
DEBUG 2024-06-11 13:35:28,948 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:35:28,948 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:35:28,948 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:35:28,948 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,948 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:35:28,948 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:35:28,948 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,948 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:35:28,948 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:35:28,948 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,948 - on stmt: $binop_sub468.27 = n - i
DEBUG 2024-06-11 13:35:28,948 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,948 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:35:28,948 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:35:28,948 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:35:28,948 - on stmt: jump 374
DEBUG 2024-06-11 13:35:28,948 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:35:28,948 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B047ABE90>
DEBUG 2024-06-11 13:35:28,948 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 13:35:28,948 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 13:35:28,948 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:35:28,948 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:28,948 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,948 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:35:28,948 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:35:28,948 - on stmt: $binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 13:35:28,948 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:35:28,948 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:35:28,948 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:35:28,948 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:35:28,948 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,948 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:35:28,948 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,948 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:35:28,948 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:35:28,948 - on stmt: jump 646
DEBUG 2024-06-11 13:35:28,948 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:35:28,948 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B047ABE90>
DEBUG 2024-06-11 13:35:28,948 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:35:28,948 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:35:28,948 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:35:28,948 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:35:28,948 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:35:28,948 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:35:28,948 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B047ABE90>
DEBUG 2024-06-11 13:35:28,948 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:35:28,948 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:35:28,948 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:35:28,948 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,948 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:35:28,948 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:35:28,948 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,948 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:35:28,948 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:35:28,948 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,948 - on stmt: $binop_add740.27 = n + k
DEBUG 2024-06-11 13:35:28,948 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:35:28,954 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:35:28,954 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,954 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:35:28,955 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:35:28,955 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:35:28,955 - on stmt: jump 646
DEBUG 2024-06-11 13:35:28,955 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:35:28,955 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B047ABE90>
DEBUG 2024-06-11 13:35:28,955 - on stmt: jump 176
DEBUG 2024-06-11 13:35:28,955 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:35:28,955 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B047ABE90>
DEBUG 2024-06-11 13:35:28,955 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:35:28,955 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:35:28,955 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:35:28,955 - Fix SSA violator on var n
DEBUG 2024-06-11 13:35:28,955 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:35:28,956 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B0478B650>
DEBUG 2024-06-11 13:35:28,956 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:35:28,956 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:35:28,956 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:35:28,957 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:35:28,957 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:35:28,957 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:35:28,957 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:35:28,957 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:28,957 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:35:28,957 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,957 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:35:28,957 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:35:28,957 - first assign: n
DEBUG 2024-06-11 13:35:28,957 - replaced with: n = const(int, 0)
DEBUG 2024-06-11 13:35:28,957 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:35:28,957 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:35:28,957 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:35:28,957 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:35:28,957 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:35:28,957 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:35:28,957 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:35:28,957 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,957 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:35:28,957 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:35:28,957 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,957 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:35:28,957 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:35:28,957 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,957 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:35:28,957 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,957 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:35:28,957 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:35:28,957 - on stmt: jump 176
DEBUG 2024-06-11 13:35:28,957 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:35:28,957 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B0478B650>
DEBUG 2024-06-11 13:35:28,957 - on stmt: jump 178
DEBUG 2024-06-11 13:35:28,957 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:35:28,957 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B0478B650>
DEBUG 2024-06-11 13:35:28,957 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:35:28,957 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:35:28,957 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:35:28,957 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:35:28,957 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:35:28,957 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:35:28,957 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B0478B650>
DEBUG 2024-06-11 13:35:28,957 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:35:28,957 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,957 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:28,957 - on stmt: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,957 - replaced with: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,957 - on stmt: $binop_sub234.12 = time_register.1 - n
DEBUG 2024-06-11 13:35:28,957 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 13:35:28,957 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:35:28,957 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:28,957 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,957 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:35:28,957 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:35:28,957 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:35:28,957 - on stmt: $binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 13:35:28,957 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:35:28,957 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:35:28,957 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,957 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:35:28,957 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,957 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:35:28,957 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:35:28,957 - on stmt: jump 374
DEBUG 2024-06-11 13:35:28,957 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:35:28,957 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B0478B650>
DEBUG 2024-06-11 13:35:28,957 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:35:28,957 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:35:28,957 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:35:28,963 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:35:28,963 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:35:28,963 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:35:28,963 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B0478B650>
DEBUG 2024-06-11 13:35:28,963 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:35:28,963 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:35:28,963 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:35:28,963 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,963 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:35:28,963 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:35:28,963 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,963 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:35:28,963 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:35:28,963 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,963 - on stmt: $binop_sub468.27 = n - i
DEBUG 2024-06-11 13:35:28,964 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,964 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:35:28,964 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:35:28,964 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:35:28,964 - on stmt: jump 374
DEBUG 2024-06-11 13:35:28,964 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:35:28,964 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B0478B650>
DEBUG 2024-06-11 13:35:28,964 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 13:35:28,964 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 13:35:28,964 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:35:28,964 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:28,964 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,964 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:35:28,964 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:35:28,964 - on stmt: $binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 13:35:28,964 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:35:28,964 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:35:28,964 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:35:28,964 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:35:28,964 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,964 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:35:28,964 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,964 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:35:28,964 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:35:28,964 - on stmt: jump 646
DEBUG 2024-06-11 13:35:28,964 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:35:28,964 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B0478B650>
DEBUG 2024-06-11 13:35:28,964 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:35:28,964 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:35:28,964 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:35:28,964 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:35:28,964 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:35:28,964 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:35:28,964 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B0478B650>
DEBUG 2024-06-11 13:35:28,964 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:35:28,964 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:35:28,964 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:35:28,964 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,964 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:35:28,964 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:35:28,964 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,964 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:35:28,964 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:35:28,964 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,964 - on stmt: $binop_add740.27 = n + k
DEBUG 2024-06-11 13:35:28,964 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:35:28,964 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:35:28,964 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,964 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:35:28,964 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:35:28,964 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:35:28,964 - on stmt: jump 646
DEBUG 2024-06-11 13:35:28,964 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:35:28,964 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B0478B650>
DEBUG 2024-06-11 13:35:28,964 - on stmt: jump 176
DEBUG 2024-06-11 13:35:28,964 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:35:28,964 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B0478B650>
DEBUG 2024-06-11 13:35:28,964 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:35:28,964 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:35:28,964 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:35:28,964 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000020B047F2850>],
             180: [<numba.core.ir.Assign object at 0x0000020B0478B6D0>]})
DEBUG 2024-06-11 13:35:28,964 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:35:28,964 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B047977D0>
DEBUG 2024-06-11 13:35:28,964 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:35:28,964 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:35:28,964 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:35:28,964 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:35:28,964 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:35:28,964 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:35:28,964 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:35:28,964 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:28,964 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:35:28,971 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,971 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:35:28,971 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:35:28,971 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:35:28,972 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:35:28,972 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:35:28,972 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:35:28,972 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:35:28,972 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:35:28,972 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:35:28,972 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,972 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:35:28,972 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:35:28,972 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,972 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:35:28,972 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:35:28,973 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,973 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:35:28,973 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,973 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:35:28,973 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:35:28,973 - on stmt: jump 176
DEBUG 2024-06-11 13:35:28,973 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:35:28,973 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B047977D0>
DEBUG 2024-06-11 13:35:28,973 - on stmt: jump 178
DEBUG 2024-06-11 13:35:28,973 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:35:28,973 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B047977D0>
DEBUG 2024-06-11 13:35:28,973 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:35:28,973 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:35:28,973 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:35:28,973 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:35:28,973 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:35:28,973 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:35:28,973 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B047977D0>
DEBUG 2024-06-11 13:35:28,973 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:35:28,973 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,973 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:28,973 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,973 - on stmt: $binop_sub234.12 = time_register.1 - n
DEBUG 2024-06-11 13:35:28,973 - find_def var='n' stmt=$binop_sub234.12 = time_register.1 - n
DEBUG 2024-06-11 13:35:28,973 - replaced with: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 13:35:28,973 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 13:35:28,973 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:35:28,973 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:28,973 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,973 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:35:28,973 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:35:28,973 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:35:28,973 - on stmt: $binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 13:35:28,973 - find_def var='n' stmt=$binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 13:35:28,973 - replaced with: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 13:35:28,973 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:35:28,973 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:35:28,973 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,973 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:35:28,973 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,973 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:35:28,973 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:35:28,973 - on stmt: jump 374
DEBUG 2024-06-11 13:35:28,973 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:35:28,973 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B047977D0>
DEBUG 2024-06-11 13:35:28,973 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:35:28,973 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:35:28,973 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:35:28,973 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:35:28,973 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:35:28,973 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:35:28,973 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B047977D0>
DEBUG 2024-06-11 13:35:28,973 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:35:28,973 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:35:28,973 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:35:28,973 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,973 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:35:28,973 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:35:28,973 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,973 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:35:28,973 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:35:28,973 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,973 - on stmt: $binop_sub468.27 = n - i
DEBUG 2024-06-11 13:35:28,973 - find_def var='n' stmt=$binop_sub468.27 = n - i
DEBUG 2024-06-11 13:35:28,973 - find_def_from_top label 376
DEBUG 2024-06-11 13:35:28,973 - idom 374 from label 376
DEBUG 2024-06-11 13:35:28,973 - find_def_from_bottom label 374
DEBUG 2024-06-11 13:35:28,973 - find_def_from_top label 374
DEBUG 2024-06-11 13:35:28,973 - idom 180 from label 374
DEBUG 2024-06-11 13:35:28,979 - find_def_from_bottom label 180
DEBUG 2024-06-11 13:35:28,979 - replaced with: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 13:35:28,979 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,980 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:35:28,980 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:35:28,980 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:35:28,980 - on stmt: jump 374
DEBUG 2024-06-11 13:35:28,980 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:35:28,980 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B047977D0>
DEBUG 2024-06-11 13:35:28,980 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 13:35:28,980 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 13:35:28,980 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:35:28,980 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:28,980 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,980 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:35:28,981 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:35:28,981 - on stmt: $binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 13:35:28,981 - find_def var='n' stmt=$binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 13:35:28,981 - find_def_from_top label 500
DEBUG 2024-06-11 13:35:28,981 - idom 374 from label 500
DEBUG 2024-06-11 13:35:28,981 - find_def_from_bottom label 374
DEBUG 2024-06-11 13:35:28,982 - find_def_from_top label 374
DEBUG 2024-06-11 13:35:28,982 - idom 180 from label 374
DEBUG 2024-06-11 13:35:28,982 - find_def_from_bottom label 180
DEBUG 2024-06-11 13:35:28,982 - replaced with: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 13:35:28,982 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:35:28,982 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:35:28,982 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:35:28,982 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:35:28,982 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,982 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:35:28,982 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,982 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:35:28,982 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:35:28,982 - on stmt: jump 646
DEBUG 2024-06-11 13:35:28,982 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:35:28,982 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B047977D0>
DEBUG 2024-06-11 13:35:28,982 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:35:28,982 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:35:28,982 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:35:28,982 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:35:28,982 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:35:28,982 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:35:28,982 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B047977D0>
DEBUG 2024-06-11 13:35:28,982 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:35:28,982 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:35:28,982 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:35:28,982 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,982 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:35:28,982 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:35:28,982 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,982 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:35:28,982 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:35:28,982 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,982 - on stmt: $binop_add740.27 = n + k
DEBUG 2024-06-11 13:35:28,982 - find_def var='n' stmt=$binop_add740.27 = n + k
DEBUG 2024-06-11 13:35:28,982 - find_def_from_top label 648
DEBUG 2024-06-11 13:35:28,982 - idom 646 from label 648
DEBUG 2024-06-11 13:35:28,982 - find_def_from_bottom label 646
DEBUG 2024-06-11 13:35:28,982 - find_def_from_top label 646
DEBUG 2024-06-11 13:35:28,982 - idom 500 from label 646
DEBUG 2024-06-11 13:35:28,982 - find_def_from_bottom label 500
DEBUG 2024-06-11 13:35:28,982 - find_def_from_top label 500
DEBUG 2024-06-11 13:35:28,982 - idom 374 from label 500
DEBUG 2024-06-11 13:35:28,982 - find_def_from_bottom label 374
DEBUG 2024-06-11 13:35:28,982 - find_def_from_top label 374
DEBUG 2024-06-11 13:35:28,982 - idom 180 from label 374
DEBUG 2024-06-11 13:35:28,982 - find_def_from_bottom label 180
DEBUG 2024-06-11 13:35:28,982 - replaced with: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 13:35:28,982 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:35:28,982 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:35:28,982 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,982 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:35:28,982 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:35:28,982 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:35:28,982 - on stmt: jump 646
DEBUG 2024-06-11 13:35:28,982 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:35:28,982 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B047977D0>
DEBUG 2024-06-11 13:35:28,982 - on stmt: jump 176
DEBUG 2024-06-11 13:35:28,982 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:35:28,982 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B047977D0>
DEBUG 2024-06-11 13:35:28,982 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:35:28,982 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:35:28,982 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:35:28,982 - Fix SSA violator on var frac
DEBUG 2024-06-11 13:35:28,982 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:35:28,982 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B0478A3D0>
DEBUG 2024-06-11 13:35:28,982 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:35:28,982 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:35:28,982 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:35:28,982 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:35:28,982 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:35:28,988 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:35:28,988 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:35:28,988 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:28,988 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:35:28,988 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,988 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:35:28,988 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:35:28,988 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:35:28,988 - first assign: frac
DEBUG 2024-06-11 13:35:28,988 - replaced with: frac = const(float, 0.0)
DEBUG 2024-06-11 13:35:28,988 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:35:28,988 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:35:28,988 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:35:28,988 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:35:28,988 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:35:28,988 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:35:28,990 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,990 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:35:28,990 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:35:28,990 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,990 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:35:28,990 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:35:28,990 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,990 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:35:28,990 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,990 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:35:28,990 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:35:28,990 - on stmt: jump 176
DEBUG 2024-06-11 13:35:28,990 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:35:28,990 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B0478A3D0>
DEBUG 2024-06-11 13:35:28,990 - on stmt: jump 178
DEBUG 2024-06-11 13:35:28,990 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:35:28,990 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B0478A3D0>
DEBUG 2024-06-11 13:35:28,990 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:35:28,990 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:35:28,990 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:35:28,990 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:35:28,990 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:35:28,990 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:35:28,990 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B0478A3D0>
DEBUG 2024-06-11 13:35:28,990 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:35:28,990 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,990 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:28,990 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,990 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 13:35:28,990 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 13:35:28,990 - replaced with: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 13:35:28,990 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:35:28,990 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:28,990 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,990 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:35:28,990 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:35:28,990 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:35:28,990 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 13:35:28,990 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:35:28,990 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:35:28,990 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,990 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:35:28,990 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,990 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:35:28,990 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:35:28,990 - on stmt: jump 374
DEBUG 2024-06-11 13:35:28,990 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:35:28,990 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B0478A3D0>
DEBUG 2024-06-11 13:35:28,990 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:35:28,990 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:35:28,990 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:35:28,990 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:35:28,990 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:35:28,990 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:35:28,990 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B0478A3D0>
DEBUG 2024-06-11 13:35:28,990 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:35:28,990 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:35:28,990 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:35:28,990 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,990 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:35:28,990 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:35:28,990 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,990 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:35:28,990 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:35:28,990 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,990 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 13:35:28,990 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,990 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:35:28,990 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:35:28,996 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:35:28,996 - on stmt: jump 374
DEBUG 2024-06-11 13:35:28,996 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:35:28,996 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B0478A3D0>
DEBUG 2024-06-11 13:35:28,997 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 13:35:28,997 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 13:35:28,997 - replaced with: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 13:35:28,997 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:35:28,997 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:28,997 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,997 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:35:28,997 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:35:28,997 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 13:35:28,997 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:35:28,997 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:35:28,998 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:35:28,998 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:35:28,998 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,998 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:35:28,998 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:28,998 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:35:28,998 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:35:28,998 - on stmt: jump 646
DEBUG 2024-06-11 13:35:28,998 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:35:28,998 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B0478A3D0>
DEBUG 2024-06-11 13:35:28,998 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:35:28,998 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:35:28,998 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:35:28,998 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:35:28,998 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:35:28,998 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:35:28,998 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B0478A3D0>
DEBUG 2024-06-11 13:35:28,998 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:35:28,999 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:35:28,999 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:35:28,999 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:28,999 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:35:28,999 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:35:29,000 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,000 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:35:29,000 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:35:29,000 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,000 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 13:35:29,000 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:35:29,000 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:35:29,000 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,000 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:35:29,000 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:35:29,000 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:35:29,000 - on stmt: jump 646
DEBUG 2024-06-11 13:35:29,000 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:35:29,000 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B0478A3D0>
DEBUG 2024-06-11 13:35:29,000 - on stmt: jump 176
DEBUG 2024-06-11 13:35:29,000 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:35:29,001 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B0478A3D0>
DEBUG 2024-06-11 13:35:29,001 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:35:29,001 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:35:29,001 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:35:29,001 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000020B047977D0>],
             180: [<numba.core.ir.Assign object at 0x0000020B047B5490>],
             500: [<numba.core.ir.Assign object at 0x0000020B047B50D0>]})
DEBUG 2024-06-11 13:35:29,002 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:35:29,002 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0478A3D0>
DEBUG 2024-06-11 13:35:29,002 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:35:29,002 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:35:29,002 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:35:29,002 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:35:29,002 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:35:29,002 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:35:29,002 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:35:29,002 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,002 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:35:29,002 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,002 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,002 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:35:29,002 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,002 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,002 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:35:29,002 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,002 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,002 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:35:29,002 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:35:29,002 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,002 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:35:29,002 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:35:29,002 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,002 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:35:29,002 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:35:29,002 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,002 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:35:29,002 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,002 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:35:29,004 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:35:29,004 - on stmt: jump 176
DEBUG 2024-06-11 13:35:29,004 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:35:29,004 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0478A3D0>
DEBUG 2024-06-11 13:35:29,005 - on stmt: jump 178
DEBUG 2024-06-11 13:35:29,005 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:35:29,005 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0478A3D0>
DEBUG 2024-06-11 13:35:29,005 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:35:29,005 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:35:29,005 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:35:29,005 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:35:29,005 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:35:29,005 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:35:29,005 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0478A3D0>
DEBUG 2024-06-11 13:35:29,005 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:35:29,005 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,006 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,006 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,006 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 13:35:29,006 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 13:35:29,006 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:35:29,006 - find_def var='frac' stmt=index_frac = frac * num_table
DEBUG 2024-06-11 13:35:29,006 - replaced with: index_frac = frac.1 * num_table
DEBUG 2024-06-11 13:35:29,006 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,006 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,006 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:35:29,006 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:35:29,006 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:35:29,006 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 13:35:29,006 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:35:29,006 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:35:29,006 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,006 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:35:29,006 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,006 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:35:29,006 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:35:29,006 - on stmt: jump 374
DEBUG 2024-06-11 13:35:29,006 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:35:29,006 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0478A3D0>
DEBUG 2024-06-11 13:35:29,006 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:35:29,006 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:35:29,006 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:35:29,006 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:35:29,006 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:35:29,006 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:35:29,006 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0478A3D0>
DEBUG 2024-06-11 13:35:29,006 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:35:29,006 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:35:29,006 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:35:29,006 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,006 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:35:29,006 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:35:29,006 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,006 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:35:29,006 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:35:29,006 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,006 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 13:35:29,006 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,006 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:35:29,006 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:35:29,006 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:35:29,006 - on stmt: jump 374
DEBUG 2024-06-11 13:35:29,006 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:35:29,006 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0478A3D0>
DEBUG 2024-06-11 13:35:29,006 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 13:35:29,006 - find_def var='frac' stmt=$binop_sub504.3 = scale - frac
DEBUG 2024-06-11 13:35:29,006 - find_def_from_top label 500
DEBUG 2024-06-11 13:35:29,006 - idom 374 from label 500
DEBUG 2024-06-11 13:35:29,006 - find_def_from_bottom label 374
DEBUG 2024-06-11 13:35:29,006 - find_def_from_top label 374
DEBUG 2024-06-11 13:35:29,006 - idom 180 from label 374
DEBUG 2024-06-11 13:35:29,006 - find_def_from_bottom label 180
DEBUG 2024-06-11 13:35:29,006 - replaced with: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 13:35:29,006 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 13:35:29,006 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:35:29,006 - find_def var='frac' stmt=index_frac = frac * num_table
DEBUG 2024-06-11 13:35:29,006 - replaced with: index_frac = frac.2 * num_table
DEBUG 2024-06-11 13:35:29,006 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,006 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,006 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:35:29,006 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:35:29,006 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 13:35:29,006 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:35:29,006 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:35:29,006 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:35:29,013 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:35:29,013 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,013 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:35:29,013 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,013 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:35:29,013 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:35:29,013 - on stmt: jump 646
DEBUG 2024-06-11 13:35:29,013 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:35:29,013 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0478A3D0>
DEBUG 2024-06-11 13:35:29,013 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:35:29,013 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:35:29,013 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:35:29,013 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:35:29,013 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:35:29,013 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:35:29,013 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0478A3D0>
DEBUG 2024-06-11 13:35:29,013 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:35:29,013 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:35:29,013 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:35:29,013 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,013 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:35:29,013 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:35:29,013 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,013 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:35:29,013 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:35:29,013 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,015 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 13:35:29,015 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:35:29,015 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:35:29,015 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,015 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:35:29,015 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:35:29,015 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:35:29,015 - on stmt: jump 646
DEBUG 2024-06-11 13:35:29,015 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:35:29,015 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0478A3D0>
DEBUG 2024-06-11 13:35:29,015 - on stmt: jump 176
DEBUG 2024-06-11 13:35:29,015 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:35:29,015 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0478A3D0>
DEBUG 2024-06-11 13:35:29,015 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:35:29,015 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:35:29,015 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:35:29,015 - Fix SSA violator on var index_frac
DEBUG 2024-06-11 13:35:29,015 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:35:29,015 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047B4FD0>
DEBUG 2024-06-11 13:35:29,015 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:35:29,015 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:35:29,015 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:35:29,015 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:35:29,015 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:35:29,015 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:35:29,015 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:35:29,015 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,015 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:35:29,015 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,015 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,015 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:35:29,015 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,015 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,015 - first assign: index_frac
DEBUG 2024-06-11 13:35:29,015 - replaced with: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,015 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:35:29,015 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,015 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,015 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:35:29,015 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:35:29,015 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,015 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:35:29,015 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:35:29,015 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,015 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:35:29,015 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:35:29,015 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,015 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:35:29,015 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,015 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:35:29,015 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:35:29,015 - on stmt: jump 176
DEBUG 2024-06-11 13:35:29,015 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:35:29,015 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047B4FD0>
DEBUG 2024-06-11 13:35:29,015 - on stmt: jump 178
DEBUG 2024-06-11 13:35:29,015 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:35:29,015 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047B4FD0>
DEBUG 2024-06-11 13:35:29,015 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:35:29,015 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:35:29,015 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:35:29,015 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:35:29,015 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:35:29,015 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:35:29,021 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047B4FD0>
DEBUG 2024-06-11 13:35:29,021 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:35:29,021 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,021 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,021 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,022 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 13:35:29,022 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 13:35:29,022 - on stmt: index_frac = frac.1 * num_table
DEBUG 2024-06-11 13:35:29,022 - replaced with: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 13:35:29,022 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,022 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,022 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:35:29,022 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:35:29,022 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:35:29,022 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 13:35:29,022 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:35:29,022 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:35:29,022 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,022 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:35:29,022 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,022 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:35:29,022 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:35:29,022 - on stmt: jump 374
DEBUG 2024-06-11 13:35:29,023 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:35:29,023 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047B4FD0>
DEBUG 2024-06-11 13:35:29,023 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:35:29,023 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:35:29,023 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:35:29,023 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:35:29,023 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:35:29,023 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:35:29,023 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047B4FD0>
DEBUG 2024-06-11 13:35:29,023 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:35:29,023 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:35:29,023 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:35:29,023 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,023 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:35:29,023 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:35:29,023 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,023 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:35:29,023 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:35:29,023 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,023 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 13:35:29,023 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,023 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:35:29,023 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:35:29,023 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:35:29,023 - on stmt: jump 374
DEBUG 2024-06-11 13:35:29,023 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:35:29,023 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047B4FD0>
DEBUG 2024-06-11 13:35:29,023 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 13:35:29,023 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 13:35:29,023 - on stmt: index_frac = frac.2 * num_table
DEBUG 2024-06-11 13:35:29,023 - replaced with: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 13:35:29,023 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,023 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,023 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:35:29,023 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:35:29,023 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 13:35:29,023 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:35:29,023 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:35:29,023 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:35:29,023 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:35:29,023 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,023 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:35:29,023 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,023 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:35:29,023 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:35:29,023 - on stmt: jump 646
DEBUG 2024-06-11 13:35:29,023 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:35:29,023 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047B4FD0>
DEBUG 2024-06-11 13:35:29,023 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:35:29,023 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:35:29,023 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:35:29,023 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:35:29,023 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:35:29,023 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:35:29,023 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047B4FD0>
DEBUG 2024-06-11 13:35:29,023 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:35:29,023 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:35:29,023 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:35:29,023 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,023 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:35:29,023 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:35:29,023 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,023 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:35:29,023 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:35:29,023 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,023 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 13:35:29,029 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:35:29,029 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:35:29,029 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,029 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:35:29,029 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:35:29,030 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:35:29,030 - on stmt: jump 646
DEBUG 2024-06-11 13:35:29,030 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:35:29,030 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047B4FD0>
DEBUG 2024-06-11 13:35:29,030 - on stmt: jump 176
DEBUG 2024-06-11 13:35:29,030 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:35:29,030 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047B4FD0>
DEBUG 2024-06-11 13:35:29,030 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:35:29,030 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:35:29,030 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:35:29,030 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000020B047AAFD0>],
             180: [<numba.core.ir.Assign object at 0x0000020B047B59D0>],
             500: [<numba.core.ir.Assign object at 0x0000020B0476F110>]})
DEBUG 2024-06-11 13:35:29,030 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:35:29,031 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0476DD50>
DEBUG 2024-06-11 13:35:29,031 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:35:29,031 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:35:29,031 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:35:29,031 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:35:29,031 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:35:29,032 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:35:29,032 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:35:29,032 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,032 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:35:29,032 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,032 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,032 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:35:29,032 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,032 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,032 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:35:29,032 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,032 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,032 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:35:29,032 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:35:29,032 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,032 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:35:29,032 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:35:29,032 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,032 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:35:29,032 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:35:29,032 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,032 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:35:29,032 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,032 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:35:29,032 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:35:29,032 - on stmt: jump 176
DEBUG 2024-06-11 13:35:29,032 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:35:29,032 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0476DD50>
DEBUG 2024-06-11 13:35:29,032 - on stmt: jump 178
DEBUG 2024-06-11 13:35:29,032 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:35:29,032 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0476DD50>
DEBUG 2024-06-11 13:35:29,032 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:35:29,032 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:35:29,032 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:35:29,032 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:35:29,032 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:35:29,032 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:35:29,032 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0476DD50>
DEBUG 2024-06-11 13:35:29,032 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:35:29,032 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,032 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,032 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,032 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 13:35:29,032 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 13:35:29,032 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 13:35:29,032 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,032 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,032 - find_def var='index_frac' stmt=offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,032 - replaced with: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,032 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:35:29,032 - find_def var='index_frac' stmt=eta = index_frac - offset
DEBUG 2024-06-11 13:35:29,032 - replaced with: eta = index_frac.1 - offset
DEBUG 2024-06-11 13:35:29,032 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:35:29,032 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:35:29,032 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 13:35:29,032 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:35:29,032 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:35:29,032 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,032 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:35:29,032 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,032 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:35:29,032 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:35:29,032 - on stmt: jump 374
DEBUG 2024-06-11 13:35:29,032 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:35:29,038 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0476DD50>
DEBUG 2024-06-11 13:35:29,038 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:35:29,038 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:35:29,038 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:35:29,038 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:35:29,038 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:35:29,038 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:35:29,038 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0476DD50>
DEBUG 2024-06-11 13:35:29,038 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:35:29,038 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:35:29,038 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:35:29,038 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,038 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:35:29,038 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:35:29,038 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,039 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:35:29,039 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:35:29,039 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,039 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 13:35:29,039 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,040 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:35:29,040 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:35:29,040 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:35:29,040 - on stmt: jump 374
DEBUG 2024-06-11 13:35:29,040 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:35:29,040 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0476DD50>
DEBUG 2024-06-11 13:35:29,040 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 13:35:29,040 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 13:35:29,040 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 13:35:29,040 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,040 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,040 - find_def var='index_frac' stmt=offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,040 - replaced with: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,040 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:35:29,040 - find_def var='index_frac' stmt=eta = index_frac - offset
DEBUG 2024-06-11 13:35:29,040 - replaced with: eta = index_frac.2 - offset
DEBUG 2024-06-11 13:35:29,040 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:35:29,040 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 13:35:29,040 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:35:29,040 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:35:29,040 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:35:29,040 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:35:29,040 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,040 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:35:29,040 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,040 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:35:29,040 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:35:29,040 - on stmt: jump 646
DEBUG 2024-06-11 13:35:29,040 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:35:29,040 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0476DD50>
DEBUG 2024-06-11 13:35:29,040 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:35:29,040 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:35:29,040 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:35:29,040 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:35:29,040 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:35:29,040 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:35:29,040 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0476DD50>
DEBUG 2024-06-11 13:35:29,040 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:35:29,040 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:35:29,040 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:35:29,040 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,040 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:35:29,040 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:35:29,040 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,040 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:35:29,040 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:35:29,040 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,040 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 13:35:29,040 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:35:29,040 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:35:29,040 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,040 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:35:29,040 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:35:29,040 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:35:29,040 - on stmt: jump 646
DEBUG 2024-06-11 13:35:29,040 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:35:29,040 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0476DD50>
DEBUG 2024-06-11 13:35:29,040 - on stmt: jump 176
DEBUG 2024-06-11 13:35:29,040 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:35:29,040 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0476DD50>
DEBUG 2024-06-11 13:35:29,040 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:35:29,040 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:35:29,046 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:35:29,046 - Fix SSA violator on var offset
DEBUG 2024-06-11 13:35:29,046 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:35:29,046 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B0473FA10>
DEBUG 2024-06-11 13:35:29,047 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:35:29,047 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:35:29,047 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:35:29,047 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:35:29,047 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:35:29,047 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:35:29,047 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:35:29,047 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,047 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:35:29,047 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,047 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,048 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:35:29,048 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,048 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,048 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:35:29,048 - first assign: offset
DEBUG 2024-06-11 13:35:29,048 - replaced with: offset = const(int, 0)
DEBUG 2024-06-11 13:35:29,048 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,048 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,048 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:35:29,048 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:35:29,048 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,048 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:35:29,048 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:35:29,048 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,048 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:35:29,048 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:35:29,048 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,048 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:35:29,048 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,048 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:35:29,048 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:35:29,048 - on stmt: jump 176
DEBUG 2024-06-11 13:35:29,048 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:35:29,048 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B0473FA10>
DEBUG 2024-06-11 13:35:29,048 - on stmt: jump 178
DEBUG 2024-06-11 13:35:29,048 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:35:29,048 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B0473FA10>
DEBUG 2024-06-11 13:35:29,048 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:35:29,048 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:35:29,048 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:35:29,048 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:35:29,048 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:35:29,048 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:35:29,048 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B0473FA10>
DEBUG 2024-06-11 13:35:29,048 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:35:29,048 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,048 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,048 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,048 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 13:35:29,048 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 13:35:29,048 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 13:35:29,048 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,048 - on stmt: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,048 - replaced with: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,048 - on stmt: eta = index_frac.1 - offset
DEBUG 2024-06-11 13:35:29,048 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:35:29,048 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:35:29,048 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 13:35:29,048 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:35:29,048 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:35:29,048 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,048 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:35:29,048 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,048 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:35:29,048 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:35:29,048 - on stmt: jump 374
DEBUG 2024-06-11 13:35:29,048 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:35:29,048 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B0473FA10>
DEBUG 2024-06-11 13:35:29,048 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:35:29,048 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:35:29,048 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:35:29,048 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:35:29,048 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:35:29,048 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:35:29,048 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B0473FA10>
DEBUG 2024-06-11 13:35:29,048 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:35:29,048 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:35:29,048 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:35:29,048 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,048 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:35:29,048 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:35:29,048 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,054 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:35:29,054 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:35:29,054 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,054 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 13:35:29,055 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,055 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:35:29,055 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:35:29,055 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:35:29,055 - on stmt: jump 374
DEBUG 2024-06-11 13:35:29,055 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:35:29,055 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B0473FA10>
DEBUG 2024-06-11 13:35:29,055 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 13:35:29,055 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 13:35:29,055 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 13:35:29,055 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,055 - on stmt: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,055 - replaced with: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,056 - on stmt: eta = index_frac.2 - offset
DEBUG 2024-06-11 13:35:29,056 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:35:29,056 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 13:35:29,056 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:35:29,056 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:35:29,056 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:35:29,057 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:35:29,057 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,057 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:35:29,057 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,057 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:35:29,057 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:35:29,057 - on stmt: jump 646
DEBUG 2024-06-11 13:35:29,057 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:35:29,057 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B0473FA10>
DEBUG 2024-06-11 13:35:29,057 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:35:29,057 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:35:29,057 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:35:29,057 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:35:29,057 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:35:29,057 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:35:29,057 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B0473FA10>
DEBUG 2024-06-11 13:35:29,057 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:35:29,057 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:35:29,057 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:35:29,057 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,057 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:35:29,057 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:35:29,057 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,057 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:35:29,057 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:35:29,057 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,057 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 13:35:29,057 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:35:29,057 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:35:29,057 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,057 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:35:29,057 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:35:29,057 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:35:29,057 - on stmt: jump 646
DEBUG 2024-06-11 13:35:29,057 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:35:29,057 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B0473FA10>
DEBUG 2024-06-11 13:35:29,057 - on stmt: jump 176
DEBUG 2024-06-11 13:35:29,057 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:35:29,057 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B0473FA10>
DEBUG 2024-06-11 13:35:29,057 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:35:29,057 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:35:29,057 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:35:29,057 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000020B0473FF10>],
             180: [<numba.core.ir.Assign object at 0x0000020B0476C890>],
             500: [<numba.core.ir.Assign object at 0x0000020B04780A50>]})
DEBUG 2024-06-11 13:35:29,057 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:35:29,057 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B047B6A50>
DEBUG 2024-06-11 13:35:29,057 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:35:29,057 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:35:29,057 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:35:29,057 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:35:29,057 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:35:29,057 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:35:29,057 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:35:29,057 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,057 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:35:29,057 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,057 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,057 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:35:29,057 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,057 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,057 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:35:29,057 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,057 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,057 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:35:29,057 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:35:29,057 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,057 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:35:29,057 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:35:29,057 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,063 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:35:29,063 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:35:29,063 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,063 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:35:29,063 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,063 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:35:29,063 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:35:29,063 - on stmt: jump 176
DEBUG 2024-06-11 13:35:29,063 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:35:29,063 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B047B6A50>
DEBUG 2024-06-11 13:35:29,063 - on stmt: jump 178
DEBUG 2024-06-11 13:35:29,063 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:35:29,063 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B047B6A50>
DEBUG 2024-06-11 13:35:29,063 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:35:29,064 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:35:29,064 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:35:29,064 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:35:29,064 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:35:29,064 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:35:29,064 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B047B6A50>
DEBUG 2024-06-11 13:35:29,065 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:35:29,065 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,065 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,065 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,065 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 13:35:29,065 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 13:35:29,065 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 13:35:29,065 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,065 - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,065 - on stmt: eta = index_frac.1 - offset
DEBUG 2024-06-11 13:35:29,065 - find_def var='offset' stmt=eta = index_frac.1 - offset
DEBUG 2024-06-11 13:35:29,065 - replaced with: eta = index_frac.1 - offset.1
DEBUG 2024-06-11 13:35:29,065 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:35:29,065 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:35:29,065 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 13:35:29,065 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:35:29,065 - find_def var='offset' stmt=$binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:35:29,065 - replaced with: $binop_sub318.31 = nwin - offset.1
DEBUG 2024-06-11 13:35:29,065 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:35:29,065 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,065 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:35:29,065 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,065 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:35:29,065 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:35:29,065 - on stmt: jump 374
DEBUG 2024-06-11 13:35:29,065 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:35:29,065 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B047B6A50>
DEBUG 2024-06-11 13:35:29,065 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:35:29,065 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:35:29,065 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:35:29,065 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:35:29,065 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:35:29,065 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:35:29,065 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B047B6A50>
DEBUG 2024-06-11 13:35:29,065 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:35:29,065 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:35:29,065 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:35:29,065 - find_def var='offset' stmt=$binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:35:29,065 - find_def_from_top label 376
DEBUG 2024-06-11 13:35:29,065 - idom 374 from label 376
DEBUG 2024-06-11 13:35:29,065 - find_def_from_bottom label 374
DEBUG 2024-06-11 13:35:29,065 - find_def_from_top label 374
DEBUG 2024-06-11 13:35:29,065 - idom 180 from label 374
DEBUG 2024-06-11 13:35:29,065 - find_def_from_bottom label 180
DEBUG 2024-06-11 13:35:29,065 - replaced with: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG 2024-06-11 13:35:29,065 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,065 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:35:29,065 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:35:29,065 - find_def var='offset' stmt=$binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:35:29,065 - find_def_from_top label 376
DEBUG 2024-06-11 13:35:29,065 - idom 374 from label 376
DEBUG 2024-06-11 13:35:29,065 - find_def_from_bottom label 374
DEBUG 2024-06-11 13:35:29,065 - find_def_from_top label 374
DEBUG 2024-06-11 13:35:29,065 - idom 180 from label 374
DEBUG 2024-06-11 13:35:29,065 - find_def_from_bottom label 180
DEBUG 2024-06-11 13:35:29,065 - replaced with: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG 2024-06-11 13:35:29,065 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,065 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:35:29,065 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:35:29,065 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,065 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 13:35:29,065 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,065 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:35:29,065 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:35:29,071 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:35:29,071 - on stmt: jump 374
DEBUG 2024-06-11 13:35:29,071 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:35:29,072 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B047B6A50>
DEBUG 2024-06-11 13:35:29,072 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 13:35:29,072 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 13:35:29,072 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 13:35:29,072 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,072 - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,072 - on stmt: eta = index_frac.2 - offset
DEBUG 2024-06-11 13:35:29,072 - find_def var='offset' stmt=eta = index_frac.2 - offset
DEBUG 2024-06-11 13:35:29,072 - replaced with: eta = index_frac.2 - offset.2
DEBUG 2024-06-11 13:35:29,073 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:35:29,073 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 13:35:29,073 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:35:29,073 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:35:29,073 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:35:29,073 - find_def var='offset' stmt=$binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:35:29,073 - replaced with: $binop_sub590.23 = nwin - offset.2
DEBUG 2024-06-11 13:35:29,073 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:35:29,073 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,073 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:35:29,073 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,073 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:35:29,073 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:35:29,073 - on stmt: jump 646
DEBUG 2024-06-11 13:35:29,073 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:35:29,073 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B047B6A50>
DEBUG 2024-06-11 13:35:29,073 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:35:29,073 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:35:29,073 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:35:29,073 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:35:29,073 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:35:29,073 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:35:29,073 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B047B6A50>
DEBUG 2024-06-11 13:35:29,073 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:35:29,073 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:35:29,073 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:35:29,073 - find_def var='offset' stmt=$binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:35:29,073 - find_def_from_top label 648
DEBUG 2024-06-11 13:35:29,073 - idom 646 from label 648
DEBUG 2024-06-11 13:35:29,073 - find_def_from_bottom label 646
DEBUG 2024-06-11 13:35:29,073 - find_def_from_top label 646
DEBUG 2024-06-11 13:35:29,073 - idom 500 from label 646
DEBUG 2024-06-11 13:35:29,073 - find_def_from_bottom label 500
DEBUG 2024-06-11 13:35:29,073 - replaced with: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG 2024-06-11 13:35:29,073 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,073 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:35:29,073 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:35:29,073 - find_def var='offset' stmt=$binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:35:29,073 - find_def_from_top label 648
DEBUG 2024-06-11 13:35:29,073 - idom 646 from label 648
DEBUG 2024-06-11 13:35:29,073 - find_def_from_bottom label 646
DEBUG 2024-06-11 13:35:29,073 - find_def_from_top label 646
DEBUG 2024-06-11 13:35:29,073 - idom 500 from label 646
DEBUG 2024-06-11 13:35:29,073 - find_def_from_bottom label 500
DEBUG 2024-06-11 13:35:29,073 - replaced with: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG 2024-06-11 13:35:29,073 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,073 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:35:29,073 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:35:29,073 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,073 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 13:35:29,073 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:35:29,073 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:35:29,073 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,073 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:35:29,073 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:35:29,073 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:35:29,073 - on stmt: jump 646
DEBUG 2024-06-11 13:35:29,073 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:35:29,073 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B047B6A50>
DEBUG 2024-06-11 13:35:29,073 - on stmt: jump 176
DEBUG 2024-06-11 13:35:29,073 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:35:29,073 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B047B6A50>
DEBUG 2024-06-11 13:35:29,073 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:35:29,073 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:35:29,073 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:35:29,073 - Fix SSA violator on var eta
DEBUG 2024-06-11 13:35:29,073 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:35:29,073 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047A9F50>
DEBUG 2024-06-11 13:35:29,073 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:35:29,073 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:35:29,073 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:35:29,073 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:35:29,073 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:35:29,073 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:35:29,073 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:35:29,073 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,079 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:35:29,080 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,080 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,080 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:35:29,080 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,080 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,080 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:35:29,080 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,080 - first assign: eta
DEBUG 2024-06-11 13:35:29,080 - replaced with: eta = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,080 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,080 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:35:29,080 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:35:29,080 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,080 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:35:29,080 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:35:29,081 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,081 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:35:29,081 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:35:29,081 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,081 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:35:29,081 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,082 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:35:29,082 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:35:29,082 - on stmt: jump 176
DEBUG 2024-06-11 13:35:29,082 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:35:29,082 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047A9F50>
DEBUG 2024-06-11 13:35:29,082 - on stmt: jump 178
DEBUG 2024-06-11 13:35:29,082 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:35:29,082 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047A9F50>
DEBUG 2024-06-11 13:35:29,082 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:35:29,082 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:35:29,082 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:35:29,082 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:35:29,082 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:35:29,082 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:35:29,082 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047A9F50>
DEBUG 2024-06-11 13:35:29,082 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:35:29,082 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,082 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,082 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,082 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 13:35:29,082 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 13:35:29,082 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 13:35:29,082 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,082 - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,082 - on stmt: eta = index_frac.1 - offset.1
DEBUG 2024-06-11 13:35:29,082 - replaced with: eta.1 = index_frac.1 - offset.1
DEBUG 2024-06-11 13:35:29,082 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:35:29,082 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:35:29,082 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 13:35:29,082 - on stmt: $binop_sub318.31 = nwin - offset.1
DEBUG 2024-06-11 13:35:29,082 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:35:29,082 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,082 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:35:29,082 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,082 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:35:29,082 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:35:29,082 - on stmt: jump 374
DEBUG 2024-06-11 13:35:29,082 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:35:29,082 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047A9F50>
DEBUG 2024-06-11 13:35:29,082 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:35:29,082 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:35:29,082 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:35:29,082 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:35:29,082 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:35:29,082 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:35:29,082 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047A9F50>
DEBUG 2024-06-11 13:35:29,082 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:35:29,082 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:35:29,082 - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG 2024-06-11 13:35:29,082 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,082 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:35:29,082 - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG 2024-06-11 13:35:29,082 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,082 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:35:29,082 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:35:29,082 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,082 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 13:35:29,082 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,082 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:35:29,082 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:35:29,082 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:35:29,082 - on stmt: jump 374
DEBUG 2024-06-11 13:35:29,082 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:35:29,082 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047A9F50>
DEBUG 2024-06-11 13:35:29,082 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 13:35:29,082 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 13:35:29,082 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 13:35:29,082 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,082 - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,088 - on stmt: eta = index_frac.2 - offset.2
DEBUG 2024-06-11 13:35:29,088 - replaced with: eta.2 = index_frac.2 - offset.2
DEBUG 2024-06-11 13:35:29,088 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:35:29,088 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 13:35:29,088 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:35:29,088 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:35:29,088 - on stmt: $binop_sub590.23 = nwin - offset.2
DEBUG 2024-06-11 13:35:29,088 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:35:29,088 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,088 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:35:29,088 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,088 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:35:29,088 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:35:29,089 - on stmt: jump 646
DEBUG 2024-06-11 13:35:29,089 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:35:29,089 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047A9F50>
DEBUG 2024-06-11 13:35:29,089 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:35:29,089 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:35:29,090 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:35:29,090 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:35:29,090 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:35:29,090 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:35:29,090 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047A9F50>
DEBUG 2024-06-11 13:35:29,090 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:35:29,090 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:35:29,090 - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG 2024-06-11 13:35:29,090 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,090 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:35:29,090 - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG 2024-06-11 13:35:29,090 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,090 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:35:29,090 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:35:29,090 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,090 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 13:35:29,090 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:35:29,090 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:35:29,090 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,090 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:35:29,090 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:35:29,090 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:35:29,090 - on stmt: jump 646
DEBUG 2024-06-11 13:35:29,090 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:35:29,090 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047A9F50>
DEBUG 2024-06-11 13:35:29,090 - on stmt: jump 176
DEBUG 2024-06-11 13:35:29,090 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:35:29,090 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047A9F50>
DEBUG 2024-06-11 13:35:29,090 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:35:29,090 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:35:29,090 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:35:29,090 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000020B047ABE90>],
             180: [<numba.core.ir.Assign object at 0x0000020B04780690>],
             500: [<numba.core.ir.Assign object at 0x0000020B04780610>]})
DEBUG 2024-06-11 13:35:29,090 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:35:29,090 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0476F3D0>
DEBUG 2024-06-11 13:35:29,090 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:35:29,090 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:35:29,090 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:35:29,090 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:35:29,090 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:35:29,090 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:35:29,090 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:35:29,090 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,090 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:35:29,090 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,090 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,090 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:35:29,090 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,090 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,090 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:35:29,090 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,090 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,090 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:35:29,090 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:35:29,090 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,090 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:35:29,090 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:35:29,090 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,090 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:35:29,090 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:35:29,090 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,090 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:35:29,090 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,090 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:35:29,090 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:35:29,090 - on stmt: jump 176
DEBUG 2024-06-11 13:35:29,090 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:35:29,090 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0476F3D0>
DEBUG 2024-06-11 13:35:29,090 - on stmt: jump 178
DEBUG 2024-06-11 13:35:29,090 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:35:29,096 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0476F3D0>
DEBUG 2024-06-11 13:35:29,096 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:35:29,096 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:35:29,097 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:35:29,097 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:35:29,097 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:35:29,097 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:35:29,097 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0476F3D0>
DEBUG 2024-06-11 13:35:29,097 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:35:29,097 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,097 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,097 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,097 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 13:35:29,097 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 13:35:29,097 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 13:35:29,097 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,098 - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,098 - on stmt: eta.1 = index_frac.1 - offset.1
DEBUG 2024-06-11 13:35:29,098 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:35:29,098 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:35:29,098 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 13:35:29,098 - on stmt: $binop_sub318.31 = nwin - offset.1
DEBUG 2024-06-11 13:35:29,098 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:35:29,098 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,098 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:35:29,098 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,098 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:35:29,098 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:35:29,098 - on stmt: jump 374
DEBUG 2024-06-11 13:35:29,098 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:35:29,098 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0476F3D0>
DEBUG 2024-06-11 13:35:29,098 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:35:29,098 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:35:29,098 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:35:29,098 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:35:29,098 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:35:29,098 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:35:29,098 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0476F3D0>
DEBUG 2024-06-11 13:35:29,098 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:35:29,098 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:35:29,098 - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG 2024-06-11 13:35:29,098 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,098 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:35:29,098 - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG 2024-06-11 13:35:29,098 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,098 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:35:29,098 - find_def var='eta' stmt=$binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:35:29,098 - find_def_from_top label 376
DEBUG 2024-06-11 13:35:29,098 - idom 374 from label 376
DEBUG 2024-06-11 13:35:29,098 - find_def_from_bottom label 374
DEBUG 2024-06-11 13:35:29,098 - find_def_from_top label 374
DEBUG 2024-06-11 13:35:29,098 - idom 180 from label 374
DEBUG 2024-06-11 13:35:29,098 - find_def_from_bottom label 180
DEBUG 2024-06-11 13:35:29,098 - replaced with: $binop_mul432.18 = eta.1 * $422binary_subscr.17
DEBUG 2024-06-11 13:35:29,098 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:35:29,098 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,098 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 13:35:29,098 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,098 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:35:29,098 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:35:29,098 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:35:29,098 - on stmt: jump 374
DEBUG 2024-06-11 13:35:29,098 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:35:29,098 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0476F3D0>
DEBUG 2024-06-11 13:35:29,098 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 13:35:29,098 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 13:35:29,098 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 13:35:29,098 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,098 - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,098 - on stmt: eta.2 = index_frac.2 - offset.2
DEBUG 2024-06-11 13:35:29,098 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:35:29,098 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 13:35:29,098 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:35:29,098 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:35:29,098 - on stmt: $binop_sub590.23 = nwin - offset.2
DEBUG 2024-06-11 13:35:29,098 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:35:29,098 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,098 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:35:29,098 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,098 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:35:29,098 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:35:29,098 - on stmt: jump 646
DEBUG 2024-06-11 13:35:29,098 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:35:29,098 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0476F3D0>
DEBUG 2024-06-11 13:35:29,098 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:35:29,104 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:35:29,104 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:35:29,104 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:35:29,104 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:35:29,105 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:35:29,105 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0476F3D0>
DEBUG 2024-06-11 13:35:29,105 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:35:29,105 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:35:29,105 - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG 2024-06-11 13:35:29,105 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,105 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:35:29,105 - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG 2024-06-11 13:35:29,105 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,105 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:35:29,105 - find_def var='eta' stmt=$binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:35:29,106 - find_def_from_top label 648
DEBUG 2024-06-11 13:35:29,106 - idom 646 from label 648
DEBUG 2024-06-11 13:35:29,106 - find_def_from_bottom label 646
DEBUG 2024-06-11 13:35:29,106 - find_def_from_top label 646
DEBUG 2024-06-11 13:35:29,106 - idom 500 from label 646
DEBUG 2024-06-11 13:35:29,106 - find_def_from_bottom label 500
DEBUG 2024-06-11 13:35:29,107 - replaced with: $binop_mul704.18 = eta.2 * $694binary_subscr.17
DEBUG 2024-06-11 13:35:29,107 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:35:29,107 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,107 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 13:35:29,107 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:35:29,107 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:35:29,107 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,107 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:35:29,107 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:35:29,107 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:35:29,107 - on stmt: jump 646
DEBUG 2024-06-11 13:35:29,107 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:35:29,107 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0476F3D0>
DEBUG 2024-06-11 13:35:29,107 - on stmt: jump 176
DEBUG 2024-06-11 13:35:29,107 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:35:29,107 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0476F3D0>
DEBUG 2024-06-11 13:35:29,107 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:35:29,107 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:35:29,107 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:35:29,107 - Fix SSA violator on var weight
DEBUG 2024-06-11 13:35:29,107 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:35:29,107 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047B4750>
DEBUG 2024-06-11 13:35:29,107 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:35:29,107 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:35:29,107 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:35:29,107 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:35:29,107 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:35:29,107 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:35:29,107 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:35:29,107 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,107 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:35:29,107 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,107 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,107 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:35:29,107 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,107 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,107 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:35:29,107 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,107 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,107 - first assign: weight
DEBUG 2024-06-11 13:35:29,107 - replaced with: weight = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,107 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:35:29,107 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:35:29,107 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,107 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:35:29,107 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:35:29,107 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,107 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:35:29,107 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:35:29,107 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,107 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:35:29,107 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,107 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:35:29,107 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:35:29,107 - on stmt: jump 176
DEBUG 2024-06-11 13:35:29,107 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:35:29,107 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047B4750>
DEBUG 2024-06-11 13:35:29,107 - on stmt: jump 178
DEBUG 2024-06-11 13:35:29,107 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:35:29,107 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047B4750>
DEBUG 2024-06-11 13:35:29,107 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:35:29,107 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:35:29,107 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:35:29,107 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:35:29,107 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:35:29,107 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:35:29,107 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047B4750>
DEBUG 2024-06-11 13:35:29,113 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:35:29,113 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,113 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,113 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,113 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 13:35:29,113 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 13:35:29,113 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 13:35:29,113 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,113 - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,113 - on stmt: eta.1 = index_frac.1 - offset.1
DEBUG 2024-06-11 13:35:29,113 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:35:29,113 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:35:29,113 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 13:35:29,113 - on stmt: $binop_sub318.31 = nwin - offset.1
DEBUG 2024-06-11 13:35:29,113 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:35:29,114 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,114 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:35:29,114 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,114 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:35:29,115 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:35:29,115 - on stmt: jump 374
DEBUG 2024-06-11 13:35:29,115 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:35:29,115 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047B4750>
DEBUG 2024-06-11 13:35:29,115 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:35:29,115 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:35:29,115 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:35:29,115 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:35:29,115 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:35:29,115 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:35:29,115 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047B4750>
DEBUG 2024-06-11 13:35:29,115 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:35:29,115 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:35:29,115 - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG 2024-06-11 13:35:29,115 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,115 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:35:29,115 - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG 2024-06-11 13:35:29,115 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,115 - on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
DEBUG 2024-06-11 13:35:29,115 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:35:29,115 - replaced with: weight.1 = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:35:29,115 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,115 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 13:35:29,115 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,115 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:35:29,115 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:35:29,115 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:35:29,115 - on stmt: jump 374
DEBUG 2024-06-11 13:35:29,115 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:35:29,115 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047B4750>
DEBUG 2024-06-11 13:35:29,115 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 13:35:29,115 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 13:35:29,115 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 13:35:29,115 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,115 - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,115 - on stmt: eta.2 = index_frac.2 - offset.2
DEBUG 2024-06-11 13:35:29,115 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:35:29,115 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 13:35:29,115 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:35:29,115 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:35:29,115 - on stmt: $binop_sub590.23 = nwin - offset.2
DEBUG 2024-06-11 13:35:29,115 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:35:29,115 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,115 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:35:29,115 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,115 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:35:29,115 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:35:29,115 - on stmt: jump 646
DEBUG 2024-06-11 13:35:29,115 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:35:29,115 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047B4750>
DEBUG 2024-06-11 13:35:29,115 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:35:29,115 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:35:29,115 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:35:29,115 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:35:29,115 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:35:29,115 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:35:29,115 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047B4750>
DEBUG 2024-06-11 13:35:29,115 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:35:29,115 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:35:29,115 - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG 2024-06-11 13:35:29,115 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,115 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:35:29,115 - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG 2024-06-11 13:35:29,115 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,115 - on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
DEBUG 2024-06-11 13:35:29,115 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:35:29,115 - replaced with: weight.2 = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:35:29,115 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,115 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 13:35:29,115 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:35:29,115 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:35:29,121 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,121 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:35:29,121 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:35:29,121 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:35:29,122 - on stmt: jump 646
DEBUG 2024-06-11 13:35:29,122 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:35:29,122 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047B4750>
DEBUG 2024-06-11 13:35:29,122 - on stmt: jump 176
DEBUG 2024-06-11 13:35:29,122 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:35:29,122 - Running <numba.core.ssa._FreshVarHandler object at 0x0000020B047B4750>
DEBUG 2024-06-11 13:35:29,122 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:35:29,122 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:35:29,122 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:35:29,122 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000020B0473ED90>],
             376: [<numba.core.ir.Assign object at 0x0000020B04781B50>],
             648: [<numba.core.ir.Assign object at 0x0000020B04781A90>]})
DEBUG 2024-06-11 13:35:29,123 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:35:29,123 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0473FA10>
DEBUG 2024-06-11 13:35:29,123 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:35:29,123 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:35:29,123 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:35:29,123 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:35:29,123 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:35:29,123 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:35:29,123 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:35:29,123 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,123 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:35:29,123 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,123 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,123 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:35:29,123 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,123 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,123 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:35:29,123 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,123 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:35:29,123 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:35:29,123 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:35:29,123 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,123 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:35:29,123 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:35:29,123 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,123 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:35:29,123 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:35:29,123 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,123 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:35:29,123 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,123 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:35:29,123 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:35:29,123 - on stmt: jump 176
DEBUG 2024-06-11 13:35:29,123 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:35:29,123 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0473FA10>
DEBUG 2024-06-11 13:35:29,123 - on stmt: jump 178
DEBUG 2024-06-11 13:35:29,123 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:35:29,123 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0473FA10>
DEBUG 2024-06-11 13:35:29,123 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:35:29,123 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:35:29,123 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:35:29,123 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:35:29,123 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:35:29,123 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:35:29,123 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0473FA10>
DEBUG 2024-06-11 13:35:29,123 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:35:29,123 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,123 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,123 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,123 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 13:35:29,123 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 13:35:29,123 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 13:35:29,123 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,123 - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,123 - on stmt: eta.1 = index_frac.1 - offset.1
DEBUG 2024-06-11 13:35:29,123 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:35:29,123 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:35:29,123 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 13:35:29,123 - on stmt: $binop_sub318.31 = nwin - offset.1
DEBUG 2024-06-11 13:35:29,123 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:35:29,123 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,123 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:35:29,123 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,123 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:35:29,123 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:35:29,123 - on stmt: jump 374
DEBUG 2024-06-11 13:35:29,123 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:35:29,123 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0473FA10>
DEBUG 2024-06-11 13:35:29,123 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:35:29,123 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:35:29,123 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:35:29,123 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:35:29,123 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:35:29,130 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:35:29,130 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0473FA10>
DEBUG 2024-06-11 13:35:29,130 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:35:29,130 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:35:29,130 - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG 2024-06-11 13:35:29,130 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,130 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:35:29,130 - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG 2024-06-11 13:35:29,130 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,130 - on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
DEBUG 2024-06-11 13:35:29,130 - on stmt: weight.1 = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:35:29,130 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,130 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 13:35:29,130 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,131 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:35:29,131 - find_def var='weight' stmt=$binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:35:29,131 - replaced with: $binop_mul482.29 = weight.1 * $472binary_subscr.28
DEBUG 2024-06-11 13:35:29,131 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:35:29,131 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:35:29,132 - on stmt: jump 374
DEBUG 2024-06-11 13:35:29,132 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:35:29,132 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0473FA10>
DEBUG 2024-06-11 13:35:29,132 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 13:35:29,132 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 13:35:29,132 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 13:35:29,132 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:35:29,132 - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,132 - on stmt: eta.2 = index_frac.2 - offset.2
DEBUG 2024-06-11 13:35:29,132 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:35:29,132 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 13:35:29,132 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:35:29,132 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:35:29,132 - on stmt: $binop_sub590.23 = nwin - offset.2
DEBUG 2024-06-11 13:35:29,132 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:35:29,132 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,132 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:35:29,132 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:35:29,132 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:35:29,132 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:35:29,132 - on stmt: jump 646
DEBUG 2024-06-11 13:35:29,132 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:35:29,132 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0473FA10>
DEBUG 2024-06-11 13:35:29,132 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:35:29,132 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:35:29,132 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:35:29,132 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:35:29,132 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:35:29,132 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:35:29,132 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0473FA10>
DEBUG 2024-06-11 13:35:29,132 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:35:29,132 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:35:29,132 - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG 2024-06-11 13:35:29,132 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,132 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:35:29,132 - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG 2024-06-11 13:35:29,132 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,132 - on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
DEBUG 2024-06-11 13:35:29,132 - on stmt: weight.2 = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:35:29,132 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,132 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 13:35:29,132 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:35:29,132 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:35:29,132 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:35:29,132 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:35:29,132 - find_def var='weight' stmt=$binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:35:29,132 - replaced with: $binop_mul760.31 = weight.2 * $750binary_subscr.30
DEBUG 2024-06-11 13:35:29,132 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:35:29,132 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:35:29,132 - on stmt: jump 646
DEBUG 2024-06-11 13:35:29,132 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:35:29,132 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0473FA10>
DEBUG 2024-06-11 13:35:29,132 - on stmt: jump 176
DEBUG 2024-06-11 13:35:29,132 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:35:29,132 - Running <numba.core.ssa._FixSSAVars object at 0x0000020B0473FA10>
DEBUG 2024-06-11 13:35:29,132 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:35:29,132 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:35:29,132 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:35:29,855 - bytecode dump:
>          0	NOP(arg=None, lineno=425)
           2	RESUME(arg=0, lineno=425)
           4	LOAD_FAST(arg=0, lineno=428)
           6	LOAD_CONST(arg=1, lineno=428)
           8	BINARY_SUBSCR(arg=None, lineno=428)
          18	LOAD_FAST(arg=0, lineno=428)
          20	LOAD_CONST(arg=2, lineno=428)
          22	BINARY_SUBSCR(arg=None, lineno=428)
          32	BINARY_OP(arg=0, lineno=428)
          36	LOAD_CONST(arg=3, lineno=428)
          38	LOAD_FAST(arg=0, lineno=428)
          40	LOAD_CONST(arg=4, lineno=428)
          42	BINARY_SUBSCR(arg=None, lineno=428)
          52	BINARY_OP(arg=5, lineno=428)
          56	BINARY_OP(arg=10, lineno=428)
          60	STORE_FAST(arg=1, lineno=428)
          62	LOAD_FAST(arg=0, lineno=429)
          64	LOAD_CONST(arg=1, lineno=429)
          66	BINARY_SUBSCR(arg=None, lineno=429)
          76	LOAD_FAST(arg=0, lineno=429)
          78	LOAD_CONST(arg=2, lineno=429)
          80	BINARY_SUBSCR(arg=None, lineno=429)
          90	BINARY_OP(arg=10, lineno=429)
          94	LOAD_CONST(arg=3, lineno=429)
          96	BINARY_OP(arg=11, lineno=429)
         100	STORE_FAST(arg=2, lineno=429)
         102	LOAD_GLOBAL(arg=1, lineno=431)
         114	LOAD_ATTR(arg=1, lineno=431)
         124	LOAD_FAST(arg=2, lineno=431)
         126	PRECALL(arg=1, lineno=431)
         130	CALL(arg=1, lineno=431)
         140	LOAD_GLOBAL(arg=1, lineno=431)
         152	LOAD_ATTR(arg=1, lineno=431)
         162	LOAD_FAST(arg=1, lineno=431)
         164	PRECALL(arg=1, lineno=431)
         168	CALL(arg=1, lineno=431)
         178	COMPARE_OP(arg=5, lineno=431)
         184	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=431)
         186	LOAD_CONST(arg=4, lineno=434)
         188	RETURN_VALUE(arg=None, lineno=434)
>        190	LOAD_FAST(arg=2, lineno=436)
         192	UNARY_NEGATIVE(arg=None, lineno=436)
         194	LOAD_FAST(arg=1, lineno=436)
         196	BINARY_OP(arg=11, lineno=436)
         200	RETURN_VALUE(arg=None, lineno=436)
DEBUG 2024-06-11 13:35:29,856 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 13:35:29,856 - stack: []
DEBUG 2024-06-11 13:35:29,856 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=0, inst=NOP(arg=None, lineno=425)
DEBUG 2024-06-11 13:35:29,856 - stack []
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=2, inst=RESUME(arg=0, lineno=425)
DEBUG 2024-06-11 13:35:29,856 - stack []
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=428)
DEBUG 2024-06-11 13:35:29,856 - stack []
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=428)
DEBUG 2024-06-11 13:35:29,856 - stack ['$x4.0']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=428)
DEBUG 2024-06-11 13:35:29,856 - stack ['$x4.0', '$const6.1']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=428)
DEBUG 2024-06-11 13:35:29,856 - stack ['$8binary_subscr.2']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=428)
DEBUG 2024-06-11 13:35:29,856 - stack ['$8binary_subscr.2', '$x18.3']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=428)
DEBUG 2024-06-11 13:35:29,856 - stack ['$8binary_subscr.2', '$x18.3', '$const20.4']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=32, inst=BINARY_OP(arg=0, lineno=428)
DEBUG 2024-06-11 13:35:29,856 - stack ['$8binary_subscr.2', '$22binary_subscr.5']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=36, inst=LOAD_CONST(arg=3, lineno=428)
DEBUG 2024-06-11 13:35:29,856 - stack ['$binop_add32.6']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=428)
DEBUG 2024-06-11 13:35:29,856 - stack ['$binop_add32.6', '$const36.7']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=428)
DEBUG 2024-06-11 13:35:29,856 - stack ['$binop_add32.6', '$const36.7', '$x38.8']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=428)
DEBUG 2024-06-11 13:35:29,856 - stack ['$binop_add32.6', '$const36.7', '$x38.8', '$const40.9']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=52, inst=BINARY_OP(arg=5, lineno=428)
DEBUG 2024-06-11 13:35:29,856 - stack ['$binop_add32.6', '$const36.7', '$42binary_subscr.10']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=56, inst=BINARY_OP(arg=10, lineno=428)
DEBUG 2024-06-11 13:35:29,856 - stack ['$binop_add32.6', '$binop_mul52.11']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=60, inst=STORE_FAST(arg=1, lineno=428)
DEBUG 2024-06-11 13:35:29,856 - stack ['$binop_sub56.12']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=62, inst=LOAD_FAST(arg=0, lineno=429)
DEBUG 2024-06-11 13:35:29,856 - stack []
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=429)
DEBUG 2024-06-11 13:35:29,856 - stack ['$x62.13']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=429)
DEBUG 2024-06-11 13:35:29,856 - stack ['$x62.13', '$const64.14']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=429)
DEBUG 2024-06-11 13:35:29,856 - stack ['$66binary_subscr.15']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=78, inst=LOAD_CONST(arg=2, lineno=429)
DEBUG 2024-06-11 13:35:29,856 - stack ['$66binary_subscr.15', '$x76.16']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=80, inst=BINARY_SUBSCR(arg=None, lineno=429)
DEBUG 2024-06-11 13:35:29,856 - stack ['$66binary_subscr.15', '$x76.16', '$const78.17']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=90, inst=BINARY_OP(arg=10, lineno=429)
DEBUG 2024-06-11 13:35:29,856 - stack ['$66binary_subscr.15', '$80binary_subscr.18']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=94, inst=LOAD_CONST(arg=3, lineno=429)
DEBUG 2024-06-11 13:35:29,856 - stack ['$binop_sub90.19']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=96, inst=BINARY_OP(arg=11, lineno=429)
DEBUG 2024-06-11 13:35:29,856 - stack ['$binop_sub90.19', '$const94.20']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=429)
DEBUG 2024-06-11 13:35:29,856 - stack ['$binop_truediv96.21']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=102, inst=LOAD_GLOBAL(arg=1, lineno=431)
DEBUG 2024-06-11 13:35:29,856 - stack []
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=114, inst=LOAD_ATTR(arg=1, lineno=431)
DEBUG 2024-06-11 13:35:29,856 - stack ['$null$102.23', '$102load_global.22']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=124, inst=LOAD_FAST(arg=2, lineno=431)
DEBUG 2024-06-11 13:35:29,856 - stack ['$null$102.23', '$114load_attr.24']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=126, inst=PRECALL(arg=1, lineno=431)
DEBUG 2024-06-11 13:35:29,856 - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=130, inst=CALL(arg=1, lineno=431)
DEBUG 2024-06-11 13:35:29,856 - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=140, inst=LOAD_GLOBAL(arg=1, lineno=431)
DEBUG 2024-06-11 13:35:29,856 - stack ['$130call.26']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=152, inst=LOAD_ATTR(arg=1, lineno=431)
DEBUG 2024-06-11 13:35:29,856 - stack ['$130call.26', '$null$140.28', '$140load_global.27']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=162, inst=LOAD_FAST(arg=1, lineno=431)
DEBUG 2024-06-11 13:35:29,856 - stack ['$130call.26', '$null$140.28', '$152load_attr.29']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=164, inst=PRECALL(arg=1, lineno=431)
DEBUG 2024-06-11 13:35:29,856 - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=168, inst=CALL(arg=1, lineno=431)
DEBUG 2024-06-11 13:35:29,856 - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=178, inst=COMPARE_OP(arg=5, lineno=431)
DEBUG 2024-06-11 13:35:29,856 - stack ['$130call.26', '$168call.31']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=184, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=431)
DEBUG 2024-06-11 13:35:29,856 - stack ['$178compare_op.32']
DEBUG 2024-06-11 13:35:29,856 - end state. edges=[Edge(pc=186, stack=(), blockstack=(), npush=0), Edge(pc=190, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:35:29,856 - pending: deque([State(pc_initial=186 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
DEBUG 2024-06-11 13:35:29,856 - stack: []
DEBUG 2024-06-11 13:35:29,856 - state.pc_initial: State(pc_initial=186 nstack_initial=0)
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=186, inst=LOAD_CONST(arg=4, lineno=434)
DEBUG 2024-06-11 13:35:29,856 - stack []
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=188, inst=RETURN_VALUE(arg=None, lineno=434)
DEBUG 2024-06-11 13:35:29,856 - stack ['$const186.0']
DEBUG 2024-06-11 13:35:29,856 - end state. edges=[]
DEBUG 2024-06-11 13:35:29,856 - pending: deque([State(pc_initial=190 nstack_initial=0)])
DEBUG 2024-06-11 13:35:29,856 - stack: []
DEBUG 2024-06-11 13:35:29,856 - state.pc_initial: State(pc_initial=190 nstack_initial=0)
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=190, inst=LOAD_FAST(arg=2, lineno=436)
DEBUG 2024-06-11 13:35:29,856 - stack []
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=192, inst=UNARY_NEGATIVE(arg=None, lineno=436)
DEBUG 2024-06-11 13:35:29,856 - stack ['$b190.0']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=194, inst=LOAD_FAST(arg=1, lineno=436)
DEBUG 2024-06-11 13:35:29,856 - stack ['$192unary_negative.1']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=196, inst=BINARY_OP(arg=11, lineno=436)
DEBUG 2024-06-11 13:35:29,856 - stack ['$192unary_negative.1', '$a194.2']
DEBUG 2024-06-11 13:35:29,856 - dispatch pc=200, inst=RETURN_VALUE(arg=None, lineno=436)
DEBUG 2024-06-11 13:35:29,856 - stack ['$binop_truediv196.3']
DEBUG 2024-06-11 13:35:29,856 - end state. edges=[]
DEBUG 2024-06-11 13:35:29,856 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 13:35:29,856 - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=186 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set()})
DEBUG 2024-06-11 13:35:29,856 - defmap: {}
DEBUG 2024-06-11 13:35:29,856 - phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 13:35:29,856 - changing phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 13:35:29,856 - keep phismap: {}
DEBUG 2024-06-11 13:35:29,856 - new_out: defaultdict(<class 'dict'>, {})
DEBUG 2024-06-11 13:35:29,856 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 13:35:29,856 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4'}), (22, {'index': '$const20.4', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'op': '+', 'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$binop_add32.6'}), (34, {}), (36, {'res': '$const36.7'}), (38, {'res': '$x38.8'}), (40, {'res': '$const40.9'}), (42, {'index': '$const40.9', 'target': '$x38.8', 'res': '$42binary_subscr.10'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'op': '*', 'lhs': '$const36.7', 'rhs': '$42binary_subscr.10', 'res': '$binop_mul52.11'}), (54, {}), (56, {'op': '-', 'lhs': '$binop_add32.6', 'rhs': '$binop_mul52.11', 'res': '$binop_sub56.12'}), (58, {}), (60, {'value': '$binop_sub56.12'}), (62, {'res': '$x62.13'}), (64, {'res': '$const64.14'}), (66, {'index': '$const64.14', 'target': '$x62.13', 'res': '$66binary_subscr.15'}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {'res': '$x76.16'}), (78, {'res': '$const78.17'}), (80, {'index': '$const78.17', 'target': '$x76.16', 'res': '$80binary_subscr.18'}), (82, {}), (84, {}), (86, {}), (88, {}), (90, {'op': '-', 'lhs': '$66binary_subscr.15', 'rhs': '$80binary_subscr.18', 'res': '$binop_sub90.19'}), (92, {}), (94, {'res': '$const94.20'}), (96, {'op': '/', 'lhs': '$binop_sub90.19', 'rhs': '$const94.20', 'res': '$binop_truediv96.21'}), (98, {}), (100, {'value': '$binop_truediv96.21'}), (102, {'idx': 0, 'res': '$102load_global.22'}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'item': '$102load_global.22', 'res': '$114load_attr.24'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$b124.25'}), (126, {}), (128, {}), (130, {'func': '$114load_attr.24', 'args': ['$b124.25'], 'kw_names': None, 'res': '$130call.26'}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {'idx': 0, 'res': '$140load_global.27'}), (142, {}), (144, {}), (146, {}), (148, {}), (150, {}), (152, {'item': '$140load_global.27', 'res': '$152load_attr.29'}), (154, {}), (156, {}), (158, {}), (160, {}), (162, {'res': '$a162.30'}), (164, {}), (166, {}), (168, {'func': '$152load_attr.29', 'args': ['$a162.30'], 'kw_names': None, 'res': '$168call.31'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {'lhs': '$130call.26', 'rhs': '$168call.31', 'res': '$178compare_op.32'}), (180, {}), (182, {}), (184, {'pred': '$178compare_op.32'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={186: (), 190: ()})
DEBUG 2024-06-11 13:35:29,856 - block_infos State(pc_initial=186 nstack_initial=0):
AdaptBlockInfo(insts=((186, {'res': '$const186.0'}), (188, {'retval': '$const186.0', 'castval': '$188return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 13:35:29,856 - block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$b190.0'}), (192, {'value': '$b190.0', 'res': '$192unary_negative.1'}), (194, {'res': '$a194.2'}), (196, {'op': '/', 'lhs': '$192unary_negative.1', 'rhs': '$a194.2', 'res': '$binop_truediv196.3'}), (198, {}), (200, {'retval': '$binop_truediv196.3', 'castval': '$200return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 13:35:29,856 - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1 = const(int, 1)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $const20.4 = const(int, -1)              ['$const20.4']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4', 'x']
    $binop_add32.6 = $8binary_subscr.2 + $22binary_subscr.5 ['$22binary_subscr.5', '$8binary_subscr.2', '$binop_add32.6']
    $const36.7 = const(int, 2)               ['$const36.7']
    $const40.9 = const(int, 0)               ['$const40.9']
    $42binary_subscr.10 = getitem(value=x, index=$const40.9, fn=<built-in function getitem>) ['$42binary_subscr.10', '$const40.9', 'x']
    $binop_mul52.11 = $const36.7 * $42binary_subscr.10 ['$42binary_subscr.10', '$binop_mul52.11', '$const36.7']
    a = $binop_add32.6 - $binop_mul52.11     ['$binop_add32.6', '$binop_mul52.11', 'a']
    $const64.14 = const(int, 1)              ['$const64.14']
    $66binary_subscr.15 = getitem(value=x, index=$const64.14, fn=<built-in function getitem>) ['$66binary_subscr.15', '$const64.14', 'x']
    $const78.17 = const(int, -1)             ['$const78.17']
    $80binary_subscr.18 = getitem(value=x, index=$const78.17, fn=<built-in function getitem>) ['$80binary_subscr.18', '$const78.17', 'x']
    $binop_sub90.19 = $66binary_subscr.15 - $80binary_subscr.18 ['$66binary_subscr.15', '$80binary_subscr.18', '$binop_sub90.19']
    $const94.20 = const(int, 2)              ['$const94.20']
    b = $binop_sub90.19 / $const94.20        ['$binop_sub90.19', '$const94.20', 'b']
    $102load_global.22 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$102load_global.22']
    $114load_attr.24 = getattr(value=$102load_global.22, attr=abs) ['$102load_global.22', '$114load_attr.24']
    $130call.26 = call $114load_attr.24(b, func=$114load_attr.24, args=[Var(b, pitch.py:429)], kws=(), vararg=None, varkwarg=None, target=None) ['$114load_attr.24', '$130call.26', 'b']
    $140load_global.27 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$140load_global.27']
    $152load_attr.29 = getattr(value=$140load_global.27, attr=abs) ['$140load_global.27', '$152load_attr.29']
    $168call.31 = call $152load_attr.29(a, func=$152load_attr.29, args=[Var(a, pitch.py:428)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_attr.29', '$168call.31', 'a']
    $178compare_op.32 = $130call.26 >= $168call.31 ['$130call.26', '$168call.31', '$178compare_op.32']
    bool184 = global(bool: <class 'bool'>)   ['bool184']
    $184pred = call bool184($178compare_op.32, func=bool184, args=(Var($178compare_op.32, pitch.py:431),), kws=(), vararg=None, varkwarg=None, target=None) ['$178compare_op.32', '$184pred', 'bool184']
    branch $184pred, 186, 190                ['$184pred']
label 186:
    $const186.0 = const(int, 0)              ['$const186.0']
    $188return_value.1 = cast(value=$const186.0) ['$188return_value.1', '$const186.0']
    return $188return_value.1                ['$188return_value.1']
label 190:
    $192unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$192unary_negative.1', 'b']
    $binop_truediv196.3 = $192unary_negative.1 / a ['$192unary_negative.1', '$binop_truediv196.3', 'a']
    $200return_value.4 = cast(value=$binop_truediv196.3) ['$200return_value.4', '$binop_truediv196.3']
    return $200return_value.4                ['$200return_value.4']

INFO 2024-06-11 13:36:44,711 - Training model...
DEBUG 2024-06-11 13:37:25,243 - bytecode dump:
>          0	NOP(arg=None, lineno=1141)
           2	RESUME(arg=0, lineno=1141)
           4	LOAD_FAST(arg=0, lineno=1144)
           6	LOAD_CONST(arg=1, lineno=1144)
           8	BINARY_SUBSCR(arg=None, lineno=1144)
          18	STORE_FAST(arg=3, lineno=1144)
          20	LOAD_FAST(arg=1, lineno=1145)
          22	UNARY_NEGATIVE(arg=None, lineno=1145)
          24	LOAD_FAST(arg=3, lineno=1145)
          26	SWAP(arg=2, lineno=1145)
          28	COPY(arg=2, lineno=1145)
          30	COMPARE_OP(arg=1, lineno=1145)
          36	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1145)
          38	LOAD_FAST(arg=1, lineno=1145)
          40	COMPARE_OP(arg=1, lineno=1145)
          46	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1145)
          48	JUMP_FORWARD(arg=2, lineno=1145)
>         50	POP_TOP(arg=None, lineno=1145)
          52	JUMP_FORWARD(arg=2, lineno=1145)
>         54	LOAD_CONST(arg=1, lineno=1146)
          56	STORE_FAST(arg=3, lineno=1146)
>         58	LOAD_FAST(arg=0, lineno=1148)
          60	LOAD_CONST(arg=2, lineno=1148)
          62	BINARY_SUBSCR(arg=None, lineno=1148)
          72	STORE_FAST(arg=4, lineno=1148)
          74	LOAD_FAST(arg=1, lineno=1149)
          76	UNARY_NEGATIVE(arg=None, lineno=1149)
          78	LOAD_FAST(arg=4, lineno=1149)
          80	SWAP(arg=2, lineno=1149)
          82	COPY(arg=2, lineno=1149)
          84	COMPARE_OP(arg=1, lineno=1149)
          90	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1149)
          92	LOAD_FAST(arg=1, lineno=1149)
          94	COMPARE_OP(arg=1, lineno=1149)
         100	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1149)
         102	JUMP_FORWARD(arg=2, lineno=1149)
>        104	POP_TOP(arg=None, lineno=1149)
         106	JUMP_FORWARD(arg=2, lineno=1149)
>        108	LOAD_CONST(arg=1, lineno=1150)
         110	STORE_FAST(arg=4, lineno=1150)
>        112	LOAD_FAST(arg=2, lineno=1152)
         114	POP_JUMP_FORWARD_IF_FALSE(arg=42, lineno=1152)
         116	LOAD_GLOBAL(arg=1, lineno=1153)
         128	LOAD_ATTR(arg=1, lineno=1153)
         138	LOAD_FAST(arg=3, lineno=1153)
         140	PRECALL(arg=1, lineno=1153)
         144	CALL(arg=1, lineno=1153)
         154	LOAD_GLOBAL(arg=1, lineno=1153)
         166	LOAD_ATTR(arg=1, lineno=1153)
         176	LOAD_FAST(arg=4, lineno=1153)
         178	PRECALL(arg=1, lineno=1153)
         182	CALL(arg=1, lineno=1153)
         192	COMPARE_OP(arg=3, lineno=1153)
         198	RETURN_VALUE(arg=None, lineno=1153)
>        200	LOAD_GLOBAL(arg=1, lineno=1155)
         212	LOAD_ATTR(arg=2, lineno=1155)
         222	LOAD_FAST(arg=3, lineno=1155)
         224	PRECALL(arg=1, lineno=1155)
         228	CALL(arg=1, lineno=1155)
         238	LOAD_GLOBAL(arg=1, lineno=1155)
         250	LOAD_ATTR(arg=2, lineno=1155)
         260	LOAD_FAST(arg=4, lineno=1155)
         262	PRECALL(arg=1, lineno=1155)
         266	CALL(arg=1, lineno=1155)
         276	COMPARE_OP(arg=3, lineno=1155)
         282	RETURN_VALUE(arg=None, lineno=1155)
DEBUG 2024-06-11 13:37:25,245 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 13:37:25,245 - stack: []
DEBUG 2024-06-11 13:37:25,246 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 13:37:25,246 - dispatch pc=0, inst=NOP(arg=None, lineno=1141)
DEBUG 2024-06-11 13:37:25,246 - stack []
DEBUG 2024-06-11 13:37:25,246 - dispatch pc=2, inst=RESUME(arg=0, lineno=1141)
DEBUG 2024-06-11 13:37:25,246 - stack []
DEBUG 2024-06-11 13:37:25,246 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1144)
DEBUG 2024-06-11 13:37:25,246 - stack []
DEBUG 2024-06-11 13:37:25,246 - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1144)
DEBUG 2024-06-11 13:37:25,246 - stack ['$x4.0']
DEBUG 2024-06-11 13:37:25,246 - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1144)
DEBUG 2024-06-11 13:37:25,246 - stack ['$x4.0', '$const6.1']
DEBUG 2024-06-11 13:37:25,246 - dispatch pc=18, inst=STORE_FAST(arg=3, lineno=1144)
DEBUG 2024-06-11 13:37:25,246 - stack ['$8binary_subscr.2']
DEBUG 2024-06-11 13:37:25,246 - dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=1145)
DEBUG 2024-06-11 13:37:25,246 - stack []
DEBUG 2024-06-11 13:37:25,246 - dispatch pc=22, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
DEBUG 2024-06-11 13:37:25,246 - stack ['$threshold20.3']
DEBUG 2024-06-11 13:37:25,246 - dispatch pc=24, inst=LOAD_FAST(arg=3, lineno=1145)
DEBUG 2024-06-11 13:37:25,246 - stack ['$22unary_negative.4']
DEBUG 2024-06-11 13:37:25,246 - dispatch pc=26, inst=SWAP(arg=2, lineno=1145)
DEBUG 2024-06-11 13:37:25,246 - stack ['$22unary_negative.4', '$x024.5']
DEBUG 2024-06-11 13:37:25,246 - dispatch pc=28, inst=COPY(arg=2, lineno=1145)
DEBUG 2024-06-11 13:37:25,246 - stack ['$x024.5', '$22unary_negative.4']
DEBUG 2024-06-11 13:37:25,246 - dispatch pc=30, inst=COMPARE_OP(arg=1, lineno=1145)
DEBUG 2024-06-11 13:37:25,246 - stack ['$x024.5', '$22unary_negative.4', '$x024.5']
DEBUG 2024-06-11 13:37:25,246 - dispatch pc=36, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1145)
DEBUG 2024-06-11 13:37:25,246 - stack ['$x024.5', '$30compare_op.6']
DEBUG 2024-06-11 13:37:25,246 - end state. edges=[Edge(pc=38, stack=('$x024.5',), blockstack=(), npush=0), Edge(pc=50, stack=('$x024.5',), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:37:25,246 - pending: deque([State(pc_initial=38 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
DEBUG 2024-06-11 13:37:25,246 - stack: ['$phi38.0']
DEBUG 2024-06-11 13:37:25,246 - state.pc_initial: State(pc_initial=38 nstack_initial=1)
DEBUG 2024-06-11 13:37:25,246 - dispatch pc=38, inst=LOAD_FAST(arg=1, lineno=1145)
DEBUG 2024-06-11 13:37:25,246 - stack ['$phi38.0']
DEBUG 2024-06-11 13:37:25,246 - dispatch pc=40, inst=COMPARE_OP(arg=1, lineno=1145)
DEBUG 2024-06-11 13:37:25,246 - stack ['$phi38.0', '$threshold38.1']
DEBUG 2024-06-11 13:37:25,246 - dispatch pc=46, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1145)
DEBUG 2024-06-11 13:37:25,246 - stack ['$40compare_op.2']
DEBUG 2024-06-11 13:37:25,246 - end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:37:25,246 - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=48 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
DEBUG 2024-06-11 13:37:25,246 - stack: ['$phi50.0']
DEBUG 2024-06-11 13:37:25,246 - state.pc_initial: State(pc_initial=50 nstack_initial=1)
DEBUG 2024-06-11 13:37:25,246 - dispatch pc=50, inst=POP_TOP(arg=None, lineno=1145)
DEBUG 2024-06-11 13:37:25,246 - stack ['$phi50.0']
DEBUG 2024-06-11 13:37:25,246 - dispatch pc=52, inst=JUMP_FORWARD(arg=2, lineno=1145)
DEBUG 2024-06-11 13:37:25,246 - stack []
DEBUG 2024-06-11 13:37:25,246 - end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:37:25,246 - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
DEBUG 2024-06-11 13:37:25,248 - stack: []
DEBUG 2024-06-11 13:37:25,248 - state.pc_initial: State(pc_initial=48 nstack_initial=0)
DEBUG 2024-06-11 13:37:25,248 - dispatch pc=48, inst=JUMP_FORWARD(arg=2, lineno=1145)
DEBUG 2024-06-11 13:37:25,248 - stack []
DEBUG 2024-06-11 13:37:25,248 - end state. edges=[Edge(pc=54, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:37:25,248 - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=54 nstack_initial=0)])
DEBUG 2024-06-11 13:37:25,248 - stack: []
DEBUG 2024-06-11 13:37:25,248 - state.pc_initial: State(pc_initial=58 nstack_initial=0)
DEBUG 2024-06-11 13:37:25,248 - dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1148)
DEBUG 2024-06-11 13:37:25,248 - stack []
DEBUG 2024-06-11 13:37:25,248 - dispatch pc=60, inst=LOAD_CONST(arg=2, lineno=1148)
DEBUG 2024-06-11 13:37:25,248 - stack ['$x58.0']
DEBUG 2024-06-11 13:37:25,248 - dispatch pc=62, inst=BINARY_SUBSCR(arg=None, lineno=1148)
DEBUG 2024-06-11 13:37:25,248 - stack ['$x58.0', '$const60.1']
DEBUG 2024-06-11 13:37:25,248 - dispatch pc=72, inst=STORE_FAST(arg=4, lineno=1148)
DEBUG 2024-06-11 13:37:25,248 - stack ['$62binary_subscr.2']
DEBUG 2024-06-11 13:37:25,248 - dispatch pc=74, inst=LOAD_FAST(arg=1, lineno=1149)
DEBUG 2024-06-11 13:37:25,248 - stack []
DEBUG 2024-06-11 13:37:25,248 - dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=1149)
DEBUG 2024-06-11 13:37:25,248 - stack ['$threshold74.3']
DEBUG 2024-06-11 13:37:25,248 - dispatch pc=78, inst=LOAD_FAST(arg=4, lineno=1149)
DEBUG 2024-06-11 13:37:25,248 - stack ['$76unary_negative.4']
DEBUG 2024-06-11 13:37:25,248 - dispatch pc=80, inst=SWAP(arg=2, lineno=1149)
DEBUG 2024-06-11 13:37:25,248 - stack ['$76unary_negative.4', '$x178.5']
DEBUG 2024-06-11 13:37:25,248 - dispatch pc=82, inst=COPY(arg=2, lineno=1149)
DEBUG 2024-06-11 13:37:25,248 - stack ['$x178.5', '$76unary_negative.4']
DEBUG 2024-06-11 13:37:25,248 - dispatch pc=84, inst=COMPARE_OP(arg=1, lineno=1149)
DEBUG 2024-06-11 13:37:25,248 - stack ['$x178.5', '$76unary_negative.4', '$x178.5']
DEBUG 2024-06-11 13:37:25,248 - dispatch pc=90, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1149)
DEBUG 2024-06-11 13:37:25,248 - stack ['$x178.5', '$84compare_op.6']
DEBUG 2024-06-11 13:37:25,248 - end state. edges=[Edge(pc=92, stack=('$x178.5',), blockstack=(), npush=0), Edge(pc=104, stack=('$x178.5',), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:37:25,248 - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=54 nstack_initial=0), State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1)])
DEBUG 2024-06-11 13:37:25,248 - pending: deque([State(pc_initial=54 nstack_initial=0), State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1)])
DEBUG 2024-06-11 13:37:25,248 - stack: []
DEBUG 2024-06-11 13:37:25,248 - state.pc_initial: State(pc_initial=54 nstack_initial=0)
DEBUG 2024-06-11 13:37:25,248 - dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=1146)
DEBUG 2024-06-11 13:37:25,248 - stack []
DEBUG 2024-06-11 13:37:25,248 - dispatch pc=56, inst=STORE_FAST(arg=3, lineno=1146)
DEBUG 2024-06-11 13:37:25,248 - stack ['$const54.0']
DEBUG 2024-06-11 13:37:25,249 - end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:37:25,249 - pending: deque([State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1), State(pc_initial=58 nstack_initial=0)])
DEBUG 2024-06-11 13:37:25,249 - stack: ['$phi92.0']
DEBUG 2024-06-11 13:37:25,249 - state.pc_initial: State(pc_initial=92 nstack_initial=1)
DEBUG 2024-06-11 13:37:25,249 - dispatch pc=92, inst=LOAD_FAST(arg=1, lineno=1149)
DEBUG 2024-06-11 13:37:25,249 - stack ['$phi92.0']
DEBUG 2024-06-11 13:37:25,249 - dispatch pc=94, inst=COMPARE_OP(arg=1, lineno=1149)
DEBUG 2024-06-11 13:37:25,249 - stack ['$phi92.0', '$threshold92.1']
DEBUG 2024-06-11 13:37:25,249 - dispatch pc=100, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1149)
DEBUG 2024-06-11 13:37:25,249 - stack ['$94compare_op.2']
DEBUG 2024-06-11 13:37:25,249 - end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=112, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:37:25,249 - pending: deque([State(pc_initial=104 nstack_initial=1), State(pc_initial=58 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 13:37:25,249 - stack: ['$phi104.0']
DEBUG 2024-06-11 13:37:25,249 - state.pc_initial: State(pc_initial=104 nstack_initial=1)
DEBUG 2024-06-11 13:37:25,250 - dispatch pc=104, inst=POP_TOP(arg=None, lineno=1149)
DEBUG 2024-06-11 13:37:25,250 - stack ['$phi104.0']
DEBUG 2024-06-11 13:37:25,250 - dispatch pc=106, inst=JUMP_FORWARD(arg=2, lineno=1149)
DEBUG 2024-06-11 13:37:25,250 - stack []
DEBUG 2024-06-11 13:37:25,250 - end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:37:25,250 - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 13:37:25,250 - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 13:37:25,250 - stack: []
DEBUG 2024-06-11 13:37:25,250 - state.pc_initial: State(pc_initial=102 nstack_initial=0)
DEBUG 2024-06-11 13:37:25,250 - dispatch pc=102, inst=JUMP_FORWARD(arg=2, lineno=1149)
DEBUG 2024-06-11 13:37:25,250 - stack []
DEBUG 2024-06-11 13:37:25,250 - end state. edges=[Edge(pc=108, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:37:25,250 - pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=108 nstack_initial=0)])
DEBUG 2024-06-11 13:37:25,250 - stack: []
DEBUG 2024-06-11 13:37:25,250 - state.pc_initial: State(pc_initial=112 nstack_initial=0)
DEBUG 2024-06-11 13:37:25,250 - dispatch pc=112, inst=LOAD_FAST(arg=2, lineno=1152)
DEBUG 2024-06-11 13:37:25,250 - stack []
DEBUG 2024-06-11 13:37:25,250 - dispatch pc=114, inst=POP_JUMP_FORWARD_IF_FALSE(arg=42, lineno=1152)
DEBUG 2024-06-11 13:37:25,250 - stack ['$zero_pos112.0']
DEBUG 2024-06-11 13:37:25,250 - end state. edges=[Edge(pc=116, stack=(), blockstack=(), npush=0), Edge(pc=200, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:37:25,250 - pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0)])
DEBUG 2024-06-11 13:37:25,250 - pending: deque([State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0)])
DEBUG 2024-06-11 13:37:25,250 - stack: []
DEBUG 2024-06-11 13:37:25,250 - state.pc_initial: State(pc_initial=108 nstack_initial=0)
DEBUG 2024-06-11 13:37:25,250 - dispatch pc=108, inst=LOAD_CONST(arg=1, lineno=1150)
DEBUG 2024-06-11 13:37:25,250 - stack []
DEBUG 2024-06-11 13:37:25,250 - dispatch pc=110, inst=STORE_FAST(arg=4, lineno=1150)
DEBUG 2024-06-11 13:37:25,250 - stack ['$const108.0']
DEBUG 2024-06-11 13:37:25,250 - end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:37:25,250 - pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 13:37:25,250 - stack: []
DEBUG 2024-06-11 13:37:25,250 - state.pc_initial: State(pc_initial=116 nstack_initial=0)
DEBUG 2024-06-11 13:37:25,250 - dispatch pc=116, inst=LOAD_GLOBAL(arg=1, lineno=1153)
DEBUG 2024-06-11 13:37:25,250 - stack []
DEBUG 2024-06-11 13:37:25,250 - dispatch pc=128, inst=LOAD_ATTR(arg=1, lineno=1153)
DEBUG 2024-06-11 13:37:25,250 - stack ['$null$116.1', '$116load_global.0']
DEBUG 2024-06-11 13:37:25,250 - dispatch pc=138, inst=LOAD_FAST(arg=3, lineno=1153)
DEBUG 2024-06-11 13:37:25,250 - stack ['$null$116.1', '$128load_attr.2']
DEBUG 2024-06-11 13:37:25,250 - dispatch pc=140, inst=PRECALL(arg=1, lineno=1153)
DEBUG 2024-06-11 13:37:25,250 - stack ['$null$116.1', '$128load_attr.2', '$x0138.3']
DEBUG 2024-06-11 13:37:25,250 - dispatch pc=144, inst=CALL(arg=1, lineno=1153)
DEBUG 2024-06-11 13:37:25,250 - stack ['$null$116.1', '$128load_attr.2', '$x0138.3']
DEBUG 2024-06-11 13:37:25,250 - dispatch pc=154, inst=LOAD_GLOBAL(arg=1, lineno=1153)
DEBUG 2024-06-11 13:37:25,250 - stack ['$144call.4']
DEBUG 2024-06-11 13:37:25,250 - dispatch pc=166, inst=LOAD_ATTR(arg=1, lineno=1153)
DEBUG 2024-06-11 13:37:25,250 - stack ['$144call.4', '$null$154.6', '$154load_global.5']
DEBUG 2024-06-11 13:37:25,250 - dispatch pc=176, inst=LOAD_FAST(arg=4, lineno=1153)
DEBUG 2024-06-11 13:37:25,250 - stack ['$144call.4', '$null$154.6', '$166load_attr.7']
DEBUG 2024-06-11 13:37:25,250 - dispatch pc=178, inst=PRECALL(arg=1, lineno=1153)
DEBUG 2024-06-11 13:37:25,250 - stack ['$144call.4', '$null$154.6', '$166load_attr.7', '$x1176.8']
DEBUG 2024-06-11 13:37:25,250 - dispatch pc=182, inst=CALL(arg=1, lineno=1153)
DEBUG 2024-06-11 13:37:25,250 - stack ['$144call.4', '$null$154.6', '$166load_attr.7', '$x1176.8']
DEBUG 2024-06-11 13:37:25,250 - dispatch pc=192, inst=COMPARE_OP(arg=3, lineno=1153)
DEBUG 2024-06-11 13:37:25,250 - stack ['$144call.4', '$182call.9']
DEBUG 2024-06-11 13:37:25,250 - dispatch pc=198, inst=RETURN_VALUE(arg=None, lineno=1153)
DEBUG 2024-06-11 13:37:25,250 - stack ['$192compare_op.10']
DEBUG 2024-06-11 13:37:25,250 - end state. edges=[]
DEBUG 2024-06-11 13:37:25,250 - pending: deque([State(pc_initial=200 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 13:37:25,250 - stack: []
DEBUG 2024-06-11 13:37:25,250 - state.pc_initial: State(pc_initial=200 nstack_initial=0)
DEBUG 2024-06-11 13:37:25,250 - dispatch pc=200, inst=LOAD_GLOBAL(arg=1, lineno=1155)
DEBUG 2024-06-11 13:37:25,250 - stack []
DEBUG 2024-06-11 13:37:25,250 - dispatch pc=212, inst=LOAD_ATTR(arg=2, lineno=1155)
DEBUG 2024-06-11 13:37:25,250 - stack ['$null$200.1', '$200load_global.0']
DEBUG 2024-06-11 13:37:25,250 - dispatch pc=222, inst=LOAD_FAST(arg=3, lineno=1155)
DEBUG 2024-06-11 13:37:25,250 - stack ['$null$200.1', '$212load_attr.2']
DEBUG 2024-06-11 13:37:25,250 - dispatch pc=224, inst=PRECALL(arg=1, lineno=1155)
DEBUG 2024-06-11 13:37:25,250 - stack ['$null$200.1', '$212load_attr.2', '$x0222.3']
DEBUG 2024-06-11 13:37:25,250 - dispatch pc=228, inst=CALL(arg=1, lineno=1155)
DEBUG 2024-06-11 13:37:25,250 - stack ['$null$200.1', '$212load_attr.2', '$x0222.3']
DEBUG 2024-06-11 13:37:25,250 - dispatch pc=238, inst=LOAD_GLOBAL(arg=1, lineno=1155)
DEBUG 2024-06-11 13:37:25,250 - stack ['$228call.4']
DEBUG 2024-06-11 13:37:25,250 - dispatch pc=250, inst=LOAD_ATTR(arg=2, lineno=1155)
DEBUG 2024-06-11 13:37:25,250 - stack ['$228call.4', '$null$238.6', '$238load_global.5']
DEBUG 2024-06-11 13:37:25,250 - dispatch pc=260, inst=LOAD_FAST(arg=4, lineno=1155)
DEBUG 2024-06-11 13:37:25,250 - stack ['$228call.4', '$null$238.6', '$250load_attr.7']
DEBUG 2024-06-11 13:37:25,250 - dispatch pc=262, inst=PRECALL(arg=1, lineno=1155)
DEBUG 2024-06-11 13:37:25,250 - stack ['$228call.4', '$null$238.6', '$250load_attr.7', '$x1260.8']
DEBUG 2024-06-11 13:37:25,250 - dispatch pc=266, inst=CALL(arg=1, lineno=1155)
DEBUG 2024-06-11 13:37:25,250 - stack ['$228call.4', '$null$238.6', '$250load_attr.7', '$x1260.8']
DEBUG 2024-06-11 13:37:25,250 - dispatch pc=276, inst=COMPARE_OP(arg=3, lineno=1155)
DEBUG 2024-06-11 13:37:25,250 - stack ['$228call.4', '$266call.9']
DEBUG 2024-06-11 13:37:25,250 - dispatch pc=282, inst=RETURN_VALUE(arg=None, lineno=1155)
DEBUG 2024-06-11 13:37:25,250 - stack ['$276compare_op.10']
DEBUG 2024-06-11 13:37:25,250 - end state. edges=[]
DEBUG 2024-06-11 13:37:25,250 - pending: deque([State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 13:37:25,250 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 13:37:25,250 - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=38 nstack_initial=1): {'$phi38.0'},
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): set(),
             State(pc_initial=54 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=1): {'$phi92.0'},
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=104 nstack_initial=1): set(),
             State(pc_initial=108 nstack_initial=0): set(),
             State(pc_initial=112 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=200 nstack_initial=0): set()})
DEBUG 2024-06-11 13:37:25,250 - defmap: {'$phi104.0': State(pc_initial=58 nstack_initial=0),
 '$phi38.0': State(pc_initial=0 nstack_initial=0),
 '$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi92.0': State(pc_initial=58 nstack_initial=0)}
DEBUG 2024-06-11 13:37:25,250 - phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))},
             '$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}})
DEBUG 2024-06-11 13:37:25,250 - changing phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))},
             '$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}})
DEBUG 2024-06-11 13:37:25,250 - keep phismap: {'$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
 '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}}
DEBUG 2024-06-11 13:37:25,250 - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi38.0': '$x024.5'},
             State(pc_initial=58 nstack_initial=0): {'$phi92.0': '$x178.5'}})
DEBUG 2024-06-11 13:37:25,250 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 13:37:25,250 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'value': '$8binary_subscr.2'}), (20, {'res': '$threshold20.3'}), (22, {'value': '$threshold20.3', 'res': '$22unary_negative.4'}), (24, {'res': '$x024.5'}), (30, {'lhs': '$22unary_negative.4', 'rhs': '$x024.5', 'res': '$30compare_op.6'}), (32, {}), (34, {}), (36, {'pred': '$30compare_op.6'})), outgoing_phis={'$phi38.0': '$x024.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={38: ('$x024.5',), 50: ('$x024.5',)})
DEBUG 2024-06-11 13:37:25,250 - block_infos State(pc_initial=38 nstack_initial=1):
AdaptBlockInfo(insts=((38, {'res': '$threshold38.1'}), (40, {'lhs': '$phi38.0', 'rhs': '$threshold38.1', 'res': '$40compare_op.2'}), (42, {}), (44, {}), (46, {'pred': '$40compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: (), 58: ()})
DEBUG 2024-06-11 13:37:25,250 - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={54: ()})
DEBUG 2024-06-11 13:37:25,250 - block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((52, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ()})
DEBUG 2024-06-11 13:37:25,250 - block_infos State(pc_initial=54 nstack_initial=0):
AdaptBlockInfo(insts=((54, {'res': '$const54.0'}), (56, {'value': '$const54.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ()})
DEBUG 2024-06-11 13:37:25,250 - block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$x58.0'}), (60, {'res': '$const60.1'}), (62, {'index': '$const60.1', 'target': '$x58.0', 'res': '$62binary_subscr.2'}), (64, {}), (66, {}), (68, {}), (70, {}), (72, {'value': '$62binary_subscr.2'}), (74, {'res': '$threshold74.3'}), (76, {'value': '$threshold74.3', 'res': '$76unary_negative.4'}), (78, {'res': '$x178.5'}), (84, {'lhs': '$76unary_negative.4', 'rhs': '$x178.5', 'res': '$84compare_op.6'}), (86, {}), (88, {}), (90, {'pred': '$84compare_op.6'})), outgoing_phis={'$phi92.0': '$x178.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: ('$x178.5',), 104: ('$x178.5',)})
DEBUG 2024-06-11 13:37:25,250 - block_infos State(pc_initial=92 nstack_initial=1):
AdaptBlockInfo(insts=((92, {'res': '$threshold92.1'}), (94, {'lhs': '$phi92.0', 'rhs': '$threshold92.1', 'res': '$94compare_op.2'}), (96, {}), (98, {}), (100, {'pred': '$94compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 112: ()})
DEBUG 2024-06-11 13:37:25,250 - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={108: ()})
DEBUG 2024-06-11 13:37:25,250 - block_infos State(pc_initial=104 nstack_initial=1):
AdaptBlockInfo(insts=((106, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ()})
DEBUG 2024-06-11 13:37:25,250 - block_infos State(pc_initial=108 nstack_initial=0):
AdaptBlockInfo(insts=((108, {'res': '$const108.0'}), (110, {'value': '$const108.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ()})
DEBUG 2024-06-11 13:37:25,250 - block_infos State(pc_initial=112 nstack_initial=0):
AdaptBlockInfo(insts=((112, {'res': '$zero_pos112.0'}), (114, {'pred': '$zero_pos112.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={116: (), 200: ()})
DEBUG 2024-06-11 13:37:25,250 - block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'idx': 0, 'res': '$116load_global.0'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {}), (128, {'item': '$116load_global.0', 'res': '$128load_attr.2'}), (130, {}), (132, {}), (134, {}), (136, {}), (138, {'res': '$x0138.3'}), (140, {}), (142, {}), (144, {'func': '$128load_attr.2', 'args': ['$x0138.3'], 'kw_names': None, 'res': '$144call.4'}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'idx': 0, 'res': '$154load_global.5'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {}), (166, {'item': '$154load_global.5', 'res': '$166load_attr.7'}), (168, {}), (170, {}), (172, {}), (174, {}), (176, {'res': '$x1176.8'}), (178, {}), (180, {}), (182, {'func': '$166load_attr.7', 'args': ['$x1176.8'], 'kw_names': None, 'res': '$182call.9'}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'lhs': '$144call.4', 'rhs': '$182call.9', 'res': '$192compare_op.10'}), (194, {}), (196, {}), (198, {'retval': '$192compare_op.10', 'castval': '$198return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 13:37:25,250 - block_infos State(pc_initial=200 nstack_initial=0):
AdaptBlockInfo(insts=((200, {'idx': 0, 'res': '$200load_global.0'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {'item': '$200load_global.0', 'res': '$212load_attr.2'}), (214, {}), (216, {}), (218, {}), (220, {}), (222, {'res': '$x0222.3'}), (224, {}), (226, {}), (228, {'func': '$212load_attr.2', 'args': ['$x0222.3'], 'kw_names': None, 'res': '$228call.4'}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'idx': 0, 'res': '$238load_global.5'}), (240, {}), (242, {}), (244, {}), (246, {}), (248, {}), (250, {'item': '$238load_global.5', 'res': '$250load_attr.7'}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {'res': '$x1260.8'}), (262, {}), (264, {}), (266, {'func': '$250load_attr.7', 'args': ['$x1260.8'], 'kw_names': None, 'res': '$266call.9'}), (268, {}), (270, {}), (272, {}), (274, {}), (276, {'lhs': '$228call.4', 'rhs': '$266call.9', 'res': '$276compare_op.10'}), (278, {}), (280, {}), (282, {'retval': '$276compare_op.10', 'castval': '$282return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 13:37:25,250 - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const6.1 = const(int, 0)                ['$const6.1']
    x0 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$const6.1', 'x', 'x0']
    $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$22unary_negative.4', 'threshold']
    $30compare_op.6 = $22unary_negative.4 <= x0 ['$22unary_negative.4', '$30compare_op.6', 'x0']
    bool36 = global(bool: <class 'bool'>)    ['bool36']
    $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.6', '$36pred', 'bool36']
    $phi38.0 = x0                            ['$phi38.0', 'x0']
    branch $36pred, 38, 50                   ['$36pred']
label 38:
    $40compare_op.2 = $phi38.0 <= threshold  ['$40compare_op.2', '$phi38.0', 'threshold']
    bool46 = global(bool: <class 'bool'>)    ['bool46']
    $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.2', '$46pred', 'bool46']
    branch $46pred, 48, 58                   ['$46pred']
label 48:
    jump 54                                  []
label 50:
    jump 58                                  []
label 54:
    x0 = const(int, 0)                       ['x0']
    jump 58                                  []
label 58:
    $const60.1 = const(int, -1)              ['$const60.1']
    x1 = getitem(value=x, index=$const60.1, fn=<built-in function getitem>) ['$const60.1', 'x', 'x1']
    $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$76unary_negative.4', 'threshold']
    $84compare_op.6 = $76unary_negative.4 <= x1 ['$76unary_negative.4', '$84compare_op.6', 'x1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None) ['$84compare_op.6', '$90pred', 'bool90']
    $phi92.0 = x1                            ['$phi92.0', 'x1']
    branch $90pred, 92, 104                  ['$90pred']
label 92:
    $94compare_op.2 = $phi92.0 <= threshold  ['$94compare_op.2', '$phi92.0', 'threshold']
    bool100 = global(bool: <class 'bool'>)   ['bool100']
    $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$94compare_op.2', 'bool100']
    branch $100pred, 102, 112                ['$100pred']
label 102:
    jump 108                                 []
label 104:
    jump 112                                 []
label 108:
    x1 = const(int, 0)                       ['x1']
    jump 112                                 []
label 112:
    bool114 = global(bool: <class 'bool'>)   ['bool114']
    $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$114pred', 'bool114', 'zero_pos']
    branch $114pred, 116, 200                ['$114pred']
label 116:
    $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$116load_global.0']
    $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit) ['$116load_global.0', '$128load_attr.2']
    $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$128load_attr.2', '$144call.4', 'x0']
    $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$154load_global.5']
    $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit) ['$154load_global.5', '$166load_attr.7']
    $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_attr.7', '$182call.9', 'x1']
    $192compare_op.10 = $144call.4 != $182call.9 ['$144call.4', '$182call.9', '$192compare_op.10']
    $198return_value.11 = cast(value=$192compare_op.10) ['$192compare_op.10', '$198return_value.11']
    return $198return_value.11               ['$198return_value.11']
label 200:
    $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$200load_global.0']
    $212load_attr.2 = getattr(value=$200load_global.0, attr=sign) ['$200load_global.0', '$212load_attr.2']
    $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$212load_attr.2', '$228call.4', 'x0']
    $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$238load_global.5']
    $250load_attr.7 = getattr(value=$238load_global.5, attr=sign) ['$238load_global.5', '$250load_attr.7']
    $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None) ['$250load_attr.7', '$266call.9', 'x1']
    $276compare_op.10 = $228call.4 != $266call.9 ['$228call.4', '$266call.9', '$276compare_op.10']
    $282return_value.11 = cast(value=$276compare_op.10) ['$276compare_op.10', '$282return_value.11']
    return $282return_value.11               ['$282return_value.11']

DEBUG 2024-06-11 13:37:25,592 - bytecode dump:
>          0	NOP(arg=None, lineno=1039)
           2	RESUME(arg=0, lineno=1039)
           4	LOAD_FAST(arg=0, lineno=1042)
           6	LOAD_CONST(arg=1, lineno=1042)
           8	BINARY_SUBSCR(arg=None, lineno=1042)
          18	LOAD_FAST(arg=0, lineno=1042)
          20	LOAD_CONST(arg=2, lineno=1042)
          22	BINARY_SUBSCR(arg=None, lineno=1042)
          32	COMPARE_OP(arg=4, lineno=1042)
          38	LOAD_FAST(arg=0, lineno=1042)
          40	LOAD_CONST(arg=1, lineno=1042)
          42	BINARY_SUBSCR(arg=None, lineno=1042)
          52	LOAD_FAST(arg=0, lineno=1042)
          54	LOAD_CONST(arg=3, lineno=1042)
          56	BINARY_SUBSCR(arg=None, lineno=1042)
          66	COMPARE_OP(arg=5, lineno=1042)
          72	BINARY_OP(arg=1, lineno=1042)
          76	RETURN_VALUE(arg=None, lineno=1042)
DEBUG 2024-06-11 13:37:25,592 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 13:37:25,592 - stack: []
DEBUG 2024-06-11 13:37:25,592 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 13:37:25,592 - dispatch pc=0, inst=NOP(arg=None, lineno=1039)
DEBUG 2024-06-11 13:37:25,592 - stack []
DEBUG 2024-06-11 13:37:25,592 - dispatch pc=2, inst=RESUME(arg=0, lineno=1039)
DEBUG 2024-06-11 13:37:25,592 - stack []
DEBUG 2024-06-11 13:37:25,592 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1042)
DEBUG 2024-06-11 13:37:25,592 - stack []
DEBUG 2024-06-11 13:37:25,592 - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1042)
DEBUG 2024-06-11 13:37:25,592 - stack ['$x4.0']
DEBUG 2024-06-11 13:37:25,592 - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1042)
DEBUG 2024-06-11 13:37:25,592 - stack ['$x4.0', '$const6.1']
DEBUG 2024-06-11 13:37:25,592 - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=1042)
DEBUG 2024-06-11 13:37:25,592 - stack ['$8binary_subscr.2']
DEBUG 2024-06-11 13:37:25,592 - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=1042)
DEBUG 2024-06-11 13:37:25,592 - stack ['$8binary_subscr.2', '$x18.3']
DEBUG 2024-06-11 13:37:25,592 - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=1042)
DEBUG 2024-06-11 13:37:25,592 - stack ['$8binary_subscr.2', '$x18.3', '$const20.4']
DEBUG 2024-06-11 13:37:25,592 - dispatch pc=32, inst=COMPARE_OP(arg=4, lineno=1042)
DEBUG 2024-06-11 13:37:25,592 - stack ['$8binary_subscr.2', '$22binary_subscr.5']
DEBUG 2024-06-11 13:37:25,592 - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=1042)
DEBUG 2024-06-11 13:37:25,593 - stack ['$32compare_op.6']
DEBUG 2024-06-11 13:37:25,593 - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1042)
DEBUG 2024-06-11 13:37:25,593 - stack ['$32compare_op.6', '$x38.7']
DEBUG 2024-06-11 13:37:25,593 - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=1042)
DEBUG 2024-06-11 13:37:25,593 - stack ['$32compare_op.6', '$x38.7', '$const40.8']
DEBUG 2024-06-11 13:37:25,593 - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1042)
DEBUG 2024-06-11 13:37:25,593 - stack ['$32compare_op.6', '$42binary_subscr.9']
DEBUG 2024-06-11 13:37:25,593 - dispatch pc=54, inst=LOAD_CONST(arg=3, lineno=1042)
DEBUG 2024-06-11 13:37:25,593 - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10']
DEBUG 2024-06-11 13:37:25,593 - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1042)
DEBUG 2024-06-11 13:37:25,593 - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10', '$const54.11']
DEBUG 2024-06-11 13:37:25,593 - dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=1042)
DEBUG 2024-06-11 13:37:25,593 - stack ['$32compare_op.6', '$42binary_subscr.9', '$56binary_subscr.12']
DEBUG 2024-06-11 13:37:25,593 - dispatch pc=72, inst=BINARY_OP(arg=1, lineno=1042)
DEBUG 2024-06-11 13:37:25,593 - stack ['$32compare_op.6', '$66compare_op.13']
DEBUG 2024-06-11 13:37:25,594 - dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=1042)
DEBUG 2024-06-11 13:37:25,594 - stack ['$binop_and_72.14']
DEBUG 2024-06-11 13:37:25,594 - end state. edges=[]
DEBUG 2024-06-11 13:37:25,594 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 13:37:25,594 - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG 2024-06-11 13:37:25,594 - defmap: {}
DEBUG 2024-06-11 13:37:25,595 - phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 13:37:25,595 - changing phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 13:37:25,595 - keep phismap: {}
DEBUG 2024-06-11 13:37:25,595 - new_out: defaultdict(<class 'dict'>, {})
DEBUG 2024-06-11 13:37:25,595 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 13:37:25,595 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4'}), (22, {'index': '$const20.4', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$32compare_op.6'}), (34, {}), (36, {}), (38, {'res': '$x38.7'}), (40, {'res': '$const40.8'}), (42, {'index': '$const40.8', 'target': '$x38.7', 'res': '$42binary_subscr.9'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$x52.10'}), (54, {'res': '$const54.11'}), (56, {'index': '$const54.11', 'target': '$x52.10', 'res': '$56binary_subscr.12'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'lhs': '$42binary_subscr.9', 'rhs': '$56binary_subscr.12', 'res': '$66compare_op.13'}), (68, {}), (70, {}), (72, {'op': '&', 'lhs': '$32compare_op.6', 'rhs': '$66compare_op.13', 'res': '$binop_and_72.14'}), (74, {}), (76, {'retval': '$binop_and_72.14', 'castval': '$76return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 13:37:25,596 - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $const20.4 = const(int, -1)              ['$const20.4']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4', 'x']
    $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5 ['$22binary_subscr.5', '$32compare_op.6', '$8binary_subscr.2']
    $const40.8 = const(int, 0)               ['$const40.8']
    $42binary_subscr.9 = getitem(value=x, index=$const40.8, fn=<built-in function getitem>) ['$42binary_subscr.9', '$const40.8', 'x']
    $const54.11 = const(int, 1)              ['$const54.11']
    $56binary_subscr.12 = getitem(value=x, index=$const54.11, fn=<built-in function getitem>) ['$56binary_subscr.12', '$const54.11', 'x']
    $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12 ['$42binary_subscr.9', '$56binary_subscr.12', '$66compare_op.13']
    $binop_and_72.14 = $32compare_op.6 & $66compare_op.13 ['$32compare_op.6', '$66compare_op.13', '$binop_and_72.14']
    $76return_value.15 = cast(value=$binop_and_72.14) ['$76return_value.15', '$binop_and_72.14']
    return $76return_value.15                ['$76return_value.15']

DEBUG 2024-06-11 13:37:25,596 - bytecode dump:
>          0	NOP(arg=None, lineno=1045)
           2	RESUME(arg=0, lineno=1045)
           4	LOAD_FAST(arg=0, lineno=1048)
           6	LOAD_CONST(arg=1, lineno=1048)
           8	BINARY_SUBSCR(arg=None, lineno=1048)
          18	LOAD_FAST(arg=0, lineno=1048)
          20	LOAD_CONST(arg=2, lineno=1048)
          22	BINARY_SUBSCR(arg=None, lineno=1048)
          32	COMPARE_OP(arg=0, lineno=1048)
          38	LOAD_FAST(arg=0, lineno=1048)
          40	LOAD_CONST(arg=1, lineno=1048)
          42	BINARY_SUBSCR(arg=None, lineno=1048)
          52	LOAD_FAST(arg=0, lineno=1048)
          54	LOAD_CONST(arg=3, lineno=1048)
          56	BINARY_SUBSCR(arg=None, lineno=1048)
          66	COMPARE_OP(arg=1, lineno=1048)
          72	BINARY_OP(arg=1, lineno=1048)
          76	RETURN_VALUE(arg=None, lineno=1048)
DEBUG 2024-06-11 13:37:25,597 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 13:37:25,597 - stack: []
DEBUG 2024-06-11 13:37:25,597 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 13:37:25,597 - dispatch pc=0, inst=NOP(arg=None, lineno=1045)
DEBUG 2024-06-11 13:37:25,597 - stack []
DEBUG 2024-06-11 13:37:25,597 - dispatch pc=2, inst=RESUME(arg=0, lineno=1045)
DEBUG 2024-06-11 13:37:25,597 - stack []
DEBUG 2024-06-11 13:37:25,597 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1048)
DEBUG 2024-06-11 13:37:25,597 - stack []
DEBUG 2024-06-11 13:37:25,597 - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1048)
DEBUG 2024-06-11 13:37:25,597 - stack ['$x4.0']
DEBUG 2024-06-11 13:37:25,597 - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1048)
DEBUG 2024-06-11 13:37:25,597 - stack ['$x4.0', '$const6.1']
DEBUG 2024-06-11 13:37:25,597 - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=1048)
DEBUG 2024-06-11 13:37:25,598 - stack ['$8binary_subscr.2']
DEBUG 2024-06-11 13:37:25,598 - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=1048)
DEBUG 2024-06-11 13:37:25,598 - stack ['$8binary_subscr.2', '$x18.3']
DEBUG 2024-06-11 13:37:25,598 - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=1048)
DEBUG 2024-06-11 13:37:25,598 - stack ['$8binary_subscr.2', '$x18.3', '$const20.4']
DEBUG 2024-06-11 13:37:25,598 - dispatch pc=32, inst=COMPARE_OP(arg=0, lineno=1048)
DEBUG 2024-06-11 13:37:25,598 - stack ['$8binary_subscr.2', '$22binary_subscr.5']
DEBUG 2024-06-11 13:37:25,598 - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=1048)
DEBUG 2024-06-11 13:37:25,598 - stack ['$32compare_op.6']
DEBUG 2024-06-11 13:37:25,598 - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1048)
DEBUG 2024-06-11 13:37:25,598 - stack ['$32compare_op.6', '$x38.7']
DEBUG 2024-06-11 13:37:25,598 - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=1048)
DEBUG 2024-06-11 13:37:25,598 - stack ['$32compare_op.6', '$x38.7', '$const40.8']
DEBUG 2024-06-11 13:37:25,598 - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1048)
DEBUG 2024-06-11 13:37:25,598 - stack ['$32compare_op.6', '$42binary_subscr.9']
DEBUG 2024-06-11 13:37:25,598 - dispatch pc=54, inst=LOAD_CONST(arg=3, lineno=1048)
DEBUG 2024-06-11 13:37:25,599 - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10']
DEBUG 2024-06-11 13:37:25,599 - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1048)
DEBUG 2024-06-11 13:37:25,599 - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10', '$const54.11']
DEBUG 2024-06-11 13:37:25,599 - dispatch pc=66, inst=COMPARE_OP(arg=1, lineno=1048)
DEBUG 2024-06-11 13:37:25,599 - stack ['$32compare_op.6', '$42binary_subscr.9', '$56binary_subscr.12']
DEBUG 2024-06-11 13:37:25,599 - dispatch pc=72, inst=BINARY_OP(arg=1, lineno=1048)
DEBUG 2024-06-11 13:37:25,599 - stack ['$32compare_op.6', '$66compare_op.13']
DEBUG 2024-06-11 13:37:25,599 - dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=1048)
DEBUG 2024-06-11 13:37:25,599 - stack ['$binop_and_72.14']
DEBUG 2024-06-11 13:37:25,599 - end state. edges=[]
DEBUG 2024-06-11 13:37:25,599 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 13:37:25,599 - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG 2024-06-11 13:37:25,599 - defmap: {}
DEBUG 2024-06-11 13:37:25,599 - phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 13:37:25,600 - changing phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 13:37:25,600 - keep phismap: {}
DEBUG 2024-06-11 13:37:25,600 - new_out: defaultdict(<class 'dict'>, {})
DEBUG 2024-06-11 13:37:25,600 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 13:37:25,600 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4'}), (22, {'index': '$const20.4', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$32compare_op.6'}), (34, {}), (36, {}), (38, {'res': '$x38.7'}), (40, {'res': '$const40.8'}), (42, {'index': '$const40.8', 'target': '$x38.7', 'res': '$42binary_subscr.9'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$x52.10'}), (54, {'res': '$const54.11'}), (56, {'index': '$const54.11', 'target': '$x52.10', 'res': '$56binary_subscr.12'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'lhs': '$42binary_subscr.9', 'rhs': '$56binary_subscr.12', 'res': '$66compare_op.13'}), (68, {}), (70, {}), (72, {'op': '&', 'lhs': '$32compare_op.6', 'rhs': '$66compare_op.13', 'res': '$binop_and_72.14'}), (74, {}), (76, {'retval': '$binop_and_72.14', 'castval': '$76return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 13:37:25,600 - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $const20.4 = const(int, -1)              ['$const20.4']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4', 'x']
    $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5 ['$22binary_subscr.5', '$32compare_op.6', '$8binary_subscr.2']
    $const40.8 = const(int, 0)               ['$const40.8']
    $42binary_subscr.9 = getitem(value=x, index=$const40.8, fn=<built-in function getitem>) ['$42binary_subscr.9', '$const40.8', 'x']
    $const54.11 = const(int, 1)              ['$const54.11']
    $56binary_subscr.12 = getitem(value=x, index=$const54.11, fn=<built-in function getitem>) ['$56binary_subscr.12', '$const54.11', 'x']
    $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12 ['$42binary_subscr.9', '$56binary_subscr.12', '$66compare_op.13']
    $binop_and_72.14 = $32compare_op.6 & $66compare_op.13 ['$32compare_op.6', '$66compare_op.13', '$binop_and_72.14']
    $76return_value.15 = cast(value=$binop_and_72.14) ['$76return_value.15', '$binop_and_72.14']
    return $76return_value.15                ['$76return_value.15']

ERROR 2024-06-11 13:37:25,999 - Error extracting features from data\ravdess\Actor_02\03-01-02-01-01-01-02.wav: module 'resampy' has no attribute 'resample'
ERROR 2024-06-11 13:37:25,999 - Error preparing data: module 'resampy' has no attribute 'resample'
DEBUG 2024-06-11 13:37:26,008 - bytecode dump:
>          0	NOP(arg=None, lineno=81)
           2	RESUME(arg=0, lineno=81)
           4	LOAD_GLOBAL(arg=1, lineno=86)
          16	LOAD_FAST(arg=0, lineno=86)
          18	LOAD_FAST(arg=1, lineno=86)
          20	LOAD_FAST(arg=2, lineno=86)
          22	LOAD_FAST(arg=3, lineno=86)
          24	LOAD_FAST(arg=4, lineno=86)
          26	LOAD_FAST(arg=5, lineno=86)
          28	LOAD_FAST(arg=6, lineno=86)
          30	PRECALL(arg=7, lineno=86)
          34	CALL(arg=7, lineno=86)
          44	POP_TOP(arg=None, lineno=86)
          46	LOAD_CONST(arg=0, lineno=86)
          48	RETURN_VALUE(arg=None, lineno=86)
DEBUG 2024-06-11 13:37:26,008 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 13:37:26,008 - stack: []
DEBUG 2024-06-11 13:37:26,008 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 13:37:26,008 - dispatch pc=0, inst=NOP(arg=None, lineno=81)
DEBUG 2024-06-11 13:37:26,008 - stack []
DEBUG 2024-06-11 13:37:26,008 - dispatch pc=2, inst=RESUME(arg=0, lineno=81)
DEBUG 2024-06-11 13:37:26,008 - stack []
DEBUG 2024-06-11 13:37:26,008 - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=86)
DEBUG 2024-06-11 13:37:26,008 - stack []
DEBUG 2024-06-11 13:37:26,008 - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=86)
DEBUG 2024-06-11 13:37:26,008 - stack ['$null$4.1', '$4load_global.0']
DEBUG 2024-06-11 13:37:26,008 - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=86)
DEBUG 2024-06-11 13:37:26,008 - stack ['$null$4.1', '$4load_global.0', '$x16.2']
DEBUG 2024-06-11 13:37:26,008 - dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=86)
DEBUG 2024-06-11 13:37:26,008 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3']
DEBUG 2024-06-11 13:37:26,008 - dispatch pc=22, inst=LOAD_FAST(arg=3, lineno=86)
DEBUG 2024-06-11 13:37:26,008 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4']
DEBUG 2024-06-11 13:37:26,008 - dispatch pc=24, inst=LOAD_FAST(arg=4, lineno=86)
DEBUG 2024-06-11 13:37:26,008 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5']
DEBUG 2024-06-11 13:37:26,008 - dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=86)
DEBUG 2024-06-11 13:37:26,008 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6']
DEBUG 2024-06-11 13:37:26,008 - dispatch pc=28, inst=LOAD_FAST(arg=6, lineno=86)
DEBUG 2024-06-11 13:37:26,008 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7']
DEBUG 2024-06-11 13:37:26,008 - dispatch pc=30, inst=PRECALL(arg=7, lineno=86)
DEBUG 2024-06-11 13:37:26,008 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
DEBUG 2024-06-11 13:37:26,008 - dispatch pc=34, inst=CALL(arg=7, lineno=86)
DEBUG 2024-06-11 13:37:26,008 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
DEBUG 2024-06-11 13:37:26,008 - dispatch pc=44, inst=POP_TOP(arg=None, lineno=86)
DEBUG 2024-06-11 13:37:26,008 - stack ['$34call.9']
DEBUG 2024-06-11 13:37:26,008 - dispatch pc=46, inst=LOAD_CONST(arg=0, lineno=86)
DEBUG 2024-06-11 13:37:26,008 - stack []
DEBUG 2024-06-11 13:37:26,008 - dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=86)
DEBUG 2024-06-11 13:37:26,008 - stack ['$const46.10']
DEBUG 2024-06-11 13:37:26,008 - end state. edges=[]
DEBUG 2024-06-11 13:37:26,008 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 13:37:26,008 - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG 2024-06-11 13:37:26,008 - defmap: {}
DEBUG 2024-06-11 13:37:26,008 - phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 13:37:26,008 - changing phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 13:37:26,008 - keep phismap: {}
DEBUG 2024-06-11 13:37:26,008 - new_out: defaultdict(<class 'dict'>, {})
DEBUG 2024-06-11 13:37:26,008 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 13:37:26,008 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {'res': '$t_out18.3'}), (20, {'res': '$interp_win20.4'}), (22, {'res': '$interp_delta22.5'}), (24, {'res': '$num_table24.6'}), (26, {'res': '$scale26.7'}), (28, {'res': '$y28.8'}), (30, {}), (32, {}), (34, {'func': '$4load_global.0', 'args': ['$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8'], 'kw_names': None, 'res': '$34call.9'}), (36, {}), (38, {}), (40, {}), (42, {}), (46, {'res': '$const46.10'}), (48, {'retval': '$const46.10', 'castval': '$48return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 13:37:26,014 - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x0000019A98C53EC0>)) ['$4load_global.0']
    $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None) ['$34call.9', '$4load_global.0', 'interp_delta', 'interp_win', 'num_table', 'scale', 't_out', 'x', 'y']
    $const46.10 = const(NoneType, None)      ['$const46.10']
    $48return_value.11 = cast(value=$const46.10) ['$48return_value.11', '$const46.10']
    return $48return_value.11                ['$48return_value.11']

DEBUG 2024-06-11 13:37:26,158 - ==== SSA block analysis pass on 0
DEBUG 2024-06-11 13:37:26,158 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A98CE7250>
DEBUG 2024-06-11 13:37:26,158 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:37:26,158 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:37:26,158 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:37:26,158 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:37:26,158 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:37:26,158 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:37:26,158 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:37:26,158 - on stmt: $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x0000019A98C53EC0>))
DEBUG 2024-06-11 13:37:26,158 - on stmt: $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,158 - on stmt: $const46.10 = const(NoneType, None)
DEBUG 2024-06-11 13:37:26,158 - on stmt: $48return_value.11 = cast(value=$const46.10)
DEBUG 2024-06-11 13:37:26,158 - on stmt: return $48return_value.11
DEBUG 2024-06-11 13:37:26,158 - defs defaultdict(<class 'list'>,
            {'$34call.9': [(<numba.core.ir.Assign object at 0x0000019A98DA0290>,
                            0)],
             '$48return_value.11': [(<numba.core.ir.Assign object at 0x0000019A98DA0690>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A98D8F2D0>,
                                  0)],
             '$const46.10': [(<numba.core.ir.Assign object at 0x0000019A98DA04D0>,
                              0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x0000019A98D8ED10>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x0000019A98D8EC10>,
                             0)],
             'num_table': [(<numba.core.ir.Assign object at 0x0000019A98D8EE10>,
                            0)],
             'scale': [(<numba.core.ir.Assign object at 0x0000019A98D8EF50>,
                        0)],
             't_out': [(<numba.core.ir.Assign object at 0x0000019A98D8EB50>,
                        0)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A98D8EA10>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000019A98D8F050>, 0)]})
DEBUG 2024-06-11 13:37:26,158 - SSA violators <numba.core.utils.OrderedSet object at 0x0000019A98CE7250>
DEBUG 2024-06-11 13:37:26,166 - bytecode dump:
>          0	NOP(arg=None, lineno=7)
           2	RESUME(arg=0, lineno=7)
           4	LOAD_GLOBAL(arg=1, lineno=9)
          16	LOAD_FAST(arg=5, lineno=9)
          18	LOAD_FAST(arg=4, lineno=9)
          20	BINARY_OP(arg=5, lineno=9)
          24	PRECALL(arg=1, lineno=9)
          28	CALL(arg=1, lineno=9)
          38	STORE_FAST(arg=7, lineno=9)
          40	LOAD_CONST(arg=1, lineno=10)
          42	STORE_FAST(arg=8, lineno=10)
          44	LOAD_CONST(arg=2, lineno=12)
          46	STORE_FAST(arg=9, lineno=12)
          48	LOAD_CONST(arg=1, lineno=13)
          50	STORE_FAST(arg=10, lineno=13)
          52	LOAD_CONST(arg=1, lineno=14)
          54	STORE_FAST(arg=11, lineno=14)
          56	LOAD_CONST(arg=2, lineno=15)
          58	STORE_FAST(arg=12, lineno=15)
          60	LOAD_CONST(arg=1, lineno=16)
          62	STORE_FAST(arg=13, lineno=16)
          64	LOAD_CONST(arg=1, lineno=17)
          66	STORE_FAST(arg=14, lineno=17)
          68	LOAD_FAST(arg=2, lineno=19)
          70	LOAD_ATTR(arg=1, lineno=19)
          80	LOAD_CONST(arg=2, lineno=19)
          82	BINARY_SUBSCR(arg=None, lineno=19)
          92	STORE_FAST(arg=15, lineno=19)
          94	LOAD_FAST(arg=0, lineno=20)
          96	LOAD_ATTR(arg=1, lineno=20)
         106	LOAD_CONST(arg=2, lineno=20)
         108	BINARY_SUBSCR(arg=None, lineno=20)
         118	STORE_FAST(arg=16, lineno=20)
         120	LOAD_FAST(arg=1, lineno=21)
         122	LOAD_ATTR(arg=1, lineno=21)
         132	LOAD_CONST(arg=2, lineno=21)
         134	BINARY_SUBSCR(arg=None, lineno=21)
         144	STORE_FAST(arg=17, lineno=21)
         146	LOAD_GLOBAL(arg=5, lineno=23)
         158	LOAD_FAST(arg=17, lineno=23)
         160	PRECALL(arg=1, lineno=23)
         164	CALL(arg=1, lineno=23)
         174	GET_ITER(arg=None, lineno=23)
>        176	NOP(arg=1, lineno=23)
         178	FOR_ITER(arg=301, lineno=23)
         180	STORE_FAST(arg=18, lineno=23)
         182	LOAD_FAST(arg=1, lineno=24)
         184	LOAD_FAST(arg=18, lineno=24)
         186	BINARY_SUBSCR(arg=None, lineno=24)
         196	STORE_FAST(arg=8, lineno=24)
         198	LOAD_GLOBAL(arg=1, lineno=27)
         210	LOAD_FAST(arg=8, lineno=27)
         212	PRECALL(arg=1, lineno=27)
         216	CALL(arg=1, lineno=27)
         226	STORE_FAST(arg=9, lineno=27)
         228	LOAD_FAST(arg=5, lineno=30)
         230	LOAD_FAST(arg=8, lineno=30)
         232	LOAD_FAST(arg=9, lineno=30)
         234	BINARY_OP(arg=10, lineno=30)
         238	BINARY_OP(arg=5, lineno=30)
         242	STORE_FAST(arg=10, lineno=30)
         244	LOAD_FAST(arg=10, lineno=33)
         246	LOAD_FAST(arg=4, lineno=33)
         248	BINARY_OP(arg=5, lineno=33)
         252	STORE_FAST(arg=11, lineno=33)
         254	LOAD_GLOBAL(arg=1, lineno=34)
         266	LOAD_FAST(arg=11, lineno=34)
         268	PRECALL(arg=1, lineno=34)
         272	CALL(arg=1, lineno=34)
         282	STORE_FAST(arg=12, lineno=34)
         284	LOAD_FAST(arg=11, lineno=37)
         286	LOAD_FAST(arg=12, lineno=37)
         288	BINARY_OP(arg=10, lineno=37)
         292	STORE_FAST(arg=13, lineno=37)
         294	LOAD_GLOBAL(arg=7, lineno=40)
         306	LOAD_FAST(arg=9, lineno=40)
         308	LOAD_CONST(arg=3, lineno=40)
         310	BINARY_OP(arg=0, lineno=40)
         314	LOAD_FAST(arg=15, lineno=40)
         316	LOAD_FAST(arg=12, lineno=40)
         318	BINARY_OP(arg=10, lineno=40)
         322	LOAD_FAST(arg=7, lineno=40)
         324	BINARY_OP(arg=2, lineno=40)
         328	PRECALL(arg=2, lineno=40)
         332	CALL(arg=2, lineno=40)
         342	STORE_FAST(arg=19, lineno=40)
         344	LOAD_GLOBAL(arg=9, lineno=41)
         356	LOAD_FAST(arg=19, lineno=41)
         358	PRECALL(arg=1, lineno=41)
         362	CALL(arg=1, lineno=41)
         372	GET_ITER(arg=None, lineno=41)
>        374	FOR_ITER(arg=62, lineno=41)
         376	STORE_FAST(arg=20, lineno=41)
         378	LOAD_FAST(arg=2, lineno=44)
         380	LOAD_FAST(arg=12, lineno=44)
         382	LOAD_FAST(arg=20, lineno=44)
         384	LOAD_FAST(arg=7, lineno=44)
         386	BINARY_OP(arg=5, lineno=44)
         390	BINARY_OP(arg=0, lineno=44)
         394	BINARY_SUBSCR(arg=None, lineno=44)
         404	LOAD_FAST(arg=13, lineno=45)
         406	LOAD_FAST(arg=3, lineno=45)
         408	LOAD_FAST(arg=12, lineno=45)
         410	LOAD_FAST(arg=20, lineno=45)
         412	LOAD_FAST(arg=7, lineno=45)
         414	BINARY_OP(arg=5, lineno=45)
         418	BINARY_OP(arg=0, lineno=45)
         422	BINARY_SUBSCR(arg=None, lineno=45)
         432	BINARY_OP(arg=5, lineno=45)
         436	BINARY_OP(arg=0, lineno=44)
         440	STORE_FAST(arg=14, lineno=43)
         442	LOAD_FAST(arg=6, lineno=47)
         444	LOAD_FAST(arg=18, lineno=47)
         446	COPY(arg=2, lineno=47)
         448	COPY(arg=2, lineno=47)
         450	BINARY_SUBSCR(arg=None, lineno=47)
         460	LOAD_FAST(arg=14, lineno=47)
         462	LOAD_FAST(arg=0, lineno=47)
         464	LOAD_FAST(arg=9, lineno=47)
         466	LOAD_FAST(arg=20, lineno=47)
         468	BINARY_OP(arg=10, lineno=47)
         472	BINARY_SUBSCR(arg=None, lineno=47)
         482	BINARY_OP(arg=5, lineno=47)
         486	BINARY_OP(arg=13, lineno=47)
         490	SWAP(arg=3, lineno=47)
         492	SWAP(arg=2, lineno=47)
         494	STORE_SUBSCR(arg=None, lineno=47)
         498	JUMP_BACKWARD(arg=63, lineno=47)
>        500	LOAD_FAST(arg=5, lineno=50)
         502	LOAD_FAST(arg=10, lineno=50)
         504	BINARY_OP(arg=10, lineno=50)
         508	STORE_FAST(arg=10, lineno=50)
         510	LOAD_FAST(arg=10, lineno=53)
         512	LOAD_FAST(arg=4, lineno=53)
         514	BINARY_OP(arg=5, lineno=53)
         518	STORE_FAST(arg=11, lineno=53)
         520	LOAD_GLOBAL(arg=1, lineno=54)
         532	LOAD_FAST(arg=11, lineno=54)
         534	PRECALL(arg=1, lineno=54)
         538	CALL(arg=1, lineno=54)
         548	STORE_FAST(arg=12, lineno=54)
         550	LOAD_FAST(arg=11, lineno=57)
         552	LOAD_FAST(arg=12, lineno=57)
         554	BINARY_OP(arg=10, lineno=57)
         558	STORE_FAST(arg=13, lineno=57)
         560	LOAD_GLOBAL(arg=7, lineno=60)
         572	LOAD_FAST(arg=16, lineno=60)
         574	LOAD_FAST(arg=9, lineno=60)
         576	BINARY_OP(arg=10, lineno=60)
         580	LOAD_CONST(arg=3, lineno=60)
         582	BINARY_OP(arg=10, lineno=60)
         586	LOAD_FAST(arg=15, lineno=60)
         588	LOAD_FAST(arg=12, lineno=60)
         590	BINARY_OP(arg=10, lineno=60)
         594	LOAD_FAST(arg=7, lineno=60)
         596	BINARY_OP(arg=2, lineno=60)
         600	PRECALL(arg=2, lineno=60)
         604	CALL(arg=2, lineno=60)
         614	STORE_FAST(arg=21, lineno=60)
         616	LOAD_GLOBAL(arg=9, lineno=61)
         628	LOAD_FAST(arg=21, lineno=61)
         630	PRECALL(arg=1, lineno=61)
         634	CALL(arg=1, lineno=61)
         644	GET_ITER(arg=None, lineno=61)
>        646	FOR_ITER(arg=65, lineno=61)
         648	STORE_FAST(arg=22, lineno=61)
         650	LOAD_FAST(arg=2, lineno=63)
         652	LOAD_FAST(arg=12, lineno=63)
         654	LOAD_FAST(arg=22, lineno=63)
         656	LOAD_FAST(arg=7, lineno=63)
         658	BINARY_OP(arg=5, lineno=63)
         662	BINARY_OP(arg=0, lineno=63)
         666	BINARY_SUBSCR(arg=None, lineno=63)
         676	LOAD_FAST(arg=13, lineno=64)
         678	LOAD_FAST(arg=3, lineno=64)
         680	LOAD_FAST(arg=12, lineno=64)
         682	LOAD_FAST(arg=22, lineno=64)
         684	LOAD_FAST(arg=7, lineno=64)
         686	BINARY_OP(arg=5, lineno=64)
         690	BINARY_OP(arg=0, lineno=64)
         694	BINARY_SUBSCR(arg=None, lineno=64)
         704	BINARY_OP(arg=5, lineno=64)
         708	BINARY_OP(arg=0, lineno=63)
         712	STORE_FAST(arg=14, lineno=62)
         714	LOAD_FAST(arg=6, lineno=66)
         716	LOAD_FAST(arg=18, lineno=66)
         718	COPY(arg=2, lineno=66)
         720	COPY(arg=2, lineno=66)
         722	BINARY_SUBSCR(arg=None, lineno=66)
         732	LOAD_FAST(arg=14, lineno=66)
         734	LOAD_FAST(arg=0, lineno=66)
         736	LOAD_FAST(arg=9, lineno=66)
         738	LOAD_FAST(arg=22, lineno=66)
         740	BINARY_OP(arg=0, lineno=66)
         744	LOAD_CONST(arg=3, lineno=66)
         746	BINARY_OP(arg=0, lineno=66)
         750	BINARY_SUBSCR(arg=None, lineno=66)
         760	BINARY_OP(arg=5, lineno=66)
         764	BINARY_OP(arg=13, lineno=66)
         768	SWAP(arg=3, lineno=66)
         770	SWAP(arg=2, lineno=66)
         772	STORE_SUBSCR(arg=None, lineno=66)
         776	JUMP_BACKWARD(arg=66, lineno=66)
>        778	NOP(arg=1, lineno=61)
         780	JUMP_BACKWARD(arg=303, lineno=61)
>        782	LOAD_CONST(arg=0, lineno=23)
         784	RETURN_VALUE(arg=None, lineno=23)
DEBUG 2024-06-11 13:37:26,166 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 13:37:26,166 - stack: []
DEBUG 2024-06-11 13:37:26,166 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 13:37:26,166 - dispatch pc=0, inst=NOP(arg=None, lineno=7)
DEBUG 2024-06-11 13:37:26,166 - stack []
DEBUG 2024-06-11 13:37:26,166 - dispatch pc=2, inst=RESUME(arg=0, lineno=7)
DEBUG 2024-06-11 13:37:26,166 - stack []
DEBUG 2024-06-11 13:37:26,167 - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=9)
DEBUG 2024-06-11 13:37:26,167 - stack []
DEBUG 2024-06-11 13:37:26,167 - dispatch pc=16, inst=LOAD_FAST(arg=5, lineno=9)
DEBUG 2024-06-11 13:37:26,167 - stack ['$null$4.1', '$4load_global.0']
DEBUG 2024-06-11 13:37:26,167 - dispatch pc=18, inst=LOAD_FAST(arg=4, lineno=9)
DEBUG 2024-06-11 13:37:26,167 - stack ['$null$4.1', '$4load_global.0', '$scale16.2']
DEBUG 2024-06-11 13:37:26,167 - dispatch pc=20, inst=BINARY_OP(arg=5, lineno=9)
DEBUG 2024-06-11 13:37:26,167 - stack ['$null$4.1', '$4load_global.0', '$scale16.2', '$num_table18.3']
DEBUG 2024-06-11 13:37:26,167 - dispatch pc=24, inst=PRECALL(arg=1, lineno=9)
DEBUG 2024-06-11 13:37:26,167 - stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
DEBUG 2024-06-11 13:37:26,167 - dispatch pc=28, inst=CALL(arg=1, lineno=9)
DEBUG 2024-06-11 13:37:26,167 - stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
DEBUG 2024-06-11 13:37:26,167 - dispatch pc=38, inst=STORE_FAST(arg=7, lineno=9)
DEBUG 2024-06-11 13:37:26,169 - stack ['$28call.5']
DEBUG 2024-06-11 13:37:26,169 - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=10)
DEBUG 2024-06-11 13:37:26,169 - stack []
DEBUG 2024-06-11 13:37:26,169 - dispatch pc=42, inst=STORE_FAST(arg=8, lineno=10)
DEBUG 2024-06-11 13:37:26,169 - stack ['$const40.6']
DEBUG 2024-06-11 13:37:26,169 - dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=12)
DEBUG 2024-06-11 13:37:26,169 - stack []
DEBUG 2024-06-11 13:37:26,169 - dispatch pc=46, inst=STORE_FAST(arg=9, lineno=12)
DEBUG 2024-06-11 13:37:26,169 - stack ['$const44.7']
DEBUG 2024-06-11 13:37:26,169 - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=13)
DEBUG 2024-06-11 13:37:26,170 - stack []
DEBUG 2024-06-11 13:37:26,170 - dispatch pc=50, inst=STORE_FAST(arg=10, lineno=13)
DEBUG 2024-06-11 13:37:26,170 - stack ['$const48.8']
DEBUG 2024-06-11 13:37:26,170 - dispatch pc=52, inst=LOAD_CONST(arg=1, lineno=14)
DEBUG 2024-06-11 13:37:26,170 - stack []
DEBUG 2024-06-11 13:37:26,170 - dispatch pc=54, inst=STORE_FAST(arg=11, lineno=14)
DEBUG 2024-06-11 13:37:26,170 - stack ['$const52.9']
DEBUG 2024-06-11 13:37:26,170 - dispatch pc=56, inst=LOAD_CONST(arg=2, lineno=15)
DEBUG 2024-06-11 13:37:26,170 - stack []
DEBUG 2024-06-11 13:37:26,170 - dispatch pc=58, inst=STORE_FAST(arg=12, lineno=15)
DEBUG 2024-06-11 13:37:26,171 - stack ['$const56.10']
DEBUG 2024-06-11 13:37:26,171 - dispatch pc=60, inst=LOAD_CONST(arg=1, lineno=16)
DEBUG 2024-06-11 13:37:26,171 - stack []
DEBUG 2024-06-11 13:37:26,171 - dispatch pc=62, inst=STORE_FAST(arg=13, lineno=16)
DEBUG 2024-06-11 13:37:26,171 - stack ['$const60.11']
DEBUG 2024-06-11 13:37:26,171 - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=17)
DEBUG 2024-06-11 13:37:26,171 - stack []
DEBUG 2024-06-11 13:37:26,171 - dispatch pc=66, inst=STORE_FAST(arg=14, lineno=17)
DEBUG 2024-06-11 13:37:26,171 - stack ['$const64.12']
DEBUG 2024-06-11 13:37:26,171 - dispatch pc=68, inst=LOAD_FAST(arg=2, lineno=19)
DEBUG 2024-06-11 13:37:26,171 - stack []
DEBUG 2024-06-11 13:37:26,172 - dispatch pc=70, inst=LOAD_ATTR(arg=1, lineno=19)
DEBUG 2024-06-11 13:37:26,172 - stack ['$interp_win68.13']
DEBUG 2024-06-11 13:37:26,172 - dispatch pc=80, inst=LOAD_CONST(arg=2, lineno=19)
DEBUG 2024-06-11 13:37:26,172 - stack ['$70load_attr.14']
DEBUG 2024-06-11 13:37:26,173 - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=19)
DEBUG 2024-06-11 13:37:26,173 - stack ['$70load_attr.14', '$const80.15']
DEBUG 2024-06-11 13:37:26,173 - dispatch pc=92, inst=STORE_FAST(arg=15, lineno=19)
DEBUG 2024-06-11 13:37:26,173 - stack ['$82binary_subscr.16']
DEBUG 2024-06-11 13:37:26,173 - dispatch pc=94, inst=LOAD_FAST(arg=0, lineno=20)
DEBUG 2024-06-11 13:37:26,173 - stack []
DEBUG 2024-06-11 13:37:26,173 - dispatch pc=96, inst=LOAD_ATTR(arg=1, lineno=20)
DEBUG 2024-06-11 13:37:26,173 - stack ['$x94.17']
DEBUG 2024-06-11 13:37:26,173 - dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=20)
WARNING 2024-06-11 13:37:26,173 - From C:\Users\Dell\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\backend\common\global_state.py:82: The name tf.reset_default_graph is deprecated. Please use tf.compat.v1.reset_default_graph instead.

DEBUG 2024-06-11 13:37:26,173 - stack ['$96load_attr.18']
DEBUG 2024-06-11 13:37:26,308 - dispatch pc=108, inst=BINARY_SUBSCR(arg=None, lineno=20)
DEBUG 2024-06-11 13:37:26,314 - stack ['$96load_attr.18', '$const106.19']
DEBUG 2024-06-11 13:37:26,314 - dispatch pc=118, inst=STORE_FAST(arg=16, lineno=20)
DEBUG 2024-06-11 13:37:26,314 - stack ['$108binary_subscr.20']
DEBUG 2024-06-11 13:37:26,314 - dispatch pc=120, inst=LOAD_FAST(arg=1, lineno=21)
DEBUG 2024-06-11 13:37:26,314 - stack []
DEBUG 2024-06-11 13:37:26,314 - dispatch pc=122, inst=LOAD_ATTR(arg=1, lineno=21)
DEBUG 2024-06-11 13:37:26,314 - stack ['$t_out120.21']
DEBUG 2024-06-11 13:37:26,314 - dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=21)
DEBUG 2024-06-11 13:37:26,314 - stack ['$122load_attr.22']
DEBUG 2024-06-11 13:37:26,314 - dispatch pc=134, inst=BINARY_SUBSCR(arg=None, lineno=21)
DEBUG 2024-06-11 13:37:26,314 - stack ['$122load_attr.22', '$const132.23']
DEBUG 2024-06-11 13:37:26,316 - dispatch pc=144, inst=STORE_FAST(arg=17, lineno=21)
DEBUG 2024-06-11 13:37:26,316 - stack ['$134binary_subscr.24']
DEBUG 2024-06-11 13:37:26,316 - dispatch pc=146, inst=LOAD_GLOBAL(arg=5, lineno=23)
DEBUG 2024-06-11 13:37:26,316 - stack []
DEBUG 2024-06-11 13:37:26,316 - dispatch pc=158, inst=LOAD_FAST(arg=17, lineno=23)
DEBUG 2024-06-11 13:37:26,316 - stack ['$null$146.26', '$146load_global.25']
DEBUG 2024-06-11 13:37:26,316 - dispatch pc=160, inst=PRECALL(arg=1, lineno=23)
DEBUG 2024-06-11 13:37:26,316 - stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
DEBUG 2024-06-11 13:37:26,316 - dispatch pc=164, inst=CALL(arg=1, lineno=23)
DEBUG 2024-06-11 13:37:26,316 - stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
DEBUG 2024-06-11 13:37:26,316 - dispatch pc=174, inst=GET_ITER(arg=None, lineno=23)
DEBUG 2024-06-11 13:37:26,316 - stack ['$164call.28']
DEBUG 2024-06-11 13:37:26,316 - end state. edges=[Edge(pc=176, stack=('$174get_iter.29',), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:37:26,316 - pending: deque([State(pc_initial=176 nstack_initial=1)])
DEBUG 2024-06-11 13:37:26,316 - stack: ['$phi176.0']
DEBUG 2024-06-11 13:37:26,316 - state.pc_initial: State(pc_initial=176 nstack_initial=1)
DEBUG 2024-06-11 13:37:26,316 - dispatch pc=176, inst=NOP(arg=1, lineno=23)
DEBUG 2024-06-11 13:37:26,316 - stack ['$phi176.0']
DEBUG 2024-06-11 13:37:26,316 - end state. edges=[Edge(pc=178, stack=('$phi176.0',), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:37:26,316 - pending: deque([State(pc_initial=178 nstack_initial=1)])
DEBUG 2024-06-11 13:37:26,316 - stack: ['$phi178.0']
DEBUG 2024-06-11 13:37:26,316 - state.pc_initial: State(pc_initial=178 nstack_initial=1)
DEBUG 2024-06-11 13:37:26,316 - dispatch pc=178, inst=FOR_ITER(arg=301, lineno=23)
DEBUG 2024-06-11 13:37:26,316 - stack ['$phi178.0']
DEBUG 2024-06-11 13:37:26,316 - end state. edges=[Edge(pc=782, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=('$phi178.0', '$178for_iter.2'), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:37:26,316 - pending: deque([State(pc_initial=782 nstack_initial=0), State(pc_initial=180 nstack_initial=2)])
DEBUG 2024-06-11 13:37:26,316 - stack: []
DEBUG 2024-06-11 13:37:26,316 - state.pc_initial: State(pc_initial=782 nstack_initial=0)
DEBUG 2024-06-11 13:37:26,316 - dispatch pc=782, inst=LOAD_CONST(arg=0, lineno=23)
DEBUG 2024-06-11 13:37:26,316 - stack []
DEBUG 2024-06-11 13:37:26,316 - dispatch pc=784, inst=RETURN_VALUE(arg=None, lineno=23)
DEBUG 2024-06-11 13:37:26,316 - stack ['$const782.0']
DEBUG 2024-06-11 13:37:26,316 - end state. edges=[]
DEBUG 2024-06-11 13:37:26,316 - pending: deque([State(pc_initial=180 nstack_initial=2)])
DEBUG 2024-06-11 13:37:26,316 - stack: ['$phi180.0', '$phi180.1']
DEBUG 2024-06-11 13:37:26,316 - state.pc_initial: State(pc_initial=180 nstack_initial=2)
DEBUG 2024-06-11 13:37:26,316 - dispatch pc=180, inst=STORE_FAST(arg=18, lineno=23)
DEBUG 2024-06-11 13:37:26,316 - stack ['$phi180.0', '$phi180.1']
DEBUG 2024-06-11 13:37:26,316 - dispatch pc=182, inst=LOAD_FAST(arg=1, lineno=24)
DEBUG 2024-06-11 13:37:26,316 - stack ['$phi180.0']
DEBUG 2024-06-11 13:37:26,316 - dispatch pc=184, inst=LOAD_FAST(arg=18, lineno=24)
DEBUG 2024-06-11 13:37:26,316 - stack ['$phi180.0', '$t_out182.2']
DEBUG 2024-06-11 13:37:26,316 - dispatch pc=186, inst=BINARY_SUBSCR(arg=None, lineno=24)
DEBUG 2024-06-11 13:37:26,316 - stack ['$phi180.0', '$t_out182.2', '$t184.3']
DEBUG 2024-06-11 13:37:26,316 - dispatch pc=196, inst=STORE_FAST(arg=8, lineno=24)
DEBUG 2024-06-11 13:37:26,316 - stack ['$phi180.0', '$186binary_subscr.4']
DEBUG 2024-06-11 13:37:26,316 - dispatch pc=198, inst=LOAD_GLOBAL(arg=1, lineno=27)
DEBUG 2024-06-11 13:37:26,316 - stack ['$phi180.0']
DEBUG 2024-06-11 13:37:26,316 - dispatch pc=210, inst=LOAD_FAST(arg=8, lineno=27)
DEBUG 2024-06-11 13:37:26,316 - stack ['$phi180.0', '$null$198.6', '$198load_global.5']
DEBUG 2024-06-11 13:37:26,316 - dispatch pc=212, inst=PRECALL(arg=1, lineno=27)
DEBUG 2024-06-11 13:37:26,316 - stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
DEBUG 2024-06-11 13:37:26,316 - dispatch pc=216, inst=CALL(arg=1, lineno=27)
DEBUG 2024-06-11 13:37:26,316 - stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
DEBUG 2024-06-11 13:37:26,316 - dispatch pc=226, inst=STORE_FAST(arg=9, lineno=27)
DEBUG 2024-06-11 13:37:26,316 - stack ['$phi180.0', '$216call.8']
DEBUG 2024-06-11 13:37:26,316 - dispatch pc=228, inst=LOAD_FAST(arg=5, lineno=30)
DEBUG 2024-06-11 13:37:26,316 - stack ['$phi180.0']
DEBUG 2024-06-11 13:37:26,316 - dispatch pc=230, inst=LOAD_FAST(arg=8, lineno=30)
DEBUG 2024-06-11 13:37:26,316 - stack ['$phi180.0', '$scale228.9']
DEBUG 2024-06-11 13:37:26,316 - dispatch pc=232, inst=LOAD_FAST(arg=9, lineno=30)
DEBUG 2024-06-11 13:37:26,323 - stack ['$phi180.0', '$scale228.9', '$time_register230.10']
DEBUG 2024-06-11 13:37:26,323 - dispatch pc=234, inst=BINARY_OP(arg=10, lineno=30)
DEBUG 2024-06-11 13:37:26,323 - stack ['$phi180.0', '$scale228.9', '$time_register230.10', '$n232.11']
DEBUG 2024-06-11 13:37:26,323 - dispatch pc=238, inst=BINARY_OP(arg=5, lineno=30)
DEBUG 2024-06-11 13:37:26,323 - stack ['$phi180.0', '$scale228.9', '$binop_sub234.12']
DEBUG 2024-06-11 13:37:26,323 - dispatch pc=242, inst=STORE_FAST(arg=10, lineno=30)
DEBUG 2024-06-11 13:37:26,323 - stack ['$phi180.0', '$binop_mul238.13']
DEBUG 2024-06-11 13:37:26,323 - dispatch pc=244, inst=LOAD_FAST(arg=10, lineno=33)
DEBUG 2024-06-11 13:37:26,323 - stack ['$phi180.0']
DEBUG 2024-06-11 13:37:26,323 - dispatch pc=246, inst=LOAD_FAST(arg=4, lineno=33)
DEBUG 2024-06-11 13:37:26,323 - stack ['$phi180.0', '$frac244.14']
DEBUG 2024-06-11 13:37:26,324 - dispatch pc=248, inst=BINARY_OP(arg=5, lineno=33)
DEBUG 2024-06-11 13:37:26,324 - stack ['$phi180.0', '$frac244.14', '$num_table246.15']
DEBUG 2024-06-11 13:37:26,324 - dispatch pc=252, inst=STORE_FAST(arg=11, lineno=33)
DEBUG 2024-06-11 13:37:26,324 - stack ['$phi180.0', '$binop_mul248.16']
DEBUG 2024-06-11 13:37:26,324 - dispatch pc=254, inst=LOAD_GLOBAL(arg=1, lineno=34)
DEBUG 2024-06-11 13:37:26,324 - stack ['$phi180.0']
DEBUG 2024-06-11 13:37:26,324 - dispatch pc=266, inst=LOAD_FAST(arg=11, lineno=34)
DEBUG 2024-06-11 13:37:26,324 - stack ['$phi180.0', '$null$254.18', '$254load_global.17']
DEBUG 2024-06-11 13:37:26,324 - dispatch pc=268, inst=PRECALL(arg=1, lineno=34)
DEBUG 2024-06-11 13:37:26,324 - stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
DEBUG 2024-06-11 13:37:26,324 - dispatch pc=272, inst=CALL(arg=1, lineno=34)
DEBUG 2024-06-11 13:37:26,325 - stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
DEBUG 2024-06-11 13:37:26,325 - dispatch pc=282, inst=STORE_FAST(arg=12, lineno=34)
DEBUG 2024-06-11 13:37:26,325 - stack ['$phi180.0', '$272call.20']
DEBUG 2024-06-11 13:37:26,325 - dispatch pc=284, inst=LOAD_FAST(arg=11, lineno=37)
DEBUG 2024-06-11 13:37:26,325 - stack ['$phi180.0']
DEBUG 2024-06-11 13:37:26,325 - dispatch pc=286, inst=LOAD_FAST(arg=12, lineno=37)
DEBUG 2024-06-11 13:37:26,325 - stack ['$phi180.0', '$index_frac284.21']
DEBUG 2024-06-11 13:37:26,325 - dispatch pc=288, inst=BINARY_OP(arg=10, lineno=37)
DEBUG 2024-06-11 13:37:26,325 - stack ['$phi180.0', '$index_frac284.21', '$offset286.22']
DEBUG 2024-06-11 13:37:26,325 - dispatch pc=292, inst=STORE_FAST(arg=13, lineno=37)
DEBUG 2024-06-11 13:37:26,327 - stack ['$phi180.0', '$binop_sub288.23']
DEBUG 2024-06-11 13:37:26,327 - dispatch pc=294, inst=LOAD_GLOBAL(arg=7, lineno=40)
DEBUG 2024-06-11 13:37:26,327 - stack ['$phi180.0']
DEBUG 2024-06-11 13:37:26,327 - dispatch pc=306, inst=LOAD_FAST(arg=9, lineno=40)
DEBUG 2024-06-11 13:37:26,327 - stack ['$phi180.0', '$null$294.25', '$294load_global.24']
DEBUG 2024-06-11 13:37:26,327 - dispatch pc=308, inst=LOAD_CONST(arg=3, lineno=40)
DEBUG 2024-06-11 13:37:26,327 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26']
DEBUG 2024-06-11 13:37:26,327 - dispatch pc=310, inst=BINARY_OP(arg=0, lineno=40)
DEBUG 2024-06-11 13:37:26,327 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26', '$const308.27']
DEBUG 2024-06-11 13:37:26,327 - dispatch pc=314, inst=LOAD_FAST(arg=15, lineno=40)
DEBUG 2024-06-11 13:37:26,327 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28']
DEBUG 2024-06-11 13:37:26,328 - dispatch pc=316, inst=LOAD_FAST(arg=12, lineno=40)
DEBUG 2024-06-11 13:37:26,328 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29']
DEBUG 2024-06-11 13:37:26,328 - dispatch pc=318, inst=BINARY_OP(arg=10, lineno=40)
DEBUG 2024-06-11 13:37:26,328 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29', '$offset316.30']
DEBUG 2024-06-11 13:37:26,328 - dispatch pc=322, inst=LOAD_FAST(arg=7, lineno=40)
DEBUG 2024-06-11 13:37:26,328 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31']
DEBUG 2024-06-11 13:37:26,328 - dispatch pc=324, inst=BINARY_OP(arg=2, lineno=40)
DEBUG 2024-06-11 13:37:26,328 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31', '$index_step322.32']
DEBUG 2024-06-11 13:37:26,328 - dispatch pc=328, inst=PRECALL(arg=2, lineno=40)
DEBUG 2024-06-11 13:37:26,328 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
DEBUG 2024-06-11 13:37:26,328 - dispatch pc=332, inst=CALL(arg=2, lineno=40)
DEBUG 2024-06-11 13:37:26,328 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
DEBUG 2024-06-11 13:37:26,328 - dispatch pc=342, inst=STORE_FAST(arg=19, lineno=40)
DEBUG 2024-06-11 13:37:26,328 - stack ['$phi180.0', '$332call.34']
DEBUG 2024-06-11 13:37:26,328 - dispatch pc=344, inst=LOAD_GLOBAL(arg=9, lineno=41)
DEBUG 2024-06-11 13:37:26,328 - stack ['$phi180.0']
DEBUG 2024-06-11 13:37:26,328 - dispatch pc=356, inst=LOAD_FAST(arg=19, lineno=41)
DEBUG 2024-06-11 13:37:26,328 - stack ['$phi180.0', '$null$344.36', '$344load_global.35']
DEBUG 2024-06-11 13:37:26,328 - dispatch pc=358, inst=PRECALL(arg=1, lineno=41)
DEBUG 2024-06-11 13:37:26,328 - stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
DEBUG 2024-06-11 13:37:26,328 - dispatch pc=362, inst=CALL(arg=1, lineno=41)
DEBUG 2024-06-11 13:37:26,330 - stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
DEBUG 2024-06-11 13:37:26,330 - dispatch pc=372, inst=GET_ITER(arg=None, lineno=41)
DEBUG 2024-06-11 13:37:26,330 - stack ['$phi180.0', '$362call.38']
DEBUG 2024-06-11 13:37:26,330 - end state. edges=[Edge(pc=374, stack=('$phi180.0', '$372get_iter.39'), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:37:26,330 - pending: deque([State(pc_initial=374 nstack_initial=2)])
DEBUG 2024-06-11 13:37:26,330 - stack: ['$phi374.0', '$phi374.1']
DEBUG 2024-06-11 13:37:26,330 - state.pc_initial: State(pc_initial=374 nstack_initial=2)
DEBUG 2024-06-11 13:37:26,330 - dispatch pc=374, inst=FOR_ITER(arg=62, lineno=41)
DEBUG 2024-06-11 13:37:26,330 - stack ['$phi374.0', '$phi374.1']
DEBUG 2024-06-11 13:37:26,330 - end state. edges=[Edge(pc=500, stack=('$phi374.0',), blockstack=(), npush=0), Edge(pc=376, stack=('$phi374.0', '$phi374.1', '$374for_iter.3'), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:37:26,331 - pending: deque([State(pc_initial=500 nstack_initial=1), State(pc_initial=376 nstack_initial=3)])
DEBUG 2024-06-11 13:37:26,331 - stack: ['$phi500.0']
DEBUG 2024-06-11 13:37:26,331 - state.pc_initial: State(pc_initial=500 nstack_initial=1)
DEBUG 2024-06-11 13:37:26,331 - dispatch pc=500, inst=LOAD_FAST(arg=5, lineno=50)
DEBUG 2024-06-11 13:37:26,331 - stack ['$phi500.0']
DEBUG 2024-06-11 13:37:26,331 - dispatch pc=502, inst=LOAD_FAST(arg=10, lineno=50)
DEBUG 2024-06-11 13:37:26,331 - stack ['$phi500.0', '$scale500.1']
DEBUG 2024-06-11 13:37:26,331 - dispatch pc=504, inst=BINARY_OP(arg=10, lineno=50)
DEBUG 2024-06-11 13:37:26,331 - stack ['$phi500.0', '$scale500.1', '$frac502.2']
DEBUG 2024-06-11 13:37:26,332 - dispatch pc=508, inst=STORE_FAST(arg=10, lineno=50)
DEBUG 2024-06-11 13:37:26,332 - stack ['$phi500.0', '$binop_sub504.3']
DEBUG 2024-06-11 13:37:26,332 - dispatch pc=510, inst=LOAD_FAST(arg=10, lineno=53)
DEBUG 2024-06-11 13:37:26,332 - stack ['$phi500.0']
DEBUG 2024-06-11 13:37:26,332 - dispatch pc=512, inst=LOAD_FAST(arg=4, lineno=53)
DEBUG 2024-06-11 13:37:26,333 - stack ['$phi500.0', '$frac510.4']
DEBUG 2024-06-11 13:37:26,333 - dispatch pc=514, inst=BINARY_OP(arg=5, lineno=53)
DEBUG 2024-06-11 13:37:26,333 - stack ['$phi500.0', '$frac510.4', '$num_table512.5']
DEBUG 2024-06-11 13:37:26,333 - dispatch pc=518, inst=STORE_FAST(arg=11, lineno=53)
DEBUG 2024-06-11 13:37:26,333 - stack ['$phi500.0', '$binop_mul514.6']
DEBUG 2024-06-11 13:37:26,333 - dispatch pc=520, inst=LOAD_GLOBAL(arg=1, lineno=54)
DEBUG 2024-06-11 13:37:26,333 - stack ['$phi500.0']
DEBUG 2024-06-11 13:37:26,333 - dispatch pc=532, inst=LOAD_FAST(arg=11, lineno=54)
DEBUG 2024-06-11 13:37:26,333 - stack ['$phi500.0', '$null$520.8', '$520load_global.7']
DEBUG 2024-06-11 13:37:26,333 - dispatch pc=534, inst=PRECALL(arg=1, lineno=54)
DEBUG 2024-06-11 13:37:26,333 - stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
DEBUG 2024-06-11 13:37:26,333 - dispatch pc=538, inst=CALL(arg=1, lineno=54)
DEBUG 2024-06-11 13:37:26,334 - stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
DEBUG 2024-06-11 13:37:26,334 - dispatch pc=548, inst=STORE_FAST(arg=12, lineno=54)
DEBUG 2024-06-11 13:37:26,334 - stack ['$phi500.0', '$538call.10']
DEBUG 2024-06-11 13:37:26,334 - dispatch pc=550, inst=LOAD_FAST(arg=11, lineno=57)
DEBUG 2024-06-11 13:37:26,334 - stack ['$phi500.0']
DEBUG 2024-06-11 13:37:26,334 - dispatch pc=552, inst=LOAD_FAST(arg=12, lineno=57)
DEBUG 2024-06-11 13:37:26,334 - stack ['$phi500.0', '$index_frac550.11']
DEBUG 2024-06-11 13:37:26,334 - dispatch pc=554, inst=BINARY_OP(arg=10, lineno=57)
DEBUG 2024-06-11 13:37:26,334 - stack ['$phi500.0', '$index_frac550.11', '$offset552.12']
DEBUG 2024-06-11 13:37:26,334 - dispatch pc=558, inst=STORE_FAST(arg=13, lineno=57)
DEBUG 2024-06-11 13:37:26,335 - stack ['$phi500.0', '$binop_sub554.13']
DEBUG 2024-06-11 13:37:26,335 - dispatch pc=560, inst=LOAD_GLOBAL(arg=7, lineno=60)
DEBUG 2024-06-11 13:37:26,335 - stack ['$phi500.0']
DEBUG 2024-06-11 13:37:26,335 - dispatch pc=572, inst=LOAD_FAST(arg=16, lineno=60)
DEBUG 2024-06-11 13:37:26,335 - stack ['$phi500.0', '$null$560.15', '$560load_global.14']
DEBUG 2024-06-11 13:37:26,335 - dispatch pc=574, inst=LOAD_FAST(arg=9, lineno=60)
DEBUG 2024-06-11 13:37:26,335 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16']
DEBUG 2024-06-11 13:37:26,335 - dispatch pc=576, inst=BINARY_OP(arg=10, lineno=60)
DEBUG 2024-06-11 13:37:26,335 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16', '$n574.17']
DEBUG 2024-06-11 13:37:26,335 - dispatch pc=580, inst=LOAD_CONST(arg=3, lineno=60)
DEBUG 2024-06-11 13:37:26,336 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18']
DEBUG 2024-06-11 13:37:26,336 - dispatch pc=582, inst=BINARY_OP(arg=10, lineno=60)
DEBUG 2024-06-11 13:37:26,336 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18', '$const580.19']
DEBUG 2024-06-11 13:37:26,336 - dispatch pc=586, inst=LOAD_FAST(arg=15, lineno=60)
DEBUG 2024-06-11 13:37:26,336 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20']
DEBUG 2024-06-11 13:37:26,336 - dispatch pc=588, inst=LOAD_FAST(arg=12, lineno=60)
DEBUG 2024-06-11 13:37:26,336 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21']
DEBUG 2024-06-11 13:37:26,336 - dispatch pc=590, inst=BINARY_OP(arg=10, lineno=60)
DEBUG 2024-06-11 13:37:26,336 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21', '$offset588.22']
DEBUG 2024-06-11 13:37:26,336 - dispatch pc=594, inst=LOAD_FAST(arg=7, lineno=60)
DEBUG 2024-06-11 13:37:26,337 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23']
DEBUG 2024-06-11 13:37:26,337 - dispatch pc=596, inst=BINARY_OP(arg=2, lineno=60)
DEBUG 2024-06-11 13:37:26,337 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23', '$index_step594.24']
DEBUG 2024-06-11 13:37:26,337 - dispatch pc=600, inst=PRECALL(arg=2, lineno=60)
DEBUG 2024-06-11 13:37:26,337 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
DEBUG 2024-06-11 13:37:26,337 - dispatch pc=604, inst=CALL(arg=2, lineno=60)
DEBUG 2024-06-11 13:37:26,337 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
DEBUG 2024-06-11 13:37:26,337 - dispatch pc=614, inst=STORE_FAST(arg=21, lineno=60)
DEBUG 2024-06-11 13:37:26,337 - stack ['$phi500.0', '$604call.26']
DEBUG 2024-06-11 13:37:26,337 - dispatch pc=616, inst=LOAD_GLOBAL(arg=9, lineno=61)
DEBUG 2024-06-11 13:37:26,337 - stack ['$phi500.0']
DEBUG 2024-06-11 13:37:26,337 - dispatch pc=628, inst=LOAD_FAST(arg=21, lineno=61)
DEBUG 2024-06-11 13:37:26,337 - stack ['$phi500.0', '$null$616.28', '$616load_global.27']
DEBUG 2024-06-11 13:37:26,337 - dispatch pc=630, inst=PRECALL(arg=1, lineno=61)
DEBUG 2024-06-11 13:37:26,337 - stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
DEBUG 2024-06-11 13:37:26,339 - dispatch pc=634, inst=CALL(arg=1, lineno=61)
DEBUG 2024-06-11 13:37:26,339 - stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
DEBUG 2024-06-11 13:37:26,339 - dispatch pc=644, inst=GET_ITER(arg=None, lineno=61)
DEBUG 2024-06-11 13:37:26,339 - stack ['$phi500.0', '$634call.30']
DEBUG 2024-06-11 13:37:26,339 - end state. edges=[Edge(pc=646, stack=('$phi500.0', '$644get_iter.31'), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:37:26,339 - pending: deque([State(pc_initial=376 nstack_initial=3), State(pc_initial=646 nstack_initial=2)])
DEBUG 2024-06-11 13:37:26,339 - stack: ['$phi376.0', '$phi376.1', '$phi376.2']
DEBUG 2024-06-11 13:37:26,339 - state.pc_initial: State(pc_initial=376 nstack_initial=3)
DEBUG 2024-06-11 13:37:26,339 - dispatch pc=376, inst=STORE_FAST(arg=20, lineno=41)
DEBUG 2024-06-11 13:37:26,341 - stack ['$phi376.0', '$phi376.1', '$phi376.2']
DEBUG 2024-06-11 13:37:26,341 - dispatch pc=378, inst=LOAD_FAST(arg=2, lineno=44)
DEBUG 2024-06-11 13:37:26,341 - stack ['$phi376.0', '$phi376.1']
DEBUG 2024-06-11 13:37:26,341 - dispatch pc=380, inst=LOAD_FAST(arg=12, lineno=44)
DEBUG 2024-06-11 13:37:26,341 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3']
DEBUG 2024-06-11 13:37:26,341 - dispatch pc=382, inst=LOAD_FAST(arg=20, lineno=44)
DEBUG 2024-06-11 13:37:26,341 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4']
DEBUG 2024-06-11 13:37:26,341 - dispatch pc=384, inst=LOAD_FAST(arg=7, lineno=44)
DEBUG 2024-06-11 13:37:26,341 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5']
DEBUG 2024-06-11 13:37:26,341 - dispatch pc=386, inst=BINARY_OP(arg=5, lineno=44)
DEBUG 2024-06-11 13:37:26,341 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5', '$index_step384.6']
DEBUG 2024-06-11 13:37:26,341 - dispatch pc=390, inst=BINARY_OP(arg=0, lineno=44)
DEBUG 2024-06-11 13:37:26,341 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$binop_mul386.7']
DEBUG 2024-06-11 13:37:26,341 - dispatch pc=394, inst=BINARY_SUBSCR(arg=None, lineno=44)
DEBUG 2024-06-11 13:37:26,342 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$binop_add390.8']
DEBUG 2024-06-11 13:37:26,342 - dispatch pc=404, inst=LOAD_FAST(arg=13, lineno=45)
DEBUG 2024-06-11 13:37:26,342 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9']
DEBUG 2024-06-11 13:37:26,342 - dispatch pc=406, inst=LOAD_FAST(arg=3, lineno=45)
DEBUG 2024-06-11 13:37:26,342 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10']
DEBUG 2024-06-11 13:37:26,342 - dispatch pc=408, inst=LOAD_FAST(arg=12, lineno=45)
DEBUG 2024-06-11 13:37:26,342 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11']
DEBUG 2024-06-11 13:37:26,342 - dispatch pc=410, inst=LOAD_FAST(arg=20, lineno=45)
DEBUG 2024-06-11 13:37:26,342 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12']
DEBUG 2024-06-11 13:37:26,342 - dispatch pc=412, inst=LOAD_FAST(arg=7, lineno=45)
DEBUG 2024-06-11 13:37:26,342 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13']
DEBUG 2024-06-11 13:37:26,342 - dispatch pc=414, inst=BINARY_OP(arg=5, lineno=45)
DEBUG 2024-06-11 13:37:26,342 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13', '$index_step412.14']
DEBUG 2024-06-11 13:37:26,342 - dispatch pc=418, inst=BINARY_OP(arg=0, lineno=45)
DEBUG 2024-06-11 13:37:26,342 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$binop_mul414.15']
DEBUG 2024-06-11 13:37:26,342 - dispatch pc=422, inst=BINARY_SUBSCR(arg=None, lineno=45)
DEBUG 2024-06-11 13:37:26,342 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$binop_add418.16']
DEBUG 2024-06-11 13:37:26,342 - dispatch pc=432, inst=BINARY_OP(arg=5, lineno=45)
DEBUG 2024-06-11 13:37:26,342 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$422binary_subscr.17']
DEBUG 2024-06-11 13:37:26,342 - dispatch pc=436, inst=BINARY_OP(arg=0, lineno=44)
DEBUG 2024-06-11 13:37:26,342 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$binop_mul432.18']
DEBUG 2024-06-11 13:37:26,342 - dispatch pc=440, inst=STORE_FAST(arg=14, lineno=43)
DEBUG 2024-06-11 13:37:26,342 - stack ['$phi376.0', '$phi376.1', '$binop_add436.19']
DEBUG 2024-06-11 13:37:26,342 - dispatch pc=442, inst=LOAD_FAST(arg=6, lineno=47)
DEBUG 2024-06-11 13:37:26,342 - stack ['$phi376.0', '$phi376.1']
DEBUG 2024-06-11 13:37:26,342 - dispatch pc=444, inst=LOAD_FAST(arg=18, lineno=47)
DEBUG 2024-06-11 13:37:26,342 - stack ['$phi376.0', '$phi376.1', '$y442.20']
DEBUG 2024-06-11 13:37:26,342 - dispatch pc=446, inst=COPY(arg=2, lineno=47)
DEBUG 2024-06-11 13:37:26,342 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21']
DEBUG 2024-06-11 13:37:26,342 - dispatch pc=448, inst=COPY(arg=2, lineno=47)
DEBUG 2024-06-11 13:37:26,342 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20']
DEBUG 2024-06-11 13:37:26,342 - dispatch pc=450, inst=BINARY_SUBSCR(arg=None, lineno=47)
DEBUG 2024-06-11 13:37:26,342 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20', '$t444.21']
DEBUG 2024-06-11 13:37:26,342 - dispatch pc=460, inst=LOAD_FAST(arg=14, lineno=47)
DEBUG 2024-06-11 13:37:26,342 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22']
DEBUG 2024-06-11 13:37:26,342 - dispatch pc=462, inst=LOAD_FAST(arg=0, lineno=47)
DEBUG 2024-06-11 13:37:26,342 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23']
DEBUG 2024-06-11 13:37:26,347 - dispatch pc=464, inst=LOAD_FAST(arg=9, lineno=47)
DEBUG 2024-06-11 13:37:26,347 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24']
DEBUG 2024-06-11 13:37:26,347 - dispatch pc=466, inst=LOAD_FAST(arg=20, lineno=47)
DEBUG 2024-06-11 13:37:26,347 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25']
DEBUG 2024-06-11 13:37:26,347 - dispatch pc=468, inst=BINARY_OP(arg=10, lineno=47)
DEBUG 2024-06-11 13:37:26,347 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25', '$i466.26']
DEBUG 2024-06-11 13:37:26,347 - dispatch pc=472, inst=BINARY_SUBSCR(arg=None, lineno=47)
DEBUG 2024-06-11 13:37:26,348 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$binop_sub468.27']
DEBUG 2024-06-11 13:37:26,348 - dispatch pc=482, inst=BINARY_OP(arg=5, lineno=47)
DEBUG 2024-06-11 13:37:26,348 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$472binary_subscr.28']
DEBUG 2024-06-11 13:37:26,348 - dispatch pc=486, inst=BINARY_OP(arg=13, lineno=47)
DEBUG 2024-06-11 13:37:26,348 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$binop_mul482.29']
DEBUG 2024-06-11 13:37:26,348 - dispatch pc=490, inst=SWAP(arg=3, lineno=47)
DEBUG 2024-06-11 13:37:26,348 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$binop_iadd486.30']
DEBUG 2024-06-11 13:37:26,348 - dispatch pc=492, inst=SWAP(arg=2, lineno=47)
DEBUG 2024-06-11 13:37:26,348 - stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$t444.21', '$y442.20']
DEBUG 2024-06-11 13:37:26,348 - dispatch pc=494, inst=STORE_SUBSCR(arg=None, lineno=47)
DEBUG 2024-06-11 13:37:26,348 - stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$y442.20', '$t444.21']
DEBUG 2024-06-11 13:37:26,348 - dispatch pc=498, inst=JUMP_BACKWARD(arg=63, lineno=47)
DEBUG 2024-06-11 13:37:26,349 - stack ['$phi376.0', '$phi376.1']
DEBUG 2024-06-11 13:37:26,349 - end state. edges=[Edge(pc=374, stack=('$phi376.0', '$phi376.1'), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:37:26,349 - pending: deque([State(pc_initial=646 nstack_initial=2), State(pc_initial=374 nstack_initial=2)])
DEBUG 2024-06-11 13:37:26,349 - stack: ['$phi646.0', '$phi646.1']
DEBUG 2024-06-11 13:37:26,349 - state.pc_initial: State(pc_initial=646 nstack_initial=2)
DEBUG 2024-06-11 13:37:26,349 - dispatch pc=646, inst=FOR_ITER(arg=65, lineno=61)
DEBUG 2024-06-11 13:37:26,349 - stack ['$phi646.0', '$phi646.1']
DEBUG 2024-06-11 13:37:26,349 - end state. edges=[Edge(pc=778, stack=('$phi646.0',), blockstack=(), npush=0), Edge(pc=648, stack=('$phi646.0', '$phi646.1', '$646for_iter.3'), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:37:26,349 - pending: deque([State(pc_initial=374 nstack_initial=2), State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
DEBUG 2024-06-11 13:37:26,349 - pending: deque([State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
DEBUG 2024-06-11 13:37:26,349 - stack: ['$phi778.0']
DEBUG 2024-06-11 13:37:26,349 - state.pc_initial: State(pc_initial=778 nstack_initial=1)
DEBUG 2024-06-11 13:37:26,349 - dispatch pc=778, inst=NOP(arg=1, lineno=61)
DEBUG 2024-06-11 13:37:26,349 - stack ['$phi778.0']
DEBUG 2024-06-11 13:37:26,349 - dispatch pc=780, inst=JUMP_BACKWARD(arg=303, lineno=61)
DEBUG 2024-06-11 13:37:26,349 - stack ['$phi778.0']
DEBUG 2024-06-11 13:37:26,349 - end state. edges=[Edge(pc=176, stack=('$phi778.0',), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:37:26,349 - pending: deque([State(pc_initial=648 nstack_initial=3), State(pc_initial=176 nstack_initial=1)])
DEBUG 2024-06-11 13:37:26,349 - stack: ['$phi648.0', '$phi648.1', '$phi648.2']
DEBUG 2024-06-11 13:37:26,349 - state.pc_initial: State(pc_initial=648 nstack_initial=3)
DEBUG 2024-06-11 13:37:26,349 - dispatch pc=648, inst=STORE_FAST(arg=22, lineno=61)
DEBUG 2024-06-11 13:37:26,349 - stack ['$phi648.0', '$phi648.1', '$phi648.2']
DEBUG 2024-06-11 13:37:26,349 - dispatch pc=650, inst=LOAD_FAST(arg=2, lineno=63)
DEBUG 2024-06-11 13:37:26,349 - stack ['$phi648.0', '$phi648.1']
DEBUG 2024-06-11 13:37:26,349 - dispatch pc=652, inst=LOAD_FAST(arg=12, lineno=63)
DEBUG 2024-06-11 13:37:26,349 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3']
DEBUG 2024-06-11 13:37:26,349 - dispatch pc=654, inst=LOAD_FAST(arg=22, lineno=63)
DEBUG 2024-06-11 13:37:26,349 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4']
DEBUG 2024-06-11 13:37:26,349 - dispatch pc=656, inst=LOAD_FAST(arg=7, lineno=63)
DEBUG 2024-06-11 13:37:26,349 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5']
DEBUG 2024-06-11 13:37:26,349 - dispatch pc=658, inst=BINARY_OP(arg=5, lineno=63)
DEBUG 2024-06-11 13:37:26,349 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5', '$index_step656.6']
DEBUG 2024-06-11 13:37:26,349 - dispatch pc=662, inst=BINARY_OP(arg=0, lineno=63)
DEBUG 2024-06-11 13:37:26,349 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$binop_mul658.7']
DEBUG 2024-06-11 13:37:26,349 - dispatch pc=666, inst=BINARY_SUBSCR(arg=None, lineno=63)
DEBUG 2024-06-11 13:37:26,349 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$binop_add662.8']
DEBUG 2024-06-11 13:37:26,349 - dispatch pc=676, inst=LOAD_FAST(arg=13, lineno=64)
DEBUG 2024-06-11 13:37:26,349 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9']
DEBUG 2024-06-11 13:37:26,349 - dispatch pc=678, inst=LOAD_FAST(arg=3, lineno=64)
DEBUG 2024-06-11 13:37:26,349 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10']
DEBUG 2024-06-11 13:37:26,349 - dispatch pc=680, inst=LOAD_FAST(arg=12, lineno=64)
DEBUG 2024-06-11 13:37:26,349 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11']
DEBUG 2024-06-11 13:37:26,349 - dispatch pc=682, inst=LOAD_FAST(arg=22, lineno=64)
DEBUG 2024-06-11 13:37:26,349 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12']
DEBUG 2024-06-11 13:37:26,349 - dispatch pc=684, inst=LOAD_FAST(arg=7, lineno=64)
DEBUG 2024-06-11 13:37:26,349 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13']
DEBUG 2024-06-11 13:37:26,349 - dispatch pc=686, inst=BINARY_OP(arg=5, lineno=64)
DEBUG 2024-06-11 13:37:26,349 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13', '$index_step684.14']
DEBUG 2024-06-11 13:37:26,349 - dispatch pc=690, inst=BINARY_OP(arg=0, lineno=64)
DEBUG 2024-06-11 13:37:26,349 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$binop_mul686.15']
DEBUG 2024-06-11 13:37:26,349 - dispatch pc=694, inst=BINARY_SUBSCR(arg=None, lineno=64)
DEBUG 2024-06-11 13:37:26,349 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$binop_add690.16']
DEBUG 2024-06-11 13:37:26,349 - dispatch pc=704, inst=BINARY_OP(arg=5, lineno=64)
DEBUG 2024-06-11 13:37:26,349 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$694binary_subscr.17']
DEBUG 2024-06-11 13:37:26,349 - dispatch pc=708, inst=BINARY_OP(arg=0, lineno=63)
DEBUG 2024-06-11 13:37:26,349 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$binop_mul704.18']
DEBUG 2024-06-11 13:37:26,349 - dispatch pc=712, inst=STORE_FAST(arg=14, lineno=62)
DEBUG 2024-06-11 13:37:26,349 - stack ['$phi648.0', '$phi648.1', '$binop_add708.19']
DEBUG 2024-06-11 13:37:26,349 - dispatch pc=714, inst=LOAD_FAST(arg=6, lineno=66)
DEBUG 2024-06-11 13:37:26,349 - stack ['$phi648.0', '$phi648.1']
DEBUG 2024-06-11 13:37:26,356 - dispatch pc=716, inst=LOAD_FAST(arg=18, lineno=66)
DEBUG 2024-06-11 13:37:26,356 - stack ['$phi648.0', '$phi648.1', '$y714.20']
DEBUG 2024-06-11 13:37:26,356 - dispatch pc=718, inst=COPY(arg=2, lineno=66)
DEBUG 2024-06-11 13:37:26,356 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21']
DEBUG 2024-06-11 13:37:26,356 - dispatch pc=720, inst=COPY(arg=2, lineno=66)
DEBUG 2024-06-11 13:37:26,356 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20']
DEBUG 2024-06-11 13:37:26,356 - dispatch pc=722, inst=BINARY_SUBSCR(arg=None, lineno=66)
DEBUG 2024-06-11 13:37:26,356 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20', '$t716.21']
DEBUG 2024-06-11 13:37:26,356 - dispatch pc=732, inst=LOAD_FAST(arg=14, lineno=66)
DEBUG 2024-06-11 13:37:26,356 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22']
DEBUG 2024-06-11 13:37:26,356 - dispatch pc=734, inst=LOAD_FAST(arg=0, lineno=66)
DEBUG 2024-06-11 13:37:26,356 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23']
DEBUG 2024-06-11 13:37:26,356 - dispatch pc=736, inst=LOAD_FAST(arg=9, lineno=66)
DEBUG 2024-06-11 13:37:26,356 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24']
DEBUG 2024-06-11 13:37:26,358 - dispatch pc=738, inst=LOAD_FAST(arg=22, lineno=66)
DEBUG 2024-06-11 13:37:26,358 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25']
DEBUG 2024-06-11 13:37:26,358 - dispatch pc=740, inst=BINARY_OP(arg=0, lineno=66)
DEBUG 2024-06-11 13:37:26,358 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25', '$k738.26']
DEBUG 2024-06-11 13:37:26,358 - dispatch pc=744, inst=LOAD_CONST(arg=3, lineno=66)
DEBUG 2024-06-11 13:37:26,358 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27']
DEBUG 2024-06-11 13:37:26,358 - dispatch pc=746, inst=BINARY_OP(arg=0, lineno=66)
DEBUG 2024-06-11 13:37:26,358 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27', '$const744.28']
DEBUG 2024-06-11 13:37:26,358 - dispatch pc=750, inst=BINARY_SUBSCR(arg=None, lineno=66)
DEBUG 2024-06-11 13:37:26,358 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add746.29']
DEBUG 2024-06-11 13:37:26,358 - dispatch pc=760, inst=BINARY_OP(arg=5, lineno=66)
DEBUG 2024-06-11 13:37:26,358 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$750binary_subscr.30']
DEBUG 2024-06-11 13:37:26,358 - dispatch pc=764, inst=BINARY_OP(arg=13, lineno=66)
DEBUG 2024-06-11 13:37:26,358 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$binop_mul760.31']
DEBUG 2024-06-11 13:37:26,358 - dispatch pc=768, inst=SWAP(arg=3, lineno=66)
DEBUG 2024-06-11 13:37:26,358 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$binop_iadd764.32']
DEBUG 2024-06-11 13:37:26,358 - dispatch pc=770, inst=SWAP(arg=2, lineno=66)
DEBUG 2024-06-11 13:37:26,358 - stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$t716.21', '$y714.20']
DEBUG 2024-06-11 13:37:26,358 - dispatch pc=772, inst=STORE_SUBSCR(arg=None, lineno=66)
DEBUG 2024-06-11 13:37:26,358 - stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$y714.20', '$t716.21']
DEBUG 2024-06-11 13:37:26,358 - dispatch pc=776, inst=JUMP_BACKWARD(arg=66, lineno=66)
DEBUG 2024-06-11 13:37:26,358 - stack ['$phi648.0', '$phi648.1']
DEBUG 2024-06-11 13:37:26,358 - end state. edges=[Edge(pc=646, stack=('$phi648.0', '$phi648.1'), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:37:26,358 - pending: deque([State(pc_initial=176 nstack_initial=1), State(pc_initial=646 nstack_initial=2)])
DEBUG 2024-06-11 13:37:26,358 - pending: deque([State(pc_initial=646 nstack_initial=2)])
DEBUG 2024-06-11 13:37:26,358 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 13:37:26,358 - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=1): set(),
             State(pc_initial=178 nstack_initial=1): {'$phi178.0'},
             State(pc_initial=180 nstack_initial=2): {'$phi180.1'},
             State(pc_initial=374 nstack_initial=2): {'$phi374.1'},
             State(pc_initial=376 nstack_initial=3): {'$phi376.2'},
             State(pc_initial=500 nstack_initial=1): set(),
             State(pc_initial=646 nstack_initial=2): {'$phi646.1'},
             State(pc_initial=648 nstack_initial=3): {'$phi648.2'},
             State(pc_initial=778 nstack_initial=1): set(),
             State(pc_initial=782 nstack_initial=0): set()})
DEBUG 2024-06-11 13:37:26,358 - defmap: {'$phi176.0': State(pc_initial=0 nstack_initial=0),
 '$phi180.1': State(pc_initial=178 nstack_initial=1),
 '$phi374.1': State(pc_initial=180 nstack_initial=2),
 '$phi376.2': State(pc_initial=374 nstack_initial=2),
 '$phi646.1': State(pc_initial=500 nstack_initial=1),
 '$phi648.2': State(pc_initial=646 nstack_initial=2)}
DEBUG 2024-06-11 13:37:26,358 - phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi778.0',
                            State(pc_initial=778 nstack_initial=1))},
             '$phi178.0': {('$phi176.0',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi180.0': {('$phi178.0',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$phi180.0',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.0',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.1',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi376.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.1': {('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi646.0': {('$phi500.0',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.0',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.1',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi648.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.1': {('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))}})
DEBUG 2024-06-11 13:37:26,358 - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi374.0',
                            State(pc_initial=374 nstack_initial=2)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
DEBUG 2024-06-11 13:37:26,358 - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
DEBUG 2024-06-11 13:37:26,358 - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
DEBUG 2024-06-11 13:37:26,363 - keep phismap: {'$phi178.0': {('$174get_iter.29', State(pc_initial=0 nstack_initial=0))},
 '$phi180.1': {('$178for_iter.2', State(pc_initial=178 nstack_initial=1))},
 '$phi374.1': {('$372get_iter.39', State(pc_initial=180 nstack_initial=2))},
 '$phi376.2': {('$374for_iter.3', State(pc_initial=374 nstack_initial=2))},
 '$phi646.1': {('$644get_iter.31', State(pc_initial=500 nstack_initial=1))},
 '$phi648.2': {('$646for_iter.3', State(pc_initial=646 nstack_initial=2))}}
DEBUG 2024-06-11 13:37:26,363 - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi178.0': '$174get_iter.29'},
             State(pc_initial=178 nstack_initial=1): {'$phi180.1': '$178for_iter.2'},
             State(pc_initial=180 nstack_initial=2): {'$phi374.1': '$372get_iter.39'},
             State(pc_initial=374 nstack_initial=2): {'$phi376.2': '$374for_iter.3'},
             State(pc_initial=500 nstack_initial=1): {'$phi646.1': '$644get_iter.31'},
             State(pc_initial=646 nstack_initial=2): {'$phi648.2': '$646for_iter.3'}})
DEBUG 2024-06-11 13:37:26,363 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 13:37:26,363 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$scale16.2'}), (18, {'res': '$num_table18.3'}), (20, {'op': '*', 'lhs': '$scale16.2', 'rhs': '$num_table18.3', 'res': '$binop_mul20.4'}), (22, {}), (24, {}), (26, {}), (28, {'func': '$4load_global.0', 'args': ['$binop_mul20.4'], 'kw_names': None, 'res': '$28call.5'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {'value': '$28call.5'}), (40, {'res': '$const40.6'}), (42, {'value': '$const40.6'}), (44, {'res': '$const44.7'}), (46, {'value': '$const44.7'}), (48, {'res': '$const48.8'}), (50, {'value': '$const48.8'}), (52, {'res': '$const52.9'}), (54, {'value': '$const52.9'}), (56, {'res': '$const56.10'}), (58, {'value': '$const56.10'}), (60, {'res': '$const60.11'}), (62, {'value': '$const60.11'}), (64, {'res': '$const64.12'}), (66, {'value': '$const64.12'}), (68, {'res': '$interp_win68.13'}), (70, {'item': '$interp_win68.13', 'res': '$70load_attr.14'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$const80.15'}), (82, {'index': '$const80.15', 'target': '$70load_attr.14', 'res': '$82binary_subscr.16'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82binary_subscr.16'}), (94, {'res': '$x94.17'}), (96, {'item': '$x94.17', 'res': '$96load_attr.18'}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {'res': '$const106.19'}), (108, {'index': '$const106.19', 'target': '$96load_attr.18', 'res': '$108binary_subscr.20'}), (110, {}), (112, {}), (114, {}), (116, {}), (118, {'value': '$108binary_subscr.20'}), (120, {'res': '$t_out120.21'}), (122, {'item': '$t_out120.21', 'res': '$122load_attr.22'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {'res': '$const132.23'}), (134, {'index': '$const132.23', 'target': '$122load_attr.22', 'res': '$134binary_subscr.24'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {'value': '$134binary_subscr.24'}), (146, {'idx': 2, 'res': '$146load_global.25'}), (148, {}), (150, {}), (152, {}), (154, {}), (156, {}), (158, {'res': '$n_out158.27'}), (160, {}), (162, {}), (164, {'func': '$146load_global.25', 'args': ['$n_out158.27'], 'kw_names': None, 'res': '$164call.28'}), (166, {}), (168, {}), (170, {}), (172, {}), (174, {'value': '$164call.28', 'res': '$174get_iter.29'})), outgoing_phis={'$phi178.0': '$174get_iter.29'}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$174get_iter.29',)})
DEBUG 2024-06-11 13:37:26,363 - block_infos State(pc_initial=176 nstack_initial=1):
AdaptBlockInfo(insts=((176, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={178: ('$phi176.0',)})
DEBUG 2024-06-11 13:37:26,363 - block_infos State(pc_initial=178 nstack_initial=1):
AdaptBlockInfo(insts=((178, {'iterator': '$phi178.0', 'pair': '$178for_iter.1', 'indval': '$178for_iter.2', 'pred': '$178for_iter.3'}),), outgoing_phis={'$phi180.1': '$178for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={782: (), 180: ('$phi178.0', '$178for_iter.2')})
DEBUG 2024-06-11 13:37:26,363 - block_infos State(pc_initial=180 nstack_initial=2):
AdaptBlockInfo(insts=((180, {'value': '$phi180.1'}), (182, {'res': '$t_out182.2'}), (184, {'res': '$t184.3'}), (186, {'index': '$t184.3', 'target': '$t_out182.2', 'res': '$186binary_subscr.4'}), (188, {}), (190, {}), (192, {}), (194, {}), (196, {'value': '$186binary_subscr.4'}), (198, {'idx': 0, 'res': '$198load_global.5'}), (200, {}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'res': '$time_register210.7'}), (212, {}), (214, {}), (216, {'func': '$198load_global.5', 'args': ['$time_register210.7'], 'kw_names': None, 'res': '$216call.8'}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {'value': '$216call.8'}), (228, {'res': '$scale228.9'}), (230, {'res': '$time_register230.10'}), (232, {'res': '$n232.11'}), (234, {'op': '-', 'lhs': '$time_register230.10', 'rhs': '$n232.11', 'res': '$binop_sub234.12'}), (236, {}), (238, {'op': '*', 'lhs': '$scale228.9', 'rhs': '$binop_sub234.12', 'res': '$binop_mul238.13'}), (240, {}), (242, {'value': '$binop_mul238.13'}), (244, {'res': '$frac244.14'}), (246, {'res': '$num_table246.15'}), (248, {'op': '*', 'lhs': '$frac244.14', 'rhs': '$num_table246.15', 'res': '$binop_mul248.16'}), (250, {}), (252, {'value': '$binop_mul248.16'}), (254, {'idx': 0, 'res': '$254load_global.17'}), (256, {}), (258, {}), (260, {}), (262, {}), (264, {}), (266, {'res': '$index_frac266.19'}), (268, {}), (270, {}), (272, {'func': '$254load_global.17', 'args': ['$index_frac266.19'], 'kw_names': None, 'res': '$272call.20'}), (274, {}), (276, {}), (278, {}), (280, {}), (282, {'value': '$272call.20'}), (284, {'res': '$index_frac284.21'}), (286, {'res': '$offset286.22'}), (288, {'op': '-', 'lhs': '$index_frac284.21', 'rhs': '$offset286.22', 'res': '$binop_sub288.23'}), (290, {}), (292, {'value': '$binop_sub288.23'}), (294, {'idx': 3, 'res': '$294load_global.24'}), (296, {}), (298, {}), (300, {}), (302, {}), (304, {}), (306, {'res': '$n306.26'}), (308, {'res': '$const308.27'}), (310, {'op': '+', 'lhs': '$n306.26', 'rhs': '$const308.27', 'res': '$binop_add310.28'}), (312, {}), (314, {'res': '$nwin314.29'}), (316, {'res': '$offset316.30'}), (318, {'op': '-', 'lhs': '$nwin314.29', 'rhs': '$offset316.30', 'res': '$binop_sub318.31'}), (320, {}), (322, {'res': '$index_step322.32'}), (324, {'op': '//', 'lhs': '$binop_sub318.31', 'rhs': '$index_step322.32', 'res': '$binop_floordiv324.33'}), (326, {}), (328, {}), (330, {}), (332, {'func': '$294load_global.24', 'args': ['$binop_add310.28', '$binop_floordiv324.33'], 'kw_names': None, 'res': '$332call.34'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'value': '$332call.34'}), (344, {'idx': 4, 'res': '$344load_global.35'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {}), (356, {'res': '$i_max356.37'}), (358, {}), (360, {}), (362, {'func': '$344load_global.35', 'args': ['$i_max356.37'], 'kw_names': None, 'res': '$362call.38'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {'value': '$362call.38', 'res': '$372get_iter.39'})), outgoing_phis={'$phi374.1': '$372get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi180.0', '$372get_iter.39')})
DEBUG 2024-06-11 13:37:26,363 - block_infos State(pc_initial=374 nstack_initial=2):
AdaptBlockInfo(insts=((374, {'iterator': '$phi374.1', 'pair': '$374for_iter.2', 'indval': '$374for_iter.3', 'pred': '$374for_iter.4'}),), outgoing_phis={'$phi376.2': '$374for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={500: ('$phi374.0',), 376: ('$phi374.0', '$phi374.1', '$374for_iter.3')})
DEBUG 2024-06-11 13:37:26,364 - block_infos State(pc_initial=376 nstack_initial=3):
AdaptBlockInfo(insts=((376, {'value': '$phi376.2'}), (378, {'res': '$interp_win378.3'}), (380, {'res': '$offset380.4'}), (382, {'res': '$i382.5'}), (384, {'res': '$index_step384.6'}), (386, {'op': '*', 'lhs': '$i382.5', 'rhs': '$index_step384.6', 'res': '$binop_mul386.7'}), (388, {}), (390, {'op': '+', 'lhs': '$offset380.4', 'rhs': '$binop_mul386.7', 'res': '$binop_add390.8'}), (392, {}), (394, {'index': '$binop_add390.8', 'target': '$interp_win378.3', 'res': '$394binary_subscr.9'}), (396, {}), (398, {}), (400, {}), (402, {}), (404, {'res': '$eta404.10'}), (406, {'res': '$interp_delta406.11'}), (408, {'res': '$offset408.12'}), (410, {'res': '$i410.13'}), (412, {'res': '$index_step412.14'}), (414, {'op': '*', 'lhs': '$i410.13', 'rhs': '$index_step412.14', 'res': '$binop_mul414.15'}), (416, {}), (418, {'op': '+', 'lhs': '$offset408.12', 'rhs': '$binop_mul414.15', 'res': '$binop_add418.16'}), (420, {}), (422, {'index': '$binop_add418.16', 'target': '$interp_delta406.11', 'res': '$422binary_subscr.17'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {'op': '*', 'lhs': '$eta404.10', 'rhs': '$422binary_subscr.17', 'res': '$binop_mul432.18'}), (434, {}), (436, {'op': '+', 'lhs': '$394binary_subscr.9', 'rhs': '$binop_mul432.18', 'res': '$binop_add436.19'}), (438, {}), (440, {'value': '$binop_add436.19'}), (442, {'res': '$y442.20'}), (444, {'res': '$t444.21'}), (450, {'index': '$t444.21', 'target': '$y442.20', 'res': '$450binary_subscr.22'}), (452, {}), (454, {}), (456, {}), (458, {}), (460, {'res': '$weight460.23'}), (462, {'res': '$x462.24'}), (464, {'res': '$n464.25'}), (466, {'res': '$i466.26'}), (468, {'op': '-', 'lhs': '$n464.25', 'rhs': '$i466.26', 'res': '$binop_sub468.27'}), (470, {}), (472, {'index': '$binop_sub468.27', 'target': '$x462.24', 'res': '$472binary_subscr.28'}), (474, {}), (476, {}), (478, {}), (480, {}), (482, {'op': '*', 'lhs': '$weight460.23', 'rhs': '$472binary_subscr.28', 'res': '$binop_mul482.29'}), (484, {}), (486, {'op': '+=', 'lhs': '$450binary_subscr.22', 'rhs': '$binop_mul482.29', 'res': '$binop_iadd486.30'}), (488, {}), (494, {'target': '$y442.20', 'index': '$t444.21', 'value': '$binop_iadd486.30'}), (496, {}), (498, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi376.0', '$phi376.1')})
DEBUG 2024-06-11 13:37:26,364 - block_infos State(pc_initial=500 nstack_initial=1):
AdaptBlockInfo(insts=((500, {'res': '$scale500.1'}), (502, {'res': '$frac502.2'}), (504, {'op': '-', 'lhs': '$scale500.1', 'rhs': '$frac502.2', 'res': '$binop_sub504.3'}), (506, {}), (508, {'value': '$binop_sub504.3'}), (510, {'res': '$frac510.4'}), (512, {'res': '$num_table512.5'}), (514, {'op': '*', 'lhs': '$frac510.4', 'rhs': '$num_table512.5', 'res': '$binop_mul514.6'}), (516, {}), (518, {'value': '$binop_mul514.6'}), (520, {'idx': 0, 'res': '$520load_global.7'}), (522, {}), (524, {}), (526, {}), (528, {}), (530, {}), (532, {'res': '$index_frac532.9'}), (534, {}), (536, {}), (538, {'func': '$520load_global.7', 'args': ['$index_frac532.9'], 'kw_names': None, 'res': '$538call.10'}), (540, {}), (542, {}), (544, {}), (546, {}), (548, {'value': '$538call.10'}), (550, {'res': '$index_frac550.11'}), (552, {'res': '$offset552.12'}), (554, {'op': '-', 'lhs': '$index_frac550.11', 'rhs': '$offset552.12', 'res': '$binop_sub554.13'}), (556, {}), (558, {'value': '$binop_sub554.13'}), (560, {'idx': 3, 'res': '$560load_global.14'}), (562, {}), (564, {}), (566, {}), (568, {}), (570, {}), (572, {'res': '$n_orig572.16'}), (574, {'res': '$n574.17'}), (576, {'op': '-', 'lhs': '$n_orig572.16', 'rhs': '$n574.17', 'res': '$binop_sub576.18'}), (578, {}), (580, {'res': '$const580.19'}), (582, {'op': '-', 'lhs': '$binop_sub576.18', 'rhs': '$const580.19', 'res': '$binop_sub582.20'}), (584, {}), (586, {'res': '$nwin586.21'}), (588, {'res': '$offset588.22'}), (590, {'op': '-', 'lhs': '$nwin586.21', 'rhs': '$offset588.22', 'res': '$binop_sub590.23'}), (592, {}), (594, {'res': '$index_step594.24'}), (596, {'op': '//', 'lhs': '$binop_sub590.23', 'rhs': '$index_step594.24', 'res': '$binop_floordiv596.25'}), (598, {}), (600, {}), (602, {}), (604, {'func': '$560load_global.14', 'args': ['$binop_sub582.20', '$binop_floordiv596.25'], 'kw_names': None, 'res': '$604call.26'}), (606, {}), (608, {}), (610, {}), (612, {}), (614, {'value': '$604call.26'}), (616, {'idx': 4, 'res': '$616load_global.27'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {}), (628, {'res': '$k_max628.29'}), (630, {}), (632, {}), (634, {'func': '$616load_global.27', 'args': ['$k_max628.29'], 'kw_names': None, 'res': '$634call.30'}), (636, {}), (638, {}), (640, {}), (642, {}), (644, {'value': '$634call.30', 'res': '$644get_iter.31'})), outgoing_phis={'$phi646.1': '$644get_iter.31'}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi500.0', '$644get_iter.31')})
DEBUG 2024-06-11 13:37:26,364 - block_infos State(pc_initial=646 nstack_initial=2):
AdaptBlockInfo(insts=((646, {'iterator': '$phi646.1', 'pair': '$646for_iter.2', 'indval': '$646for_iter.3', 'pred': '$646for_iter.4'}),), outgoing_phis={'$phi648.2': '$646for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={778: ('$phi646.0',), 648: ('$phi646.0', '$phi646.1', '$646for_iter.3')})
DEBUG 2024-06-11 13:37:26,364 - block_infos State(pc_initial=648 nstack_initial=3):
AdaptBlockInfo(insts=((648, {'value': '$phi648.2'}), (650, {'res': '$interp_win650.3'}), (652, {'res': '$offset652.4'}), (654, {'res': '$k654.5'}), (656, {'res': '$index_step656.6'}), (658, {'op': '*', 'lhs': '$k654.5', 'rhs': '$index_step656.6', 'res': '$binop_mul658.7'}), (660, {}), (662, {'op': '+', 'lhs': '$offset652.4', 'rhs': '$binop_mul658.7', 'res': '$binop_add662.8'}), (664, {}), (666, {'index': '$binop_add662.8', 'target': '$interp_win650.3', 'res': '$666binary_subscr.9'}), (668, {}), (670, {}), (672, {}), (674, {}), (676, {'res': '$eta676.10'}), (678, {'res': '$interp_delta678.11'}), (680, {'res': '$offset680.12'}), (682, {'res': '$k682.13'}), (684, {'res': '$index_step684.14'}), (686, {'op': '*', 'lhs': '$k682.13', 'rhs': '$index_step684.14', 'res': '$binop_mul686.15'}), (688, {}), (690, {'op': '+', 'lhs': '$offset680.12', 'rhs': '$binop_mul686.15', 'res': '$binop_add690.16'}), (692, {}), (694, {'index': '$binop_add690.16', 'target': '$interp_delta678.11', 'res': '$694binary_subscr.17'}), (696, {}), (698, {}), (700, {}), (702, {}), (704, {'op': '*', 'lhs': '$eta676.10', 'rhs': '$694binary_subscr.17', 'res': '$binop_mul704.18'}), (706, {}), (708, {'op': '+', 'lhs': '$666binary_subscr.9', 'rhs': '$binop_mul704.18', 'res': '$binop_add708.19'}), (710, {}), (712, {'value': '$binop_add708.19'}), (714, {'res': '$y714.20'}), (716, {'res': '$t716.21'}), (722, {'index': '$t716.21', 'target': '$y714.20', 'res': '$722binary_subscr.22'}), (724, {}), (726, {}), (728, {}), (730, {}), (732, {'res': '$weight732.23'}), (734, {'res': '$x734.24'}), (736, {'res': '$n736.25'}), (738, {'res': '$k738.26'}), (740, {'op': '+', 'lhs': '$n736.25', 'rhs': '$k738.26', 'res': '$binop_add740.27'}), (742, {}), (744, {'res': '$const744.28'}), (746, {'op': '+', 'lhs': '$binop_add740.27', 'rhs': '$const744.28', 'res': '$binop_add746.29'}), (748, {}), (750, {'index': '$binop_add746.29', 'target': '$x734.24', 'res': '$750binary_subscr.30'}), (752, {}), (754, {}), (756, {}), (758, {}), (760, {'op': '*', 'lhs': '$weight732.23', 'rhs': '$750binary_subscr.30', 'res': '$binop_mul760.31'}), (762, {}), (764, {'op': '+=', 'lhs': '$722binary_subscr.22', 'rhs': '$binop_mul760.31', 'res': '$binop_iadd764.32'}), (766, {}), (772, {'target': '$y714.20', 'index': '$t716.21', 'value': '$binop_iadd764.32'}), (774, {}), (776, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi648.0', '$phi648.1')})
DEBUG 2024-06-11 13:37:26,364 - block_infos State(pc_initial=778 nstack_initial=1):
AdaptBlockInfo(insts=((778, {}), (780, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$phi778.0',)})
DEBUG 2024-06-11 13:37:26,364 - block_infos State(pc_initial=782 nstack_initial=0):
AdaptBlockInfo(insts=((782, {'res': '$const782.0'}), (784, {'retval': '$const782.0', 'castval': '$784return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 13:37:26,366 - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(int: <class 'int'>) ['$4load_global.0']
    $binop_mul20.4 = scale * num_table       ['$binop_mul20.4', 'num_table', 'scale']
    index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_global.0', '$binop_mul20.4', 'index_step']
    time_register = const(float, 0.0)        ['time_register']
    n = const(int, 0)                        ['n']
    frac = const(float, 0.0)                 ['frac']
    index_frac = const(float, 0.0)           ['index_frac']
    offset = const(int, 0)                   ['offset']
    eta = const(float, 0.0)                  ['eta']
    weight = const(float, 0.0)               ['weight']
    $70load_attr.14 = getattr(value=interp_win, attr=shape) ['$70load_attr.14', 'interp_win']
    $const80.15 = const(int, 0)              ['$const80.15']
    nwin = getitem(value=$70load_attr.14, index=$const80.15, fn=<built-in function getitem>) ['$70load_attr.14', '$const80.15', 'nwin']
    $96load_attr.18 = getattr(value=x, attr=shape) ['$96load_attr.18', 'x']
    $const106.19 = const(int, 0)             ['$const106.19']
    n_orig = getitem(value=$96load_attr.18, index=$const106.19, fn=<built-in function getitem>) ['$96load_attr.18', '$const106.19', 'n_orig']
    $122load_attr.22 = getattr(value=t_out, attr=shape) ['$122load_attr.22', 't_out']
    $const132.23 = const(int, 0)             ['$const132.23']
    n_out = getitem(value=$122load_attr.22, index=$const132.23, fn=<built-in function getitem>) ['$122load_attr.22', '$const132.23', 'n_out']
    $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>) ['$146load_global.25']
    $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None) ['$146load_global.25', '$164call.28', 'n_out']
    $174get_iter.29 = getiter(value=$164call.28) ['$164call.28', '$174get_iter.29']
    $phi178.0 = $174get_iter.29              ['$174get_iter.29', '$phi178.0']
    jump 176                                 []
label 176:
    jump 178                                 []
label 178:
    $178for_iter.1 = iternext(value=$phi178.0) ['$178for_iter.1', '$phi178.0']
    $178for_iter.2 = pair_first(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.2']
    $178for_iter.3 = pair_second(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.3']
    $phi180.1 = $178for_iter.2               ['$178for_iter.2', '$phi180.1']
    branch $178for_iter.3, 180, 782          ['$178for_iter.3']
label 180:
    t = $phi180.1                            ['$phi180.1', 't']
    time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>) ['t', 't_out', 'time_register']
    $198load_global.5 = global(int: <class 'int'>) ['$198load_global.5']
    n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None) ['$198load_global.5', 'n', 'time_register']
    $binop_sub234.12 = time_register - n     ['$binop_sub234.12', 'n', 'time_register']
    frac = scale * $binop_sub234.12          ['$binop_sub234.12', 'frac', 'scale']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $254load_global.17 = global(int: <class 'int'>) ['$254load_global.17']
    offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$254load_global.17', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $294load_global.24 = global(min: <built-in function min>) ['$294load_global.24']
    $const308.27 = const(int, 1)             ['$const308.27']
    $binop_add310.28 = n + $const308.27      ['$binop_add310.28', '$const308.27', 'n']
    $binop_sub318.31 = nwin - offset         ['$binop_sub318.31', 'nwin', 'offset']
    $binop_floordiv324.33 = $binop_sub318.31 // index_step ['$binop_floordiv324.33', '$binop_sub318.31', 'index_step']
    i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33', 'i_max']
    $344load_global.35 = global(range: <class 'range'>) ['$344load_global.35']
    $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$344load_global.35', '$362call.38', 'i_max']
    $372get_iter.39 = getiter(value=$362call.38) ['$362call.38', '$372get_iter.39']
    $phi374.1 = $372get_iter.39              ['$372get_iter.39', '$phi374.1']
    jump 374                                 []
label 374:
    $374for_iter.2 = iternext(value=$phi374.1) ['$374for_iter.2', '$phi374.1']
    $374for_iter.3 = pair_first(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.3']
    $374for_iter.4 = pair_second(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.4']
    $phi376.2 = $374for_iter.3               ['$374for_iter.3', '$phi376.2']
    branch $374for_iter.4, 376, 500          ['$374for_iter.4']
label 376:
    i = $phi376.2                            ['$phi376.2', 'i']
    $binop_mul386.7 = i * index_step         ['$binop_mul386.7', 'i', 'index_step']
    $binop_add390.8 = offset + $binop_mul386.7 ['$binop_add390.8', '$binop_mul386.7', 'offset']
    $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>) ['$394binary_subscr.9', '$binop_add390.8', 'interp_win']
    $binop_mul414.15 = i * index_step        ['$binop_mul414.15', 'i', 'index_step']
    $binop_add418.16 = offset + $binop_mul414.15 ['$binop_add418.16', '$binop_mul414.15', 'offset']
    $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>) ['$422binary_subscr.17', '$binop_add418.16', 'interp_delta']
    $binop_mul432.18 = eta * $422binary_subscr.17 ['$422binary_subscr.17', '$binop_mul432.18', 'eta']
    weight = $394binary_subscr.9 + $binop_mul432.18 ['$394binary_subscr.9', '$binop_mul432.18', 'weight']
    $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$450binary_subscr.22', 't', 'y']
    $binop_sub468.27 = n - i                 ['$binop_sub468.27', 'i', 'n']
    $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>) ['$472binary_subscr.28', '$binop_sub468.27', 'x']
    $binop_mul482.29 = weight * $472binary_subscr.28 ['$472binary_subscr.28', '$binop_mul482.29', 'weight']
    $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined) ['$450binary_subscr.22', '$binop_iadd486.30', '$binop_mul482.29']
    y[t] = $binop_iadd486.30                 ['$binop_iadd486.30', 't', 'y']
    jump 374                                 []
label 500:
    $binop_sub504.3 = scale - frac           ['$binop_sub504.3', 'frac', 'scale']
    frac = $binop_sub504.3                   ['$binop_sub504.3', 'frac']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $520load_global.7 = global(int: <class 'int'>) ['$520load_global.7']
    offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$520load_global.7', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $560load_global.14 = global(min: <built-in function min>) ['$560load_global.14']
    $binop_sub576.18 = n_orig - n            ['$binop_sub576.18', 'n', 'n_orig']
    $const580.19 = const(int, 1)             ['$const580.19']
    $binop_sub582.20 = $binop_sub576.18 - $const580.19 ['$binop_sub576.18', '$binop_sub582.20', '$const580.19']
    $binop_sub590.23 = nwin - offset         ['$binop_sub590.23', 'nwin', 'offset']
    $binop_floordiv596.25 = $binop_sub590.23 // index_step ['$binop_floordiv596.25', '$binop_sub590.23', 'index_step']
    k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$560load_global.14', '$binop_floordiv596.25', '$binop_sub582.20', 'k_max']
    $616load_global.27 = global(range: <class 'range'>) ['$616load_global.27']
    $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$616load_global.27', '$634call.30', 'k_max']
    $644get_iter.31 = getiter(value=$634call.30) ['$634call.30', '$644get_iter.31']
    $phi646.1 = $644get_iter.31              ['$644get_iter.31', '$phi646.1']
    jump 646                                 []
label 646:
    $646for_iter.2 = iternext(value=$phi646.1) ['$646for_iter.2', '$phi646.1']
    $646for_iter.3 = pair_first(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.3']
    $646for_iter.4 = pair_second(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.4']
    $phi648.2 = $646for_iter.3               ['$646for_iter.3', '$phi648.2']
    branch $646for_iter.4, 648, 778          ['$646for_iter.4']
label 648:
    k = $phi648.2                            ['$phi648.2', 'k']
    $binop_mul658.7 = k * index_step         ['$binop_mul658.7', 'index_step', 'k']
    $binop_add662.8 = offset + $binop_mul658.7 ['$binop_add662.8', '$binop_mul658.7', 'offset']
    $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>) ['$666binary_subscr.9', '$binop_add662.8', 'interp_win']
    $binop_mul686.15 = k * index_step        ['$binop_mul686.15', 'index_step', 'k']
    $binop_add690.16 = offset + $binop_mul686.15 ['$binop_add690.16', '$binop_mul686.15', 'offset']
    $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>) ['$694binary_subscr.17', '$binop_add690.16', 'interp_delta']
    $binop_mul704.18 = eta * $694binary_subscr.17 ['$694binary_subscr.17', '$binop_mul704.18', 'eta']
    weight = $666binary_subscr.9 + $binop_mul704.18 ['$666binary_subscr.9', '$binop_mul704.18', 'weight']
    $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$722binary_subscr.22', 't', 'y']
    $binop_add740.27 = n + k                 ['$binop_add740.27', 'k', 'n']
    $const744.28 = const(int, 1)             ['$const744.28']
    $binop_add746.29 = $binop_add740.27 + $const744.28 ['$binop_add740.27', '$binop_add746.29', '$const744.28']
    $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>) ['$750binary_subscr.30', '$binop_add746.29', 'x']
    $binop_mul760.31 = weight * $750binary_subscr.30 ['$750binary_subscr.30', '$binop_mul760.31', 'weight']
    $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined) ['$722binary_subscr.22', '$binop_iadd764.32', '$binop_mul760.31']
    y[t] = $binop_iadd764.32                 ['$binop_iadd764.32', 't', 'y']
    jump 646                                 []
label 778:
    jump 176                                 []
label 782:
    $const782.0 = const(NoneType, None)      ['$const782.0']
    $784return_value.1 = cast(value=$const782.0) ['$784return_value.1', '$const782.0']
    return $784return_value.1                ['$784return_value.1']

DEBUG 2024-06-11 13:37:26,399 - ==== SSA block analysis pass on 0
DEBUG 2024-06-11 13:37:26,399 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000019AFE641E50>
DEBUG 2024-06-11 13:37:26,399 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:37:26,399 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:37:26,399 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:37:26,399 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:37:26,399 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:37:26,399 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:37:26,399 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:37:26,399 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,399 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:37:26,399 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,399 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,399 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:37:26,399 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,399 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,399 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:37:26,399 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,399 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,399 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:37:26,399 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:37:26,399 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,399 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:37:26,399 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:37:26,399 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,399 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:37:26,399 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:37:26,399 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,399 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:37:26,399 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,399 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:37:26,399 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:37:26,399 - on stmt: jump 176
DEBUG 2024-06-11 13:37:26,399 - ==== SSA block analysis pass on 176
DEBUG 2024-06-11 13:37:26,399 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000019AFE641E50>
DEBUG 2024-06-11 13:37:26,399 - on stmt: jump 178
DEBUG 2024-06-11 13:37:26,399 - ==== SSA block analysis pass on 178
DEBUG 2024-06-11 13:37:26,399 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000019AFE641E50>
DEBUG 2024-06-11 13:37:26,399 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:37:26,399 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:37:26,399 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:37:26,399 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:37:26,399 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:37:26,399 - ==== SSA block analysis pass on 180
DEBUG 2024-06-11 13:37:26,399 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000019AFE641E50>
DEBUG 2024-06-11 13:37:26,399 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:37:26,406 - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,406 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,406 - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,406 - on stmt: $binop_sub234.12 = time_register - n
DEBUG 2024-06-11 13:37:26,406 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 13:37:26,406 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:37:26,406 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,406 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,406 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:37:26,406 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:37:26,406 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:37:26,406 - on stmt: $binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 13:37:26,407 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:37:26,407 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:37:26,407 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,407 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:37:26,407 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,407 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:37:26,407 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:37:26,407 - on stmt: jump 374
DEBUG 2024-06-11 13:37:26,407 - ==== SSA block analysis pass on 374
DEBUG 2024-06-11 13:37:26,407 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000019AFE641E50>
DEBUG 2024-06-11 13:37:26,407 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:37:26,407 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:37:26,407 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:37:26,407 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:37:26,407 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:37:26,407 - ==== SSA block analysis pass on 376
DEBUG 2024-06-11 13:37:26,407 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000019AFE641E50>
DEBUG 2024-06-11 13:37:26,407 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:37:26,407 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:37:26,407 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:37:26,407 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,407 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:37:26,407 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:37:26,407 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,407 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:37:26,407 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:37:26,407 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,407 - on stmt: $binop_sub468.27 = n - i
DEBUG 2024-06-11 13:37:26,407 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,407 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:37:26,407 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:37:26,407 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:37:26,407 - on stmt: jump 374
DEBUG 2024-06-11 13:37:26,407 - ==== SSA block analysis pass on 500
DEBUG 2024-06-11 13:37:26,407 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000019AFE641E50>
DEBUG 2024-06-11 13:37:26,407 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 13:37:26,407 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 13:37:26,407 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:37:26,407 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,407 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,407 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:37:26,407 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:37:26,407 - on stmt: $binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 13:37:26,407 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:37:26,407 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:37:26,407 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:37:26,407 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:37:26,407 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,407 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:37:26,407 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,407 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:37:26,407 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:37:26,407 - on stmt: jump 646
DEBUG 2024-06-11 13:37:26,407 - ==== SSA block analysis pass on 646
DEBUG 2024-06-11 13:37:26,407 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000019AFE641E50>
DEBUG 2024-06-11 13:37:26,414 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:37:26,414 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:37:26,414 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:37:26,414 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:37:26,414 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:37:26,414 - ==== SSA block analysis pass on 648
DEBUG 2024-06-11 13:37:26,414 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000019AFE641E50>
DEBUG 2024-06-11 13:37:26,414 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:37:26,414 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:37:26,414 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:37:26,414 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,416 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:37:26,416 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:37:26,416 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,416 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:37:26,416 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:37:26,416 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,416 - on stmt: $binop_add740.27 = n + k
DEBUG 2024-06-11 13:37:26,416 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:37:26,416 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:37:26,416 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,416 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:37:26,416 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:37:26,416 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:37:26,416 - on stmt: jump 646
DEBUG 2024-06-11 13:37:26,416 - ==== SSA block analysis pass on 778
DEBUG 2024-06-11 13:37:26,416 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000019AFE641E50>
DEBUG 2024-06-11 13:37:26,416 - on stmt: jump 176
DEBUG 2024-06-11 13:37:26,416 - ==== SSA block analysis pass on 782
DEBUG 2024-06-11 13:37:26,416 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000019AFE641E50>
DEBUG 2024-06-11 13:37:26,416 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:37:26,416 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:37:26,416 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:37:26,416 - defs defaultdict(<class 'list'>,
            {'$122load_attr.22': [(<numba.core.ir.Assign object at 0x0000019A98C71F10>,
                                   0)],
             '$146load_global.25': [(<numba.core.ir.Assign object at 0x0000019A98C7FB10>,
                                     0)],
             '$164call.28': [(<numba.core.ir.Assign object at 0x0000019A98C7D410>,
                              0)],
             '$174get_iter.29': [(<numba.core.ir.Assign object at 0x0000019A98C7ECD0>,
                                  0)],
             '$178for_iter.1': [(<numba.core.ir.Assign object at 0x0000019A98C7F650>,
                                 178)],
             '$178for_iter.2': [(<numba.core.ir.Assign object at 0x0000019A98C7F590>,
                                 178)],
             '$178for_iter.3': [(<numba.core.ir.Assign object at 0x0000019A98C7F110>,
                                 178)],
             '$198load_global.5': [(<numba.core.ir.Assign object at 0x0000019A98C7E110>,
                                    180)],
             '$254load_global.17': [(<numba.core.ir.Assign object at 0x0000019A98C7CB10>,
                                     180)],
             '$294load_global.24': [(<numba.core.ir.Assign object at 0x0000019A98C4AA10>,
                                     180)],
             '$344load_global.35': [(<numba.core.ir.Assign object at 0x0000019A98C49E90>,
                                     180)],
             '$362call.38': [(<numba.core.ir.Assign object at 0x0000019A98C49610>,
                              180)],
             '$372get_iter.39': [(<numba.core.ir.Assign object at 0x0000019A98C493D0>,
                                  180)],
             '$374for_iter.2': [(<numba.core.ir.Assign object at 0x0000019A98C7E310>,
                                 374)],
             '$374for_iter.3': [(<numba.core.ir.Assign object at 0x0000019A98C7D890>,
                                 374)],
             '$374for_iter.4': [(<numba.core.ir.Assign object at 0x0000019A98C7CE10>,
                                 374)],
             '$394binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000019A98C48750>,
                                      376)],
             '$422binary_subscr.17': [(<numba.core.ir.Assign object at 0x0000019A97BC0CD0>,
                                       376)],
             '$450binary_subscr.22': [(<numba.core.ir.Assign object at 0x0000019A97BC9510>,
                                       376)],
             '$472binary_subscr.28': [(<numba.core.ir.Assign object at 0x0000019A98C17A10>,
                                       376)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A98CC25D0>,
                                  0)],
             '$520load_global.7': [(<numba.core.ir.Assign object at 0x0000019A98C16D10>,
                                    500)],
             '$560load_global.14': [(<numba.core.ir.Assign object at 0x0000019A98C16A90>,
                                     500)],
             '$616load_global.27': [(<numba.core.ir.Assign object at 0x0000019A98C164D0>,
                                     500)],
             '$634call.30': [(<numba.core.ir.Assign object at 0x0000019A98C14FD0>,
                              500)],
             '$644get_iter.31': [(<numba.core.ir.Assign object at 0x0000019A97BB9650>,
                                  500)],
             '$646for_iter.2': [(<numba.core.ir.Assign object at 0x0000019A98C17ED0>,
                                 646)],
             '$646for_iter.3': [(<numba.core.ir.Assign object at 0x0000019A98C16990>,
                                 646)],
             '$646for_iter.4': [(<numba.core.ir.Assign object at 0x0000019A98C14A90>,
                                 646)],
             '$666binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000019A98C02D90>,
                                      648)],
             '$694binary_subscr.17': [(<numba.core.ir.Assign object at 0x0000019A98C03F50>,
                                       648)],
             '$70load_attr.14': [(<numba.core.ir.Assign object at 0x0000019A98C70C10>,
                                  0)],
             '$722binary_subscr.22': [(<numba.core.ir.Assign object at 0x0000019A98C034D0>,
                                       648)],
             '$750binary_subscr.30': [(<numba.core.ir.Assign object at 0x0000019A98C02810>,
                                       648)],
             '$784return_value.1': [(<numba.core.ir.Assign object at 0x0000019A98C03C50>,
                                     782)],
             '$96load_attr.18': [(<numba.core.ir.Assign object at 0x0000019A98C71590>,
                                  0)],
             '$binop_add310.28': [(<numba.core.ir.Assign object at 0x0000019A98C4B650>,
                                   180)],
             '$binop_add390.8': [(<numba.core.ir.Assign object at 0x0000019A98C48AD0>,
                                  376)],
             '$binop_add418.16': [(<numba.core.ir.Assign object at 0x0000019A97BC2790>,
                                   376)],
             '$binop_add662.8': [(<numba.core.ir.Assign object at 0x0000019A98C028D0>,
                                  648)],
             '$binop_add690.16': [(<numba.core.ir.Assign object at 0x0000019A98C03510>,
                                   648)],
             '$binop_add740.27': [(<numba.core.ir.Assign object at 0x0000019A98C01CD0>,
                                   648)],
             '$binop_add746.29': [(<numba.core.ir.Assign object at 0x0000019A98C02610>,
                                   648)],
             '$binop_floordiv324.33': [(<numba.core.ir.Assign object at 0x0000019A98C4AD10>,
                                        180)],
             '$binop_floordiv596.25': [(<numba.core.ir.Assign object at 0x0000019A98C14510>,
                                        500)],
             '$binop_iadd486.30': [(<numba.core.ir.Assign object at 0x0000019A98C17BD0>,
                                    376)],
             '$binop_iadd764.32': [(<numba.core.ir.Assign object at 0x0000019A98C00110>,
                                    648)],
             '$binop_mul20.4': [(<numba.core.ir.Assign object at 0x0000019A98CCBE50>,
                                 0)],
             '$binop_mul386.7': [(<numba.core.ir.Assign object at 0x0000019A98C48C90>,
                                  376)],
             '$binop_mul414.15': [(<numba.core.ir.Assign object at 0x0000019A97BC3B50>,
                                   376)],
             '$binop_mul432.18': [(<numba.core.ir.Assign object at 0x0000019A9714C190>,
                                   376)],
             '$binop_mul482.29': [(<numba.core.ir.Assign object at 0x0000019A98C17610>,
                                   376)],
             '$binop_mul658.7': [(<numba.core.ir.Assign object at 0x0000019A98C01750>,
                                  648)],
             '$binop_mul686.15': [(<numba.core.ir.Assign object at 0x0000019A98C005D0>,
                                   648)],
             '$binop_mul704.18': [(<numba.core.ir.Assign object at 0x0000019A98C03F10>,
                                   648)],
             '$binop_mul760.31': [(<numba.core.ir.Assign object at 0x0000019A98C02910>,
                                   648)],
             '$binop_sub234.12': [(<numba.core.ir.Assign object at 0x0000019A98C7DC50>,
                                   180)],
             '$binop_sub318.31': [(<numba.core.ir.Assign object at 0x0000019A98C4B1D0>,
                                   180)],
             '$binop_sub468.27': [(<numba.core.ir.Assign object at 0x0000019A98C14D50>,
                                   376)],
             '$binop_sub504.3': [(<numba.core.ir.Assign object at 0x0000019A97BC9310>,
                                  500)],
             '$binop_sub576.18': [(<numba.core.ir.Assign object at 0x0000019A98C15B90>,
                                   500)],
             '$binop_sub582.20': [(<numba.core.ir.Assign object at 0x0000019A98C15390>,
                                   500)],
             '$binop_sub590.23': [(<numba.core.ir.Assign object at 0x0000019A98C14890>,
                                   500)],
             '$const106.19': [(<numba.core.ir.Assign object at 0x0000019A98C72010>,
                               0)],
             '$const132.23': [(<numba.core.ir.Assign object at 0x0000019A98C73A90>,
                               0)],
             '$const308.27': [(<numba.core.ir.Assign object at 0x0000019A98C4A890>,
                               180)],
             '$const580.19': [(<numba.core.ir.Assign object at 0x0000019A98C15A10>,
                               500)],
             '$const744.28': [(<numba.core.ir.Assign object at 0x0000019A98C01850>,
                               648)],
             '$const782.0': [(<numba.core.ir.Assign object at 0x0000019A98C00F10>,
                              782)],
             '$const80.15': [(<numba.core.ir.Assign object at 0x0000019A98C70210>,
                              0)],
             '$phi178.0': [(<numba.core.ir.Assign object at 0x0000019A98CC2F90>,
                            0)],
             '$phi180.1': [(<numba.core.ir.Assign object at 0x0000019A98D41990>,
                            178)],
             '$phi374.1': [(<numba.core.ir.Assign object at 0x0000019A9716B290>,
                            180)],
             '$phi376.2': [(<numba.core.ir.Assign object at 0x0000019A98C7C810>,
                            374)],
             '$phi646.1': [(<numba.core.ir.Assign object at 0x0000019A98C48B10>,
                            500)],
             '$phi648.2': [(<numba.core.ir.Assign object at 0x0000019A98C14850>,
                            646)],
             'eta': [(<numba.core.ir.Assign object at 0x0000019A98C714D0>, 0),
                     (<numba.core.ir.Assign object at 0x0000019A98C4B510>, 180),
                     (<numba.core.ir.Assign object at 0x0000019A98C16190>,
                      500)],
             'frac': [(<numba.core.ir.Assign object at 0x0000019A98C72190>, 0),
                      (<numba.core.ir.Assign object at 0x0000019A98C7DB50>,
                       180),
                      (<numba.core.ir.Assign object at 0x0000019A97BAA190>,
                       500)],
             'i': [(<numba.core.ir.Assign object at 0x0000019A98C4BF90>, 376)],
             'i_max': [(<numba.core.ir.Assign object at 0x0000019A98C4A990>,
                        180)],
             'index_frac': [(<numba.core.ir.Assign object at 0x0000019A98C723D0>,
                             0),
                            (<numba.core.ir.Assign object at 0x0000019A98C7D0D0>,
                             180),
                            (<numba.core.ir.Assign object at 0x0000019A98C17090>,
                             500)],
             'index_step': [(<numba.core.ir.Assign object at 0x0000019A98C73710>,
                             0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x0000019A98CCB990>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x0000019A98CCA650>,
                             0)],
             'k': [(<numba.core.ir.Assign object at 0x0000019A97BBB490>, 648)],
             'k_max': [(<numba.core.ir.Assign object at 0x0000019A98C14DD0>,
                        500)],
             'n': [(<numba.core.ir.Assign object at 0x0000019A98C72D50>, 0),
                   (<numba.core.ir.Assign object at 0x0000019A98C7E510>, 180)],
             'n_orig': [(<numba.core.ir.Assign object at 0x0000019A98CE6910>,
                         0)],
             'n_out': [(<numba.core.ir.Assign object at 0x0000019A98C49BD0>,
                        0)],
             'num_table': [(<numba.core.ir.Assign object at 0x0000019A98CC9190>,
                            0)],
             'nwin': [(<numba.core.ir.Assign object at 0x0000019A98C5FA10>, 0)],
             'offset': [(<numba.core.ir.Assign object at 0x0000019A98C72950>,
                         0),
                        (<numba.core.ir.Assign object at 0x0000019A98C7C650>,
                         180),
                        (<numba.core.ir.Assign object at 0x0000019A98C17710>,
                         500)],
             'scale': [(<numba.core.ir.Assign object at 0x0000019A98D5ADD0>,
                        0)],
             't': [(<numba.core.ir.Assign object at 0x0000019A98C7EED0>, 180)],
             't_out': [(<numba.core.ir.Assign object at 0x0000019A98CC9650>,
                        0)],
             'time_register': [(<numba.core.ir.Assign object at 0x0000019A98C735D0>,
                                0),
                               (<numba.core.ir.Assign object at 0x0000019A98C7ED10>,
                                180)],
             'weight': [(<numba.core.ir.Assign object at 0x0000019A98C70C90>,
                         0),
                        (<numba.core.ir.Assign object at 0x0000019A97BAABD0>,
                         376),
                        (<numba.core.ir.Assign object at 0x0000019A98C017D0>,
                         648)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A98C9EC50>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000019A98D4C650>, 0)]})
DEBUG 2024-06-11 13:37:26,416 - SSA violators <numba.core.utils.OrderedSet object at 0x0000019A97BAAA90>
DEBUG 2024-06-11 13:37:26,416 - Fix SSA violator on var time_register
DEBUG 2024-06-11 13:37:26,416 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:37:26,416 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98C48210>
DEBUG 2024-06-11 13:37:26,416 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:37:26,416 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:37:26,416 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:37:26,416 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:37:26,416 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:37:26,416 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:37:26,416 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:37:26,416 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,416 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:37:26,416 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,416 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,416 - first assign: time_register
DEBUG 2024-06-11 13:37:26,416 - replaced with: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,416 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:37:26,416 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,416 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,416 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:37:26,416 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,416 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,423 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:37:26,423 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:37:26,423 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,423 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:37:26,423 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:37:26,423 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,423 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:37:26,423 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:37:26,424 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,424 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:37:26,424 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,424 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:37:26,424 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:37:26,424 - on stmt: jump 176
DEBUG 2024-06-11 13:37:26,424 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:37:26,424 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98C48210>
DEBUG 2024-06-11 13:37:26,424 - on stmt: jump 178
DEBUG 2024-06-11 13:37:26,424 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:37:26,424 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98C48210>
DEBUG 2024-06-11 13:37:26,424 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:37:26,424 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:37:26,424 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:37:26,424 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:37:26,424 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:37:26,424 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:37:26,424 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98C48210>
DEBUG 2024-06-11 13:37:26,424 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:37:26,424 - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,424 - replaced with: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,424 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,424 - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,424 - on stmt: $binop_sub234.12 = time_register - n
DEBUG 2024-06-11 13:37:26,424 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 13:37:26,424 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:37:26,424 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,424 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,424 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:37:26,424 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:37:26,424 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:37:26,424 - on stmt: $binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 13:37:26,424 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:37:26,424 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:37:26,424 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,424 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:37:26,424 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,424 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:37:26,424 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:37:26,424 - on stmt: jump 374
DEBUG 2024-06-11 13:37:26,424 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:37:26,424 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98C48210>
DEBUG 2024-06-11 13:37:26,424 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:37:26,424 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:37:26,424 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:37:26,424 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:37:26,424 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:37:26,424 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:37:26,424 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98C48210>
DEBUG 2024-06-11 13:37:26,424 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:37:26,424 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:37:26,424 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:37:26,430 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,430 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:37:26,430 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:37:26,430 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,430 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:37:26,430 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:37:26,430 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,430 - on stmt: $binop_sub468.27 = n - i
DEBUG 2024-06-11 13:37:26,431 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,431 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:37:26,431 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:37:26,431 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:37:26,431 - on stmt: jump 374
DEBUG 2024-06-11 13:37:26,431 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:37:26,431 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98C48210>
DEBUG 2024-06-11 13:37:26,431 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 13:37:26,431 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 13:37:26,431 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:37:26,431 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,431 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,431 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:37:26,431 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:37:26,431 - on stmt: $binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 13:37:26,431 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:37:26,431 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:37:26,431 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:37:26,431 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:37:26,431 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,431 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:37:26,431 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,431 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:37:26,431 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:37:26,431 - on stmt: jump 646
DEBUG 2024-06-11 13:37:26,431 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:37:26,431 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98C48210>
DEBUG 2024-06-11 13:37:26,431 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:37:26,431 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:37:26,431 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:37:26,431 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:37:26,431 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:37:26,431 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:37:26,431 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98C48210>
DEBUG 2024-06-11 13:37:26,431 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:37:26,431 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:37:26,431 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:37:26,431 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,431 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:37:26,436 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:37:26,436 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,436 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:37:26,436 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:37:26,436 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,437 - on stmt: $binop_add740.27 = n + k
DEBUG 2024-06-11 13:37:26,437 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:37:26,437 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:37:26,437 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,437 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:37:26,437 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:37:26,437 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:37:26,437 - on stmt: jump 646
DEBUG 2024-06-11 13:37:26,437 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:37:26,437 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98C48210>
DEBUG 2024-06-11 13:37:26,437 - on stmt: jump 176
DEBUG 2024-06-11 13:37:26,437 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:37:26,437 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98C48210>
DEBUG 2024-06-11 13:37:26,437 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:37:26,437 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:37:26,437 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:37:26,437 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000019A98C9D8D0>],
             180: [<numba.core.ir.Assign object at 0x0000019A8F867850>]})
DEBUG 2024-06-11 13:37:26,439 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:37:26,439 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C03610>
DEBUG 2024-06-11 13:37:26,439 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:37:26,439 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:37:26,439 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:37:26,439 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:37:26,439 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:37:26,439 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:37:26,439 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:37:26,439 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,439 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:37:26,439 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,439 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,439 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:37:26,439 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,439 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,439 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:37:26,439 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,439 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,439 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:37:26,439 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:37:26,439 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,439 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:37:26,439 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:37:26,439 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,439 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:37:26,439 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:37:26,439 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,439 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:37:26,439 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,444 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:37:26,444 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:37:26,444 - on stmt: jump 176
DEBUG 2024-06-11 13:37:26,444 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:37:26,444 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C03610>
DEBUG 2024-06-11 13:37:26,444 - on stmt: jump 178
DEBUG 2024-06-11 13:37:26,444 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:37:26,444 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C03610>
DEBUG 2024-06-11 13:37:26,445 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:37:26,445 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:37:26,445 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:37:26,445 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:37:26,445 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:37:26,445 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:37:26,445 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C03610>
DEBUG 2024-06-11 13:37:26,445 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:37:26,445 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,445 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,445 - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,445 - find_def var='time_register' stmt=n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,445 - replaced with: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,445 - on stmt: $binop_sub234.12 = time_register - n
DEBUG 2024-06-11 13:37:26,445 - find_def var='time_register' stmt=$binop_sub234.12 = time_register - n
DEBUG 2024-06-11 13:37:26,445 - replaced with: $binop_sub234.12 = time_register.1 - n
DEBUG 2024-06-11 13:37:26,445 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 13:37:26,445 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:37:26,445 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,445 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,445 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:37:26,445 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:37:26,445 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:37:26,445 - on stmt: $binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 13:37:26,448 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:37:26,448 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:37:26,448 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,448 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:37:26,448 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,448 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:37:26,448 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:37:26,448 - on stmt: jump 374
DEBUG 2024-06-11 13:37:26,448 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:37:26,448 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C03610>
DEBUG 2024-06-11 13:37:26,448 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:37:26,449 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:37:26,449 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:37:26,449 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:37:26,449 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:37:26,449 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:37:26,449 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C03610>
DEBUG 2024-06-11 13:37:26,449 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:37:26,449 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:37:26,449 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:37:26,449 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,449 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:37:26,449 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:37:26,449 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,449 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:37:26,449 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:37:26,449 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,449 - on stmt: $binop_sub468.27 = n - i
DEBUG 2024-06-11 13:37:26,449 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,449 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:37:26,449 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:37:26,449 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:37:26,449 - on stmt: jump 374
DEBUG 2024-06-11 13:37:26,449 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:37:26,449 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C03610>
DEBUG 2024-06-11 13:37:26,449 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 13:37:26,449 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 13:37:26,449 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:37:26,449 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,449 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,449 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:37:26,449 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:37:26,449 - on stmt: $binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 13:37:26,449 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:37:26,449 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:37:26,449 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:37:26,449 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:37:26,449 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,449 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:37:26,449 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,449 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:37:26,449 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:37:26,449 - on stmt: jump 646
DEBUG 2024-06-11 13:37:26,449 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:37:26,449 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C03610>
DEBUG 2024-06-11 13:37:26,449 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:37:26,449 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:37:26,449 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:37:26,449 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:37:26,449 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:37:26,449 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:37:26,449 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C03610>
DEBUG 2024-06-11 13:37:26,449 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:37:26,449 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:37:26,449 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:37:26,449 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,449 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:37:26,449 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:37:26,456 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,456 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:37:26,456 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:37:26,456 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,456 - on stmt: $binop_add740.27 = n + k
DEBUG 2024-06-11 13:37:26,456 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:37:26,456 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:37:26,456 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,456 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:37:26,457 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:37:26,457 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:37:26,457 - on stmt: jump 646
DEBUG 2024-06-11 13:37:26,457 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:37:26,457 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C03610>
DEBUG 2024-06-11 13:37:26,457 - on stmt: jump 176
DEBUG 2024-06-11 13:37:26,457 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:37:26,457 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C03610>
DEBUG 2024-06-11 13:37:26,457 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:37:26,457 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:37:26,457 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:37:26,457 - Fix SSA violator on var n
DEBUG 2024-06-11 13:37:26,457 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:37:26,457 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98CE4E10>
DEBUG 2024-06-11 13:37:26,457 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:37:26,457 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:37:26,457 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:37:26,457 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:37:26,459 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:37:26,459 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:37:26,459 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:37:26,459 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,459 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:37:26,459 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,459 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,459 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:37:26,459 - first assign: n
DEBUG 2024-06-11 13:37:26,460 - replaced with: n = const(int, 0)
DEBUG 2024-06-11 13:37:26,460 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,460 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,460 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:37:26,460 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,460 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,460 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:37:26,460 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:37:26,460 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,461 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:37:26,461 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:37:26,461 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,461 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:37:26,461 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:37:26,461 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,461 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:37:26,461 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,461 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:37:26,461 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:37:26,461 - on stmt: jump 176
DEBUG 2024-06-11 13:37:26,461 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:37:26,461 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98CE4E10>
DEBUG 2024-06-11 13:37:26,461 - on stmt: jump 178
DEBUG 2024-06-11 13:37:26,461 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:37:26,461 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98CE4E10>
DEBUG 2024-06-11 13:37:26,461 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:37:26,461 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:37:26,461 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:37:26,461 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:37:26,461 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:37:26,464 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:37:26,464 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98CE4E10>
DEBUG 2024-06-11 13:37:26,464 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:37:26,464 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,464 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,464 - on stmt: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,464 - replaced with: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,464 - on stmt: $binop_sub234.12 = time_register.1 - n
DEBUG 2024-06-11 13:37:26,464 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 13:37:26,464 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:37:26,464 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,464 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,464 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:37:26,464 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:37:26,464 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:37:26,464 - on stmt: $binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 13:37:26,464 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:37:26,464 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:37:26,464 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,464 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:37:26,464 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,464 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:37:26,464 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:37:26,464 - on stmt: jump 374
DEBUG 2024-06-11 13:37:26,464 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:37:26,464 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98CE4E10>
DEBUG 2024-06-11 13:37:26,464 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:37:26,464 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:37:26,464 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:37:26,464 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:37:26,464 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:37:26,464 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:37:26,464 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98CE4E10>
DEBUG 2024-06-11 13:37:26,464 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:37:26,464 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:37:26,464 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:37:26,464 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,464 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:37:26,464 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:37:26,464 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,464 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:37:26,464 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:37:26,464 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,464 - on stmt: $binop_sub468.27 = n - i
DEBUG 2024-06-11 13:37:26,464 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,464 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:37:26,464 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:37:26,464 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:37:26,464 - on stmt: jump 374
DEBUG 2024-06-11 13:37:26,464 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:37:26,464 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98CE4E10>
DEBUG 2024-06-11 13:37:26,464 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 13:37:26,464 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 13:37:26,464 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:37:26,464 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,464 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,464 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:37:26,464 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:37:26,464 - on stmt: $binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 13:37:26,464 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:37:26,464 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:37:26,464 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:37:26,464 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:37:26,464 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,464 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:37:26,464 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,464 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:37:26,472 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:37:26,472 - on stmt: jump 646
DEBUG 2024-06-11 13:37:26,472 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:37:26,472 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98CE4E10>
DEBUG 2024-06-11 13:37:26,472 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:37:26,473 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:37:26,473 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:37:26,473 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:37:26,473 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:37:26,473 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:37:26,473 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98CE4E10>
DEBUG 2024-06-11 13:37:26,473 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:37:26,473 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:37:26,473 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:37:26,474 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,474 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:37:26,474 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:37:26,474 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,474 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:37:26,474 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:37:26,474 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,474 - on stmt: $binop_add740.27 = n + k
DEBUG 2024-06-11 13:37:26,474 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:37:26,474 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:37:26,474 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,474 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:37:26,474 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:37:26,474 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:37:26,474 - on stmt: jump 646
DEBUG 2024-06-11 13:37:26,474 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:37:26,474 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98CE4E10>
DEBUG 2024-06-11 13:37:26,474 - on stmt: jump 176
DEBUG 2024-06-11 13:37:26,476 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:37:26,476 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98CE4E10>
DEBUG 2024-06-11 13:37:26,476 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:37:26,476 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:37:26,476 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:37:26,476 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000019A8F3DBF50>],
             180: [<numba.core.ir.Assign object at 0x0000019A98CC05D0>]})
DEBUG 2024-06-11 13:37:26,476 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:37:26,476 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C5ED50>
DEBUG 2024-06-11 13:37:26,476 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:37:26,476 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:37:26,476 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:37:26,478 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:37:26,478 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:37:26,478 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:37:26,478 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:37:26,478 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,478 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:37:26,478 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,478 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,478 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:37:26,478 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,478 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,478 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:37:26,478 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,478 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,478 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:37:26,478 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:37:26,480 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,480 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:37:26,480 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:37:26,480 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,480 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:37:26,480 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:37:26,480 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,480 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:37:26,480 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,481 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:37:26,481 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:37:26,481 - on stmt: jump 176
DEBUG 2024-06-11 13:37:26,481 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:37:26,481 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C5ED50>
DEBUG 2024-06-11 13:37:26,481 - on stmt: jump 178
DEBUG 2024-06-11 13:37:26,481 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:37:26,481 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C5ED50>
DEBUG 2024-06-11 13:37:26,481 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:37:26,481 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:37:26,481 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:37:26,481 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:37:26,481 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:37:26,481 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:37:26,481 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C5ED50>
DEBUG 2024-06-11 13:37:26,481 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:37:26,481 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,481 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,481 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,481 - on stmt: $binop_sub234.12 = time_register.1 - n
DEBUG 2024-06-11 13:37:26,483 - find_def var='n' stmt=$binop_sub234.12 = time_register.1 - n
DEBUG 2024-06-11 13:37:26,483 - replaced with: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 13:37:26,483 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 13:37:26,483 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:37:26,483 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,483 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,483 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:37:26,483 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:37:26,484 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:37:26,484 - on stmt: $binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 13:37:26,484 - find_def var='n' stmt=$binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 13:37:26,484 - replaced with: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 13:37:26,484 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:37:26,484 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:37:26,484 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,484 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:37:26,484 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,484 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:37:26,484 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:37:26,484 - on stmt: jump 374
DEBUG 2024-06-11 13:37:26,484 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:37:26,484 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C5ED50>
DEBUG 2024-06-11 13:37:26,484 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:37:26,484 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:37:26,484 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:37:26,484 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:37:26,484 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:37:26,484 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:37:26,484 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C5ED50>
DEBUG 2024-06-11 13:37:26,484 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:37:26,484 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:37:26,484 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:37:26,484 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,484 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:37:26,484 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:37:26,484 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,484 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:37:26,484 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:37:26,484 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,484 - on stmt: $binop_sub468.27 = n - i
DEBUG 2024-06-11 13:37:26,484 - find_def var='n' stmt=$binop_sub468.27 = n - i
DEBUG 2024-06-11 13:37:26,484 - find_def_from_top label 376
DEBUG 2024-06-11 13:37:26,484 - idom 374 from label 376
DEBUG 2024-06-11 13:37:26,484 - find_def_from_bottom label 374
DEBUG 2024-06-11 13:37:26,484 - find_def_from_top label 374
DEBUG 2024-06-11 13:37:26,484 - idom 180 from label 374
DEBUG 2024-06-11 13:37:26,484 - find_def_from_bottom label 180
DEBUG 2024-06-11 13:37:26,484 - replaced with: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 13:37:26,484 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,484 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:37:26,484 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:37:26,489 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:37:26,489 - on stmt: jump 374
DEBUG 2024-06-11 13:37:26,489 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:37:26,489 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C5ED50>
DEBUG 2024-06-11 13:37:26,489 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 13:37:26,489 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 13:37:26,489 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:37:26,489 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,489 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,489 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:37:26,489 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:37:26,489 - on stmt: $binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 13:37:26,489 - find_def var='n' stmt=$binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 13:37:26,491 - find_def_from_top label 500
DEBUG 2024-06-11 13:37:26,491 - idom 374 from label 500
DEBUG 2024-06-11 13:37:26,491 - find_def_from_bottom label 374
DEBUG 2024-06-11 13:37:26,491 - find_def_from_top label 374
DEBUG 2024-06-11 13:37:26,491 - idom 180 from label 374
DEBUG 2024-06-11 13:37:26,491 - find_def_from_bottom label 180
DEBUG 2024-06-11 13:37:26,491 - replaced with: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 13:37:26,491 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:37:26,491 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:37:26,491 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:37:26,491 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:37:26,491 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,491 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:37:26,491 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,491 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:37:26,491 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:37:26,491 - on stmt: jump 646
DEBUG 2024-06-11 13:37:26,491 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:37:26,491 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C5ED50>
DEBUG 2024-06-11 13:37:26,491 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:37:26,491 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:37:26,491 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:37:26,491 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:37:26,491 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:37:26,491 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:37:26,494 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C5ED50>
DEBUG 2024-06-11 13:37:26,494 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:37:26,494 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:37:26,494 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:37:26,494 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,494 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:37:26,494 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:37:26,494 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,494 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:37:26,494 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:37:26,494 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,495 - on stmt: $binop_add740.27 = n + k
DEBUG 2024-06-11 13:37:26,495 - find_def var='n' stmt=$binop_add740.27 = n + k
DEBUG 2024-06-11 13:37:26,495 - find_def_from_top label 648
DEBUG 2024-06-11 13:37:26,495 - idom 646 from label 648
DEBUG 2024-06-11 13:37:26,495 - find_def_from_bottom label 646
DEBUG 2024-06-11 13:37:26,495 - find_def_from_top label 646
DEBUG 2024-06-11 13:37:26,495 - idom 500 from label 646
DEBUG 2024-06-11 13:37:26,495 - find_def_from_bottom label 500
DEBUG 2024-06-11 13:37:26,495 - find_def_from_top label 500
DEBUG 2024-06-11 13:37:26,495 - idom 374 from label 500
DEBUG 2024-06-11 13:37:26,496 - find_def_from_bottom label 374
DEBUG 2024-06-11 13:37:26,496 - find_def_from_top label 374
DEBUG 2024-06-11 13:37:26,496 - idom 180 from label 374
DEBUG 2024-06-11 13:37:26,496 - find_def_from_bottom label 180
DEBUG 2024-06-11 13:37:26,496 - replaced with: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 13:37:26,496 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:37:26,496 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:37:26,496 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,496 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:37:26,497 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:37:26,497 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:37:26,498 - on stmt: jump 646
DEBUG 2024-06-11 13:37:26,498 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:37:26,498 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C5ED50>
DEBUG 2024-06-11 13:37:26,498 - on stmt: jump 176
DEBUG 2024-06-11 13:37:26,498 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:37:26,498 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C5ED50>
DEBUG 2024-06-11 13:37:26,498 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:37:26,498 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:37:26,498 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:37:26,498 - Fix SSA violator on var frac
DEBUG 2024-06-11 13:37:26,498 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:37:26,499 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98C00450>
DEBUG 2024-06-11 13:37:26,499 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:37:26,499 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:37:26,499 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:37:26,499 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:37:26,499 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:37:26,499 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:37:26,499 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:37:26,499 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,499 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:37:26,499 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,499 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,499 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:37:26,499 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,499 - first assign: frac
DEBUG 2024-06-11 13:37:26,499 - replaced with: frac = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,499 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,499 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:37:26,499 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,499 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,499 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:37:26,499 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:37:26,499 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,499 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:37:26,499 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:37:26,499 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,499 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:37:26,502 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:37:26,502 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,502 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:37:26,502 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,502 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:37:26,502 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:37:26,502 - on stmt: jump 176
DEBUG 2024-06-11 13:37:26,502 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:37:26,502 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98C00450>
DEBUG 2024-06-11 13:37:26,502 - on stmt: jump 178
DEBUG 2024-06-11 13:37:26,503 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:37:26,503 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98C00450>
DEBUG 2024-06-11 13:37:26,503 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:37:26,503 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:37:26,503 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:37:26,503 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:37:26,503 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:37:26,503 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:37:26,503 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98C00450>
DEBUG 2024-06-11 13:37:26,503 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:37:26,503 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,503 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,503 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,503 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 13:37:26,505 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 13:37:26,505 - replaced with: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 13:37:26,505 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:37:26,505 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,505 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,505 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:37:26,505 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:37:26,505 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:37:26,506 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 13:37:26,506 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:37:26,506 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:37:26,506 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,506 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:37:26,506 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,506 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:37:26,506 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:37:26,506 - on stmt: jump 374
DEBUG 2024-06-11 13:37:26,506 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:37:26,506 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98C00450>
DEBUG 2024-06-11 13:37:26,506 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:37:26,506 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:37:26,506 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:37:26,506 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:37:26,506 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:37:26,506 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:37:26,506 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98C00450>
DEBUG 2024-06-11 13:37:26,506 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:37:26,508 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:37:26,508 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:37:26,508 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,508 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:37:26,508 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:37:26,508 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,508 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:37:26,508 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:37:26,508 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,508 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 13:37:26,508 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,508 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:37:26,508 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:37:26,508 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:37:26,508 - on stmt: jump 374
DEBUG 2024-06-11 13:37:26,508 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:37:26,508 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98C00450>
DEBUG 2024-06-11 13:37:26,508 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 13:37:26,508 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 13:37:26,508 - replaced with: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 13:37:26,508 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:37:26,508 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,508 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,508 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:37:26,508 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:37:26,508 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 13:37:26,508 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:37:26,508 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:37:26,508 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:37:26,508 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:37:26,508 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,508 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:37:26,508 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,508 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:37:26,508 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:37:26,508 - on stmt: jump 646
DEBUG 2024-06-11 13:37:26,513 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:37:26,513 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98C00450>
DEBUG 2024-06-11 13:37:26,513 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:37:26,513 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:37:26,513 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:37:26,513 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:37:26,513 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:37:26,513 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:37:26,513 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98C00450>
DEBUG 2024-06-11 13:37:26,513 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:37:26,514 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:37:26,514 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:37:26,514 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,514 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:37:26,514 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:37:26,514 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,514 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:37:26,514 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:37:26,514 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,514 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 13:37:26,514 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:37:26,516 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:37:26,516 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,516 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:37:26,516 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:37:26,516 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:37:26,516 - on stmt: jump 646
DEBUG 2024-06-11 13:37:26,516 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:37:26,516 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98C00450>
DEBUG 2024-06-11 13:37:26,516 - on stmt: jump 176
DEBUG 2024-06-11 13:37:26,516 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:37:26,516 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98C00450>
DEBUG 2024-06-11 13:37:26,516 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:37:26,516 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:37:26,516 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:37:26,516 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000019A98C93DD0>],
             180: [<numba.core.ir.Assign object at 0x0000019A98CC8950>],
             500: [<numba.core.ir.Assign object at 0x0000019A98CCBB10>]})
DEBUG 2024-06-11 13:37:26,516 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:37:26,516 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98CC31D0>
DEBUG 2024-06-11 13:37:26,516 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:37:26,516 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:37:26,516 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:37:26,516 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:37:26,516 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:37:26,516 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:37:26,518 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:37:26,518 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,518 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:37:26,518 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,518 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,518 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:37:26,518 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,518 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,518 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:37:26,518 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,519 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,519 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:37:26,519 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:37:26,519 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,519 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:37:26,519 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:37:26,519 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,519 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:37:26,519 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:37:26,519 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,519 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:37:26,519 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,519 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:37:26,519 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:37:26,519 - on stmt: jump 176
DEBUG 2024-06-11 13:37:26,519 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:37:26,519 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98CC31D0>
DEBUG 2024-06-11 13:37:26,519 - on stmt: jump 178
DEBUG 2024-06-11 13:37:26,519 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:37:26,519 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98CC31D0>
DEBUG 2024-06-11 13:37:26,519 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:37:26,519 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:37:26,519 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:37:26,519 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:37:26,519 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:37:26,519 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:37:26,519 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98CC31D0>
DEBUG 2024-06-11 13:37:26,519 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:37:26,519 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,523 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,523 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,523 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 13:37:26,523 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 13:37:26,523 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:37:26,523 - find_def var='frac' stmt=index_frac = frac * num_table
DEBUG 2024-06-11 13:37:26,523 - replaced with: index_frac = frac.1 * num_table
DEBUG 2024-06-11 13:37:26,523 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,523 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,523 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:37:26,523 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:37:26,523 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:37:26,523 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 13:37:26,523 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:37:26,523 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:37:26,525 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,525 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:37:26,525 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,525 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:37:26,525 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:37:26,525 - on stmt: jump 374
DEBUG 2024-06-11 13:37:26,525 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:37:26,525 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98CC31D0>
DEBUG 2024-06-11 13:37:26,525 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:37:26,525 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:37:26,525 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:37:26,525 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:37:26,525 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:37:26,525 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:37:26,525 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98CC31D0>
DEBUG 2024-06-11 13:37:26,525 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:37:26,526 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:37:26,526 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:37:26,526 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,526 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:37:26,526 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:37:26,526 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,526 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:37:26,526 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:37:26,526 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,526 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 13:37:26,528 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,528 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:37:26,528 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:37:26,528 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:37:26,528 - on stmt: jump 374
DEBUG 2024-06-11 13:37:26,528 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:37:26,528 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98CC31D0>
DEBUG 2024-06-11 13:37:26,528 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 13:37:26,528 - find_def var='frac' stmt=$binop_sub504.3 = scale - frac
DEBUG 2024-06-11 13:37:26,528 - find_def_from_top label 500
DEBUG 2024-06-11 13:37:26,528 - idom 374 from label 500
DEBUG 2024-06-11 13:37:26,528 - find_def_from_bottom label 374
DEBUG 2024-06-11 13:37:26,528 - find_def_from_top label 374
DEBUG 2024-06-11 13:37:26,528 - idom 180 from label 374
DEBUG 2024-06-11 13:37:26,528 - find_def_from_bottom label 180
DEBUG 2024-06-11 13:37:26,528 - replaced with: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 13:37:26,528 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 13:37:26,528 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:37:26,528 - find_def var='frac' stmt=index_frac = frac * num_table
DEBUG 2024-06-11 13:37:26,530 - replaced with: index_frac = frac.2 * num_table
DEBUG 2024-06-11 13:37:26,530 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,530 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,530 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:37:26,530 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:37:26,530 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 13:37:26,530 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:37:26,530 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:37:26,530 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:37:26,531 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:37:26,531 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,531 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:37:26,531 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,531 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:37:26,531 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:37:26,531 - on stmt: jump 646
DEBUG 2024-06-11 13:37:26,531 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:37:26,531 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98CC31D0>
DEBUG 2024-06-11 13:37:26,531 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:37:26,531 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:37:26,531 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:37:26,531 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:37:26,531 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:37:26,533 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:37:26,533 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98CC31D0>
DEBUG 2024-06-11 13:37:26,533 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:37:26,533 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:37:26,533 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:37:26,533 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,533 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:37:26,533 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:37:26,533 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,533 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:37:26,533 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:37:26,533 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,533 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 13:37:26,533 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:37:26,533 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:37:26,533 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,533 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:37:26,533 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:37:26,533 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:37:26,533 - on stmt: jump 646
DEBUG 2024-06-11 13:37:26,533 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:37:26,533 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98CC31D0>
DEBUG 2024-06-11 13:37:26,533 - on stmt: jump 176
DEBUG 2024-06-11 13:37:26,533 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:37:26,533 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98CC31D0>
DEBUG 2024-06-11 13:37:26,533 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:37:26,533 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:37:26,533 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:37:26,533 - Fix SSA violator on var index_frac
DEBUG 2024-06-11 13:37:26,533 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:37:26,533 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98CC8AD0>
DEBUG 2024-06-11 13:37:26,533 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:37:26,533 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:37:26,536 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:37:26,536 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:37:26,536 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:37:26,536 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:37:26,536 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:37:26,536 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,536 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:37:26,536 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,536 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,536 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:37:26,538 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,538 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,538 - first assign: index_frac
DEBUG 2024-06-11 13:37:26,538 - replaced with: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,538 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:37:26,538 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,538 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,538 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:37:26,538 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:37:26,538 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,539 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:37:26,539 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:37:26,539 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,539 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:37:26,539 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:37:26,539 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,539 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:37:26,539 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,539 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:37:26,539 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:37:26,539 - on stmt: jump 176
DEBUG 2024-06-11 13:37:26,539 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:37:26,539 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98CC8AD0>
DEBUG 2024-06-11 13:37:26,539 - on stmt: jump 178
DEBUG 2024-06-11 13:37:26,539 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:37:26,539 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98CC8AD0>
DEBUG 2024-06-11 13:37:26,539 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:37:26,539 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:37:26,541 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:37:26,541 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:37:26,541 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:37:26,541 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:37:26,541 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98CC8AD0>
DEBUG 2024-06-11 13:37:26,541 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:37:26,541 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,541 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,541 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,541 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 13:37:26,541 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 13:37:26,542 - on stmt: index_frac = frac.1 * num_table
DEBUG 2024-06-11 13:37:26,542 - replaced with: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 13:37:26,542 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,542 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,542 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:37:26,542 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:37:26,542 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:37:26,542 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 13:37:26,542 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:37:26,542 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:37:26,542 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,542 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:37:26,542 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,542 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:37:26,542 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:37:26,542 - on stmt: jump 374
DEBUG 2024-06-11 13:37:26,542 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:37:26,542 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98CC8AD0>
DEBUG 2024-06-11 13:37:26,542 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:37:26,542 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:37:26,542 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:37:26,542 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:37:26,542 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:37:26,542 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:37:26,542 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98CC8AD0>
DEBUG 2024-06-11 13:37:26,545 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:37:26,545 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:37:26,545 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:37:26,545 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,545 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:37:26,545 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:37:26,545 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,545 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:37:26,545 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:37:26,546 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,546 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 13:37:26,546 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,546 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:37:26,546 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:37:26,546 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:37:26,546 - on stmt: jump 374
DEBUG 2024-06-11 13:37:26,546 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:37:26,546 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98CC8AD0>
DEBUG 2024-06-11 13:37:26,546 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 13:37:26,547 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 13:37:26,548 - on stmt: index_frac = frac.2 * num_table
DEBUG 2024-06-11 13:37:26,548 - replaced with: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 13:37:26,548 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,548 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,548 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:37:26,548 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:37:26,548 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 13:37:26,548 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:37:26,549 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:37:26,549 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:37:26,549 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:37:26,549 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,549 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:37:26,549 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,549 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:37:26,549 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:37:26,549 - on stmt: jump 646
DEBUG 2024-06-11 13:37:26,549 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:37:26,549 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98CC8AD0>
DEBUG 2024-06-11 13:37:26,549 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:37:26,549 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:37:26,549 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:37:26,549 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:37:26,549 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:37:26,549 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:37:26,549 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98CC8AD0>
DEBUG 2024-06-11 13:37:26,549 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:37:26,549 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:37:26,549 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:37:26,549 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,549 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:37:26,549 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:37:26,549 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,549 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:37:26,549 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:37:26,549 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,549 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 13:37:26,549 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:37:26,549 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:37:26,549 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,549 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:37:26,549 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:37:26,549 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:37:26,549 - on stmt: jump 646
DEBUG 2024-06-11 13:37:26,549 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:37:26,549 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98CC8AD0>
DEBUG 2024-06-11 13:37:26,549 - on stmt: jump 176
DEBUG 2024-06-11 13:37:26,549 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:37:26,549 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98CC8AD0>
DEBUG 2024-06-11 13:37:26,549 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:37:26,549 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:37:26,549 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:37:26,549 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000019A98CC8590>],
             180: [<numba.core.ir.Assign object at 0x0000019A98C00A90>],
             500: [<numba.core.ir.Assign object at 0x0000019A98C73F50>]})
DEBUG 2024-06-11 13:37:26,549 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:37:26,549 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C01E10>
DEBUG 2024-06-11 13:37:26,549 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:37:26,549 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:37:26,549 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:37:26,549 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:37:26,549 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:37:26,549 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:37:26,549 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:37:26,549 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,549 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:37:26,549 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,549 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,549 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:37:26,549 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,549 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,549 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:37:26,556 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,556 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,556 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:37:26,556 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:37:26,556 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,556 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:37:26,556 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:37:26,556 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,556 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:37:26,556 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:37:26,556 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,556 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:37:26,556 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,558 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:37:26,558 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:37:26,558 - on stmt: jump 176
DEBUG 2024-06-11 13:37:26,558 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:37:26,558 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C01E10>
DEBUG 2024-06-11 13:37:26,558 - on stmt: jump 178
DEBUG 2024-06-11 13:37:26,558 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:37:26,558 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C01E10>
DEBUG 2024-06-11 13:37:26,558 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:37:26,558 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:37:26,558 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:37:26,558 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:37:26,558 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:37:26,558 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:37:26,558 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C01E10>
DEBUG 2024-06-11 13:37:26,558 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:37:26,558 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,558 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,558 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,558 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 13:37:26,558 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 13:37:26,558 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 13:37:26,558 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,558 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,558 - find_def var='index_frac' stmt=offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,558 - replaced with: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,558 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:37:26,558 - find_def var='index_frac' stmt=eta = index_frac - offset
DEBUG 2024-06-11 13:37:26,561 - replaced with: eta = index_frac.1 - offset
DEBUG 2024-06-11 13:37:26,561 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:37:26,561 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:37:26,561 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 13:37:26,561 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:37:26,561 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:37:26,561 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,561 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:37:26,562 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,562 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:37:26,562 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:37:26,562 - on stmt: jump 374
DEBUG 2024-06-11 13:37:26,562 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:37:26,562 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C01E10>
DEBUG 2024-06-11 13:37:26,562 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:37:26,562 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:37:26,562 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:37:26,562 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:37:26,563 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:37:26,563 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:37:26,563 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C01E10>
DEBUG 2024-06-11 13:37:26,563 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:37:26,563 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:37:26,563 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:37:26,564 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,564 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:37:26,564 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:37:26,564 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,564 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:37:26,564 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:37:26,564 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,564 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 13:37:26,564 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,564 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:37:26,564 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:37:26,564 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:37:26,564 - on stmt: jump 374
DEBUG 2024-06-11 13:37:26,564 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:37:26,564 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C01E10>
DEBUG 2024-06-11 13:37:26,564 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 13:37:26,564 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 13:37:26,564 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 13:37:26,564 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,564 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,564 - find_def var='index_frac' stmt=offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,564 - replaced with: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,564 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:37:26,564 - find_def var='index_frac' stmt=eta = index_frac - offset
DEBUG 2024-06-11 13:37:26,564 - replaced with: eta = index_frac.2 - offset
DEBUG 2024-06-11 13:37:26,564 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:37:26,564 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 13:37:26,564 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:37:26,564 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:37:26,564 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:37:26,564 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:37:26,564 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,564 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:37:26,564 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,564 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:37:26,564 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:37:26,564 - on stmt: jump 646
DEBUG 2024-06-11 13:37:26,569 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:37:26,569 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C01E10>
DEBUG 2024-06-11 13:37:26,569 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:37:26,569 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:37:26,569 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:37:26,569 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:37:26,569 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:37:26,569 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:37:26,569 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C01E10>
DEBUG 2024-06-11 13:37:26,569 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:37:26,569 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:37:26,569 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:37:26,569 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,569 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:37:26,569 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:37:26,569 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,569 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:37:26,569 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:37:26,569 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,569 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 13:37:26,569 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:37:26,569 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:37:26,569 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,569 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:37:26,569 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:37:26,573 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:37:26,573 - on stmt: jump 646
DEBUG 2024-06-11 13:37:26,573 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:37:26,573 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C01E10>
DEBUG 2024-06-11 13:37:26,573 - on stmt: jump 176
DEBUG 2024-06-11 13:37:26,573 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:37:26,573 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C01E10>
DEBUG 2024-06-11 13:37:26,573 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:37:26,573 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:37:26,573 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:37:26,573 - Fix SSA violator on var offset
DEBUG 2024-06-11 13:37:26,573 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:37:26,573 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98C724D0>
DEBUG 2024-06-11 13:37:26,573 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:37:26,573 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:37:26,573 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:37:26,573 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:37:26,575 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:37:26,575 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:37:26,575 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:37:26,575 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,575 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:37:26,575 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,575 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,575 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:37:26,575 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,575 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,575 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:37:26,575 - first assign: offset
DEBUG 2024-06-11 13:37:26,575 - replaced with: offset = const(int, 0)
DEBUG 2024-06-11 13:37:26,575 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,575 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,575 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:37:26,575 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:37:26,575 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,575 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:37:26,575 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:37:26,575 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,575 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:37:26,575 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:37:26,575 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,575 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:37:26,575 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,575 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:37:26,575 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:37:26,575 - on stmt: jump 176
DEBUG 2024-06-11 13:37:26,575 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:37:26,575 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98C724D0>
DEBUG 2024-06-11 13:37:26,575 - on stmt: jump 178
DEBUG 2024-06-11 13:37:26,575 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:37:26,575 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98C724D0>
DEBUG 2024-06-11 13:37:26,575 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:37:26,575 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:37:26,575 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:37:26,575 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:37:26,575 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:37:26,575 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:37:26,575 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98C724D0>
DEBUG 2024-06-11 13:37:26,575 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:37:26,575 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,575 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,575 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,575 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 13:37:26,575 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 13:37:26,575 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 13:37:26,575 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,575 - on stmt: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,575 - replaced with: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,575 - on stmt: eta = index_frac.1 - offset
DEBUG 2024-06-11 13:37:26,575 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:37:26,575 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:37:26,581 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 13:37:26,581 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:37:26,581 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:37:26,581 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,581 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:37:26,581 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,581 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:37:26,581 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:37:26,582 - on stmt: jump 374
DEBUG 2024-06-11 13:37:26,582 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:37:26,582 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98C724D0>
DEBUG 2024-06-11 13:37:26,582 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:37:26,582 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:37:26,582 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:37:26,582 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:37:26,582 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:37:26,582 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:37:26,582 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98C724D0>
DEBUG 2024-06-11 13:37:26,582 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:37:26,582 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:37:26,582 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:37:26,582 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,582 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:37:26,582 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:37:26,582 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,582 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:37:26,582 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:37:26,582 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,582 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 13:37:26,582 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,582 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:37:26,582 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:37:26,582 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:37:26,582 - on stmt: jump 374
DEBUG 2024-06-11 13:37:26,582 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:37:26,582 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98C724D0>
DEBUG 2024-06-11 13:37:26,582 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 13:37:26,582 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 13:37:26,582 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 13:37:26,582 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,582 - on stmt: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,582 - replaced with: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,582 - on stmt: eta = index_frac.2 - offset
DEBUG 2024-06-11 13:37:26,582 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:37:26,582 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 13:37:26,582 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:37:26,582 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:37:26,582 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:37:26,582 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:37:26,582 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,582 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:37:26,582 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,582 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:37:26,582 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:37:26,582 - on stmt: jump 646
DEBUG 2024-06-11 13:37:26,582 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:37:26,582 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98C724D0>
DEBUG 2024-06-11 13:37:26,582 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:37:26,582 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:37:26,582 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:37:26,582 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:37:26,582 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:37:26,582 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:37:26,582 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98C724D0>
DEBUG 2024-06-11 13:37:26,582 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:37:26,582 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:37:26,582 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:37:26,582 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,582 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:37:26,589 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:37:26,589 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,589 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:37:26,589 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:37:26,589 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,589 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 13:37:26,589 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:37:26,589 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:37:26,589 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,589 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:37:26,591 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:37:26,591 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:37:26,591 - on stmt: jump 646
DEBUG 2024-06-11 13:37:26,591 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:37:26,591 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98C724D0>
DEBUG 2024-06-11 13:37:26,591 - on stmt: jump 176
DEBUG 2024-06-11 13:37:26,591 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:37:26,591 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98C724D0>
DEBUG 2024-06-11 13:37:26,591 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:37:26,591 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:37:26,591 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:37:26,591 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000019A98C73750>],
             180: [<numba.core.ir.Assign object at 0x0000019A98CC8B90>],
             500: [<numba.core.ir.Assign object at 0x0000019A98C15CD0>]})
DEBUG 2024-06-11 13:37:26,591 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:37:26,591 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A97BDB210>
DEBUG 2024-06-11 13:37:26,591 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:37:26,591 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:37:26,591 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:37:26,591 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:37:26,591 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:37:26,591 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:37:26,591 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:37:26,591 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,591 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:37:26,591 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,591 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,591 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:37:26,591 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,591 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,591 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:37:26,591 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,591 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,591 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:37:26,591 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:37:26,591 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,591 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:37:26,591 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:37:26,591 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,591 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:37:26,591 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:37:26,591 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,591 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:37:26,591 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,591 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:37:26,591 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:37:26,591 - on stmt: jump 176
DEBUG 2024-06-11 13:37:26,591 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:37:26,591 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A97BDB210>
DEBUG 2024-06-11 13:37:26,591 - on stmt: jump 178
DEBUG 2024-06-11 13:37:26,591 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:37:26,591 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A97BDB210>
DEBUG 2024-06-11 13:37:26,591 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:37:26,591 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:37:26,597 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:37:26,597 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:37:26,597 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:37:26,597 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:37:26,597 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A97BDB210>
DEBUG 2024-06-11 13:37:26,597 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:37:26,598 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,598 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,598 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,598 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 13:37:26,598 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 13:37:26,598 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 13:37:26,598 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,598 - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,598 - on stmt: eta = index_frac.1 - offset
DEBUG 2024-06-11 13:37:26,598 - find_def var='offset' stmt=eta = index_frac.1 - offset
DEBUG 2024-06-11 13:37:26,598 - replaced with: eta = index_frac.1 - offset.1
DEBUG 2024-06-11 13:37:26,598 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:37:26,598 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:37:26,599 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 13:37:26,599 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:37:26,599 - find_def var='offset' stmt=$binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:37:26,599 - replaced with: $binop_sub318.31 = nwin - offset.1
DEBUG 2024-06-11 13:37:26,599 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:37:26,599 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,599 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:37:26,599 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,599 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:37:26,600 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:37:26,600 - on stmt: jump 374
DEBUG 2024-06-11 13:37:26,600 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:37:26,600 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A97BDB210>
DEBUG 2024-06-11 13:37:26,600 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:37:26,600 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:37:26,600 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:37:26,600 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:37:26,600 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:37:26,600 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:37:26,600 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A97BDB210>
DEBUG 2024-06-11 13:37:26,602 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:37:26,602 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:37:26,602 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:37:26,602 - find_def var='offset' stmt=$binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:37:26,602 - find_def_from_top label 376
DEBUG 2024-06-11 13:37:26,602 - idom 374 from label 376
DEBUG 2024-06-11 13:37:26,602 - find_def_from_bottom label 374
DEBUG 2024-06-11 13:37:26,602 - find_def_from_top label 374
DEBUG 2024-06-11 13:37:26,602 - idom 180 from label 374
DEBUG 2024-06-11 13:37:26,603 - find_def_from_bottom label 180
DEBUG 2024-06-11 13:37:26,603 - replaced with: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG 2024-06-11 13:37:26,603 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,603 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:37:26,603 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:37:26,603 - find_def var='offset' stmt=$binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:37:26,603 - find_def_from_top label 376
DEBUG 2024-06-11 13:37:26,603 - idom 374 from label 376
DEBUG 2024-06-11 13:37:26,603 - find_def_from_bottom label 374
DEBUG 2024-06-11 13:37:26,603 - find_def_from_top label 374
DEBUG 2024-06-11 13:37:26,603 - idom 180 from label 374
DEBUG 2024-06-11 13:37:26,603 - find_def_from_bottom label 180
DEBUG 2024-06-11 13:37:26,603 - replaced with: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG 2024-06-11 13:37:26,603 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,603 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:37:26,603 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:37:26,603 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,603 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 13:37:26,603 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,603 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:37:26,603 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:37:26,603 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:37:26,603 - on stmt: jump 374
DEBUG 2024-06-11 13:37:26,603 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:37:26,603 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A97BDB210>
DEBUG 2024-06-11 13:37:26,603 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 13:37:26,603 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 13:37:26,606 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 13:37:26,606 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,606 - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,606 - on stmt: eta = index_frac.2 - offset
DEBUG 2024-06-11 13:37:26,606 - find_def var='offset' stmt=eta = index_frac.2 - offset
DEBUG 2024-06-11 13:37:26,606 - replaced with: eta = index_frac.2 - offset.2
DEBUG 2024-06-11 13:37:26,606 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:37:26,606 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 13:37:26,606 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:37:26,606 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:37:26,607 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:37:26,607 - find_def var='offset' stmt=$binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:37:26,607 - replaced with: $binop_sub590.23 = nwin - offset.2
DEBUG 2024-06-11 13:37:26,607 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:37:26,607 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,607 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:37:26,607 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,607 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:37:26,607 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:37:26,607 - on stmt: jump 646
DEBUG 2024-06-11 13:37:26,607 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:37:26,607 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A97BDB210>
DEBUG 2024-06-11 13:37:26,607 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:37:26,607 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:37:26,607 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:37:26,607 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:37:26,607 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:37:26,607 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:37:26,607 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A97BDB210>
DEBUG 2024-06-11 13:37:26,607 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:37:26,607 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:37:26,607 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:37:26,607 - find_def var='offset' stmt=$binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:37:26,607 - find_def_from_top label 648
DEBUG 2024-06-11 13:37:26,607 - idom 646 from label 648
DEBUG 2024-06-11 13:37:26,607 - find_def_from_bottom label 646
DEBUG 2024-06-11 13:37:26,607 - find_def_from_top label 646
DEBUG 2024-06-11 13:37:26,607 - idom 500 from label 646
DEBUG 2024-06-11 13:37:26,607 - find_def_from_bottom label 500
DEBUG 2024-06-11 13:37:26,607 - replaced with: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG 2024-06-11 13:37:26,607 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,607 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:37:26,607 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:37:26,607 - find_def var='offset' stmt=$binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:37:26,611 - find_def_from_top label 648
DEBUG 2024-06-11 13:37:26,611 - idom 646 from label 648
DEBUG 2024-06-11 13:37:26,611 - find_def_from_bottom label 646
DEBUG 2024-06-11 13:37:26,611 - find_def_from_top label 646
DEBUG 2024-06-11 13:37:26,611 - idom 500 from label 646
DEBUG 2024-06-11 13:37:26,611 - find_def_from_bottom label 500
DEBUG 2024-06-11 13:37:26,611 - replaced with: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG 2024-06-11 13:37:26,611 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,611 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:37:26,611 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:37:26,611 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,611 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 13:37:26,611 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:37:26,611 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:37:26,613 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,613 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:37:26,613 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:37:26,613 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:37:26,613 - on stmt: jump 646
DEBUG 2024-06-11 13:37:26,613 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:37:26,613 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A97BDB210>
DEBUG 2024-06-11 13:37:26,614 - on stmt: jump 176
DEBUG 2024-06-11 13:37:26,614 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:37:26,614 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A97BDB210>
DEBUG 2024-06-11 13:37:26,614 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:37:26,614 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:37:26,614 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:37:26,614 - Fix SSA violator on var eta
DEBUG 2024-06-11 13:37:26,614 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:37:26,614 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98BF7790>
DEBUG 2024-06-11 13:37:26,614 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:37:26,614 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:37:26,614 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:37:26,614 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:37:26,614 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:37:26,614 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:37:26,614 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:37:26,614 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,614 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:37:26,614 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,614 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,616 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:37:26,616 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,616 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,616 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:37:26,616 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,616 - first assign: eta
DEBUG 2024-06-11 13:37:26,616 - replaced with: eta = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,616 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,616 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:37:26,616 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:37:26,616 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,616 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:37:26,616 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:37:26,616 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,616 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:37:26,616 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:37:26,616 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,616 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:37:26,616 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,619 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:37:26,619 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:37:26,619 - on stmt: jump 176
DEBUG 2024-06-11 13:37:26,619 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:37:26,619 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98BF7790>
DEBUG 2024-06-11 13:37:26,619 - on stmt: jump 178
DEBUG 2024-06-11 13:37:26,619 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:37:26,619 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98BF7790>
DEBUG 2024-06-11 13:37:26,619 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:37:26,619 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:37:26,619 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:37:26,620 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:37:26,620 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:37:26,620 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:37:26,620 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98BF7790>
DEBUG 2024-06-11 13:37:26,620 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:37:26,620 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,620 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,620 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,620 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 13:37:26,620 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 13:37:26,620 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 13:37:26,620 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,620 - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,620 - on stmt: eta = index_frac.1 - offset.1
DEBUG 2024-06-11 13:37:26,620 - replaced with: eta.1 = index_frac.1 - offset.1
DEBUG 2024-06-11 13:37:26,620 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:37:26,620 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:37:26,620 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 13:37:26,620 - on stmt: $binop_sub318.31 = nwin - offset.1
DEBUG 2024-06-11 13:37:26,622 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:37:26,622 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,622 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:37:26,622 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,622 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:37:26,622 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:37:26,623 - on stmt: jump 374
DEBUG 2024-06-11 13:37:26,623 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:37:26,623 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98BF7790>
DEBUG 2024-06-11 13:37:26,623 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:37:26,623 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:37:26,623 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:37:26,623 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:37:26,623 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:37:26,623 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:37:26,623 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98BF7790>
DEBUG 2024-06-11 13:37:26,623 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:37:26,623 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:37:26,623 - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG 2024-06-11 13:37:26,623 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,623 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:37:26,623 - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG 2024-06-11 13:37:26,623 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,623 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:37:26,623 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:37:26,623 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,623 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 13:37:26,623 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,623 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:37:26,623 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:37:26,623 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:37:26,623 - on stmt: jump 374
DEBUG 2024-06-11 13:37:26,623 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:37:26,623 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98BF7790>
DEBUG 2024-06-11 13:37:26,623 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 13:37:26,623 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 13:37:26,623 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 13:37:26,623 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,623 - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,623 - on stmt: eta = index_frac.2 - offset.2
DEBUG 2024-06-11 13:37:26,623 - replaced with: eta.2 = index_frac.2 - offset.2
DEBUG 2024-06-11 13:37:26,623 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:37:26,623 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 13:37:26,623 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:37:26,623 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:37:26,623 - on stmt: $binop_sub590.23 = nwin - offset.2
DEBUG 2024-06-11 13:37:26,623 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:37:26,623 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,623 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:37:26,623 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,623 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:37:26,623 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:37:26,623 - on stmt: jump 646
DEBUG 2024-06-11 13:37:26,623 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:37:26,623 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98BF7790>
DEBUG 2024-06-11 13:37:26,623 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:37:26,623 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:37:26,623 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:37:26,623 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:37:26,630 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:37:26,630 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:37:26,630 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98BF7790>
DEBUG 2024-06-11 13:37:26,630 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:37:26,630 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:37:26,630 - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG 2024-06-11 13:37:26,630 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,630 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:37:26,630 - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG 2024-06-11 13:37:26,630 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,631 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:37:26,631 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:37:26,631 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,631 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 13:37:26,631 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:37:26,631 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:37:26,631 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,631 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:37:26,631 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:37:26,631 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:37:26,632 - on stmt: jump 646
DEBUG 2024-06-11 13:37:26,632 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:37:26,632 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98BF7790>
DEBUG 2024-06-11 13:37:26,632 - on stmt: jump 176
DEBUG 2024-06-11 13:37:26,632 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:37:26,632 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A98BF7790>
DEBUG 2024-06-11 13:37:26,632 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:37:26,632 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:37:26,632 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:37:26,632 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000019A98CC8650>],
             180: [<numba.core.ir.Assign object at 0x0000019A98C73F90>],
             500: [<numba.core.ir.Assign object at 0x0000019A98C31C50>]})
DEBUG 2024-06-11 13:37:26,632 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:37:26,632 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C9D010>
DEBUG 2024-06-11 13:37:26,632 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:37:26,632 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:37:26,632 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:37:26,632 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:37:26,632 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:37:26,632 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:37:26,632 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:37:26,632 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,632 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:37:26,632 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,632 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,632 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:37:26,632 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,632 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,632 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:37:26,632 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,632 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,632 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:37:26,632 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:37:26,632 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,632 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:37:26,636 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:37:26,636 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,636 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:37:26,636 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:37:26,636 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,636 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:37:26,636 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,636 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:37:26,636 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:37:26,636 - on stmt: jump 176
DEBUG 2024-06-11 13:37:26,637 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:37:26,637 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C9D010>
DEBUG 2024-06-11 13:37:26,637 - on stmt: jump 178
DEBUG 2024-06-11 13:37:26,637 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:37:26,637 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C9D010>
DEBUG 2024-06-11 13:37:26,637 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:37:26,637 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:37:26,637 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:37:26,638 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:37:26,638 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:37:26,638 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:37:26,638 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C9D010>
DEBUG 2024-06-11 13:37:26,638 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:37:26,638 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,638 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,638 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,639 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 13:37:26,639 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 13:37:26,639 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 13:37:26,639 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,639 - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,639 - on stmt: eta.1 = index_frac.1 - offset.1
DEBUG 2024-06-11 13:37:26,639 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:37:26,639 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:37:26,639 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 13:37:26,639 - on stmt: $binop_sub318.31 = nwin - offset.1
DEBUG 2024-06-11 13:37:26,639 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:37:26,639 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,639 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:37:26,639 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,639 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:37:26,639 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:37:26,641 - on stmt: jump 374
DEBUG 2024-06-11 13:37:26,641 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:37:26,641 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C9D010>
DEBUG 2024-06-11 13:37:26,641 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:37:26,641 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:37:26,641 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:37:26,641 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:37:26,641 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:37:26,642 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:37:26,642 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C9D010>
DEBUG 2024-06-11 13:37:26,642 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:37:26,642 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:37:26,642 - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG 2024-06-11 13:37:26,642 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,642 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:37:26,642 - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG 2024-06-11 13:37:26,642 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,642 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:37:26,644 - find_def var='eta' stmt=$binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:37:26,644 - find_def_from_top label 376
DEBUG 2024-06-11 13:37:26,644 - idom 374 from label 376
DEBUG 2024-06-11 13:37:26,644 - find_def_from_bottom label 374
DEBUG 2024-06-11 13:37:26,644 - find_def_from_top label 374
DEBUG 2024-06-11 13:37:26,644 - idom 180 from label 374
DEBUG 2024-06-11 13:37:26,644 - find_def_from_bottom label 180
DEBUG 2024-06-11 13:37:26,644 - replaced with: $binop_mul432.18 = eta.1 * $422binary_subscr.17
DEBUG 2024-06-11 13:37:26,644 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:37:26,645 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,645 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 13:37:26,645 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,645 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:37:26,645 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:37:26,645 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:37:26,645 - on stmt: jump 374
DEBUG 2024-06-11 13:37:26,645 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:37:26,645 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C9D010>
DEBUG 2024-06-11 13:37:26,645 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 13:37:26,645 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 13:37:26,645 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 13:37:26,645 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,645 - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,645 - on stmt: eta.2 = index_frac.2 - offset.2
DEBUG 2024-06-11 13:37:26,645 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:37:26,645 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 13:37:26,645 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:37:26,645 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:37:26,645 - on stmt: $binop_sub590.23 = nwin - offset.2
DEBUG 2024-06-11 13:37:26,645 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:37:26,645 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,645 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:37:26,645 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,648 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:37:26,648 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:37:26,648 - on stmt: jump 646
DEBUG 2024-06-11 13:37:26,648 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:37:26,648 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C9D010>
DEBUG 2024-06-11 13:37:26,648 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:37:26,648 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:37:26,648 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:37:26,648 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:37:26,648 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:37:26,648 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:37:26,649 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C9D010>
DEBUG 2024-06-11 13:37:26,649 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:37:26,649 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:37:26,649 - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG 2024-06-11 13:37:26,649 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,649 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:37:26,649 - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG 2024-06-11 13:37:26,649 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,649 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:37:26,649 - find_def var='eta' stmt=$binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:37:26,649 - find_def_from_top label 648
DEBUG 2024-06-11 13:37:26,649 - idom 646 from label 648
DEBUG 2024-06-11 13:37:26,649 - find_def_from_bottom label 646
DEBUG 2024-06-11 13:37:26,649 - find_def_from_top label 646
DEBUG 2024-06-11 13:37:26,649 - idom 500 from label 646
DEBUG 2024-06-11 13:37:26,649 - find_def_from_bottom label 500
DEBUG 2024-06-11 13:37:26,649 - replaced with: $binop_mul704.18 = eta.2 * $694binary_subscr.17
DEBUG 2024-06-11 13:37:26,649 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:37:26,649 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,649 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 13:37:26,651 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:37:26,651 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:37:26,651 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,651 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:37:26,651 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:37:26,651 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:37:26,651 - on stmt: jump 646
DEBUG 2024-06-11 13:37:26,651 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:37:26,651 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C9D010>
DEBUG 2024-06-11 13:37:26,651 - on stmt: jump 176
DEBUG 2024-06-11 13:37:26,651 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:37:26,651 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C9D010>
DEBUG 2024-06-11 13:37:26,653 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:37:26,653 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:37:26,653 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:37:26,653 - Fix SSA violator on var weight
DEBUG 2024-06-11 13:37:26,653 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:37:26,653 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A97BBBE10>
DEBUG 2024-06-11 13:37:26,653 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:37:26,653 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:37:26,653 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:37:26,653 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:37:26,653 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:37:26,653 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:37:26,653 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:37:26,653 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,653 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:37:26,653 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,653 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,653 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:37:26,653 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,653 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,653 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:37:26,653 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,653 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,653 - first assign: weight
DEBUG 2024-06-11 13:37:26,653 - replaced with: weight = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,653 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:37:26,653 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:37:26,653 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,656 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:37:26,656 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:37:26,656 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,656 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:37:26,656 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:37:26,656 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,656 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:37:26,656 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,656 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:37:26,656 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:37:26,658 - on stmt: jump 176
DEBUG 2024-06-11 13:37:26,658 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:37:26,658 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A97BBBE10>
DEBUG 2024-06-11 13:37:26,658 - on stmt: jump 178
DEBUG 2024-06-11 13:37:26,658 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:37:26,658 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A97BBBE10>
DEBUG 2024-06-11 13:37:26,658 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:37:26,658 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:37:26,658 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:37:26,658 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:37:26,658 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:37:26,658 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:37:26,658 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A97BBBE10>
DEBUG 2024-06-11 13:37:26,658 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:37:26,659 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,659 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,659 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,659 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 13:37:26,659 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 13:37:26,659 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 13:37:26,659 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,659 - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,659 - on stmt: eta.1 = index_frac.1 - offset.1
DEBUG 2024-06-11 13:37:26,659 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:37:26,660 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:37:26,660 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 13:37:26,660 - on stmt: $binop_sub318.31 = nwin - offset.1
DEBUG 2024-06-11 13:37:26,660 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:37:26,660 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,660 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:37:26,660 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,660 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:37:26,662 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:37:26,662 - on stmt: jump 374
DEBUG 2024-06-11 13:37:26,662 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:37:26,662 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A97BBBE10>
DEBUG 2024-06-11 13:37:26,662 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:37:26,662 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:37:26,662 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:37:26,662 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:37:26,662 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:37:26,662 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:37:26,662 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A97BBBE10>
DEBUG 2024-06-11 13:37:26,662 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:37:26,662 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:37:26,663 - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG 2024-06-11 13:37:26,663 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,663 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:37:26,663 - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG 2024-06-11 13:37:26,663 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,663 - on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
DEBUG 2024-06-11 13:37:26,663 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:37:26,663 - replaced with: weight.1 = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:37:26,664 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,664 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 13:37:26,664 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,664 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:37:26,664 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:37:26,664 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:37:26,664 - on stmt: jump 374
DEBUG 2024-06-11 13:37:26,664 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:37:26,664 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A97BBBE10>
DEBUG 2024-06-11 13:37:26,665 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 13:37:26,665 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 13:37:26,665 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 13:37:26,665 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,665 - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,665 - on stmt: eta.2 = index_frac.2 - offset.2
DEBUG 2024-06-11 13:37:26,665 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:37:26,665 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 13:37:26,665 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:37:26,665 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:37:26,665 - on stmt: $binop_sub590.23 = nwin - offset.2
DEBUG 2024-06-11 13:37:26,665 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:37:26,665 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,665 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:37:26,665 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,665 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:37:26,665 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:37:26,665 - on stmt: jump 646
DEBUG 2024-06-11 13:37:26,665 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:37:26,665 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A97BBBE10>
DEBUG 2024-06-11 13:37:26,665 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:37:26,665 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:37:26,665 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:37:26,665 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:37:26,665 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:37:26,665 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:37:26,665 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A97BBBE10>
DEBUG 2024-06-11 13:37:26,665 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:37:26,665 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:37:26,665 - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG 2024-06-11 13:37:26,665 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,665 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:37:26,665 - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG 2024-06-11 13:37:26,665 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,665 - on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
DEBUG 2024-06-11 13:37:26,665 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:37:26,665 - replaced with: weight.2 = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:37:26,665 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,665 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 13:37:26,665 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:37:26,665 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:37:26,665 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,665 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:37:26,665 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:37:26,665 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:37:26,665 - on stmt: jump 646
DEBUG 2024-06-11 13:37:26,665 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:37:26,665 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A97BBBE10>
DEBUG 2024-06-11 13:37:26,665 - on stmt: jump 176
DEBUG 2024-06-11 13:37:26,665 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:37:26,665 - Running <numba.core.ssa._FreshVarHandler object at 0x0000019A97BBBE10>
DEBUG 2024-06-11 13:37:26,665 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:37:26,665 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:37:26,665 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:37:26,665 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000019A98C733D0>],
             376: [<numba.core.ir.Assign object at 0x0000019A98C33910>],
             648: [<numba.core.ir.Assign object at 0x0000019A98C335D0>]})
DEBUG 2024-06-11 13:37:26,665 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:37:26,665 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C15D10>
DEBUG 2024-06-11 13:37:26,665 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:37:26,665 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:37:26,665 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:37:26,665 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:37:26,665 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:37:26,673 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:37:26,673 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:37:26,673 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,673 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:37:26,673 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,673 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,673 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:37:26,673 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,673 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,673 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:37:26,674 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,674 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:37:26,674 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:37:26,674 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:37:26,674 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,674 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:37:26,674 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:37:26,674 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,674 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:37:26,674 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:37:26,674 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,674 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:37:26,674 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,674 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:37:26,674 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:37:26,674 - on stmt: jump 176
DEBUG 2024-06-11 13:37:26,674 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:37:26,674 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C15D10>
DEBUG 2024-06-11 13:37:26,674 - on stmt: jump 178
DEBUG 2024-06-11 13:37:26,674 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:37:26,674 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C15D10>
DEBUG 2024-06-11 13:37:26,674 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:37:26,674 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:37:26,674 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:37:26,674 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:37:26,674 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:37:26,674 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:37:26,674 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C15D10>
DEBUG 2024-06-11 13:37:26,674 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:37:26,674 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,674 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,674 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,674 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 13:37:26,674 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 13:37:26,674 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 13:37:26,674 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,674 - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,674 - on stmt: eta.1 = index_frac.1 - offset.1
DEBUG 2024-06-11 13:37:26,674 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:37:26,674 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:37:26,674 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 13:37:26,674 - on stmt: $binop_sub318.31 = nwin - offset.1
DEBUG 2024-06-11 13:37:26,674 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:37:26,674 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,674 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:37:26,674 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,674 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:37:26,674 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:37:26,674 - on stmt: jump 374
DEBUG 2024-06-11 13:37:26,674 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:37:26,674 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C15D10>
DEBUG 2024-06-11 13:37:26,674 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:37:26,674 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:37:26,674 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:37:26,674 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:37:26,674 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:37:26,674 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:37:26,674 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C15D10>
DEBUG 2024-06-11 13:37:26,674 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:37:26,674 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:37:26,674 - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG 2024-06-11 13:37:26,681 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,681 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:37:26,681 - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG 2024-06-11 13:37:26,681 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,681 - on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
DEBUG 2024-06-11 13:37:26,681 - on stmt: weight.1 = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:37:26,681 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,681 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 13:37:26,681 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,681 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:37:26,681 - find_def var='weight' stmt=$binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:37:26,682 - replaced with: $binop_mul482.29 = weight.1 * $472binary_subscr.28
DEBUG 2024-06-11 13:37:26,682 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:37:26,682 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:37:26,683 - on stmt: jump 374
DEBUG 2024-06-11 13:37:26,683 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:37:26,683 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C15D10>
DEBUG 2024-06-11 13:37:26,683 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 13:37:26,683 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 13:37:26,683 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 13:37:26,683 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:37:26,683 - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,683 - on stmt: eta.2 = index_frac.2 - offset.2
DEBUG 2024-06-11 13:37:26,683 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:37:26,683 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 13:37:26,683 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:37:26,683 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:37:26,683 - on stmt: $binop_sub590.23 = nwin - offset.2
DEBUG 2024-06-11 13:37:26,683 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:37:26,683 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,683 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:37:26,683 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:37:26,683 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:37:26,683 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:37:26,683 - on stmt: jump 646
DEBUG 2024-06-11 13:37:26,683 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:37:26,683 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C15D10>
DEBUG 2024-06-11 13:37:26,683 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:37:26,683 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:37:26,683 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:37:26,683 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:37:26,683 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:37:26,683 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:37:26,683 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C15D10>
DEBUG 2024-06-11 13:37:26,683 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:37:26,683 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:37:26,683 - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG 2024-06-11 13:37:26,683 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,683 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:37:26,683 - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG 2024-06-11 13:37:26,683 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,683 - on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
DEBUG 2024-06-11 13:37:26,683 - on stmt: weight.2 = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:37:26,683 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,683 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 13:37:26,683 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:37:26,683 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:37:26,683 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:37:26,683 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:37:26,683 - find_def var='weight' stmt=$binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:37:26,683 - replaced with: $binop_mul760.31 = weight.2 * $750binary_subscr.30
DEBUG 2024-06-11 13:37:26,683 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:37:26,683 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:37:26,683 - on stmt: jump 646
DEBUG 2024-06-11 13:37:26,683 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:37:26,683 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C15D10>
DEBUG 2024-06-11 13:37:26,683 - on stmt: jump 176
DEBUG 2024-06-11 13:37:26,683 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:37:26,683 - Running <numba.core.ssa._FixSSAVars object at 0x0000019A98C15D10>
DEBUG 2024-06-11 13:37:26,683 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:37:26,683 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:37:26,689 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:37:27,640 - bytecode dump:
>          0	NOP(arg=None, lineno=425)
           2	RESUME(arg=0, lineno=425)
           4	LOAD_FAST(arg=0, lineno=428)
           6	LOAD_CONST(arg=1, lineno=428)
           8	BINARY_SUBSCR(arg=None, lineno=428)
          18	LOAD_FAST(arg=0, lineno=428)
          20	LOAD_CONST(arg=2, lineno=428)
          22	BINARY_SUBSCR(arg=None, lineno=428)
          32	BINARY_OP(arg=0, lineno=428)
          36	LOAD_CONST(arg=3, lineno=428)
          38	LOAD_FAST(arg=0, lineno=428)
          40	LOAD_CONST(arg=4, lineno=428)
          42	BINARY_SUBSCR(arg=None, lineno=428)
          52	BINARY_OP(arg=5, lineno=428)
          56	BINARY_OP(arg=10, lineno=428)
          60	STORE_FAST(arg=1, lineno=428)
          62	LOAD_FAST(arg=0, lineno=429)
          64	LOAD_CONST(arg=1, lineno=429)
          66	BINARY_SUBSCR(arg=None, lineno=429)
          76	LOAD_FAST(arg=0, lineno=429)
          78	LOAD_CONST(arg=2, lineno=429)
          80	BINARY_SUBSCR(arg=None, lineno=429)
          90	BINARY_OP(arg=10, lineno=429)
          94	LOAD_CONST(arg=3, lineno=429)
          96	BINARY_OP(arg=11, lineno=429)
         100	STORE_FAST(arg=2, lineno=429)
         102	LOAD_GLOBAL(arg=1, lineno=431)
         114	LOAD_ATTR(arg=1, lineno=431)
         124	LOAD_FAST(arg=2, lineno=431)
         126	PRECALL(arg=1, lineno=431)
         130	CALL(arg=1, lineno=431)
         140	LOAD_GLOBAL(arg=1, lineno=431)
         152	LOAD_ATTR(arg=1, lineno=431)
         162	LOAD_FAST(arg=1, lineno=431)
         164	PRECALL(arg=1, lineno=431)
         168	CALL(arg=1, lineno=431)
         178	COMPARE_OP(arg=5, lineno=431)
         184	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=431)
         186	LOAD_CONST(arg=4, lineno=434)
         188	RETURN_VALUE(arg=None, lineno=434)
>        190	LOAD_FAST(arg=2, lineno=436)
         192	UNARY_NEGATIVE(arg=None, lineno=436)
         194	LOAD_FAST(arg=1, lineno=436)
         196	BINARY_OP(arg=11, lineno=436)
         200	RETURN_VALUE(arg=None, lineno=436)
DEBUG 2024-06-11 13:37:27,640 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 13:37:27,640 - stack: []
DEBUG 2024-06-11 13:37:27,640 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=0, inst=NOP(arg=None, lineno=425)
DEBUG 2024-06-11 13:37:27,640 - stack []
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=2, inst=RESUME(arg=0, lineno=425)
DEBUG 2024-06-11 13:37:27,640 - stack []
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=428)
DEBUG 2024-06-11 13:37:27,640 - stack []
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=428)
DEBUG 2024-06-11 13:37:27,640 - stack ['$x4.0']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=428)
DEBUG 2024-06-11 13:37:27,640 - stack ['$x4.0', '$const6.1']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=428)
DEBUG 2024-06-11 13:37:27,640 - stack ['$8binary_subscr.2']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=428)
DEBUG 2024-06-11 13:37:27,640 - stack ['$8binary_subscr.2', '$x18.3']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=428)
DEBUG 2024-06-11 13:37:27,640 - stack ['$8binary_subscr.2', '$x18.3', '$const20.4']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=32, inst=BINARY_OP(arg=0, lineno=428)
DEBUG 2024-06-11 13:37:27,640 - stack ['$8binary_subscr.2', '$22binary_subscr.5']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=36, inst=LOAD_CONST(arg=3, lineno=428)
DEBUG 2024-06-11 13:37:27,640 - stack ['$binop_add32.6']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=428)
DEBUG 2024-06-11 13:37:27,640 - stack ['$binop_add32.6', '$const36.7']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=428)
DEBUG 2024-06-11 13:37:27,640 - stack ['$binop_add32.6', '$const36.7', '$x38.8']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=428)
DEBUG 2024-06-11 13:37:27,640 - stack ['$binop_add32.6', '$const36.7', '$x38.8', '$const40.9']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=52, inst=BINARY_OP(arg=5, lineno=428)
DEBUG 2024-06-11 13:37:27,640 - stack ['$binop_add32.6', '$const36.7', '$42binary_subscr.10']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=56, inst=BINARY_OP(arg=10, lineno=428)
DEBUG 2024-06-11 13:37:27,640 - stack ['$binop_add32.6', '$binop_mul52.11']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=60, inst=STORE_FAST(arg=1, lineno=428)
DEBUG 2024-06-11 13:37:27,640 - stack ['$binop_sub56.12']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=62, inst=LOAD_FAST(arg=0, lineno=429)
DEBUG 2024-06-11 13:37:27,640 - stack []
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=429)
DEBUG 2024-06-11 13:37:27,640 - stack ['$x62.13']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=429)
DEBUG 2024-06-11 13:37:27,640 - stack ['$x62.13', '$const64.14']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=429)
DEBUG 2024-06-11 13:37:27,640 - stack ['$66binary_subscr.15']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=78, inst=LOAD_CONST(arg=2, lineno=429)
DEBUG 2024-06-11 13:37:27,640 - stack ['$66binary_subscr.15', '$x76.16']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=80, inst=BINARY_SUBSCR(arg=None, lineno=429)
DEBUG 2024-06-11 13:37:27,640 - stack ['$66binary_subscr.15', '$x76.16', '$const78.17']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=90, inst=BINARY_OP(arg=10, lineno=429)
DEBUG 2024-06-11 13:37:27,640 - stack ['$66binary_subscr.15', '$80binary_subscr.18']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=94, inst=LOAD_CONST(arg=3, lineno=429)
DEBUG 2024-06-11 13:37:27,640 - stack ['$binop_sub90.19']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=96, inst=BINARY_OP(arg=11, lineno=429)
DEBUG 2024-06-11 13:37:27,640 - stack ['$binop_sub90.19', '$const94.20']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=429)
DEBUG 2024-06-11 13:37:27,640 - stack ['$binop_truediv96.21']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=102, inst=LOAD_GLOBAL(arg=1, lineno=431)
DEBUG 2024-06-11 13:37:27,640 - stack []
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=114, inst=LOAD_ATTR(arg=1, lineno=431)
DEBUG 2024-06-11 13:37:27,640 - stack ['$null$102.23', '$102load_global.22']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=124, inst=LOAD_FAST(arg=2, lineno=431)
DEBUG 2024-06-11 13:37:27,640 - stack ['$null$102.23', '$114load_attr.24']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=126, inst=PRECALL(arg=1, lineno=431)
DEBUG 2024-06-11 13:37:27,640 - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=130, inst=CALL(arg=1, lineno=431)
DEBUG 2024-06-11 13:37:27,640 - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=140, inst=LOAD_GLOBAL(arg=1, lineno=431)
DEBUG 2024-06-11 13:37:27,640 - stack ['$130call.26']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=152, inst=LOAD_ATTR(arg=1, lineno=431)
DEBUG 2024-06-11 13:37:27,640 - stack ['$130call.26', '$null$140.28', '$140load_global.27']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=162, inst=LOAD_FAST(arg=1, lineno=431)
DEBUG 2024-06-11 13:37:27,640 - stack ['$130call.26', '$null$140.28', '$152load_attr.29']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=164, inst=PRECALL(arg=1, lineno=431)
DEBUG 2024-06-11 13:37:27,640 - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=168, inst=CALL(arg=1, lineno=431)
DEBUG 2024-06-11 13:37:27,640 - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=178, inst=COMPARE_OP(arg=5, lineno=431)
DEBUG 2024-06-11 13:37:27,640 - stack ['$130call.26', '$168call.31']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=184, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=431)
DEBUG 2024-06-11 13:37:27,640 - stack ['$178compare_op.32']
DEBUG 2024-06-11 13:37:27,640 - end state. edges=[Edge(pc=186, stack=(), blockstack=(), npush=0), Edge(pc=190, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:37:27,640 - pending: deque([State(pc_initial=186 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
DEBUG 2024-06-11 13:37:27,640 - stack: []
DEBUG 2024-06-11 13:37:27,640 - state.pc_initial: State(pc_initial=186 nstack_initial=0)
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=186, inst=LOAD_CONST(arg=4, lineno=434)
DEBUG 2024-06-11 13:37:27,640 - stack []
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=188, inst=RETURN_VALUE(arg=None, lineno=434)
DEBUG 2024-06-11 13:37:27,640 - stack ['$const186.0']
DEBUG 2024-06-11 13:37:27,640 - end state. edges=[]
DEBUG 2024-06-11 13:37:27,640 - pending: deque([State(pc_initial=190 nstack_initial=0)])
DEBUG 2024-06-11 13:37:27,640 - stack: []
DEBUG 2024-06-11 13:37:27,640 - state.pc_initial: State(pc_initial=190 nstack_initial=0)
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=190, inst=LOAD_FAST(arg=2, lineno=436)
DEBUG 2024-06-11 13:37:27,640 - stack []
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=192, inst=UNARY_NEGATIVE(arg=None, lineno=436)
DEBUG 2024-06-11 13:37:27,640 - stack ['$b190.0']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=194, inst=LOAD_FAST(arg=1, lineno=436)
DEBUG 2024-06-11 13:37:27,640 - stack ['$192unary_negative.1']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=196, inst=BINARY_OP(arg=11, lineno=436)
DEBUG 2024-06-11 13:37:27,640 - stack ['$192unary_negative.1', '$a194.2']
DEBUG 2024-06-11 13:37:27,640 - dispatch pc=200, inst=RETURN_VALUE(arg=None, lineno=436)
DEBUG 2024-06-11 13:37:27,640 - stack ['$binop_truediv196.3']
DEBUG 2024-06-11 13:37:27,640 - end state. edges=[]
DEBUG 2024-06-11 13:37:27,640 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 13:37:27,640 - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=186 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set()})
DEBUG 2024-06-11 13:37:27,640 - defmap: {}
DEBUG 2024-06-11 13:37:27,640 - phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 13:37:27,640 - changing phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 13:37:27,640 - keep phismap: {}
DEBUG 2024-06-11 13:37:27,640 - new_out: defaultdict(<class 'dict'>, {})
DEBUG 2024-06-11 13:37:27,640 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 13:37:27,640 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4'}), (22, {'index': '$const20.4', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'op': '+', 'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$binop_add32.6'}), (34, {}), (36, {'res': '$const36.7'}), (38, {'res': '$x38.8'}), (40, {'res': '$const40.9'}), (42, {'index': '$const40.9', 'target': '$x38.8', 'res': '$42binary_subscr.10'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'op': '*', 'lhs': '$const36.7', 'rhs': '$42binary_subscr.10', 'res': '$binop_mul52.11'}), (54, {}), (56, {'op': '-', 'lhs': '$binop_add32.6', 'rhs': '$binop_mul52.11', 'res': '$binop_sub56.12'}), (58, {}), (60, {'value': '$binop_sub56.12'}), (62, {'res': '$x62.13'}), (64, {'res': '$const64.14'}), (66, {'index': '$const64.14', 'target': '$x62.13', 'res': '$66binary_subscr.15'}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {'res': '$x76.16'}), (78, {'res': '$const78.17'}), (80, {'index': '$const78.17', 'target': '$x76.16', 'res': '$80binary_subscr.18'}), (82, {}), (84, {}), (86, {}), (88, {}), (90, {'op': '-', 'lhs': '$66binary_subscr.15', 'rhs': '$80binary_subscr.18', 'res': '$binop_sub90.19'}), (92, {}), (94, {'res': '$const94.20'}), (96, {'op': '/', 'lhs': '$binop_sub90.19', 'rhs': '$const94.20', 'res': '$binop_truediv96.21'}), (98, {}), (100, {'value': '$binop_truediv96.21'}), (102, {'idx': 0, 'res': '$102load_global.22'}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'item': '$102load_global.22', 'res': '$114load_attr.24'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$b124.25'}), (126, {}), (128, {}), (130, {'func': '$114load_attr.24', 'args': ['$b124.25'], 'kw_names': None, 'res': '$130call.26'}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {'idx': 0, 'res': '$140load_global.27'}), (142, {}), (144, {}), (146, {}), (148, {}), (150, {}), (152, {'item': '$140load_global.27', 'res': '$152load_attr.29'}), (154, {}), (156, {}), (158, {}), (160, {}), (162, {'res': '$a162.30'}), (164, {}), (166, {}), (168, {'func': '$152load_attr.29', 'args': ['$a162.30'], 'kw_names': None, 'res': '$168call.31'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {'lhs': '$130call.26', 'rhs': '$168call.31', 'res': '$178compare_op.32'}), (180, {}), (182, {}), (184, {'pred': '$178compare_op.32'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={186: (), 190: ()})
DEBUG 2024-06-11 13:37:27,640 - block_infos State(pc_initial=186 nstack_initial=0):
AdaptBlockInfo(insts=((186, {'res': '$const186.0'}), (188, {'retval': '$const186.0', 'castval': '$188return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 13:37:27,640 - block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$b190.0'}), (192, {'value': '$b190.0', 'res': '$192unary_negative.1'}), (194, {'res': '$a194.2'}), (196, {'op': '/', 'lhs': '$192unary_negative.1', 'rhs': '$a194.2', 'res': '$binop_truediv196.3'}), (198, {}), (200, {'retval': '$binop_truediv196.3', 'castval': '$200return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 13:37:27,640 - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1 = const(int, 1)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $const20.4 = const(int, -1)              ['$const20.4']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4', 'x']
    $binop_add32.6 = $8binary_subscr.2 + $22binary_subscr.5 ['$22binary_subscr.5', '$8binary_subscr.2', '$binop_add32.6']
    $const36.7 = const(int, 2)               ['$const36.7']
    $const40.9 = const(int, 0)               ['$const40.9']
    $42binary_subscr.10 = getitem(value=x, index=$const40.9, fn=<built-in function getitem>) ['$42binary_subscr.10', '$const40.9', 'x']
    $binop_mul52.11 = $const36.7 * $42binary_subscr.10 ['$42binary_subscr.10', '$binop_mul52.11', '$const36.7']
    a = $binop_add32.6 - $binop_mul52.11     ['$binop_add32.6', '$binop_mul52.11', 'a']
    $const64.14 = const(int, 1)              ['$const64.14']
    $66binary_subscr.15 = getitem(value=x, index=$const64.14, fn=<built-in function getitem>) ['$66binary_subscr.15', '$const64.14', 'x']
    $const78.17 = const(int, -1)             ['$const78.17']
    $80binary_subscr.18 = getitem(value=x, index=$const78.17, fn=<built-in function getitem>) ['$80binary_subscr.18', '$const78.17', 'x']
    $binop_sub90.19 = $66binary_subscr.15 - $80binary_subscr.18 ['$66binary_subscr.15', '$80binary_subscr.18', '$binop_sub90.19']
    $const94.20 = const(int, 2)              ['$const94.20']
    b = $binop_sub90.19 / $const94.20        ['$binop_sub90.19', '$const94.20', 'b']
    $102load_global.22 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$102load_global.22']
    $114load_attr.24 = getattr(value=$102load_global.22, attr=abs) ['$102load_global.22', '$114load_attr.24']
    $130call.26 = call $114load_attr.24(b, func=$114load_attr.24, args=[Var(b, pitch.py:429)], kws=(), vararg=None, varkwarg=None, target=None) ['$114load_attr.24', '$130call.26', 'b']
    $140load_global.27 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$140load_global.27']
    $152load_attr.29 = getattr(value=$140load_global.27, attr=abs) ['$140load_global.27', '$152load_attr.29']
    $168call.31 = call $152load_attr.29(a, func=$152load_attr.29, args=[Var(a, pitch.py:428)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_attr.29', '$168call.31', 'a']
    $178compare_op.32 = $130call.26 >= $168call.31 ['$130call.26', '$168call.31', '$178compare_op.32']
    bool184 = global(bool: <class 'bool'>)   ['bool184']
    $184pred = call bool184($178compare_op.32, func=bool184, args=(Var($178compare_op.32, pitch.py:431),), kws=(), vararg=None, varkwarg=None, target=None) ['$178compare_op.32', '$184pred', 'bool184']
    branch $184pred, 186, 190                ['$184pred']
label 186:
    $const186.0 = const(int, 0)              ['$const186.0']
    $188return_value.1 = cast(value=$const186.0) ['$188return_value.1', '$const186.0']
    return $188return_value.1                ['$188return_value.1']
label 190:
    $192unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$192unary_negative.1', 'b']
    $binop_truediv196.3 = $192unary_negative.1 / a ['$192unary_negative.1', '$binop_truediv196.3', 'a']
    $200return_value.4 = cast(value=$binop_truediv196.3) ['$200return_value.4', '$binop_truediv196.3']
    return $200return_value.4                ['$200return_value.4']

DEBUG 2024-06-11 13:39:51,031 - bytecode dump:
>          0	NOP(arg=None, lineno=1141)
           2	RESUME(arg=0, lineno=1141)
           4	LOAD_FAST(arg=0, lineno=1144)
           6	LOAD_CONST(arg=1, lineno=1144)
           8	BINARY_SUBSCR(arg=None, lineno=1144)
          18	STORE_FAST(arg=3, lineno=1144)
          20	LOAD_FAST(arg=1, lineno=1145)
          22	UNARY_NEGATIVE(arg=None, lineno=1145)
          24	LOAD_FAST(arg=3, lineno=1145)
          26	SWAP(arg=2, lineno=1145)
          28	COPY(arg=2, lineno=1145)
          30	COMPARE_OP(arg=1, lineno=1145)
          36	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1145)
          38	LOAD_FAST(arg=1, lineno=1145)
          40	COMPARE_OP(arg=1, lineno=1145)
          46	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1145)
          48	JUMP_FORWARD(arg=2, lineno=1145)
>         50	POP_TOP(arg=None, lineno=1145)
          52	JUMP_FORWARD(arg=2, lineno=1145)
>         54	LOAD_CONST(arg=1, lineno=1146)
          56	STORE_FAST(arg=3, lineno=1146)
>         58	LOAD_FAST(arg=0, lineno=1148)
          60	LOAD_CONST(arg=2, lineno=1148)
          62	BINARY_SUBSCR(arg=None, lineno=1148)
          72	STORE_FAST(arg=4, lineno=1148)
          74	LOAD_FAST(arg=1, lineno=1149)
          76	UNARY_NEGATIVE(arg=None, lineno=1149)
          78	LOAD_FAST(arg=4, lineno=1149)
          80	SWAP(arg=2, lineno=1149)
          82	COPY(arg=2, lineno=1149)
          84	COMPARE_OP(arg=1, lineno=1149)
          90	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1149)
          92	LOAD_FAST(arg=1, lineno=1149)
          94	COMPARE_OP(arg=1, lineno=1149)
         100	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1149)
         102	JUMP_FORWARD(arg=2, lineno=1149)
>        104	POP_TOP(arg=None, lineno=1149)
         106	JUMP_FORWARD(arg=2, lineno=1149)
>        108	LOAD_CONST(arg=1, lineno=1150)
         110	STORE_FAST(arg=4, lineno=1150)
>        112	LOAD_FAST(arg=2, lineno=1152)
         114	POP_JUMP_FORWARD_IF_FALSE(arg=42, lineno=1152)
         116	LOAD_GLOBAL(arg=1, lineno=1153)
         128	LOAD_ATTR(arg=1, lineno=1153)
         138	LOAD_FAST(arg=3, lineno=1153)
         140	PRECALL(arg=1, lineno=1153)
         144	CALL(arg=1, lineno=1153)
         154	LOAD_GLOBAL(arg=1, lineno=1153)
         166	LOAD_ATTR(arg=1, lineno=1153)
         176	LOAD_FAST(arg=4, lineno=1153)
         178	PRECALL(arg=1, lineno=1153)
         182	CALL(arg=1, lineno=1153)
         192	COMPARE_OP(arg=3, lineno=1153)
         198	RETURN_VALUE(arg=None, lineno=1153)
>        200	LOAD_GLOBAL(arg=1, lineno=1155)
         212	LOAD_ATTR(arg=2, lineno=1155)
         222	LOAD_FAST(arg=3, lineno=1155)
         224	PRECALL(arg=1, lineno=1155)
         228	CALL(arg=1, lineno=1155)
         238	LOAD_GLOBAL(arg=1, lineno=1155)
         250	LOAD_ATTR(arg=2, lineno=1155)
         260	LOAD_FAST(arg=4, lineno=1155)
         262	PRECALL(arg=1, lineno=1155)
         266	CALL(arg=1, lineno=1155)
         276	COMPARE_OP(arg=3, lineno=1155)
         282	RETURN_VALUE(arg=None, lineno=1155)
DEBUG 2024-06-11 13:39:51,034 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 13:39:51,034 - stack: []
DEBUG 2024-06-11 13:39:51,034 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 13:39:51,034 - dispatch pc=0, inst=NOP(arg=None, lineno=1141)
DEBUG 2024-06-11 13:39:51,034 - stack []
DEBUG 2024-06-11 13:39:51,034 - dispatch pc=2, inst=RESUME(arg=0, lineno=1141)
DEBUG 2024-06-11 13:39:51,034 - stack []
DEBUG 2024-06-11 13:39:51,034 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1144)
DEBUG 2024-06-11 13:39:51,034 - stack []
DEBUG 2024-06-11 13:39:51,034 - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1144)
DEBUG 2024-06-11 13:39:51,034 - stack ['$x4.0']
DEBUG 2024-06-11 13:39:51,034 - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1144)
DEBUG 2024-06-11 13:39:51,034 - stack ['$x4.0', '$const6.1']
DEBUG 2024-06-11 13:39:51,035 - dispatch pc=18, inst=STORE_FAST(arg=3, lineno=1144)
DEBUG 2024-06-11 13:39:51,035 - stack ['$8binary_subscr.2']
DEBUG 2024-06-11 13:39:51,035 - dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=1145)
DEBUG 2024-06-11 13:39:51,035 - stack []
DEBUG 2024-06-11 13:39:51,035 - dispatch pc=22, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
DEBUG 2024-06-11 13:39:51,035 - stack ['$threshold20.3']
DEBUG 2024-06-11 13:39:51,035 - dispatch pc=24, inst=LOAD_FAST(arg=3, lineno=1145)
DEBUG 2024-06-11 13:39:51,035 - stack ['$22unary_negative.4']
DEBUG 2024-06-11 13:39:51,035 - dispatch pc=26, inst=SWAP(arg=2, lineno=1145)
DEBUG 2024-06-11 13:39:51,035 - stack ['$22unary_negative.4', '$x024.5']
DEBUG 2024-06-11 13:39:51,035 - dispatch pc=28, inst=COPY(arg=2, lineno=1145)
DEBUG 2024-06-11 13:39:51,035 - stack ['$x024.5', '$22unary_negative.4']
DEBUG 2024-06-11 13:39:51,035 - dispatch pc=30, inst=COMPARE_OP(arg=1, lineno=1145)
DEBUG 2024-06-11 13:39:51,035 - stack ['$x024.5', '$22unary_negative.4', '$x024.5']
DEBUG 2024-06-11 13:39:51,035 - dispatch pc=36, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1145)
DEBUG 2024-06-11 13:39:51,035 - stack ['$x024.5', '$30compare_op.6']
DEBUG 2024-06-11 13:39:51,035 - end state. edges=[Edge(pc=38, stack=('$x024.5',), blockstack=(), npush=0), Edge(pc=50, stack=('$x024.5',), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:39:51,035 - pending: deque([State(pc_initial=38 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
DEBUG 2024-06-11 13:39:51,035 - stack: ['$phi38.0']
DEBUG 2024-06-11 13:39:51,035 - state.pc_initial: State(pc_initial=38 nstack_initial=1)
DEBUG 2024-06-11 13:39:51,035 - dispatch pc=38, inst=LOAD_FAST(arg=1, lineno=1145)
DEBUG 2024-06-11 13:39:51,035 - stack ['$phi38.0']
DEBUG 2024-06-11 13:39:51,035 - dispatch pc=40, inst=COMPARE_OP(arg=1, lineno=1145)
DEBUG 2024-06-11 13:39:51,035 - stack ['$phi38.0', '$threshold38.1']
DEBUG 2024-06-11 13:39:51,036 - dispatch pc=46, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1145)
DEBUG 2024-06-11 13:39:51,036 - stack ['$40compare_op.2']
DEBUG 2024-06-11 13:39:51,036 - end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:39:51,036 - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=48 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
DEBUG 2024-06-11 13:39:51,036 - stack: ['$phi50.0']
DEBUG 2024-06-11 13:39:51,036 - state.pc_initial: State(pc_initial=50 nstack_initial=1)
DEBUG 2024-06-11 13:39:51,036 - dispatch pc=50, inst=POP_TOP(arg=None, lineno=1145)
DEBUG 2024-06-11 13:39:51,036 - stack ['$phi50.0']
DEBUG 2024-06-11 13:39:51,036 - dispatch pc=52, inst=JUMP_FORWARD(arg=2, lineno=1145)
DEBUG 2024-06-11 13:39:51,036 - stack []
DEBUG 2024-06-11 13:39:51,036 - end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:39:51,036 - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
DEBUG 2024-06-11 13:39:51,036 - stack: []
DEBUG 2024-06-11 13:39:51,036 - state.pc_initial: State(pc_initial=48 nstack_initial=0)
DEBUG 2024-06-11 13:39:51,036 - dispatch pc=48, inst=JUMP_FORWARD(arg=2, lineno=1145)
DEBUG 2024-06-11 13:39:51,036 - stack []
DEBUG 2024-06-11 13:39:51,036 - end state. edges=[Edge(pc=54, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:39:51,036 - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=54 nstack_initial=0)])
DEBUG 2024-06-11 13:39:51,037 - stack: []
DEBUG 2024-06-11 13:39:51,037 - state.pc_initial: State(pc_initial=58 nstack_initial=0)
DEBUG 2024-06-11 13:39:51,037 - dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1148)
DEBUG 2024-06-11 13:39:51,037 - stack []
DEBUG 2024-06-11 13:39:51,037 - dispatch pc=60, inst=LOAD_CONST(arg=2, lineno=1148)
DEBUG 2024-06-11 13:39:51,037 - stack ['$x58.0']
DEBUG 2024-06-11 13:39:51,038 - dispatch pc=62, inst=BINARY_SUBSCR(arg=None, lineno=1148)
DEBUG 2024-06-11 13:39:51,038 - stack ['$x58.0', '$const60.1']
DEBUG 2024-06-11 13:39:51,038 - dispatch pc=72, inst=STORE_FAST(arg=4, lineno=1148)
DEBUG 2024-06-11 13:39:51,038 - stack ['$62binary_subscr.2']
DEBUG 2024-06-11 13:39:51,038 - dispatch pc=74, inst=LOAD_FAST(arg=1, lineno=1149)
DEBUG 2024-06-11 13:39:51,038 - stack []
DEBUG 2024-06-11 13:39:51,038 - dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=1149)
DEBUG 2024-06-11 13:39:51,038 - stack ['$threshold74.3']
DEBUG 2024-06-11 13:39:51,038 - dispatch pc=78, inst=LOAD_FAST(arg=4, lineno=1149)
DEBUG 2024-06-11 13:39:51,038 - stack ['$76unary_negative.4']
DEBUG 2024-06-11 13:39:51,038 - dispatch pc=80, inst=SWAP(arg=2, lineno=1149)
DEBUG 2024-06-11 13:39:51,038 - stack ['$76unary_negative.4', '$x178.5']
DEBUG 2024-06-11 13:39:51,038 - dispatch pc=82, inst=COPY(arg=2, lineno=1149)
DEBUG 2024-06-11 13:39:51,038 - stack ['$x178.5', '$76unary_negative.4']
DEBUG 2024-06-11 13:39:51,038 - dispatch pc=84, inst=COMPARE_OP(arg=1, lineno=1149)
DEBUG 2024-06-11 13:39:51,038 - stack ['$x178.5', '$76unary_negative.4', '$x178.5']
DEBUG 2024-06-11 13:39:51,038 - dispatch pc=90, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1149)
DEBUG 2024-06-11 13:39:51,038 - stack ['$x178.5', '$84compare_op.6']
DEBUG 2024-06-11 13:39:51,038 - end state. edges=[Edge(pc=92, stack=('$x178.5',), blockstack=(), npush=0), Edge(pc=104, stack=('$x178.5',), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:39:51,038 - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=54 nstack_initial=0), State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1)])
DEBUG 2024-06-11 13:39:51,038 - pending: deque([State(pc_initial=54 nstack_initial=0), State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1)])
DEBUG 2024-06-11 13:39:51,038 - stack: []
DEBUG 2024-06-11 13:39:51,038 - state.pc_initial: State(pc_initial=54 nstack_initial=0)
DEBUG 2024-06-11 13:39:51,039 - dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=1146)
DEBUG 2024-06-11 13:39:51,039 - stack []
DEBUG 2024-06-11 13:39:51,039 - dispatch pc=56, inst=STORE_FAST(arg=3, lineno=1146)
DEBUG 2024-06-11 13:39:51,039 - stack ['$const54.0']
DEBUG 2024-06-11 13:39:51,039 - end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:39:51,039 - pending: deque([State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1), State(pc_initial=58 nstack_initial=0)])
DEBUG 2024-06-11 13:39:51,039 - stack: ['$phi92.0']
DEBUG 2024-06-11 13:39:51,039 - state.pc_initial: State(pc_initial=92 nstack_initial=1)
DEBUG 2024-06-11 13:39:51,039 - dispatch pc=92, inst=LOAD_FAST(arg=1, lineno=1149)
DEBUG 2024-06-11 13:39:51,039 - stack ['$phi92.0']
DEBUG 2024-06-11 13:39:51,039 - dispatch pc=94, inst=COMPARE_OP(arg=1, lineno=1149)
DEBUG 2024-06-11 13:39:51,039 - stack ['$phi92.0', '$threshold92.1']
DEBUG 2024-06-11 13:39:51,039 - dispatch pc=100, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1149)
DEBUG 2024-06-11 13:39:51,039 - stack ['$94compare_op.2']
DEBUG 2024-06-11 13:39:51,040 - end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=112, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:39:51,040 - pending: deque([State(pc_initial=104 nstack_initial=1), State(pc_initial=58 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 13:39:51,040 - stack: ['$phi104.0']
DEBUG 2024-06-11 13:39:51,040 - state.pc_initial: State(pc_initial=104 nstack_initial=1)
DEBUG 2024-06-11 13:39:51,040 - dispatch pc=104, inst=POP_TOP(arg=None, lineno=1149)
DEBUG 2024-06-11 13:39:51,040 - stack ['$phi104.0']
DEBUG 2024-06-11 13:39:51,040 - dispatch pc=106, inst=JUMP_FORWARD(arg=2, lineno=1149)
DEBUG 2024-06-11 13:39:51,040 - stack []
DEBUG 2024-06-11 13:39:51,040 - end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:39:51,040 - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 13:39:51,040 - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 13:39:51,040 - stack: []
DEBUG 2024-06-11 13:39:51,040 - state.pc_initial: State(pc_initial=102 nstack_initial=0)
DEBUG 2024-06-11 13:39:51,040 - dispatch pc=102, inst=JUMP_FORWARD(arg=2, lineno=1149)
DEBUG 2024-06-11 13:39:51,040 - stack []
DEBUG 2024-06-11 13:39:51,040 - end state. edges=[Edge(pc=108, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:39:51,040 - pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=108 nstack_initial=0)])
DEBUG 2024-06-11 13:39:51,040 - stack: []
DEBUG 2024-06-11 13:39:51,040 - state.pc_initial: State(pc_initial=112 nstack_initial=0)
DEBUG 2024-06-11 13:39:51,040 - dispatch pc=112, inst=LOAD_FAST(arg=2, lineno=1152)
DEBUG 2024-06-11 13:39:51,040 - stack []
DEBUG 2024-06-11 13:39:51,040 - dispatch pc=114, inst=POP_JUMP_FORWARD_IF_FALSE(arg=42, lineno=1152)
DEBUG 2024-06-11 13:39:51,040 - stack ['$zero_pos112.0']
DEBUG 2024-06-11 13:39:51,040 - end state. edges=[Edge(pc=116, stack=(), blockstack=(), npush=0), Edge(pc=200, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:39:51,040 - pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0)])
DEBUG 2024-06-11 13:39:51,040 - pending: deque([State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0)])
DEBUG 2024-06-11 13:39:51,040 - stack: []
DEBUG 2024-06-11 13:39:51,040 - state.pc_initial: State(pc_initial=108 nstack_initial=0)
DEBUG 2024-06-11 13:39:51,040 - dispatch pc=108, inst=LOAD_CONST(arg=1, lineno=1150)
DEBUG 2024-06-11 13:39:51,040 - stack []
DEBUG 2024-06-11 13:39:51,040 - dispatch pc=110, inst=STORE_FAST(arg=4, lineno=1150)
DEBUG 2024-06-11 13:39:51,040 - stack ['$const108.0']
DEBUG 2024-06-11 13:39:51,040 - end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:39:51,040 - pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 13:39:51,040 - stack: []
DEBUG 2024-06-11 13:39:51,040 - state.pc_initial: State(pc_initial=116 nstack_initial=0)
DEBUG 2024-06-11 13:39:51,040 - dispatch pc=116, inst=LOAD_GLOBAL(arg=1, lineno=1153)
DEBUG 2024-06-11 13:39:51,040 - stack []
DEBUG 2024-06-11 13:39:51,040 - dispatch pc=128, inst=LOAD_ATTR(arg=1, lineno=1153)
DEBUG 2024-06-11 13:39:51,040 - stack ['$null$116.1', '$116load_global.0']
DEBUG 2024-06-11 13:39:51,040 - dispatch pc=138, inst=LOAD_FAST(arg=3, lineno=1153)
DEBUG 2024-06-11 13:39:51,040 - stack ['$null$116.1', '$128load_attr.2']
DEBUG 2024-06-11 13:39:51,040 - dispatch pc=140, inst=PRECALL(arg=1, lineno=1153)
DEBUG 2024-06-11 13:39:51,040 - stack ['$null$116.1', '$128load_attr.2', '$x0138.3']
DEBUG 2024-06-11 13:39:51,040 - dispatch pc=144, inst=CALL(arg=1, lineno=1153)
DEBUG 2024-06-11 13:39:51,040 - stack ['$null$116.1', '$128load_attr.2', '$x0138.3']
DEBUG 2024-06-11 13:39:51,040 - dispatch pc=154, inst=LOAD_GLOBAL(arg=1, lineno=1153)
DEBUG 2024-06-11 13:39:51,040 - stack ['$144call.4']
DEBUG 2024-06-11 13:39:51,040 - dispatch pc=166, inst=LOAD_ATTR(arg=1, lineno=1153)
DEBUG 2024-06-11 13:39:51,040 - stack ['$144call.4', '$null$154.6', '$154load_global.5']
DEBUG 2024-06-11 13:39:51,040 - dispatch pc=176, inst=LOAD_FAST(arg=4, lineno=1153)
DEBUG 2024-06-11 13:39:51,040 - stack ['$144call.4', '$null$154.6', '$166load_attr.7']
DEBUG 2024-06-11 13:39:51,040 - dispatch pc=178, inst=PRECALL(arg=1, lineno=1153)
DEBUG 2024-06-11 13:39:51,040 - stack ['$144call.4', '$null$154.6', '$166load_attr.7', '$x1176.8']
DEBUG 2024-06-11 13:39:51,040 - dispatch pc=182, inst=CALL(arg=1, lineno=1153)
DEBUG 2024-06-11 13:39:51,040 - stack ['$144call.4', '$null$154.6', '$166load_attr.7', '$x1176.8']
DEBUG 2024-06-11 13:39:51,040 - dispatch pc=192, inst=COMPARE_OP(arg=3, lineno=1153)
DEBUG 2024-06-11 13:39:51,040 - stack ['$144call.4', '$182call.9']
DEBUG 2024-06-11 13:39:51,040 - dispatch pc=198, inst=RETURN_VALUE(arg=None, lineno=1153)
DEBUG 2024-06-11 13:39:51,040 - stack ['$192compare_op.10']
DEBUG 2024-06-11 13:39:51,040 - end state. edges=[]
DEBUG 2024-06-11 13:39:51,040 - pending: deque([State(pc_initial=200 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 13:39:51,040 - stack: []
DEBUG 2024-06-11 13:39:51,040 - state.pc_initial: State(pc_initial=200 nstack_initial=0)
DEBUG 2024-06-11 13:39:51,040 - dispatch pc=200, inst=LOAD_GLOBAL(arg=1, lineno=1155)
DEBUG 2024-06-11 13:39:51,040 - stack []
DEBUG 2024-06-11 13:39:51,040 - dispatch pc=212, inst=LOAD_ATTR(arg=2, lineno=1155)
DEBUG 2024-06-11 13:39:51,040 - stack ['$null$200.1', '$200load_global.0']
DEBUG 2024-06-11 13:39:51,040 - dispatch pc=222, inst=LOAD_FAST(arg=3, lineno=1155)
DEBUG 2024-06-11 13:39:51,040 - stack ['$null$200.1', '$212load_attr.2']
DEBUG 2024-06-11 13:39:51,040 - dispatch pc=224, inst=PRECALL(arg=1, lineno=1155)
DEBUG 2024-06-11 13:39:51,040 - stack ['$null$200.1', '$212load_attr.2', '$x0222.3']
DEBUG 2024-06-11 13:39:51,040 - dispatch pc=228, inst=CALL(arg=1, lineno=1155)
DEBUG 2024-06-11 13:39:51,040 - stack ['$null$200.1', '$212load_attr.2', '$x0222.3']
DEBUG 2024-06-11 13:39:51,040 - dispatch pc=238, inst=LOAD_GLOBAL(arg=1, lineno=1155)
DEBUG 2024-06-11 13:39:51,040 - stack ['$228call.4']
DEBUG 2024-06-11 13:39:51,040 - dispatch pc=250, inst=LOAD_ATTR(arg=2, lineno=1155)
DEBUG 2024-06-11 13:39:51,040 - stack ['$228call.4', '$null$238.6', '$238load_global.5']
DEBUG 2024-06-11 13:39:51,040 - dispatch pc=260, inst=LOAD_FAST(arg=4, lineno=1155)
DEBUG 2024-06-11 13:39:51,040 - stack ['$228call.4', '$null$238.6', '$250load_attr.7']
DEBUG 2024-06-11 13:39:51,040 - dispatch pc=262, inst=PRECALL(arg=1, lineno=1155)
DEBUG 2024-06-11 13:39:51,040 - stack ['$228call.4', '$null$238.6', '$250load_attr.7', '$x1260.8']
DEBUG 2024-06-11 13:39:51,040 - dispatch pc=266, inst=CALL(arg=1, lineno=1155)
DEBUG 2024-06-11 13:39:51,040 - stack ['$228call.4', '$null$238.6', '$250load_attr.7', '$x1260.8']
DEBUG 2024-06-11 13:39:51,040 - dispatch pc=276, inst=COMPARE_OP(arg=3, lineno=1155)
DEBUG 2024-06-11 13:39:51,040 - stack ['$228call.4', '$266call.9']
DEBUG 2024-06-11 13:39:51,040 - dispatch pc=282, inst=RETURN_VALUE(arg=None, lineno=1155)
DEBUG 2024-06-11 13:39:51,040 - stack ['$276compare_op.10']
DEBUG 2024-06-11 13:39:51,040 - end state. edges=[]
DEBUG 2024-06-11 13:39:51,040 - pending: deque([State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 13:39:51,040 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 13:39:51,040 - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=38 nstack_initial=1): {'$phi38.0'},
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): set(),
             State(pc_initial=54 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=1): {'$phi92.0'},
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=104 nstack_initial=1): set(),
             State(pc_initial=108 nstack_initial=0): set(),
             State(pc_initial=112 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=200 nstack_initial=0): set()})
DEBUG 2024-06-11 13:39:51,040 - defmap: {'$phi104.0': State(pc_initial=58 nstack_initial=0),
 '$phi38.0': State(pc_initial=0 nstack_initial=0),
 '$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi92.0': State(pc_initial=58 nstack_initial=0)}
DEBUG 2024-06-11 13:39:51,040 - phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))},
             '$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}})
DEBUG 2024-06-11 13:39:51,040 - changing phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))},
             '$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}})
DEBUG 2024-06-11 13:39:51,040 - keep phismap: {'$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
 '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}}
DEBUG 2024-06-11 13:39:51,040 - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi38.0': '$x024.5'},
             State(pc_initial=58 nstack_initial=0): {'$phi92.0': '$x178.5'}})
DEBUG 2024-06-11 13:39:51,040 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 13:39:51,040 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'value': '$8binary_subscr.2'}), (20, {'res': '$threshold20.3'}), (22, {'value': '$threshold20.3', 'res': '$22unary_negative.4'}), (24, {'res': '$x024.5'}), (30, {'lhs': '$22unary_negative.4', 'rhs': '$x024.5', 'res': '$30compare_op.6'}), (32, {}), (34, {}), (36, {'pred': '$30compare_op.6'})), outgoing_phis={'$phi38.0': '$x024.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={38: ('$x024.5',), 50: ('$x024.5',)})
DEBUG 2024-06-11 13:39:51,040 - block_infos State(pc_initial=38 nstack_initial=1):
AdaptBlockInfo(insts=((38, {'res': '$threshold38.1'}), (40, {'lhs': '$phi38.0', 'rhs': '$threshold38.1', 'res': '$40compare_op.2'}), (42, {}), (44, {}), (46, {'pred': '$40compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: (), 58: ()})
DEBUG 2024-06-11 13:39:51,040 - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={54: ()})
DEBUG 2024-06-11 13:39:51,040 - block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((52, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ()})
DEBUG 2024-06-11 13:39:51,040 - block_infos State(pc_initial=54 nstack_initial=0):
AdaptBlockInfo(insts=((54, {'res': '$const54.0'}), (56, {'value': '$const54.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ()})
DEBUG 2024-06-11 13:39:51,040 - block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$x58.0'}), (60, {'res': '$const60.1'}), (62, {'index': '$const60.1', 'target': '$x58.0', 'res': '$62binary_subscr.2'}), (64, {}), (66, {}), (68, {}), (70, {}), (72, {'value': '$62binary_subscr.2'}), (74, {'res': '$threshold74.3'}), (76, {'value': '$threshold74.3', 'res': '$76unary_negative.4'}), (78, {'res': '$x178.5'}), (84, {'lhs': '$76unary_negative.4', 'rhs': '$x178.5', 'res': '$84compare_op.6'}), (86, {}), (88, {}), (90, {'pred': '$84compare_op.6'})), outgoing_phis={'$phi92.0': '$x178.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: ('$x178.5',), 104: ('$x178.5',)})
DEBUG 2024-06-11 13:39:51,040 - block_infos State(pc_initial=92 nstack_initial=1):
AdaptBlockInfo(insts=((92, {'res': '$threshold92.1'}), (94, {'lhs': '$phi92.0', 'rhs': '$threshold92.1', 'res': '$94compare_op.2'}), (96, {}), (98, {}), (100, {'pred': '$94compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 112: ()})
DEBUG 2024-06-11 13:39:51,040 - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={108: ()})
DEBUG 2024-06-11 13:39:51,040 - block_infos State(pc_initial=104 nstack_initial=1):
AdaptBlockInfo(insts=((106, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ()})
DEBUG 2024-06-11 13:39:51,040 - block_infos State(pc_initial=108 nstack_initial=0):
AdaptBlockInfo(insts=((108, {'res': '$const108.0'}), (110, {'value': '$const108.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ()})
DEBUG 2024-06-11 13:39:51,040 - block_infos State(pc_initial=112 nstack_initial=0):
AdaptBlockInfo(insts=((112, {'res': '$zero_pos112.0'}), (114, {'pred': '$zero_pos112.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={116: (), 200: ()})
DEBUG 2024-06-11 13:39:51,040 - block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'idx': 0, 'res': '$116load_global.0'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {}), (128, {'item': '$116load_global.0', 'res': '$128load_attr.2'}), (130, {}), (132, {}), (134, {}), (136, {}), (138, {'res': '$x0138.3'}), (140, {}), (142, {}), (144, {'func': '$128load_attr.2', 'args': ['$x0138.3'], 'kw_names': None, 'res': '$144call.4'}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'idx': 0, 'res': '$154load_global.5'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {}), (166, {'item': '$154load_global.5', 'res': '$166load_attr.7'}), (168, {}), (170, {}), (172, {}), (174, {}), (176, {'res': '$x1176.8'}), (178, {}), (180, {}), (182, {'func': '$166load_attr.7', 'args': ['$x1176.8'], 'kw_names': None, 'res': '$182call.9'}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'lhs': '$144call.4', 'rhs': '$182call.9', 'res': '$192compare_op.10'}), (194, {}), (196, {}), (198, {'retval': '$192compare_op.10', 'castval': '$198return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 13:39:51,040 - block_infos State(pc_initial=200 nstack_initial=0):
AdaptBlockInfo(insts=((200, {'idx': 0, 'res': '$200load_global.0'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {'item': '$200load_global.0', 'res': '$212load_attr.2'}), (214, {}), (216, {}), (218, {}), (220, {}), (222, {'res': '$x0222.3'}), (224, {}), (226, {}), (228, {'func': '$212load_attr.2', 'args': ['$x0222.3'], 'kw_names': None, 'res': '$228call.4'}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'idx': 0, 'res': '$238load_global.5'}), (240, {}), (242, {}), (244, {}), (246, {}), (248, {}), (250, {'item': '$238load_global.5', 'res': '$250load_attr.7'}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {'res': '$x1260.8'}), (262, {}), (264, {}), (266, {'func': '$250load_attr.7', 'args': ['$x1260.8'], 'kw_names': None, 'res': '$266call.9'}), (268, {}), (270, {}), (272, {}), (274, {}), (276, {'lhs': '$228call.4', 'rhs': '$266call.9', 'res': '$276compare_op.10'}), (278, {}), (280, {}), (282, {'retval': '$276compare_op.10', 'castval': '$282return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 13:39:51,046 - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const6.1 = const(int, 0)                ['$const6.1']
    x0 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$const6.1', 'x', 'x0']
    $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$22unary_negative.4', 'threshold']
    $30compare_op.6 = $22unary_negative.4 <= x0 ['$22unary_negative.4', '$30compare_op.6', 'x0']
    bool36 = global(bool: <class 'bool'>)    ['bool36']
    $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.6', '$36pred', 'bool36']
    $phi38.0 = x0                            ['$phi38.0', 'x0']
    branch $36pred, 38, 50                   ['$36pred']
label 38:
    $40compare_op.2 = $phi38.0 <= threshold  ['$40compare_op.2', '$phi38.0', 'threshold']
    bool46 = global(bool: <class 'bool'>)    ['bool46']
    $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.2', '$46pred', 'bool46']
    branch $46pred, 48, 58                   ['$46pred']
label 48:
    jump 54                                  []
label 50:
    jump 58                                  []
label 54:
    x0 = const(int, 0)                       ['x0']
    jump 58                                  []
label 58:
    $const60.1 = const(int, -1)              ['$const60.1']
    x1 = getitem(value=x, index=$const60.1, fn=<built-in function getitem>) ['$const60.1', 'x', 'x1']
    $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$76unary_negative.4', 'threshold']
    $84compare_op.6 = $76unary_negative.4 <= x1 ['$76unary_negative.4', '$84compare_op.6', 'x1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None) ['$84compare_op.6', '$90pred', 'bool90']
    $phi92.0 = x1                            ['$phi92.0', 'x1']
    branch $90pred, 92, 104                  ['$90pred']
label 92:
    $94compare_op.2 = $phi92.0 <= threshold  ['$94compare_op.2', '$phi92.0', 'threshold']
    bool100 = global(bool: <class 'bool'>)   ['bool100']
    $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$94compare_op.2', 'bool100']
    branch $100pred, 102, 112                ['$100pred']
label 102:
    jump 108                                 []
label 104:
    jump 112                                 []
label 108:
    x1 = const(int, 0)                       ['x1']
    jump 112                                 []
label 112:
    bool114 = global(bool: <class 'bool'>)   ['bool114']
    $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$114pred', 'bool114', 'zero_pos']
    branch $114pred, 116, 200                ['$114pred']
label 116:
    $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$116load_global.0']
    $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit) ['$116load_global.0', '$128load_attr.2']
    $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$128load_attr.2', '$144call.4', 'x0']
    $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$154load_global.5']
    $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit) ['$154load_global.5', '$166load_attr.7']
    $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_attr.7', '$182call.9', 'x1']
    $192compare_op.10 = $144call.4 != $182call.9 ['$144call.4', '$182call.9', '$192compare_op.10']
    $198return_value.11 = cast(value=$192compare_op.10) ['$192compare_op.10', '$198return_value.11']
    return $198return_value.11               ['$198return_value.11']
label 200:
    $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$200load_global.0']
    $212load_attr.2 = getattr(value=$200load_global.0, attr=sign) ['$200load_global.0', '$212load_attr.2']
    $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$212load_attr.2', '$228call.4', 'x0']
    $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$238load_global.5']
    $250load_attr.7 = getattr(value=$238load_global.5, attr=sign) ['$238load_global.5', '$250load_attr.7']
    $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None) ['$250load_attr.7', '$266call.9', 'x1']
    $276compare_op.10 = $228call.4 != $266call.9 ['$228call.4', '$266call.9', '$276compare_op.10']
    $282return_value.11 = cast(value=$276compare_op.10) ['$276compare_op.10', '$282return_value.11']
    return $282return_value.11               ['$282return_value.11']

DEBUG 2024-06-11 13:39:51,456 - bytecode dump:
>          0	NOP(arg=None, lineno=1039)
           2	RESUME(arg=0, lineno=1039)
           4	LOAD_FAST(arg=0, lineno=1042)
           6	LOAD_CONST(arg=1, lineno=1042)
           8	BINARY_SUBSCR(arg=None, lineno=1042)
          18	LOAD_FAST(arg=0, lineno=1042)
          20	LOAD_CONST(arg=2, lineno=1042)
          22	BINARY_SUBSCR(arg=None, lineno=1042)
          32	COMPARE_OP(arg=4, lineno=1042)
          38	LOAD_FAST(arg=0, lineno=1042)
          40	LOAD_CONST(arg=1, lineno=1042)
          42	BINARY_SUBSCR(arg=None, lineno=1042)
          52	LOAD_FAST(arg=0, lineno=1042)
          54	LOAD_CONST(arg=3, lineno=1042)
          56	BINARY_SUBSCR(arg=None, lineno=1042)
          66	COMPARE_OP(arg=5, lineno=1042)
          72	BINARY_OP(arg=1, lineno=1042)
          76	RETURN_VALUE(arg=None, lineno=1042)
DEBUG 2024-06-11 13:39:51,456 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 13:39:51,456 - stack: []
DEBUG 2024-06-11 13:39:51,456 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 13:39:51,456 - dispatch pc=0, inst=NOP(arg=None, lineno=1039)
DEBUG 2024-06-11 13:39:51,456 - stack []
DEBUG 2024-06-11 13:39:51,456 - dispatch pc=2, inst=RESUME(arg=0, lineno=1039)
DEBUG 2024-06-11 13:39:51,456 - stack []
DEBUG 2024-06-11 13:39:51,456 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1042)
DEBUG 2024-06-11 13:39:51,456 - stack []
DEBUG 2024-06-11 13:39:51,456 - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1042)
DEBUG 2024-06-11 13:39:51,456 - stack ['$x4.0']
DEBUG 2024-06-11 13:39:51,456 - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1042)
DEBUG 2024-06-11 13:39:51,456 - stack ['$x4.0', '$const6.1']
DEBUG 2024-06-11 13:39:51,462 - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=1042)
DEBUG 2024-06-11 13:39:51,462 - stack ['$8binary_subscr.2']
DEBUG 2024-06-11 13:39:51,462 - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=1042)
DEBUG 2024-06-11 13:39:51,462 - stack ['$8binary_subscr.2', '$x18.3']
DEBUG 2024-06-11 13:39:51,462 - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=1042)
DEBUG 2024-06-11 13:39:51,462 - stack ['$8binary_subscr.2', '$x18.3', '$const20.4']
DEBUG 2024-06-11 13:39:51,462 - dispatch pc=32, inst=COMPARE_OP(arg=4, lineno=1042)
DEBUG 2024-06-11 13:39:51,463 - stack ['$8binary_subscr.2', '$22binary_subscr.5']
DEBUG 2024-06-11 13:39:51,463 - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=1042)
DEBUG 2024-06-11 13:39:51,463 - stack ['$32compare_op.6']
DEBUG 2024-06-11 13:39:51,463 - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1042)
DEBUG 2024-06-11 13:39:51,463 - stack ['$32compare_op.6', '$x38.7']
DEBUG 2024-06-11 13:39:51,463 - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=1042)
DEBUG 2024-06-11 13:39:51,463 - stack ['$32compare_op.6', '$x38.7', '$const40.8']
DEBUG 2024-06-11 13:39:51,463 - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1042)
DEBUG 2024-06-11 13:39:51,463 - stack ['$32compare_op.6', '$42binary_subscr.9']
DEBUG 2024-06-11 13:39:51,463 - dispatch pc=54, inst=LOAD_CONST(arg=3, lineno=1042)
DEBUG 2024-06-11 13:39:51,463 - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10']
DEBUG 2024-06-11 13:39:51,463 - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1042)
DEBUG 2024-06-11 13:39:51,463 - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10', '$const54.11']
DEBUG 2024-06-11 13:39:51,463 - dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=1042)
DEBUG 2024-06-11 13:39:51,463 - stack ['$32compare_op.6', '$42binary_subscr.9', '$56binary_subscr.12']
DEBUG 2024-06-11 13:39:51,463 - dispatch pc=72, inst=BINARY_OP(arg=1, lineno=1042)
DEBUG 2024-06-11 13:39:51,463 - stack ['$32compare_op.6', '$66compare_op.13']
DEBUG 2024-06-11 13:39:51,463 - dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=1042)
DEBUG 2024-06-11 13:39:51,463 - stack ['$binop_and_72.14']
DEBUG 2024-06-11 13:39:51,463 - end state. edges=[]
DEBUG 2024-06-11 13:39:51,464 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 13:39:51,464 - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG 2024-06-11 13:39:51,464 - defmap: {}
DEBUG 2024-06-11 13:39:51,464 - phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 13:39:51,464 - changing phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 13:39:51,464 - keep phismap: {}
DEBUG 2024-06-11 13:39:51,464 - new_out: defaultdict(<class 'dict'>, {})
DEBUG 2024-06-11 13:39:51,464 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 13:39:51,464 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4'}), (22, {'index': '$const20.4', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$32compare_op.6'}), (34, {}), (36, {}), (38, {'res': '$x38.7'}), (40, {'res': '$const40.8'}), (42, {'index': '$const40.8', 'target': '$x38.7', 'res': '$42binary_subscr.9'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$x52.10'}), (54, {'res': '$const54.11'}), (56, {'index': '$const54.11', 'target': '$x52.10', 'res': '$56binary_subscr.12'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'lhs': '$42binary_subscr.9', 'rhs': '$56binary_subscr.12', 'res': '$66compare_op.13'}), (68, {}), (70, {}), (72, {'op': '&', 'lhs': '$32compare_op.6', 'rhs': '$66compare_op.13', 'res': '$binop_and_72.14'}), (74, {}), (76, {'retval': '$binop_and_72.14', 'castval': '$76return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 13:39:51,464 - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $const20.4 = const(int, -1)              ['$const20.4']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4', 'x']
    $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5 ['$22binary_subscr.5', '$32compare_op.6', '$8binary_subscr.2']
    $const40.8 = const(int, 0)               ['$const40.8']
    $42binary_subscr.9 = getitem(value=x, index=$const40.8, fn=<built-in function getitem>) ['$42binary_subscr.9', '$const40.8', 'x']
    $const54.11 = const(int, 1)              ['$const54.11']
    $56binary_subscr.12 = getitem(value=x, index=$const54.11, fn=<built-in function getitem>) ['$56binary_subscr.12', '$const54.11', 'x']
    $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12 ['$42binary_subscr.9', '$56binary_subscr.12', '$66compare_op.13']
    $binop_and_72.14 = $32compare_op.6 & $66compare_op.13 ['$32compare_op.6', '$66compare_op.13', '$binop_and_72.14']
    $76return_value.15 = cast(value=$binop_and_72.14) ['$76return_value.15', '$binop_and_72.14']
    return $76return_value.15                ['$76return_value.15']

DEBUG 2024-06-11 13:39:51,464 - bytecode dump:
>          0	NOP(arg=None, lineno=1045)
           2	RESUME(arg=0, lineno=1045)
           4	LOAD_FAST(arg=0, lineno=1048)
           6	LOAD_CONST(arg=1, lineno=1048)
           8	BINARY_SUBSCR(arg=None, lineno=1048)
          18	LOAD_FAST(arg=0, lineno=1048)
          20	LOAD_CONST(arg=2, lineno=1048)
          22	BINARY_SUBSCR(arg=None, lineno=1048)
          32	COMPARE_OP(arg=0, lineno=1048)
          38	LOAD_FAST(arg=0, lineno=1048)
          40	LOAD_CONST(arg=1, lineno=1048)
          42	BINARY_SUBSCR(arg=None, lineno=1048)
          52	LOAD_FAST(arg=0, lineno=1048)
          54	LOAD_CONST(arg=3, lineno=1048)
          56	BINARY_SUBSCR(arg=None, lineno=1048)
          66	COMPARE_OP(arg=1, lineno=1048)
          72	BINARY_OP(arg=1, lineno=1048)
          76	RETURN_VALUE(arg=None, lineno=1048)
DEBUG 2024-06-11 13:39:51,464 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 13:39:51,464 - stack: []
DEBUG 2024-06-11 13:39:51,464 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 13:39:51,464 - dispatch pc=0, inst=NOP(arg=None, lineno=1045)
DEBUG 2024-06-11 13:39:51,464 - stack []
DEBUG 2024-06-11 13:39:51,464 - dispatch pc=2, inst=RESUME(arg=0, lineno=1045)
DEBUG 2024-06-11 13:39:51,464 - stack []
DEBUG 2024-06-11 13:39:51,464 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1048)
DEBUG 2024-06-11 13:39:51,464 - stack []
DEBUG 2024-06-11 13:39:51,464 - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1048)
DEBUG 2024-06-11 13:39:51,464 - stack ['$x4.0']
DEBUG 2024-06-11 13:39:51,464 - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1048)
DEBUG 2024-06-11 13:39:51,464 - stack ['$x4.0', '$const6.1']
DEBUG 2024-06-11 13:39:51,464 - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=1048)
DEBUG 2024-06-11 13:39:51,464 - stack ['$8binary_subscr.2']
DEBUG 2024-06-11 13:39:51,464 - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=1048)
DEBUG 2024-06-11 13:39:51,464 - stack ['$8binary_subscr.2', '$x18.3']
DEBUG 2024-06-11 13:39:51,464 - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=1048)
DEBUG 2024-06-11 13:39:51,464 - stack ['$8binary_subscr.2', '$x18.3', '$const20.4']
DEBUG 2024-06-11 13:39:51,464 - dispatch pc=32, inst=COMPARE_OP(arg=0, lineno=1048)
DEBUG 2024-06-11 13:39:51,464 - stack ['$8binary_subscr.2', '$22binary_subscr.5']
DEBUG 2024-06-11 13:39:51,464 - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=1048)
DEBUG 2024-06-11 13:39:51,464 - stack ['$32compare_op.6']
DEBUG 2024-06-11 13:39:51,464 - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1048)
DEBUG 2024-06-11 13:39:51,464 - stack ['$32compare_op.6', '$x38.7']
DEBUG 2024-06-11 13:39:51,464 - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=1048)
DEBUG 2024-06-11 13:39:51,464 - stack ['$32compare_op.6', '$x38.7', '$const40.8']
DEBUG 2024-06-11 13:39:51,464 - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1048)
DEBUG 2024-06-11 13:39:51,464 - stack ['$32compare_op.6', '$42binary_subscr.9']
DEBUG 2024-06-11 13:39:51,464 - dispatch pc=54, inst=LOAD_CONST(arg=3, lineno=1048)
DEBUG 2024-06-11 13:39:51,464 - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10']
DEBUG 2024-06-11 13:39:51,464 - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1048)
DEBUG 2024-06-11 13:39:51,464 - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10', '$const54.11']
DEBUG 2024-06-11 13:39:51,464 - dispatch pc=66, inst=COMPARE_OP(arg=1, lineno=1048)
DEBUG 2024-06-11 13:39:51,464 - stack ['$32compare_op.6', '$42binary_subscr.9', '$56binary_subscr.12']
DEBUG 2024-06-11 13:39:51,464 - dispatch pc=72, inst=BINARY_OP(arg=1, lineno=1048)
DEBUG 2024-06-11 13:39:51,464 - stack ['$32compare_op.6', '$66compare_op.13']
DEBUG 2024-06-11 13:39:51,464 - dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=1048)
DEBUG 2024-06-11 13:39:51,464 - stack ['$binop_and_72.14']
DEBUG 2024-06-11 13:39:51,464 - end state. edges=[]
DEBUG 2024-06-11 13:39:51,464 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 13:39:51,464 - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG 2024-06-11 13:39:51,464 - defmap: {}
DEBUG 2024-06-11 13:39:51,464 - phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 13:39:51,464 - changing phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 13:39:51,464 - keep phismap: {}
DEBUG 2024-06-11 13:39:51,464 - new_out: defaultdict(<class 'dict'>, {})
DEBUG 2024-06-11 13:39:51,464 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 13:39:51,464 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4'}), (22, {'index': '$const20.4', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$32compare_op.6'}), (34, {}), (36, {}), (38, {'res': '$x38.7'}), (40, {'res': '$const40.8'}), (42, {'index': '$const40.8', 'target': '$x38.7', 'res': '$42binary_subscr.9'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$x52.10'}), (54, {'res': '$const54.11'}), (56, {'index': '$const54.11', 'target': '$x52.10', 'res': '$56binary_subscr.12'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'lhs': '$42binary_subscr.9', 'rhs': '$56binary_subscr.12', 'res': '$66compare_op.13'}), (68, {}), (70, {}), (72, {'op': '&', 'lhs': '$32compare_op.6', 'rhs': '$66compare_op.13', 'res': '$binop_and_72.14'}), (74, {}), (76, {'retval': '$binop_and_72.14', 'castval': '$76return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 13:39:51,464 - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $const20.4 = const(int, -1)              ['$const20.4']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4', 'x']
    $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5 ['$22binary_subscr.5', '$32compare_op.6', '$8binary_subscr.2']
    $const40.8 = const(int, 0)               ['$const40.8']
    $42binary_subscr.9 = getitem(value=x, index=$const40.8, fn=<built-in function getitem>) ['$42binary_subscr.9', '$const40.8', 'x']
    $const54.11 = const(int, 1)              ['$const54.11']
    $56binary_subscr.12 = getitem(value=x, index=$const54.11, fn=<built-in function getitem>) ['$56binary_subscr.12', '$const54.11', 'x']
    $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12 ['$42binary_subscr.9', '$56binary_subscr.12', '$66compare_op.13']
    $binop_and_72.14 = $32compare_op.6 & $66compare_op.13 ['$32compare_op.6', '$66compare_op.13', '$binop_and_72.14']
    $76return_value.15 = cast(value=$binop_and_72.14) ['$76return_value.15', '$binop_and_72.14']
    return $76return_value.15                ['$76return_value.15']

DEBUG 2024-06-11 13:39:52,047 - bytecode dump:
>          0	NOP(arg=None, lineno=81)
           2	RESUME(arg=0, lineno=81)
           4	LOAD_GLOBAL(arg=1, lineno=86)
          16	LOAD_FAST(arg=0, lineno=86)
          18	LOAD_FAST(arg=1, lineno=86)
          20	LOAD_FAST(arg=2, lineno=86)
          22	LOAD_FAST(arg=3, lineno=86)
          24	LOAD_FAST(arg=4, lineno=86)
          26	LOAD_FAST(arg=5, lineno=86)
          28	LOAD_FAST(arg=6, lineno=86)
          30	PRECALL(arg=7, lineno=86)
          34	CALL(arg=7, lineno=86)
          44	POP_TOP(arg=None, lineno=86)
          46	LOAD_CONST(arg=0, lineno=86)
          48	RETURN_VALUE(arg=None, lineno=86)
DEBUG 2024-06-11 13:39:52,047 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 13:39:52,047 - stack: []
DEBUG 2024-06-11 13:39:52,047 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 13:39:52,047 - dispatch pc=0, inst=NOP(arg=None, lineno=81)
DEBUG 2024-06-11 13:39:52,047 - stack []
DEBUG 2024-06-11 13:39:52,047 - dispatch pc=2, inst=RESUME(arg=0, lineno=81)
DEBUG 2024-06-11 13:39:52,047 - stack []
DEBUG 2024-06-11 13:39:52,047 - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=86)
DEBUG 2024-06-11 13:39:52,047 - stack []
DEBUG 2024-06-11 13:39:52,047 - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=86)
DEBUG 2024-06-11 13:39:52,047 - stack ['$null$4.1', '$4load_global.0']
DEBUG 2024-06-11 13:39:52,047 - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=86)
DEBUG 2024-06-11 13:39:52,047 - stack ['$null$4.1', '$4load_global.0', '$x16.2']
DEBUG 2024-06-11 13:39:52,047 - dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=86)
DEBUG 2024-06-11 13:39:52,047 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3']
DEBUG 2024-06-11 13:39:52,047 - dispatch pc=22, inst=LOAD_FAST(arg=3, lineno=86)
DEBUG 2024-06-11 13:39:52,047 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4']
DEBUG 2024-06-11 13:39:52,047 - dispatch pc=24, inst=LOAD_FAST(arg=4, lineno=86)
DEBUG 2024-06-11 13:39:52,047 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5']
DEBUG 2024-06-11 13:39:52,047 - dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=86)
DEBUG 2024-06-11 13:39:52,047 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6']
DEBUG 2024-06-11 13:39:52,047 - dispatch pc=28, inst=LOAD_FAST(arg=6, lineno=86)
DEBUG 2024-06-11 13:39:52,047 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7']
DEBUG 2024-06-11 13:39:52,047 - dispatch pc=30, inst=PRECALL(arg=7, lineno=86)
DEBUG 2024-06-11 13:39:52,047 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
DEBUG 2024-06-11 13:39:52,047 - dispatch pc=34, inst=CALL(arg=7, lineno=86)
DEBUG 2024-06-11 13:39:52,047 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
DEBUG 2024-06-11 13:39:52,047 - dispatch pc=44, inst=POP_TOP(arg=None, lineno=86)
DEBUG 2024-06-11 13:39:52,047 - stack ['$34call.9']
DEBUG 2024-06-11 13:39:52,047 - dispatch pc=46, inst=LOAD_CONST(arg=0, lineno=86)
DEBUG 2024-06-11 13:39:52,047 - stack []
DEBUG 2024-06-11 13:39:52,047 - dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=86)
DEBUG 2024-06-11 13:39:52,047 - stack ['$const46.10']
DEBUG 2024-06-11 13:39:52,047 - end state. edges=[]
DEBUG 2024-06-11 13:39:52,047 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 13:39:52,047 - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG 2024-06-11 13:39:52,047 - defmap: {}
DEBUG 2024-06-11 13:39:52,047 - phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 13:39:52,054 - changing phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 13:39:52,054 - keep phismap: {}
DEBUG 2024-06-11 13:39:52,054 - new_out: defaultdict(<class 'dict'>, {})
DEBUG 2024-06-11 13:39:52,054 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 13:39:52,054 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {'res': '$t_out18.3'}), (20, {'res': '$interp_win20.4'}), (22, {'res': '$interp_delta22.5'}), (24, {'res': '$num_table24.6'}), (26, {'res': '$scale26.7'}), (28, {'res': '$y28.8'}), (30, {}), (32, {}), (34, {'func': '$4load_global.0', 'args': ['$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8'], 'kw_names': None, 'res': '$34call.9'}), (36, {}), (38, {}), (40, {}), (42, {}), (46, {'res': '$const46.10'}), (48, {'retval': '$const46.10', 'castval': '$48return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 13:39:52,055 - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x0000021E8370B7E0>)) ['$4load_global.0']
    $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None) ['$34call.9', '$4load_global.0', 'interp_delta', 'interp_win', 'num_table', 'scale', 't_out', 'x', 'y']
    $const46.10 = const(NoneType, None)      ['$const46.10']
    $48return_value.11 = cast(value=$const46.10) ['$48return_value.11', '$const46.10']
    return $48return_value.11                ['$48return_value.11']

DEBUG 2024-06-11 13:39:52,057 - ==== SSA block analysis pass on 0
DEBUG 2024-06-11 13:39:52,062 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000021E8480AC10>
DEBUG 2024-06-11 13:39:52,062 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:39:52,063 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:39:52,063 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:39:52,063 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:39:52,063 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:39:52,063 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:39:52,063 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:39:52,063 - on stmt: $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x0000021E8370B7E0>))
DEBUG 2024-06-11 13:39:52,063 - on stmt: $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,063 - on stmt: $const46.10 = const(NoneType, None)
DEBUG 2024-06-11 13:39:52,063 - on stmt: $48return_value.11 = cast(value=$const46.10)
DEBUG 2024-06-11 13:39:52,063 - on stmt: return $48return_value.11
DEBUG 2024-06-11 13:39:52,063 - defs defaultdict(<class 'list'>,
            {'$34call.9': [(<numba.core.ir.Assign object at 0x0000021E84825B50>,
                            0)],
             '$48return_value.11': [(<numba.core.ir.Assign object at 0x0000021E84826050>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000021E84824B90>,
                                  0)],
             '$const46.10': [(<numba.core.ir.Assign object at 0x0000021E84825E10>,
                              0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x0000021E848245D0>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x0000021E848244D0>,
                             0)],
             'num_table': [(<numba.core.ir.Assign object at 0x0000021E848246D0>,
                            0)],
             'scale': [(<numba.core.ir.Assign object at 0x0000021E84824810>,
                        0)],
             't_out': [(<numba.core.ir.Assign object at 0x0000021E848243D0>,
                        0)],
             'x': [(<numba.core.ir.Assign object at 0x0000021E84824290>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000021E84824910>, 0)]})
DEBUG 2024-06-11 13:39:52,063 - SSA violators <numba.core.utils.OrderedSet object at 0x0000021E8480AC10>
DEBUG 2024-06-11 13:39:52,065 - bytecode dump:
>          0	NOP(arg=None, lineno=7)
           2	RESUME(arg=0, lineno=7)
           4	LOAD_GLOBAL(arg=1, lineno=9)
          16	LOAD_FAST(arg=5, lineno=9)
          18	LOAD_FAST(arg=4, lineno=9)
          20	BINARY_OP(arg=5, lineno=9)
          24	PRECALL(arg=1, lineno=9)
          28	CALL(arg=1, lineno=9)
          38	STORE_FAST(arg=7, lineno=9)
          40	LOAD_CONST(arg=1, lineno=10)
          42	STORE_FAST(arg=8, lineno=10)
          44	LOAD_CONST(arg=2, lineno=12)
          46	STORE_FAST(arg=9, lineno=12)
          48	LOAD_CONST(arg=1, lineno=13)
          50	STORE_FAST(arg=10, lineno=13)
          52	LOAD_CONST(arg=1, lineno=14)
          54	STORE_FAST(arg=11, lineno=14)
          56	LOAD_CONST(arg=2, lineno=15)
          58	STORE_FAST(arg=12, lineno=15)
          60	LOAD_CONST(arg=1, lineno=16)
          62	STORE_FAST(arg=13, lineno=16)
          64	LOAD_CONST(arg=1, lineno=17)
          66	STORE_FAST(arg=14, lineno=17)
          68	LOAD_FAST(arg=2, lineno=19)
          70	LOAD_ATTR(arg=1, lineno=19)
          80	LOAD_CONST(arg=2, lineno=19)
          82	BINARY_SUBSCR(arg=None, lineno=19)
          92	STORE_FAST(arg=15, lineno=19)
          94	LOAD_FAST(arg=0, lineno=20)
          96	LOAD_ATTR(arg=1, lineno=20)
         106	LOAD_CONST(arg=2, lineno=20)
         108	BINARY_SUBSCR(arg=None, lineno=20)
         118	STORE_FAST(arg=16, lineno=20)
         120	LOAD_FAST(arg=1, lineno=21)
         122	LOAD_ATTR(arg=1, lineno=21)
         132	LOAD_CONST(arg=2, lineno=21)
         134	BINARY_SUBSCR(arg=None, lineno=21)
         144	STORE_FAST(arg=17, lineno=21)
         146	LOAD_GLOBAL(arg=5, lineno=23)
         158	LOAD_FAST(arg=17, lineno=23)
         160	PRECALL(arg=1, lineno=23)
         164	CALL(arg=1, lineno=23)
         174	GET_ITER(arg=None, lineno=23)
>        176	NOP(arg=1, lineno=23)
         178	FOR_ITER(arg=301, lineno=23)
         180	STORE_FAST(arg=18, lineno=23)
         182	LOAD_FAST(arg=1, lineno=24)
         184	LOAD_FAST(arg=18, lineno=24)
         186	BINARY_SUBSCR(arg=None, lineno=24)
         196	STORE_FAST(arg=8, lineno=24)
         198	LOAD_GLOBAL(arg=1, lineno=27)
         210	LOAD_FAST(arg=8, lineno=27)
         212	PRECALL(arg=1, lineno=27)
         216	CALL(arg=1, lineno=27)
         226	STORE_FAST(arg=9, lineno=27)
         228	LOAD_FAST(arg=5, lineno=30)
         230	LOAD_FAST(arg=8, lineno=30)
         232	LOAD_FAST(arg=9, lineno=30)
         234	BINARY_OP(arg=10, lineno=30)
         238	BINARY_OP(arg=5, lineno=30)
         242	STORE_FAST(arg=10, lineno=30)
         244	LOAD_FAST(arg=10, lineno=33)
         246	LOAD_FAST(arg=4, lineno=33)
         248	BINARY_OP(arg=5, lineno=33)
         252	STORE_FAST(arg=11, lineno=33)
         254	LOAD_GLOBAL(arg=1, lineno=34)
         266	LOAD_FAST(arg=11, lineno=34)
         268	PRECALL(arg=1, lineno=34)
         272	CALL(arg=1, lineno=34)
         282	STORE_FAST(arg=12, lineno=34)
         284	LOAD_FAST(arg=11, lineno=37)
         286	LOAD_FAST(arg=12, lineno=37)
         288	BINARY_OP(arg=10, lineno=37)
         292	STORE_FAST(arg=13, lineno=37)
         294	LOAD_GLOBAL(arg=7, lineno=40)
         306	LOAD_FAST(arg=9, lineno=40)
         308	LOAD_CONST(arg=3, lineno=40)
         310	BINARY_OP(arg=0, lineno=40)
         314	LOAD_FAST(arg=15, lineno=40)
         316	LOAD_FAST(arg=12, lineno=40)
         318	BINARY_OP(arg=10, lineno=40)
         322	LOAD_FAST(arg=7, lineno=40)
         324	BINARY_OP(arg=2, lineno=40)
         328	PRECALL(arg=2, lineno=40)
         332	CALL(arg=2, lineno=40)
         342	STORE_FAST(arg=19, lineno=40)
         344	LOAD_GLOBAL(arg=9, lineno=41)
         356	LOAD_FAST(arg=19, lineno=41)
         358	PRECALL(arg=1, lineno=41)
         362	CALL(arg=1, lineno=41)
         372	GET_ITER(arg=None, lineno=41)
>        374	FOR_ITER(arg=62, lineno=41)
         376	STORE_FAST(arg=20, lineno=41)
         378	LOAD_FAST(arg=2, lineno=44)
         380	LOAD_FAST(arg=12, lineno=44)
         382	LOAD_FAST(arg=20, lineno=44)
         384	LOAD_FAST(arg=7, lineno=44)
         386	BINARY_OP(arg=5, lineno=44)
         390	BINARY_OP(arg=0, lineno=44)
         394	BINARY_SUBSCR(arg=None, lineno=44)
         404	LOAD_FAST(arg=13, lineno=45)
         406	LOAD_FAST(arg=3, lineno=45)
         408	LOAD_FAST(arg=12, lineno=45)
         410	LOAD_FAST(arg=20, lineno=45)
         412	LOAD_FAST(arg=7, lineno=45)
         414	BINARY_OP(arg=5, lineno=45)
         418	BINARY_OP(arg=0, lineno=45)
         422	BINARY_SUBSCR(arg=None, lineno=45)
         432	BINARY_OP(arg=5, lineno=45)
         436	BINARY_OP(arg=0, lineno=44)
         440	STORE_FAST(arg=14, lineno=43)
         442	LOAD_FAST(arg=6, lineno=47)
         444	LOAD_FAST(arg=18, lineno=47)
         446	COPY(arg=2, lineno=47)
         448	COPY(arg=2, lineno=47)
         450	BINARY_SUBSCR(arg=None, lineno=47)
         460	LOAD_FAST(arg=14, lineno=47)
         462	LOAD_FAST(arg=0, lineno=47)
         464	LOAD_FAST(arg=9, lineno=47)
         466	LOAD_FAST(arg=20, lineno=47)
         468	BINARY_OP(arg=10, lineno=47)
         472	BINARY_SUBSCR(arg=None, lineno=47)
         482	BINARY_OP(arg=5, lineno=47)
         486	BINARY_OP(arg=13, lineno=47)
         490	SWAP(arg=3, lineno=47)
         492	SWAP(arg=2, lineno=47)
         494	STORE_SUBSCR(arg=None, lineno=47)
         498	JUMP_BACKWARD(arg=63, lineno=47)
>        500	LOAD_FAST(arg=5, lineno=50)
         502	LOAD_FAST(arg=10, lineno=50)
         504	BINARY_OP(arg=10, lineno=50)
         508	STORE_FAST(arg=10, lineno=50)
         510	LOAD_FAST(arg=10, lineno=53)
         512	LOAD_FAST(arg=4, lineno=53)
         514	BINARY_OP(arg=5, lineno=53)
         518	STORE_FAST(arg=11, lineno=53)
         520	LOAD_GLOBAL(arg=1, lineno=54)
         532	LOAD_FAST(arg=11, lineno=54)
         534	PRECALL(arg=1, lineno=54)
         538	CALL(arg=1, lineno=54)
         548	STORE_FAST(arg=12, lineno=54)
         550	LOAD_FAST(arg=11, lineno=57)
         552	LOAD_FAST(arg=12, lineno=57)
         554	BINARY_OP(arg=10, lineno=57)
         558	STORE_FAST(arg=13, lineno=57)
         560	LOAD_GLOBAL(arg=7, lineno=60)
         572	LOAD_FAST(arg=16, lineno=60)
         574	LOAD_FAST(arg=9, lineno=60)
         576	BINARY_OP(arg=10, lineno=60)
         580	LOAD_CONST(arg=3, lineno=60)
         582	BINARY_OP(arg=10, lineno=60)
         586	LOAD_FAST(arg=15, lineno=60)
         588	LOAD_FAST(arg=12, lineno=60)
         590	BINARY_OP(arg=10, lineno=60)
         594	LOAD_FAST(arg=7, lineno=60)
         596	BINARY_OP(arg=2, lineno=60)
         600	PRECALL(arg=2, lineno=60)
         604	CALL(arg=2, lineno=60)
         614	STORE_FAST(arg=21, lineno=60)
         616	LOAD_GLOBAL(arg=9, lineno=61)
         628	LOAD_FAST(arg=21, lineno=61)
         630	PRECALL(arg=1, lineno=61)
         634	CALL(arg=1, lineno=61)
         644	GET_ITER(arg=None, lineno=61)
>        646	FOR_ITER(arg=65, lineno=61)
         648	STORE_FAST(arg=22, lineno=61)
         650	LOAD_FAST(arg=2, lineno=63)
         652	LOAD_FAST(arg=12, lineno=63)
         654	LOAD_FAST(arg=22, lineno=63)
         656	LOAD_FAST(arg=7, lineno=63)
         658	BINARY_OP(arg=5, lineno=63)
         662	BINARY_OP(arg=0, lineno=63)
         666	BINARY_SUBSCR(arg=None, lineno=63)
         676	LOAD_FAST(arg=13, lineno=64)
         678	LOAD_FAST(arg=3, lineno=64)
         680	LOAD_FAST(arg=12, lineno=64)
         682	LOAD_FAST(arg=22, lineno=64)
         684	LOAD_FAST(arg=7, lineno=64)
         686	BINARY_OP(arg=5, lineno=64)
         690	BINARY_OP(arg=0, lineno=64)
         694	BINARY_SUBSCR(arg=None, lineno=64)
         704	BINARY_OP(arg=5, lineno=64)
         708	BINARY_OP(arg=0, lineno=63)
         712	STORE_FAST(arg=14, lineno=62)
         714	LOAD_FAST(arg=6, lineno=66)
         716	LOAD_FAST(arg=18, lineno=66)
         718	COPY(arg=2, lineno=66)
         720	COPY(arg=2, lineno=66)
         722	BINARY_SUBSCR(arg=None, lineno=66)
         732	LOAD_FAST(arg=14, lineno=66)
         734	LOAD_FAST(arg=0, lineno=66)
         736	LOAD_FAST(arg=9, lineno=66)
         738	LOAD_FAST(arg=22, lineno=66)
         740	BINARY_OP(arg=0, lineno=66)
         744	LOAD_CONST(arg=3, lineno=66)
         746	BINARY_OP(arg=0, lineno=66)
         750	BINARY_SUBSCR(arg=None, lineno=66)
         760	BINARY_OP(arg=5, lineno=66)
         764	BINARY_OP(arg=13, lineno=66)
         768	SWAP(arg=3, lineno=66)
         770	SWAP(arg=2, lineno=66)
         772	STORE_SUBSCR(arg=None, lineno=66)
         776	JUMP_BACKWARD(arg=66, lineno=66)
>        778	NOP(arg=1, lineno=61)
         780	JUMP_BACKWARD(arg=303, lineno=61)
>        782	LOAD_CONST(arg=0, lineno=23)
         784	RETURN_VALUE(arg=None, lineno=23)
DEBUG 2024-06-11 13:39:52,065 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 13:39:52,065 - stack: []
DEBUG 2024-06-11 13:39:52,065 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 13:39:52,065 - dispatch pc=0, inst=NOP(arg=None, lineno=7)
DEBUG 2024-06-11 13:39:52,065 - stack []
DEBUG 2024-06-11 13:39:52,065 - dispatch pc=2, inst=RESUME(arg=0, lineno=7)
DEBUG 2024-06-11 13:39:52,065 - stack []
DEBUG 2024-06-11 13:39:52,065 - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=9)
DEBUG 2024-06-11 13:39:52,065 - stack []
DEBUG 2024-06-11 13:39:52,065 - dispatch pc=16, inst=LOAD_FAST(arg=5, lineno=9)
DEBUG 2024-06-11 13:39:52,065 - stack ['$null$4.1', '$4load_global.0']
DEBUG 2024-06-11 13:39:52,065 - dispatch pc=18, inst=LOAD_FAST(arg=4, lineno=9)
DEBUG 2024-06-11 13:39:52,065 - stack ['$null$4.1', '$4load_global.0', '$scale16.2']
DEBUG 2024-06-11 13:39:52,065 - dispatch pc=20, inst=BINARY_OP(arg=5, lineno=9)
DEBUG 2024-06-11 13:39:52,065 - stack ['$null$4.1', '$4load_global.0', '$scale16.2', '$num_table18.3']
DEBUG 2024-06-11 13:39:52,065 - dispatch pc=24, inst=PRECALL(arg=1, lineno=9)
DEBUG 2024-06-11 13:39:52,065 - stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
DEBUG 2024-06-11 13:39:52,065 - dispatch pc=28, inst=CALL(arg=1, lineno=9)
DEBUG 2024-06-11 13:39:52,065 - stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
DEBUG 2024-06-11 13:39:52,065 - dispatch pc=38, inst=STORE_FAST(arg=7, lineno=9)
DEBUG 2024-06-11 13:39:52,065 - stack ['$28call.5']
DEBUG 2024-06-11 13:39:52,065 - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=10)
DEBUG 2024-06-11 13:39:52,065 - stack []
DEBUG 2024-06-11 13:39:52,065 - dispatch pc=42, inst=STORE_FAST(arg=8, lineno=10)
DEBUG 2024-06-11 13:39:52,065 - stack ['$const40.6']
DEBUG 2024-06-11 13:39:52,065 - dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=12)
DEBUG 2024-06-11 13:39:52,065 - stack []
DEBUG 2024-06-11 13:39:52,065 - dispatch pc=46, inst=STORE_FAST(arg=9, lineno=12)
DEBUG 2024-06-11 13:39:52,065 - stack ['$const44.7']
DEBUG 2024-06-11 13:39:52,065 - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=13)
DEBUG 2024-06-11 13:39:52,065 - stack []
DEBUG 2024-06-11 13:39:52,065 - dispatch pc=50, inst=STORE_FAST(arg=10, lineno=13)
DEBUG 2024-06-11 13:39:52,065 - stack ['$const48.8']
DEBUG 2024-06-11 13:39:52,065 - dispatch pc=52, inst=LOAD_CONST(arg=1, lineno=14)
DEBUG 2024-06-11 13:39:52,065 - stack []
DEBUG 2024-06-11 13:39:52,065 - dispatch pc=54, inst=STORE_FAST(arg=11, lineno=14)
DEBUG 2024-06-11 13:39:52,065 - stack ['$const52.9']
DEBUG 2024-06-11 13:39:52,065 - dispatch pc=56, inst=LOAD_CONST(arg=2, lineno=15)
DEBUG 2024-06-11 13:39:52,065 - stack []
DEBUG 2024-06-11 13:39:52,065 - dispatch pc=58, inst=STORE_FAST(arg=12, lineno=15)
DEBUG 2024-06-11 13:39:52,065 - stack ['$const56.10']
DEBUG 2024-06-11 13:39:52,065 - dispatch pc=60, inst=LOAD_CONST(arg=1, lineno=16)
DEBUG 2024-06-11 13:39:52,065 - stack []
DEBUG 2024-06-11 13:39:52,065 - dispatch pc=62, inst=STORE_FAST(arg=13, lineno=16)
DEBUG 2024-06-11 13:39:52,065 - stack ['$const60.11']
DEBUG 2024-06-11 13:39:52,065 - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=17)
DEBUG 2024-06-11 13:39:52,065 - stack []
DEBUG 2024-06-11 13:39:52,065 - dispatch pc=66, inst=STORE_FAST(arg=14, lineno=17)
DEBUG 2024-06-11 13:39:52,065 - stack ['$const64.12']
DEBUG 2024-06-11 13:39:52,065 - dispatch pc=68, inst=LOAD_FAST(arg=2, lineno=19)
DEBUG 2024-06-11 13:39:52,065 - stack []
DEBUG 2024-06-11 13:39:52,065 - dispatch pc=70, inst=LOAD_ATTR(arg=1, lineno=19)
DEBUG 2024-06-11 13:39:52,065 - stack ['$interp_win68.13']
DEBUG 2024-06-11 13:39:52,065 - dispatch pc=80, inst=LOAD_CONST(arg=2, lineno=19)
DEBUG 2024-06-11 13:39:52,065 - stack ['$70load_attr.14']
DEBUG 2024-06-11 13:39:52,070 - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=19)
DEBUG 2024-06-11 13:39:52,070 - stack ['$70load_attr.14', '$const80.15']
DEBUG 2024-06-11 13:39:52,070 - dispatch pc=92, inst=STORE_FAST(arg=15, lineno=19)
DEBUG 2024-06-11 13:39:52,070 - stack ['$82binary_subscr.16']
DEBUG 2024-06-11 13:39:52,070 - dispatch pc=94, inst=LOAD_FAST(arg=0, lineno=20)
DEBUG 2024-06-11 13:39:52,070 - stack []
DEBUG 2024-06-11 13:39:52,070 - dispatch pc=96, inst=LOAD_ATTR(arg=1, lineno=20)
DEBUG 2024-06-11 13:39:52,070 - stack ['$x94.17']
DEBUG 2024-06-11 13:39:52,070 - dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=20)
DEBUG 2024-06-11 13:39:52,070 - stack ['$96load_attr.18']
DEBUG 2024-06-11 13:39:52,071 - dispatch pc=108, inst=BINARY_SUBSCR(arg=None, lineno=20)
DEBUG 2024-06-11 13:39:52,071 - stack ['$96load_attr.18', '$const106.19']
DEBUG 2024-06-11 13:39:52,071 - dispatch pc=118, inst=STORE_FAST(arg=16, lineno=20)
DEBUG 2024-06-11 13:39:52,071 - stack ['$108binary_subscr.20']
DEBUG 2024-06-11 13:39:52,071 - dispatch pc=120, inst=LOAD_FAST(arg=1, lineno=21)
DEBUG 2024-06-11 13:39:52,071 - stack []
DEBUG 2024-06-11 13:39:52,071 - dispatch pc=122, inst=LOAD_ATTR(arg=1, lineno=21)
DEBUG 2024-06-11 13:39:52,071 - stack ['$t_out120.21']
DEBUG 2024-06-11 13:39:52,071 - dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=21)
DEBUG 2024-06-11 13:39:52,071 - stack ['$122load_attr.22']
DEBUG 2024-06-11 13:39:52,071 - dispatch pc=134, inst=BINARY_SUBSCR(arg=None, lineno=21)
DEBUG 2024-06-11 13:39:52,071 - stack ['$122load_attr.22', '$const132.23']
DEBUG 2024-06-11 13:39:52,071 - dispatch pc=144, inst=STORE_FAST(arg=17, lineno=21)
DEBUG 2024-06-11 13:39:52,071 - stack ['$134binary_subscr.24']
DEBUG 2024-06-11 13:39:52,071 - dispatch pc=146, inst=LOAD_GLOBAL(arg=5, lineno=23)
DEBUG 2024-06-11 13:39:52,071 - stack []
DEBUG 2024-06-11 13:39:52,071 - dispatch pc=158, inst=LOAD_FAST(arg=17, lineno=23)
DEBUG 2024-06-11 13:39:52,071 - stack ['$null$146.26', '$146load_global.25']
DEBUG 2024-06-11 13:39:52,071 - dispatch pc=160, inst=PRECALL(arg=1, lineno=23)
DEBUG 2024-06-11 13:39:52,072 - stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
DEBUG 2024-06-11 13:39:52,072 - dispatch pc=164, inst=CALL(arg=1, lineno=23)
DEBUG 2024-06-11 13:39:52,072 - stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
DEBUG 2024-06-11 13:39:52,072 - dispatch pc=174, inst=GET_ITER(arg=None, lineno=23)
DEBUG 2024-06-11 13:39:52,072 - stack ['$164call.28']
DEBUG 2024-06-11 13:39:52,072 - end state. edges=[Edge(pc=176, stack=('$174get_iter.29',), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:39:52,072 - pending: deque([State(pc_initial=176 nstack_initial=1)])
DEBUG 2024-06-11 13:39:52,072 - stack: ['$phi176.0']
DEBUG 2024-06-11 13:39:52,073 - state.pc_initial: State(pc_initial=176 nstack_initial=1)
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=176, inst=NOP(arg=1, lineno=23)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi176.0']
DEBUG 2024-06-11 13:39:52,073 - end state. edges=[Edge(pc=178, stack=('$phi176.0',), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:39:52,073 - pending: deque([State(pc_initial=178 nstack_initial=1)])
DEBUG 2024-06-11 13:39:52,073 - stack: ['$phi178.0']
DEBUG 2024-06-11 13:39:52,073 - state.pc_initial: State(pc_initial=178 nstack_initial=1)
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=178, inst=FOR_ITER(arg=301, lineno=23)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi178.0']
DEBUG 2024-06-11 13:39:52,073 - end state. edges=[Edge(pc=782, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=('$phi178.0', '$178for_iter.2'), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:39:52,073 - pending: deque([State(pc_initial=782 nstack_initial=0), State(pc_initial=180 nstack_initial=2)])
DEBUG 2024-06-11 13:39:52,073 - stack: []
DEBUG 2024-06-11 13:39:52,073 - state.pc_initial: State(pc_initial=782 nstack_initial=0)
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=782, inst=LOAD_CONST(arg=0, lineno=23)
DEBUG 2024-06-11 13:39:52,073 - stack []
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=784, inst=RETURN_VALUE(arg=None, lineno=23)
DEBUG 2024-06-11 13:39:52,073 - stack ['$const782.0']
DEBUG 2024-06-11 13:39:52,073 - end state. edges=[]
DEBUG 2024-06-11 13:39:52,073 - pending: deque([State(pc_initial=180 nstack_initial=2)])
DEBUG 2024-06-11 13:39:52,073 - stack: ['$phi180.0', '$phi180.1']
DEBUG 2024-06-11 13:39:52,073 - state.pc_initial: State(pc_initial=180 nstack_initial=2)
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=180, inst=STORE_FAST(arg=18, lineno=23)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$phi180.1']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=182, inst=LOAD_FAST(arg=1, lineno=24)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=184, inst=LOAD_FAST(arg=18, lineno=24)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$t_out182.2']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=186, inst=BINARY_SUBSCR(arg=None, lineno=24)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$t_out182.2', '$t184.3']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=196, inst=STORE_FAST(arg=8, lineno=24)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$186binary_subscr.4']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=198, inst=LOAD_GLOBAL(arg=1, lineno=27)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=210, inst=LOAD_FAST(arg=8, lineno=27)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$null$198.6', '$198load_global.5']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=212, inst=PRECALL(arg=1, lineno=27)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=216, inst=CALL(arg=1, lineno=27)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=226, inst=STORE_FAST(arg=9, lineno=27)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$216call.8']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=228, inst=LOAD_FAST(arg=5, lineno=30)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=230, inst=LOAD_FAST(arg=8, lineno=30)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$scale228.9']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=232, inst=LOAD_FAST(arg=9, lineno=30)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$scale228.9', '$time_register230.10']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=234, inst=BINARY_OP(arg=10, lineno=30)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$scale228.9', '$time_register230.10', '$n232.11']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=238, inst=BINARY_OP(arg=5, lineno=30)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$scale228.9', '$binop_sub234.12']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=242, inst=STORE_FAST(arg=10, lineno=30)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$binop_mul238.13']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=244, inst=LOAD_FAST(arg=10, lineno=33)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=246, inst=LOAD_FAST(arg=4, lineno=33)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$frac244.14']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=248, inst=BINARY_OP(arg=5, lineno=33)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$frac244.14', '$num_table246.15']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=252, inst=STORE_FAST(arg=11, lineno=33)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$binop_mul248.16']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=254, inst=LOAD_GLOBAL(arg=1, lineno=34)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=266, inst=LOAD_FAST(arg=11, lineno=34)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$null$254.18', '$254load_global.17']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=268, inst=PRECALL(arg=1, lineno=34)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=272, inst=CALL(arg=1, lineno=34)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=282, inst=STORE_FAST(arg=12, lineno=34)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$272call.20']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=284, inst=LOAD_FAST(arg=11, lineno=37)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=286, inst=LOAD_FAST(arg=12, lineno=37)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$index_frac284.21']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=288, inst=BINARY_OP(arg=10, lineno=37)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$index_frac284.21', '$offset286.22']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=292, inst=STORE_FAST(arg=13, lineno=37)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$binop_sub288.23']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=294, inst=LOAD_GLOBAL(arg=7, lineno=40)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=306, inst=LOAD_FAST(arg=9, lineno=40)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$null$294.25', '$294load_global.24']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=308, inst=LOAD_CONST(arg=3, lineno=40)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=310, inst=BINARY_OP(arg=0, lineno=40)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26', '$const308.27']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=314, inst=LOAD_FAST(arg=15, lineno=40)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=316, inst=LOAD_FAST(arg=12, lineno=40)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=318, inst=BINARY_OP(arg=10, lineno=40)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29', '$offset316.30']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=322, inst=LOAD_FAST(arg=7, lineno=40)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=324, inst=BINARY_OP(arg=2, lineno=40)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31', '$index_step322.32']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=328, inst=PRECALL(arg=2, lineno=40)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=332, inst=CALL(arg=2, lineno=40)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=342, inst=STORE_FAST(arg=19, lineno=40)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$332call.34']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=344, inst=LOAD_GLOBAL(arg=9, lineno=41)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0']
DEBUG 2024-06-11 13:39:52,073 - dispatch pc=356, inst=LOAD_FAST(arg=19, lineno=41)
DEBUG 2024-06-11 13:39:52,073 - stack ['$phi180.0', '$null$344.36', '$344load_global.35']
DEBUG 2024-06-11 13:39:52,079 - dispatch pc=358, inst=PRECALL(arg=1, lineno=41)
DEBUG 2024-06-11 13:39:52,079 - stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
DEBUG 2024-06-11 13:39:52,079 - dispatch pc=362, inst=CALL(arg=1, lineno=41)
DEBUG 2024-06-11 13:39:52,079 - stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
DEBUG 2024-06-11 13:39:52,079 - dispatch pc=372, inst=GET_ITER(arg=None, lineno=41)
DEBUG 2024-06-11 13:39:52,079 - stack ['$phi180.0', '$362call.38']
DEBUG 2024-06-11 13:39:52,079 - end state. edges=[Edge(pc=374, stack=('$phi180.0', '$372get_iter.39'), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:39:52,079 - pending: deque([State(pc_initial=374 nstack_initial=2)])
DEBUG 2024-06-11 13:39:52,079 - stack: ['$phi374.0', '$phi374.1']
DEBUG 2024-06-11 13:39:52,079 - state.pc_initial: State(pc_initial=374 nstack_initial=2)
DEBUG 2024-06-11 13:39:52,079 - dispatch pc=374, inst=FOR_ITER(arg=62, lineno=41)
DEBUG 2024-06-11 13:39:52,079 - stack ['$phi374.0', '$phi374.1']
DEBUG 2024-06-11 13:39:52,079 - end state. edges=[Edge(pc=500, stack=('$phi374.0',), blockstack=(), npush=0), Edge(pc=376, stack=('$phi374.0', '$phi374.1', '$374for_iter.3'), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:39:52,079 - pending: deque([State(pc_initial=500 nstack_initial=1), State(pc_initial=376 nstack_initial=3)])
DEBUG 2024-06-11 13:39:52,079 - stack: ['$phi500.0']
DEBUG 2024-06-11 13:39:52,079 - state.pc_initial: State(pc_initial=500 nstack_initial=1)
DEBUG 2024-06-11 13:39:52,079 - dispatch pc=500, inst=LOAD_FAST(arg=5, lineno=50)
DEBUG 2024-06-11 13:39:52,079 - stack ['$phi500.0']
DEBUG 2024-06-11 13:39:52,079 - dispatch pc=502, inst=LOAD_FAST(arg=10, lineno=50)
DEBUG 2024-06-11 13:39:52,079 - stack ['$phi500.0', '$scale500.1']
DEBUG 2024-06-11 13:39:52,079 - dispatch pc=504, inst=BINARY_OP(arg=10, lineno=50)
DEBUG 2024-06-11 13:39:52,079 - stack ['$phi500.0', '$scale500.1', '$frac502.2']
DEBUG 2024-06-11 13:39:52,079 - dispatch pc=508, inst=STORE_FAST(arg=10, lineno=50)
DEBUG 2024-06-11 13:39:52,079 - stack ['$phi500.0', '$binop_sub504.3']
DEBUG 2024-06-11 13:39:52,079 - dispatch pc=510, inst=LOAD_FAST(arg=10, lineno=53)
DEBUG 2024-06-11 13:39:52,079 - stack ['$phi500.0']
DEBUG 2024-06-11 13:39:52,079 - dispatch pc=512, inst=LOAD_FAST(arg=4, lineno=53)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi500.0', '$frac510.4']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=514, inst=BINARY_OP(arg=5, lineno=53)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi500.0', '$frac510.4', '$num_table512.5']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=518, inst=STORE_FAST(arg=11, lineno=53)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi500.0', '$binop_mul514.6']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=520, inst=LOAD_GLOBAL(arg=1, lineno=54)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi500.0']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=532, inst=LOAD_FAST(arg=11, lineno=54)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi500.0', '$null$520.8', '$520load_global.7']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=534, inst=PRECALL(arg=1, lineno=54)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=538, inst=CALL(arg=1, lineno=54)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=548, inst=STORE_FAST(arg=12, lineno=54)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi500.0', '$538call.10']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=550, inst=LOAD_FAST(arg=11, lineno=57)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi500.0']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=552, inst=LOAD_FAST(arg=12, lineno=57)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi500.0', '$index_frac550.11']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=554, inst=BINARY_OP(arg=10, lineno=57)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi500.0', '$index_frac550.11', '$offset552.12']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=558, inst=STORE_FAST(arg=13, lineno=57)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi500.0', '$binop_sub554.13']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=560, inst=LOAD_GLOBAL(arg=7, lineno=60)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi500.0']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=572, inst=LOAD_FAST(arg=16, lineno=60)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi500.0', '$null$560.15', '$560load_global.14']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=574, inst=LOAD_FAST(arg=9, lineno=60)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=576, inst=BINARY_OP(arg=10, lineno=60)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16', '$n574.17']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=580, inst=LOAD_CONST(arg=3, lineno=60)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=582, inst=BINARY_OP(arg=10, lineno=60)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18', '$const580.19']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=586, inst=LOAD_FAST(arg=15, lineno=60)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=588, inst=LOAD_FAST(arg=12, lineno=60)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=590, inst=BINARY_OP(arg=10, lineno=60)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21', '$offset588.22']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=594, inst=LOAD_FAST(arg=7, lineno=60)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=596, inst=BINARY_OP(arg=2, lineno=60)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23', '$index_step594.24']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=600, inst=PRECALL(arg=2, lineno=60)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=604, inst=CALL(arg=2, lineno=60)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=614, inst=STORE_FAST(arg=21, lineno=60)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi500.0', '$604call.26']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=616, inst=LOAD_GLOBAL(arg=9, lineno=61)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi500.0']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=628, inst=LOAD_FAST(arg=21, lineno=61)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi500.0', '$null$616.28', '$616load_global.27']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=630, inst=PRECALL(arg=1, lineno=61)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=634, inst=CALL(arg=1, lineno=61)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=644, inst=GET_ITER(arg=None, lineno=61)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi500.0', '$634call.30']
DEBUG 2024-06-11 13:39:52,080 - end state. edges=[Edge(pc=646, stack=('$phi500.0', '$644get_iter.31'), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:39:52,080 - pending: deque([State(pc_initial=376 nstack_initial=3), State(pc_initial=646 nstack_initial=2)])
DEBUG 2024-06-11 13:39:52,080 - stack: ['$phi376.0', '$phi376.1', '$phi376.2']
DEBUG 2024-06-11 13:39:52,080 - state.pc_initial: State(pc_initial=376 nstack_initial=3)
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=376, inst=STORE_FAST(arg=20, lineno=41)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi376.0', '$phi376.1', '$phi376.2']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=378, inst=LOAD_FAST(arg=2, lineno=44)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi376.0', '$phi376.1']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=380, inst=LOAD_FAST(arg=12, lineno=44)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=382, inst=LOAD_FAST(arg=20, lineno=44)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=384, inst=LOAD_FAST(arg=7, lineno=44)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=386, inst=BINARY_OP(arg=5, lineno=44)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5', '$index_step384.6']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=390, inst=BINARY_OP(arg=0, lineno=44)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$binop_mul386.7']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=394, inst=BINARY_SUBSCR(arg=None, lineno=44)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$binop_add390.8']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=404, inst=LOAD_FAST(arg=13, lineno=45)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=406, inst=LOAD_FAST(arg=3, lineno=45)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=408, inst=LOAD_FAST(arg=12, lineno=45)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=410, inst=LOAD_FAST(arg=20, lineno=45)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=412, inst=LOAD_FAST(arg=7, lineno=45)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=414, inst=BINARY_OP(arg=5, lineno=45)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13', '$index_step412.14']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=418, inst=BINARY_OP(arg=0, lineno=45)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$binop_mul414.15']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=422, inst=BINARY_SUBSCR(arg=None, lineno=45)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$binop_add418.16']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=432, inst=BINARY_OP(arg=5, lineno=45)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$422binary_subscr.17']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=436, inst=BINARY_OP(arg=0, lineno=44)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$binop_mul432.18']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=440, inst=STORE_FAST(arg=14, lineno=43)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi376.0', '$phi376.1', '$binop_add436.19']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=442, inst=LOAD_FAST(arg=6, lineno=47)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi376.0', '$phi376.1']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=444, inst=LOAD_FAST(arg=18, lineno=47)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi376.0', '$phi376.1', '$y442.20']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=446, inst=COPY(arg=2, lineno=47)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=448, inst=COPY(arg=2, lineno=47)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=450, inst=BINARY_SUBSCR(arg=None, lineno=47)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20', '$t444.21']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=460, inst=LOAD_FAST(arg=14, lineno=47)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22']
DEBUG 2024-06-11 13:39:52,080 - dispatch pc=462, inst=LOAD_FAST(arg=0, lineno=47)
DEBUG 2024-06-11 13:39:52,080 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23']
DEBUG 2024-06-11 13:39:52,087 - dispatch pc=464, inst=LOAD_FAST(arg=9, lineno=47)
DEBUG 2024-06-11 13:39:52,087 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24']
DEBUG 2024-06-11 13:39:52,087 - dispatch pc=466, inst=LOAD_FAST(arg=20, lineno=47)
DEBUG 2024-06-11 13:39:52,087 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25']
DEBUG 2024-06-11 13:39:52,087 - dispatch pc=468, inst=BINARY_OP(arg=10, lineno=47)
DEBUG 2024-06-11 13:39:52,087 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25', '$i466.26']
DEBUG 2024-06-11 13:39:52,087 - dispatch pc=472, inst=BINARY_SUBSCR(arg=None, lineno=47)
DEBUG 2024-06-11 13:39:52,087 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$binop_sub468.27']
DEBUG 2024-06-11 13:39:52,088 - dispatch pc=482, inst=BINARY_OP(arg=5, lineno=47)
DEBUG 2024-06-11 13:39:52,088 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$472binary_subscr.28']
DEBUG 2024-06-11 13:39:52,088 - dispatch pc=486, inst=BINARY_OP(arg=13, lineno=47)
DEBUG 2024-06-11 13:39:52,088 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$binop_mul482.29']
DEBUG 2024-06-11 13:39:52,088 - dispatch pc=490, inst=SWAP(arg=3, lineno=47)
DEBUG 2024-06-11 13:39:52,088 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$binop_iadd486.30']
DEBUG 2024-06-11 13:39:52,088 - dispatch pc=492, inst=SWAP(arg=2, lineno=47)
DEBUG 2024-06-11 13:39:52,088 - stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$t444.21', '$y442.20']
DEBUG 2024-06-11 13:39:52,088 - dispatch pc=494, inst=STORE_SUBSCR(arg=None, lineno=47)
DEBUG 2024-06-11 13:39:52,088 - stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$y442.20', '$t444.21']
DEBUG 2024-06-11 13:39:52,088 - dispatch pc=498, inst=JUMP_BACKWARD(arg=63, lineno=47)
DEBUG 2024-06-11 13:39:52,088 - stack ['$phi376.0', '$phi376.1']
DEBUG 2024-06-11 13:39:52,088 - end state. edges=[Edge(pc=374, stack=('$phi376.0', '$phi376.1'), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:39:52,088 - pending: deque([State(pc_initial=646 nstack_initial=2), State(pc_initial=374 nstack_initial=2)])
DEBUG 2024-06-11 13:39:52,088 - stack: ['$phi646.0', '$phi646.1']
DEBUG 2024-06-11 13:39:52,088 - state.pc_initial: State(pc_initial=646 nstack_initial=2)
DEBUG 2024-06-11 13:39:52,088 - dispatch pc=646, inst=FOR_ITER(arg=65, lineno=61)
DEBUG 2024-06-11 13:39:52,088 - stack ['$phi646.0', '$phi646.1']
DEBUG 2024-06-11 13:39:52,088 - end state. edges=[Edge(pc=778, stack=('$phi646.0',), blockstack=(), npush=0), Edge(pc=648, stack=('$phi646.0', '$phi646.1', '$646for_iter.3'), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:39:52,088 - pending: deque([State(pc_initial=374 nstack_initial=2), State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
DEBUG 2024-06-11 13:39:52,088 - pending: deque([State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
DEBUG 2024-06-11 13:39:52,088 - stack: ['$phi778.0']
DEBUG 2024-06-11 13:39:52,088 - state.pc_initial: State(pc_initial=778 nstack_initial=1)
DEBUG 2024-06-11 13:39:52,088 - dispatch pc=778, inst=NOP(arg=1, lineno=61)
DEBUG 2024-06-11 13:39:52,088 - stack ['$phi778.0']
DEBUG 2024-06-11 13:39:52,088 - dispatch pc=780, inst=JUMP_BACKWARD(arg=303, lineno=61)
DEBUG 2024-06-11 13:39:52,088 - stack ['$phi778.0']
DEBUG 2024-06-11 13:39:52,088 - end state. edges=[Edge(pc=176, stack=('$phi778.0',), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:39:52,088 - pending: deque([State(pc_initial=648 nstack_initial=3), State(pc_initial=176 nstack_initial=1)])
DEBUG 2024-06-11 13:39:52,089 - stack: ['$phi648.0', '$phi648.1', '$phi648.2']
DEBUG 2024-06-11 13:39:52,089 - state.pc_initial: State(pc_initial=648 nstack_initial=3)
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=648, inst=STORE_FAST(arg=22, lineno=61)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$phi648.2']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=650, inst=LOAD_FAST(arg=2, lineno=63)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=652, inst=LOAD_FAST(arg=12, lineno=63)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=654, inst=LOAD_FAST(arg=22, lineno=63)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=656, inst=LOAD_FAST(arg=7, lineno=63)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=658, inst=BINARY_OP(arg=5, lineno=63)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5', '$index_step656.6']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=662, inst=BINARY_OP(arg=0, lineno=63)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$binop_mul658.7']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=666, inst=BINARY_SUBSCR(arg=None, lineno=63)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$binop_add662.8']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=676, inst=LOAD_FAST(arg=13, lineno=64)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=678, inst=LOAD_FAST(arg=3, lineno=64)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=680, inst=LOAD_FAST(arg=12, lineno=64)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=682, inst=LOAD_FAST(arg=22, lineno=64)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=684, inst=LOAD_FAST(arg=7, lineno=64)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=686, inst=BINARY_OP(arg=5, lineno=64)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13', '$index_step684.14']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=690, inst=BINARY_OP(arg=0, lineno=64)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$binop_mul686.15']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=694, inst=BINARY_SUBSCR(arg=None, lineno=64)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$binop_add690.16']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=704, inst=BINARY_OP(arg=5, lineno=64)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$694binary_subscr.17']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=708, inst=BINARY_OP(arg=0, lineno=63)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$binop_mul704.18']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=712, inst=STORE_FAST(arg=14, lineno=62)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$binop_add708.19']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=714, inst=LOAD_FAST(arg=6, lineno=66)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=716, inst=LOAD_FAST(arg=18, lineno=66)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$y714.20']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=718, inst=COPY(arg=2, lineno=66)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=720, inst=COPY(arg=2, lineno=66)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=722, inst=BINARY_SUBSCR(arg=None, lineno=66)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20', '$t716.21']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=732, inst=LOAD_FAST(arg=14, lineno=66)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=734, inst=LOAD_FAST(arg=0, lineno=66)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=736, inst=LOAD_FAST(arg=9, lineno=66)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=738, inst=LOAD_FAST(arg=22, lineno=66)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=740, inst=BINARY_OP(arg=0, lineno=66)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25', '$k738.26']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=744, inst=LOAD_CONST(arg=3, lineno=66)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=746, inst=BINARY_OP(arg=0, lineno=66)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27', '$const744.28']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=750, inst=BINARY_SUBSCR(arg=None, lineno=66)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add746.29']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=760, inst=BINARY_OP(arg=5, lineno=66)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$750binary_subscr.30']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=764, inst=BINARY_OP(arg=13, lineno=66)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$binop_mul760.31']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=768, inst=SWAP(arg=3, lineno=66)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$binop_iadd764.32']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=770, inst=SWAP(arg=2, lineno=66)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$t716.21', '$y714.20']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=772, inst=STORE_SUBSCR(arg=None, lineno=66)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$y714.20', '$t716.21']
DEBUG 2024-06-11 13:39:52,089 - dispatch pc=776, inst=JUMP_BACKWARD(arg=66, lineno=66)
DEBUG 2024-06-11 13:39:52,089 - stack ['$phi648.0', '$phi648.1']
DEBUG 2024-06-11 13:39:52,089 - end state. edges=[Edge(pc=646, stack=('$phi648.0', '$phi648.1'), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:39:52,089 - pending: deque([State(pc_initial=176 nstack_initial=1), State(pc_initial=646 nstack_initial=2)])
DEBUG 2024-06-11 13:39:52,089 - pending: deque([State(pc_initial=646 nstack_initial=2)])
DEBUG 2024-06-11 13:39:52,089 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 13:39:52,089 - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=1): set(),
             State(pc_initial=178 nstack_initial=1): {'$phi178.0'},
             State(pc_initial=180 nstack_initial=2): {'$phi180.1'},
             State(pc_initial=374 nstack_initial=2): {'$phi374.1'},
             State(pc_initial=376 nstack_initial=3): {'$phi376.2'},
             State(pc_initial=500 nstack_initial=1): set(),
             State(pc_initial=646 nstack_initial=2): {'$phi646.1'},
             State(pc_initial=648 nstack_initial=3): {'$phi648.2'},
             State(pc_initial=778 nstack_initial=1): set(),
             State(pc_initial=782 nstack_initial=0): set()})
DEBUG 2024-06-11 13:39:52,089 - defmap: {'$phi176.0': State(pc_initial=0 nstack_initial=0),
 '$phi180.1': State(pc_initial=178 nstack_initial=1),
 '$phi374.1': State(pc_initial=180 nstack_initial=2),
 '$phi376.2': State(pc_initial=374 nstack_initial=2),
 '$phi646.1': State(pc_initial=500 nstack_initial=1),
 '$phi648.2': State(pc_initial=646 nstack_initial=2)}
DEBUG 2024-06-11 13:39:52,089 - phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi778.0',
                            State(pc_initial=778 nstack_initial=1))},
             '$phi178.0': {('$phi176.0',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi180.0': {('$phi178.0',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$phi180.0',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.0',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.1',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi376.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.1': {('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi646.0': {('$phi500.0',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.0',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.1',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi648.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.1': {('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))}})
DEBUG 2024-06-11 13:39:52,089 - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi374.0',
                            State(pc_initial=374 nstack_initial=2)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
DEBUG 2024-06-11 13:39:52,089 - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
DEBUG 2024-06-11 13:39:52,089 - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
DEBUG 2024-06-11 13:39:52,089 - keep phismap: {'$phi178.0': {('$174get_iter.29', State(pc_initial=0 nstack_initial=0))},
 '$phi180.1': {('$178for_iter.2', State(pc_initial=178 nstack_initial=1))},
 '$phi374.1': {('$372get_iter.39', State(pc_initial=180 nstack_initial=2))},
 '$phi376.2': {('$374for_iter.3', State(pc_initial=374 nstack_initial=2))},
 '$phi646.1': {('$644get_iter.31', State(pc_initial=500 nstack_initial=1))},
 '$phi648.2': {('$646for_iter.3', State(pc_initial=646 nstack_initial=2))}}
DEBUG 2024-06-11 13:39:52,089 - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi178.0': '$174get_iter.29'},
             State(pc_initial=178 nstack_initial=1): {'$phi180.1': '$178for_iter.2'},
             State(pc_initial=180 nstack_initial=2): {'$phi374.1': '$372get_iter.39'},
             State(pc_initial=374 nstack_initial=2): {'$phi376.2': '$374for_iter.3'},
             State(pc_initial=500 nstack_initial=1): {'$phi646.1': '$644get_iter.31'},
             State(pc_initial=646 nstack_initial=2): {'$phi648.2': '$646for_iter.3'}})
DEBUG 2024-06-11 13:39:52,089 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 13:39:52,089 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$scale16.2'}), (18, {'res': '$num_table18.3'}), (20, {'op': '*', 'lhs': '$scale16.2', 'rhs': '$num_table18.3', 'res': '$binop_mul20.4'}), (22, {}), (24, {}), (26, {}), (28, {'func': '$4load_global.0', 'args': ['$binop_mul20.4'], 'kw_names': None, 'res': '$28call.5'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {'value': '$28call.5'}), (40, {'res': '$const40.6'}), (42, {'value': '$const40.6'}), (44, {'res': '$const44.7'}), (46, {'value': '$const44.7'}), (48, {'res': '$const48.8'}), (50, {'value': '$const48.8'}), (52, {'res': '$const52.9'}), (54, {'value': '$const52.9'}), (56, {'res': '$const56.10'}), (58, {'value': '$const56.10'}), (60, {'res': '$const60.11'}), (62, {'value': '$const60.11'}), (64, {'res': '$const64.12'}), (66, {'value': '$const64.12'}), (68, {'res': '$interp_win68.13'}), (70, {'item': '$interp_win68.13', 'res': '$70load_attr.14'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$const80.15'}), (82, {'index': '$const80.15', 'target': '$70load_attr.14', 'res': '$82binary_subscr.16'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82binary_subscr.16'}), (94, {'res': '$x94.17'}), (96, {'item': '$x94.17', 'res': '$96load_attr.18'}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {'res': '$const106.19'}), (108, {'index': '$const106.19', 'target': '$96load_attr.18', 'res': '$108binary_subscr.20'}), (110, {}), (112, {}), (114, {}), (116, {}), (118, {'value': '$108binary_subscr.20'}), (120, {'res': '$t_out120.21'}), (122, {'item': '$t_out120.21', 'res': '$122load_attr.22'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {'res': '$const132.23'}), (134, {'index': '$const132.23', 'target': '$122load_attr.22', 'res': '$134binary_subscr.24'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {'value': '$134binary_subscr.24'}), (146, {'idx': 2, 'res': '$146load_global.25'}), (148, {}), (150, {}), (152, {}), (154, {}), (156, {}), (158, {'res': '$n_out158.27'}), (160, {}), (162, {}), (164, {'func': '$146load_global.25', 'args': ['$n_out158.27'], 'kw_names': None, 'res': '$164call.28'}), (166, {}), (168, {}), (170, {}), (172, {}), (174, {'value': '$164call.28', 'res': '$174get_iter.29'})), outgoing_phis={'$phi178.0': '$174get_iter.29'}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$174get_iter.29',)})
DEBUG 2024-06-11 13:39:52,089 - block_infos State(pc_initial=176 nstack_initial=1):
AdaptBlockInfo(insts=((176, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={178: ('$phi176.0',)})
DEBUG 2024-06-11 13:39:52,089 - block_infos State(pc_initial=178 nstack_initial=1):
AdaptBlockInfo(insts=((178, {'iterator': '$phi178.0', 'pair': '$178for_iter.1', 'indval': '$178for_iter.2', 'pred': '$178for_iter.3'}),), outgoing_phis={'$phi180.1': '$178for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={782: (), 180: ('$phi178.0', '$178for_iter.2')})
DEBUG 2024-06-11 13:39:52,089 - block_infos State(pc_initial=180 nstack_initial=2):
AdaptBlockInfo(insts=((180, {'value': '$phi180.1'}), (182, {'res': '$t_out182.2'}), (184, {'res': '$t184.3'}), (186, {'index': '$t184.3', 'target': '$t_out182.2', 'res': '$186binary_subscr.4'}), (188, {}), (190, {}), (192, {}), (194, {}), (196, {'value': '$186binary_subscr.4'}), (198, {'idx': 0, 'res': '$198load_global.5'}), (200, {}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'res': '$time_register210.7'}), (212, {}), (214, {}), (216, {'func': '$198load_global.5', 'args': ['$time_register210.7'], 'kw_names': None, 'res': '$216call.8'}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {'value': '$216call.8'}), (228, {'res': '$scale228.9'}), (230, {'res': '$time_register230.10'}), (232, {'res': '$n232.11'}), (234, {'op': '-', 'lhs': '$time_register230.10', 'rhs': '$n232.11', 'res': '$binop_sub234.12'}), (236, {}), (238, {'op': '*', 'lhs': '$scale228.9', 'rhs': '$binop_sub234.12', 'res': '$binop_mul238.13'}), (240, {}), (242, {'value': '$binop_mul238.13'}), (244, {'res': '$frac244.14'}), (246, {'res': '$num_table246.15'}), (248, {'op': '*', 'lhs': '$frac244.14', 'rhs': '$num_table246.15', 'res': '$binop_mul248.16'}), (250, {}), (252, {'value': '$binop_mul248.16'}), (254, {'idx': 0, 'res': '$254load_global.17'}), (256, {}), (258, {}), (260, {}), (262, {}), (264, {}), (266, {'res': '$index_frac266.19'}), (268, {}), (270, {}), (272, {'func': '$254load_global.17', 'args': ['$index_frac266.19'], 'kw_names': None, 'res': '$272call.20'}), (274, {}), (276, {}), (278, {}), (280, {}), (282, {'value': '$272call.20'}), (284, {'res': '$index_frac284.21'}), (286, {'res': '$offset286.22'}), (288, {'op': '-', 'lhs': '$index_frac284.21', 'rhs': '$offset286.22', 'res': '$binop_sub288.23'}), (290, {}), (292, {'value': '$binop_sub288.23'}), (294, {'idx': 3, 'res': '$294load_global.24'}), (296, {}), (298, {}), (300, {}), (302, {}), (304, {}), (306, {'res': '$n306.26'}), (308, {'res': '$const308.27'}), (310, {'op': '+', 'lhs': '$n306.26', 'rhs': '$const308.27', 'res': '$binop_add310.28'}), (312, {}), (314, {'res': '$nwin314.29'}), (316, {'res': '$offset316.30'}), (318, {'op': '-', 'lhs': '$nwin314.29', 'rhs': '$offset316.30', 'res': '$binop_sub318.31'}), (320, {}), (322, {'res': '$index_step322.32'}), (324, {'op': '//', 'lhs': '$binop_sub318.31', 'rhs': '$index_step322.32', 'res': '$binop_floordiv324.33'}), (326, {}), (328, {}), (330, {}), (332, {'func': '$294load_global.24', 'args': ['$binop_add310.28', '$binop_floordiv324.33'], 'kw_names': None, 'res': '$332call.34'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'value': '$332call.34'}), (344, {'idx': 4, 'res': '$344load_global.35'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {}), (356, {'res': '$i_max356.37'}), (358, {}), (360, {}), (362, {'func': '$344load_global.35', 'args': ['$i_max356.37'], 'kw_names': None, 'res': '$362call.38'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {'value': '$362call.38', 'res': '$372get_iter.39'})), outgoing_phis={'$phi374.1': '$372get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi180.0', '$372get_iter.39')})
DEBUG 2024-06-11 13:39:52,089 - block_infos State(pc_initial=374 nstack_initial=2):
AdaptBlockInfo(insts=((374, {'iterator': '$phi374.1', 'pair': '$374for_iter.2', 'indval': '$374for_iter.3', 'pred': '$374for_iter.4'}),), outgoing_phis={'$phi376.2': '$374for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={500: ('$phi374.0',), 376: ('$phi374.0', '$phi374.1', '$374for_iter.3')})
DEBUG 2024-06-11 13:39:52,089 - block_infos State(pc_initial=376 nstack_initial=3):
AdaptBlockInfo(insts=((376, {'value': '$phi376.2'}), (378, {'res': '$interp_win378.3'}), (380, {'res': '$offset380.4'}), (382, {'res': '$i382.5'}), (384, {'res': '$index_step384.6'}), (386, {'op': '*', 'lhs': '$i382.5', 'rhs': '$index_step384.6', 'res': '$binop_mul386.7'}), (388, {}), (390, {'op': '+', 'lhs': '$offset380.4', 'rhs': '$binop_mul386.7', 'res': '$binop_add390.8'}), (392, {}), (394, {'index': '$binop_add390.8', 'target': '$interp_win378.3', 'res': '$394binary_subscr.9'}), (396, {}), (398, {}), (400, {}), (402, {}), (404, {'res': '$eta404.10'}), (406, {'res': '$interp_delta406.11'}), (408, {'res': '$offset408.12'}), (410, {'res': '$i410.13'}), (412, {'res': '$index_step412.14'}), (414, {'op': '*', 'lhs': '$i410.13', 'rhs': '$index_step412.14', 'res': '$binop_mul414.15'}), (416, {}), (418, {'op': '+', 'lhs': '$offset408.12', 'rhs': '$binop_mul414.15', 'res': '$binop_add418.16'}), (420, {}), (422, {'index': '$binop_add418.16', 'target': '$interp_delta406.11', 'res': '$422binary_subscr.17'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {'op': '*', 'lhs': '$eta404.10', 'rhs': '$422binary_subscr.17', 'res': '$binop_mul432.18'}), (434, {}), (436, {'op': '+', 'lhs': '$394binary_subscr.9', 'rhs': '$binop_mul432.18', 'res': '$binop_add436.19'}), (438, {}), (440, {'value': '$binop_add436.19'}), (442, {'res': '$y442.20'}), (444, {'res': '$t444.21'}), (450, {'index': '$t444.21', 'target': '$y442.20', 'res': '$450binary_subscr.22'}), (452, {}), (454, {}), (456, {}), (458, {}), (460, {'res': '$weight460.23'}), (462, {'res': '$x462.24'}), (464, {'res': '$n464.25'}), (466, {'res': '$i466.26'}), (468, {'op': '-', 'lhs': '$n464.25', 'rhs': '$i466.26', 'res': '$binop_sub468.27'}), (470, {}), (472, {'index': '$binop_sub468.27', 'target': '$x462.24', 'res': '$472binary_subscr.28'}), (474, {}), (476, {}), (478, {}), (480, {}), (482, {'op': '*', 'lhs': '$weight460.23', 'rhs': '$472binary_subscr.28', 'res': '$binop_mul482.29'}), (484, {}), (486, {'op': '+=', 'lhs': '$450binary_subscr.22', 'rhs': '$binop_mul482.29', 'res': '$binop_iadd486.30'}), (488, {}), (494, {'target': '$y442.20', 'index': '$t444.21', 'value': '$binop_iadd486.30'}), (496, {}), (498, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi376.0', '$phi376.1')})
DEBUG 2024-06-11 13:39:52,089 - block_infos State(pc_initial=500 nstack_initial=1):
AdaptBlockInfo(insts=((500, {'res': '$scale500.1'}), (502, {'res': '$frac502.2'}), (504, {'op': '-', 'lhs': '$scale500.1', 'rhs': '$frac502.2', 'res': '$binop_sub504.3'}), (506, {}), (508, {'value': '$binop_sub504.3'}), (510, {'res': '$frac510.4'}), (512, {'res': '$num_table512.5'}), (514, {'op': '*', 'lhs': '$frac510.4', 'rhs': '$num_table512.5', 'res': '$binop_mul514.6'}), (516, {}), (518, {'value': '$binop_mul514.6'}), (520, {'idx': 0, 'res': '$520load_global.7'}), (522, {}), (524, {}), (526, {}), (528, {}), (530, {}), (532, {'res': '$index_frac532.9'}), (534, {}), (536, {}), (538, {'func': '$520load_global.7', 'args': ['$index_frac532.9'], 'kw_names': None, 'res': '$538call.10'}), (540, {}), (542, {}), (544, {}), (546, {}), (548, {'value': '$538call.10'}), (550, {'res': '$index_frac550.11'}), (552, {'res': '$offset552.12'}), (554, {'op': '-', 'lhs': '$index_frac550.11', 'rhs': '$offset552.12', 'res': '$binop_sub554.13'}), (556, {}), (558, {'value': '$binop_sub554.13'}), (560, {'idx': 3, 'res': '$560load_global.14'}), (562, {}), (564, {}), (566, {}), (568, {}), (570, {}), (572, {'res': '$n_orig572.16'}), (574, {'res': '$n574.17'}), (576, {'op': '-', 'lhs': '$n_orig572.16', 'rhs': '$n574.17', 'res': '$binop_sub576.18'}), (578, {}), (580, {'res': '$const580.19'}), (582, {'op': '-', 'lhs': '$binop_sub576.18', 'rhs': '$const580.19', 'res': '$binop_sub582.20'}), (584, {}), (586, {'res': '$nwin586.21'}), (588, {'res': '$offset588.22'}), (590, {'op': '-', 'lhs': '$nwin586.21', 'rhs': '$offset588.22', 'res': '$binop_sub590.23'}), (592, {}), (594, {'res': '$index_step594.24'}), (596, {'op': '//', 'lhs': '$binop_sub590.23', 'rhs': '$index_step594.24', 'res': '$binop_floordiv596.25'}), (598, {}), (600, {}), (602, {}), (604, {'func': '$560load_global.14', 'args': ['$binop_sub582.20', '$binop_floordiv596.25'], 'kw_names': None, 'res': '$604call.26'}), (606, {}), (608, {}), (610, {}), (612, {}), (614, {'value': '$604call.26'}), (616, {'idx': 4, 'res': '$616load_global.27'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {}), (628, {'res': '$k_max628.29'}), (630, {}), (632, {}), (634, {'func': '$616load_global.27', 'args': ['$k_max628.29'], 'kw_names': None, 'res': '$634call.30'}), (636, {}), (638, {}), (640, {}), (642, {}), (644, {'value': '$634call.30', 'res': '$644get_iter.31'})), outgoing_phis={'$phi646.1': '$644get_iter.31'}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi500.0', '$644get_iter.31')})
DEBUG 2024-06-11 13:39:52,095 - block_infos State(pc_initial=646 nstack_initial=2):
AdaptBlockInfo(insts=((646, {'iterator': '$phi646.1', 'pair': '$646for_iter.2', 'indval': '$646for_iter.3', 'pred': '$646for_iter.4'}),), outgoing_phis={'$phi648.2': '$646for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={778: ('$phi646.0',), 648: ('$phi646.0', '$phi646.1', '$646for_iter.3')})
DEBUG 2024-06-11 13:39:52,095 - block_infos State(pc_initial=648 nstack_initial=3):
AdaptBlockInfo(insts=((648, {'value': '$phi648.2'}), (650, {'res': '$interp_win650.3'}), (652, {'res': '$offset652.4'}), (654, {'res': '$k654.5'}), (656, {'res': '$index_step656.6'}), (658, {'op': '*', 'lhs': '$k654.5', 'rhs': '$index_step656.6', 'res': '$binop_mul658.7'}), (660, {}), (662, {'op': '+', 'lhs': '$offset652.4', 'rhs': '$binop_mul658.7', 'res': '$binop_add662.8'}), (664, {}), (666, {'index': '$binop_add662.8', 'target': '$interp_win650.3', 'res': '$666binary_subscr.9'}), (668, {}), (670, {}), (672, {}), (674, {}), (676, {'res': '$eta676.10'}), (678, {'res': '$interp_delta678.11'}), (680, {'res': '$offset680.12'}), (682, {'res': '$k682.13'}), (684, {'res': '$index_step684.14'}), (686, {'op': '*', 'lhs': '$k682.13', 'rhs': '$index_step684.14', 'res': '$binop_mul686.15'}), (688, {}), (690, {'op': '+', 'lhs': '$offset680.12', 'rhs': '$binop_mul686.15', 'res': '$binop_add690.16'}), (692, {}), (694, {'index': '$binop_add690.16', 'target': '$interp_delta678.11', 'res': '$694binary_subscr.17'}), (696, {}), (698, {}), (700, {}), (702, {}), (704, {'op': '*', 'lhs': '$eta676.10', 'rhs': '$694binary_subscr.17', 'res': '$binop_mul704.18'}), (706, {}), (708, {'op': '+', 'lhs': '$666binary_subscr.9', 'rhs': '$binop_mul704.18', 'res': '$binop_add708.19'}), (710, {}), (712, {'value': '$binop_add708.19'}), (714, {'res': '$y714.20'}), (716, {'res': '$t716.21'}), (722, {'index': '$t716.21', 'target': '$y714.20', 'res': '$722binary_subscr.22'}), (724, {}), (726, {}), (728, {}), (730, {}), (732, {'res': '$weight732.23'}), (734, {'res': '$x734.24'}), (736, {'res': '$n736.25'}), (738, {'res': '$k738.26'}), (740, {'op': '+', 'lhs': '$n736.25', 'rhs': '$k738.26', 'res': '$binop_add740.27'}), (742, {}), (744, {'res': '$const744.28'}), (746, {'op': '+', 'lhs': '$binop_add740.27', 'rhs': '$const744.28', 'res': '$binop_add746.29'}), (748, {}), (750, {'index': '$binop_add746.29', 'target': '$x734.24', 'res': '$750binary_subscr.30'}), (752, {}), (754, {}), (756, {}), (758, {}), (760, {'op': '*', 'lhs': '$weight732.23', 'rhs': '$750binary_subscr.30', 'res': '$binop_mul760.31'}), (762, {}), (764, {'op': '+=', 'lhs': '$722binary_subscr.22', 'rhs': '$binop_mul760.31', 'res': '$binop_iadd764.32'}), (766, {}), (772, {'target': '$y714.20', 'index': '$t716.21', 'value': '$binop_iadd764.32'}), (774, {}), (776, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi648.0', '$phi648.1')})
DEBUG 2024-06-11 13:39:52,096 - block_infos State(pc_initial=778 nstack_initial=1):
AdaptBlockInfo(insts=((778, {}), (780, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$phi778.0',)})
DEBUG 2024-06-11 13:39:52,096 - block_infos State(pc_initial=782 nstack_initial=0):
AdaptBlockInfo(insts=((782, {'res': '$const782.0'}), (784, {'retval': '$const782.0', 'castval': '$784return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 13:39:52,097 - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(int: <class 'int'>) ['$4load_global.0']
    $binop_mul20.4 = scale * num_table       ['$binop_mul20.4', 'num_table', 'scale']
    index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_global.0', '$binop_mul20.4', 'index_step']
    time_register = const(float, 0.0)        ['time_register']
    n = const(int, 0)                        ['n']
    frac = const(float, 0.0)                 ['frac']
    index_frac = const(float, 0.0)           ['index_frac']
    offset = const(int, 0)                   ['offset']
    eta = const(float, 0.0)                  ['eta']
    weight = const(float, 0.0)               ['weight']
    $70load_attr.14 = getattr(value=interp_win, attr=shape) ['$70load_attr.14', 'interp_win']
    $const80.15 = const(int, 0)              ['$const80.15']
    nwin = getitem(value=$70load_attr.14, index=$const80.15, fn=<built-in function getitem>) ['$70load_attr.14', '$const80.15', 'nwin']
    $96load_attr.18 = getattr(value=x, attr=shape) ['$96load_attr.18', 'x']
    $const106.19 = const(int, 0)             ['$const106.19']
    n_orig = getitem(value=$96load_attr.18, index=$const106.19, fn=<built-in function getitem>) ['$96load_attr.18', '$const106.19', 'n_orig']
    $122load_attr.22 = getattr(value=t_out, attr=shape) ['$122load_attr.22', 't_out']
    $const132.23 = const(int, 0)             ['$const132.23']
    n_out = getitem(value=$122load_attr.22, index=$const132.23, fn=<built-in function getitem>) ['$122load_attr.22', '$const132.23', 'n_out']
    $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>) ['$146load_global.25']
    $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None) ['$146load_global.25', '$164call.28', 'n_out']
    $174get_iter.29 = getiter(value=$164call.28) ['$164call.28', '$174get_iter.29']
    $phi178.0 = $174get_iter.29              ['$174get_iter.29', '$phi178.0']
    jump 176                                 []
label 176:
    jump 178                                 []
label 178:
    $178for_iter.1 = iternext(value=$phi178.0) ['$178for_iter.1', '$phi178.0']
    $178for_iter.2 = pair_first(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.2']
    $178for_iter.3 = pair_second(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.3']
    $phi180.1 = $178for_iter.2               ['$178for_iter.2', '$phi180.1']
    branch $178for_iter.3, 180, 782          ['$178for_iter.3']
label 180:
    t = $phi180.1                            ['$phi180.1', 't']
    time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>) ['t', 't_out', 'time_register']
    $198load_global.5 = global(int: <class 'int'>) ['$198load_global.5']
    n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None) ['$198load_global.5', 'n', 'time_register']
    $binop_sub234.12 = time_register - n     ['$binop_sub234.12', 'n', 'time_register']
    frac = scale * $binop_sub234.12          ['$binop_sub234.12', 'frac', 'scale']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $254load_global.17 = global(int: <class 'int'>) ['$254load_global.17']
    offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$254load_global.17', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $294load_global.24 = global(min: <built-in function min>) ['$294load_global.24']
    $const308.27 = const(int, 1)             ['$const308.27']
    $binop_add310.28 = n + $const308.27      ['$binop_add310.28', '$const308.27', 'n']
    $binop_sub318.31 = nwin - offset         ['$binop_sub318.31', 'nwin', 'offset']
    $binop_floordiv324.33 = $binop_sub318.31 // index_step ['$binop_floordiv324.33', '$binop_sub318.31', 'index_step']
    i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33', 'i_max']
    $344load_global.35 = global(range: <class 'range'>) ['$344load_global.35']
    $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$344load_global.35', '$362call.38', 'i_max']
    $372get_iter.39 = getiter(value=$362call.38) ['$362call.38', '$372get_iter.39']
    $phi374.1 = $372get_iter.39              ['$372get_iter.39', '$phi374.1']
    jump 374                                 []
label 374:
    $374for_iter.2 = iternext(value=$phi374.1) ['$374for_iter.2', '$phi374.1']
    $374for_iter.3 = pair_first(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.3']
    $374for_iter.4 = pair_second(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.4']
    $phi376.2 = $374for_iter.3               ['$374for_iter.3', '$phi376.2']
    branch $374for_iter.4, 376, 500          ['$374for_iter.4']
label 376:
    i = $phi376.2                            ['$phi376.2', 'i']
    $binop_mul386.7 = i * index_step         ['$binop_mul386.7', 'i', 'index_step']
    $binop_add390.8 = offset + $binop_mul386.7 ['$binop_add390.8', '$binop_mul386.7', 'offset']
    $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>) ['$394binary_subscr.9', '$binop_add390.8', 'interp_win']
    $binop_mul414.15 = i * index_step        ['$binop_mul414.15', 'i', 'index_step']
    $binop_add418.16 = offset + $binop_mul414.15 ['$binop_add418.16', '$binop_mul414.15', 'offset']
    $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>) ['$422binary_subscr.17', '$binop_add418.16', 'interp_delta']
    $binop_mul432.18 = eta * $422binary_subscr.17 ['$422binary_subscr.17', '$binop_mul432.18', 'eta']
    weight = $394binary_subscr.9 + $binop_mul432.18 ['$394binary_subscr.9', '$binop_mul432.18', 'weight']
    $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$450binary_subscr.22', 't', 'y']
    $binop_sub468.27 = n - i                 ['$binop_sub468.27', 'i', 'n']
    $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>) ['$472binary_subscr.28', '$binop_sub468.27', 'x']
    $binop_mul482.29 = weight * $472binary_subscr.28 ['$472binary_subscr.28', '$binop_mul482.29', 'weight']
    $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined) ['$450binary_subscr.22', '$binop_iadd486.30', '$binop_mul482.29']
    y[t] = $binop_iadd486.30                 ['$binop_iadd486.30', 't', 'y']
    jump 374                                 []
label 500:
    $binop_sub504.3 = scale - frac           ['$binop_sub504.3', 'frac', 'scale']
    frac = $binop_sub504.3                   ['$binop_sub504.3', 'frac']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $520load_global.7 = global(int: <class 'int'>) ['$520load_global.7']
    offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$520load_global.7', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $560load_global.14 = global(min: <built-in function min>) ['$560load_global.14']
    $binop_sub576.18 = n_orig - n            ['$binop_sub576.18', 'n', 'n_orig']
    $const580.19 = const(int, 1)             ['$const580.19']
    $binop_sub582.20 = $binop_sub576.18 - $const580.19 ['$binop_sub576.18', '$binop_sub582.20', '$const580.19']
    $binop_sub590.23 = nwin - offset         ['$binop_sub590.23', 'nwin', 'offset']
    $binop_floordiv596.25 = $binop_sub590.23 // index_step ['$binop_floordiv596.25', '$binop_sub590.23', 'index_step']
    k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$560load_global.14', '$binop_floordiv596.25', '$binop_sub582.20', 'k_max']
    $616load_global.27 = global(range: <class 'range'>) ['$616load_global.27']
    $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$616load_global.27', '$634call.30', 'k_max']
    $644get_iter.31 = getiter(value=$634call.30) ['$634call.30', '$644get_iter.31']
    $phi646.1 = $644get_iter.31              ['$644get_iter.31', '$phi646.1']
    jump 646                                 []
label 646:
    $646for_iter.2 = iternext(value=$phi646.1) ['$646for_iter.2', '$phi646.1']
    $646for_iter.3 = pair_first(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.3']
    $646for_iter.4 = pair_second(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.4']
    $phi648.2 = $646for_iter.3               ['$646for_iter.3', '$phi648.2']
    branch $646for_iter.4, 648, 778          ['$646for_iter.4']
label 648:
    k = $phi648.2                            ['$phi648.2', 'k']
    $binop_mul658.7 = k * index_step         ['$binop_mul658.7', 'index_step', 'k']
    $binop_add662.8 = offset + $binop_mul658.7 ['$binop_add662.8', '$binop_mul658.7', 'offset']
    $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>) ['$666binary_subscr.9', '$binop_add662.8', 'interp_win']
    $binop_mul686.15 = k * index_step        ['$binop_mul686.15', 'index_step', 'k']
    $binop_add690.16 = offset + $binop_mul686.15 ['$binop_add690.16', '$binop_mul686.15', 'offset']
    $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>) ['$694binary_subscr.17', '$binop_add690.16', 'interp_delta']
    $binop_mul704.18 = eta * $694binary_subscr.17 ['$694binary_subscr.17', '$binop_mul704.18', 'eta']
    weight = $666binary_subscr.9 + $binop_mul704.18 ['$666binary_subscr.9', '$binop_mul704.18', 'weight']
    $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$722binary_subscr.22', 't', 'y']
    $binop_add740.27 = n + k                 ['$binop_add740.27', 'k', 'n']
    $const744.28 = const(int, 1)             ['$const744.28']
    $binop_add746.29 = $binop_add740.27 + $const744.28 ['$binop_add740.27', '$binop_add746.29', '$const744.28']
    $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>) ['$750binary_subscr.30', '$binop_add746.29', 'x']
    $binop_mul760.31 = weight * $750binary_subscr.30 ['$750binary_subscr.30', '$binop_mul760.31', 'weight']
    $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined) ['$722binary_subscr.22', '$binop_iadd764.32', '$binop_mul760.31']
    y[t] = $binop_iadd764.32                 ['$binop_iadd764.32', 't', 'y']
    jump 646                                 []
label 778:
    jump 176                                 []
label 782:
    $const782.0 = const(NoneType, None)      ['$const782.0']
    $784return_value.1 = cast(value=$const782.0) ['$784return_value.1', '$const782.0']
    return $784return_value.1                ['$784return_value.1']

DEBUG 2024-06-11 13:39:52,122 - ==== SSA block analysis pass on 0
DEBUG 2024-06-11 13:39:52,122 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000021E847AEFD0>
DEBUG 2024-06-11 13:39:52,122 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:39:52,122 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:39:52,122 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:39:52,122 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:39:52,122 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:39:52,122 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:39:52,122 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:39:52,122 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,122 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:39:52,122 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,122 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,122 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:39:52,122 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,122 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,122 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:39:52,122 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,122 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,122 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:39:52,122 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:39:52,122 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,122 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:39:52,122 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:39:52,122 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,122 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:39:52,122 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:39:52,122 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,122 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:39:52,122 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,122 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:39:52,122 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:39:52,122 - on stmt: jump 176
DEBUG 2024-06-11 13:39:52,122 - ==== SSA block analysis pass on 176
DEBUG 2024-06-11 13:39:52,122 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000021E847AEFD0>
DEBUG 2024-06-11 13:39:52,122 - on stmt: jump 178
DEBUG 2024-06-11 13:39:52,122 - ==== SSA block analysis pass on 178
DEBUG 2024-06-11 13:39:52,122 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000021E847AEFD0>
DEBUG 2024-06-11 13:39:52,122 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:39:52,122 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:39:52,122 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:39:52,122 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:39:52,122 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:39:52,122 - ==== SSA block analysis pass on 180
DEBUG 2024-06-11 13:39:52,122 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000021E847AEFD0>
DEBUG 2024-06-11 13:39:52,122 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:39:52,122 - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,122 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,122 - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,122 - on stmt: $binop_sub234.12 = time_register - n
DEBUG 2024-06-11 13:39:52,122 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 13:39:52,122 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:39:52,122 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,122 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,122 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:39:52,122 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:39:52,122 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:39:52,122 - on stmt: $binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 13:39:52,122 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:39:52,122 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:39:52,122 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,122 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:39:52,122 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,122 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:39:52,122 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:39:52,122 - on stmt: jump 374
DEBUG 2024-06-11 13:39:52,122 - ==== SSA block analysis pass on 374
DEBUG 2024-06-11 13:39:52,122 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000021E847AEFD0>
DEBUG 2024-06-11 13:39:52,122 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:39:52,122 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:39:52,122 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:39:52,122 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:39:52,122 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:39:52,122 - ==== SSA block analysis pass on 376
DEBUG 2024-06-11 13:39:52,122 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000021E847AEFD0>
DEBUG 2024-06-11 13:39:52,122 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:39:52,122 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:39:52,122 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:39:52,122 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,122 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:39:52,122 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:39:52,122 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,122 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:39:52,122 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:39:52,122 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,122 - on stmt: $binop_sub468.27 = n - i
DEBUG 2024-06-11 13:39:52,122 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,122 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:39:52,128 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:39:52,128 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:39:52,128 - on stmt: jump 374
DEBUG 2024-06-11 13:39:52,128 - ==== SSA block analysis pass on 500
DEBUG 2024-06-11 13:39:52,128 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000021E847AEFD0>
DEBUG 2024-06-11 13:39:52,128 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 13:39:52,128 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 13:39:52,128 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:39:52,128 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,128 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,128 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:39:52,129 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:39:52,129 - on stmt: $binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 13:39:52,129 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:39:52,129 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:39:52,129 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:39:52,129 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:39:52,129 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,129 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:39:52,129 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,129 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:39:52,129 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:39:52,129 - on stmt: jump 646
DEBUG 2024-06-11 13:39:52,129 - ==== SSA block analysis pass on 646
DEBUG 2024-06-11 13:39:52,129 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000021E847AEFD0>
DEBUG 2024-06-11 13:39:52,129 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:39:52,129 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:39:52,129 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:39:52,129 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:39:52,129 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:39:52,129 - ==== SSA block analysis pass on 648
DEBUG 2024-06-11 13:39:52,129 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000021E847AEFD0>
DEBUG 2024-06-11 13:39:52,129 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:39:52,129 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:39:52,129 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:39:52,129 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,129 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:39:52,129 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:39:52,129 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,129 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:39:52,129 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:39:52,129 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,129 - on stmt: $binop_add740.27 = n + k
DEBUG 2024-06-11 13:39:52,131 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:39:52,131 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:39:52,131 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,131 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:39:52,131 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:39:52,131 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:39:52,131 - on stmt: jump 646
DEBUG 2024-06-11 13:39:52,131 - ==== SSA block analysis pass on 778
DEBUG 2024-06-11 13:39:52,131 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000021E847AEFD0>
DEBUG 2024-06-11 13:39:52,131 - on stmt: jump 176
DEBUG 2024-06-11 13:39:52,131 - ==== SSA block analysis pass on 782
DEBUG 2024-06-11 13:39:52,131 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000021E847AEFD0>
DEBUG 2024-06-11 13:39:52,131 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:39:52,131 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:39:52,131 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:39:52,131 - defs defaultdict(<class 'list'>,
            {'$122load_attr.22': [(<numba.core.ir.Assign object at 0x0000021E847AD050>,
                                   0)],
             '$146load_global.25': [(<numba.core.ir.Assign object at 0x0000021E847ACA10>,
                                     0)],
             '$164call.28': [(<numba.core.ir.Assign object at 0x0000021E847AC210>,
                              0)],
             '$174get_iter.29': [(<numba.core.ir.Assign object at 0x0000021E847AD290>,
                                  0)],
             '$178for_iter.1': [(<numba.core.ir.Assign object at 0x0000021E847AD2D0>,
                                 178)],
             '$178for_iter.2': [(<numba.core.ir.Assign object at 0x0000021E847AE6D0>,
                                 178)],
             '$178for_iter.3': [(<numba.core.ir.Assign object at 0x0000021E8349A390>,
                                 178)],
             '$198load_global.5': [(<numba.core.ir.Assign object at 0x0000021E847A3CD0>,
                                    180)],
             '$254load_global.17': [(<numba.core.ir.Assign object at 0x0000021E847A1450>,
                                     180)],
             '$294load_global.24': [(<numba.core.ir.Assign object at 0x0000021E847A1610>,
                                     180)],
             '$344load_global.35': [(<numba.core.ir.Assign object at 0x0000021E847B3750>,
                                     180)],
             '$362call.38': [(<numba.core.ir.Assign object at 0x0000021E847B3350>,
                              180)],
             '$372get_iter.39': [(<numba.core.ir.Assign object at 0x0000021E847B0B50>,
                                  180)],
             '$374for_iter.2': [(<numba.core.ir.Assign object at 0x0000021E847A29D0>,
                                 374)],
             '$374for_iter.3': [(<numba.core.ir.Assign object at 0x0000021E847A23D0>,
                                 374)],
             '$374for_iter.4': [(<numba.core.ir.Assign object at 0x0000021E847A1F90>,
                                 374)],
             '$394binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000021E847B1CD0>,
                                      376)],
             '$422binary_subscr.17': [(<numba.core.ir.Assign object at 0x0000021E847B0110>,
                                       376)],
             '$450binary_subscr.22': [(<numba.core.ir.Assign object at 0x0000021E847B3FD0>,
                                       376)],
             '$472binary_subscr.28': [(<numba.core.ir.Assign object at 0x0000021E84796650>,
                                       376)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000021E84808890>,
                                  0)],
             '$520load_global.7': [(<numba.core.ir.Assign object at 0x0000021E84796690>,
                                    500)],
             '$560load_global.14': [(<numba.core.ir.Assign object at 0x0000021E847B7150>,
                                     500)],
             '$616load_global.27': [(<numba.core.ir.Assign object at 0x0000021E847B4690>,
                                     500)],
             '$634call.30': [(<numba.core.ir.Assign object at 0x0000021E847B4810>,
                              500)],
             '$644get_iter.31': [(<numba.core.ir.Assign object at 0x0000021E847B40D0>,
                                  500)],
             '$646for_iter.2': [(<numba.core.ir.Assign object at 0x0000021E847B77D0>,
                                 646)],
             '$646for_iter.3': [(<numba.core.ir.Assign object at 0x0000021E847B6E50>,
                                 646)],
             '$646for_iter.4': [(<numba.core.ir.Assign object at 0x0000021E847B4CD0>,
                                 646)],
             '$666binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000021E847B5B90>,
                                      648)],
             '$694binary_subscr.17': [(<numba.core.ir.Assign object at 0x0000021E847BE110>,
                                       648)],
             '$70load_attr.14': [(<numba.core.ir.Assign object at 0x0000021E847AD150>,
                                  0)],
             '$722binary_subscr.22': [(<numba.core.ir.Assign object at 0x0000021E847BE4D0>,
                                       648)],
             '$750binary_subscr.30': [(<numba.core.ir.Assign object at 0x0000021E847BD8D0>,
                                       648)],
             '$784return_value.1': [(<numba.core.ir.Assign object at 0x0000021E847BE650>,
                                     782)],
             '$96load_attr.18': [(<numba.core.ir.Assign object at 0x0000021E847AD9D0>,
                                  0)],
             '$binop_add310.28': [(<numba.core.ir.Assign object at 0x0000021E847A3150>,
                                   180)],
             '$binop_add390.8': [(<numba.core.ir.Assign object at 0x0000021E847B1B10>,
                                  376)],
             '$binop_add418.16': [(<numba.core.ir.Assign object at 0x0000021E847B0C50>,
                                   376)],
             '$binop_add662.8': [(<numba.core.ir.Assign object at 0x0000021E847B72D0>,
                                  648)],
             '$binop_add690.16': [(<numba.core.ir.Assign object at 0x0000021E847BC490>,
                                   648)],
             '$binop_add740.27': [(<numba.core.ir.Assign object at 0x0000021E847BE090>,
                                   648)],
             '$binop_add746.29': [(<numba.core.ir.Assign object at 0x0000021E847BD590>,
                                   648)],
             '$binop_floordiv324.33': [(<numba.core.ir.Assign object at 0x0000021E847B3C90>,
                                        180)],
             '$binop_floordiv596.25': [(<numba.core.ir.Assign object at 0x0000021E847B4B50>,
                                        500)],
             '$binop_iadd486.30': [(<numba.core.ir.Assign object at 0x0000021E847964D0>,
                                    376)],
             '$binop_iadd764.32': [(<numba.core.ir.Assign object at 0x0000021E847BC9D0>,
                                    648)],
             '$binop_mul20.4': [(<numba.core.ir.Assign object at 0x0000021E847EBE90>,
                                 0)],
             '$binop_mul386.7': [(<numba.core.ir.Assign object at 0x0000021E847B2150>,
                                  376)],
             '$binop_mul414.15': [(<numba.core.ir.Assign object at 0x0000021E847B1110>,
                                   376)],
             '$binop_mul432.18': [(<numba.core.ir.Assign object at 0x0000021E847B08D0>,
                                   376)],
             '$binop_mul482.29': [(<numba.core.ir.Assign object at 0x0000021E84797F50>,
                                   376)],
             '$binop_mul658.7': [(<numba.core.ir.Assign object at 0x0000021E847B6B10>,
                                  648)],
             '$binop_mul686.15': [(<numba.core.ir.Assign object at 0x0000021E847BE190>,
                                   648)],
             '$binop_mul704.18': [(<numba.core.ir.Assign object at 0x0000021E847BC5D0>,
                                   648)],
             '$binop_mul760.31': [(<numba.core.ir.Assign object at 0x0000021E847BCC10>,
                                   648)],
             '$binop_sub234.12': [(<numba.core.ir.Assign object at 0x0000021E847A2650>,
                                   180)],
             '$binop_sub318.31': [(<numba.core.ir.Assign object at 0x0000021E847B2C90>,
                                   180)],
             '$binop_sub468.27': [(<numba.core.ir.Assign object at 0x0000021E84797AD0>,
                                   376)],
             '$binop_sub504.3': [(<numba.core.ir.Assign object at 0x0000021E847B04D0>,
                                  500)],
             '$binop_sub576.18': [(<numba.core.ir.Assign object at 0x0000021E847B6050>,
                                   500)],
             '$binop_sub582.20': [(<numba.core.ir.Assign object at 0x0000021E847B4F50>,
                                   500)],
             '$binop_sub590.23': [(<numba.core.ir.Assign object at 0x0000021E847B50D0>,
                                   500)],
             '$const106.19': [(<numba.core.ir.Assign object at 0x0000021E847AD990>,
                               0)],
             '$const132.23': [(<numba.core.ir.Assign object at 0x0000021E847AD010>,
                               0)],
             '$const308.27': [(<numba.core.ir.Assign object at 0x0000021E847A1A50>,
                               180)],
             '$const580.19': [(<numba.core.ir.Assign object at 0x0000021E847B5F50>,
                               500)],
             '$const744.28': [(<numba.core.ir.Assign object at 0x0000021E847BDF90>,
                               648)],
             '$const782.0': [(<numba.core.ir.Assign object at 0x0000021E847BFC10>,
                              782)],
             '$const80.15': [(<numba.core.ir.Assign object at 0x0000021E847AEF90>,
                              0)],
             '$phi178.0': [(<numba.core.ir.Assign object at 0x0000021E847EB7D0>,
                            0)],
             '$phi180.1': [(<numba.core.ir.Assign object at 0x0000021E848084D0>,
                            178)],
             '$phi374.1': [(<numba.core.ir.Assign object at 0x0000021E847FD250>,
                            180)],
             '$phi376.2': [(<numba.core.ir.Assign object at 0x0000021E847A1950>,
                            374)],
             '$phi646.1': [(<numba.core.ir.Assign object at 0x0000021E847B0250>,
                            500)],
             '$phi648.2': [(<numba.core.ir.Assign object at 0x0000021E847B4A10>,
                            646)],
             'eta': [(<numba.core.ir.Assign object at 0x0000021E847AE490>, 0),
                     (<numba.core.ir.Assign object at 0x0000021E847A0610>, 180),
                     (<numba.core.ir.Assign object at 0x0000021E847B79D0>,
                      500)],
             'frac': [(<numba.core.ir.Assign object at 0x0000021E847AF3D0>, 0),
                      (<numba.core.ir.Assign object at 0x0000021E847A2350>,
                       180),
                      (<numba.core.ir.Assign object at 0x0000021E847B2450>,
                       500)],
             'i': [(<numba.core.ir.Assign object at 0x0000021E847A35D0>, 376)],
             'i_max': [(<numba.core.ir.Assign object at 0x0000021E847B3990>,
                        180)],
             'index_frac': [(<numba.core.ir.Assign object at 0x0000021E847AFDD0>,
                             0),
                            (<numba.core.ir.Assign object at 0x0000021E847A27D0>,
                             180),
                            (<numba.core.ir.Assign object at 0x0000021E84797090>,
                             500)],
             'index_step': [(<numba.core.ir.Assign object at 0x0000021E847AFB90>,
                             0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x0000021E847FBC50>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x0000021E847F8110>,
                             0)],
             'k': [(<numba.core.ir.Assign object at 0x0000021E847B6510>, 648)],
             'k_max': [(<numba.core.ir.Assign object at 0x0000021E847B5310>,
                        500)],
             'n': [(<numba.core.ir.Assign object at 0x0000021E847AFC90>, 0),
                   (<numba.core.ir.Assign object at 0x0000021E847A2DD0>, 180)],
             'n_orig': [(<numba.core.ir.Assign object at 0x0000021E847D12D0>,
                         0)],
             'n_out': [(<numba.core.ir.Assign object at 0x0000021E847D28D0>,
                        0)],
             'num_table': [(<numba.core.ir.Assign object at 0x0000021E847FA710>,
                            0)],
             'nwin': [(<numba.core.ir.Assign object at 0x0000021E847B11D0>, 0)],
             'offset': [(<numba.core.ir.Assign object at 0x0000021E847AE7D0>,
                         0),
                        (<numba.core.ir.Assign object at 0x0000021E847A07D0>,
                         180),
                        (<numba.core.ir.Assign object at 0x0000021E847B6DD0>,
                         500)],
             'scale': [(<numba.core.ir.Assign object at 0x0000021E84803050>,
                        0)],
             't': [(<numba.core.ir.Assign object at 0x0000021E847A0150>, 180)],
             't_out': [(<numba.core.ir.Assign object at 0x0000021E847FBE90>,
                        0)],
             'time_register': [(<numba.core.ir.Assign object at 0x0000021E847AF090>,
                                0),
                               (<numba.core.ir.Assign object at 0x0000021E847A3550>,
                                180)],
             'weight': [(<numba.core.ir.Assign object at 0x0000021E847AD3D0>,
                         0),
                        (<numba.core.ir.Assign object at 0x0000021E847B07D0>,
                         376),
                        (<numba.core.ir.Assign object at 0x0000021E847BE050>,
                         648)],
             'x': [(<numba.core.ir.Assign object at 0x0000021E847F81D0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000021E84803310>, 0)]})
DEBUG 2024-06-11 13:39:52,131 - SSA violators <numba.core.utils.OrderedSet object at 0x0000021E847D0A50>
DEBUG 2024-06-11 13:39:52,131 - Fix SSA violator on var time_register
DEBUG 2024-06-11 13:39:52,131 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:39:52,131 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847DF390>
DEBUG 2024-06-11 13:39:52,131 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:39:52,131 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:39:52,131 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:39:52,131 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:39:52,131 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:39:52,131 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:39:52,131 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:39:52,131 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,131 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:39:52,131 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,131 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,131 - first assign: time_register
DEBUG 2024-06-11 13:39:52,131 - replaced with: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,131 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:39:52,131 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,131 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,131 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:39:52,131 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,131 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,131 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:39:52,131 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:39:52,131 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,131 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:39:52,131 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:39:52,131 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,131 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:39:52,131 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:39:52,131 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,131 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:39:52,131 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,131 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:39:52,131 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:39:52,131 - on stmt: jump 176
DEBUG 2024-06-11 13:39:52,131 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:39:52,131 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847DF390>
DEBUG 2024-06-11 13:39:52,137 - on stmt: jump 178
DEBUG 2024-06-11 13:39:52,137 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:39:52,137 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847DF390>
DEBUG 2024-06-11 13:39:52,137 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:39:52,137 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:39:52,137 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:39:52,137 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:39:52,137 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:39:52,137 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:39:52,138 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847DF390>
DEBUG 2024-06-11 13:39:52,138 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:39:52,138 - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,138 - replaced with: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,138 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,138 - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,138 - on stmt: $binop_sub234.12 = time_register - n
DEBUG 2024-06-11 13:39:52,138 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 13:39:52,138 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:39:52,138 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,138 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,138 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:39:52,138 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:39:52,138 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:39:52,138 - on stmt: $binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 13:39:52,138 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:39:52,138 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:39:52,138 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,138 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:39:52,138 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,138 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:39:52,138 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:39:52,138 - on stmt: jump 374
DEBUG 2024-06-11 13:39:52,138 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:39:52,138 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847DF390>
DEBUG 2024-06-11 13:39:52,138 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:39:52,138 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:39:52,138 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:39:52,138 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:39:52,139 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:39:52,139 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:39:52,139 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847DF390>
DEBUG 2024-06-11 13:39:52,139 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:39:52,139 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:39:52,139 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:39:52,139 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,139 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:39:52,139 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:39:52,139 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,140 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:39:52,140 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:39:52,140 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,140 - on stmt: $binop_sub468.27 = n - i
DEBUG 2024-06-11 13:39:52,140 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,140 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:39:52,140 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:39:52,140 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:39:52,140 - on stmt: jump 374
DEBUG 2024-06-11 13:39:52,140 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:39:52,140 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847DF390>
DEBUG 2024-06-11 13:39:52,140 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 13:39:52,140 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 13:39:52,140 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:39:52,140 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,140 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,140 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:39:52,140 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:39:52,140 - on stmt: $binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 13:39:52,140 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:39:52,140 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:39:52,140 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:39:52,140 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:39:52,140 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,140 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:39:52,140 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,140 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:39:52,140 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:39:52,140 - on stmt: jump 646
DEBUG 2024-06-11 13:39:52,140 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:39:52,140 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847DF390>
DEBUG 2024-06-11 13:39:52,140 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:39:52,140 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:39:52,140 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:39:52,140 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:39:52,140 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:39:52,140 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:39:52,140 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847DF390>
DEBUG 2024-06-11 13:39:52,140 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:39:52,140 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:39:52,140 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:39:52,140 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,140 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:39:52,140 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:39:52,140 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,140 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:39:52,140 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:39:52,140 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,140 - on stmt: $binop_add740.27 = n + k
DEBUG 2024-06-11 13:39:52,140 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:39:52,140 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:39:52,140 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,140 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:39:52,140 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:39:52,140 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:39:52,140 - on stmt: jump 646
DEBUG 2024-06-11 13:39:52,140 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:39:52,140 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847DF390>
DEBUG 2024-06-11 13:39:52,140 - on stmt: jump 176
DEBUG 2024-06-11 13:39:52,140 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:39:52,140 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847DF390>
DEBUG 2024-06-11 13:39:52,140 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:39:52,140 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:39:52,140 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:39:52,140 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000021E847DF0D0>],
             180: [<numba.core.ir.Assign object at 0x0000021E84801050>]})
DEBUG 2024-06-11 13:39:52,140 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:39:52,140 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E84800390>
DEBUG 2024-06-11 13:39:52,140 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:39:52,140 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:39:52,140 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:39:52,140 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:39:52,140 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:39:52,140 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:39:52,140 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:39:52,140 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,140 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:39:52,140 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,140 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,140 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:39:52,140 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,140 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,140 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:39:52,140 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,140 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,140 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:39:52,140 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:39:52,140 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,140 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:39:52,140 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:39:52,140 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,140 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:39:52,140 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:39:52,140 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,145 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:39:52,145 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,145 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:39:52,145 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:39:52,145 - on stmt: jump 176
DEBUG 2024-06-11 13:39:52,145 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:39:52,145 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E84800390>
DEBUG 2024-06-11 13:39:52,145 - on stmt: jump 178
DEBUG 2024-06-11 13:39:52,145 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:39:52,145 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E84800390>
DEBUG 2024-06-11 13:39:52,146 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:39:52,146 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:39:52,146 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:39:52,146 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:39:52,146 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:39:52,146 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:39:52,146 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E84800390>
DEBUG 2024-06-11 13:39:52,146 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:39:52,146 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,146 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,146 - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,146 - find_def var='time_register' stmt=n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,146 - replaced with: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,146 - on stmt: $binop_sub234.12 = time_register - n
DEBUG 2024-06-11 13:39:52,146 - find_def var='time_register' stmt=$binop_sub234.12 = time_register - n
DEBUG 2024-06-11 13:39:52,146 - replaced with: $binop_sub234.12 = time_register.1 - n
DEBUG 2024-06-11 13:39:52,146 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 13:39:52,146 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:39:52,146 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,146 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,146 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:39:52,146 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:39:52,146 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:39:52,146 - on stmt: $binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 13:39:52,146 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:39:52,147 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:39:52,147 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,147 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:39:52,147 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,147 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:39:52,147 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:39:52,147 - on stmt: jump 374
DEBUG 2024-06-11 13:39:52,148 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:39:52,148 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E84800390>
DEBUG 2024-06-11 13:39:52,148 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:39:52,148 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:39:52,148 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:39:52,148 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:39:52,148 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:39:52,148 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:39:52,148 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E84800390>
DEBUG 2024-06-11 13:39:52,148 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:39:52,148 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:39:52,148 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:39:52,148 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,148 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:39:52,148 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:39:52,148 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,148 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:39:52,148 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:39:52,148 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,148 - on stmt: $binop_sub468.27 = n - i
DEBUG 2024-06-11 13:39:52,148 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,148 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:39:52,148 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:39:52,148 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:39:52,148 - on stmt: jump 374
DEBUG 2024-06-11 13:39:52,148 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:39:52,148 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E84800390>
DEBUG 2024-06-11 13:39:52,148 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 13:39:52,148 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 13:39:52,148 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:39:52,148 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,148 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,148 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:39:52,148 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:39:52,148 - on stmt: $binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 13:39:52,148 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:39:52,148 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:39:52,148 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:39:52,148 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:39:52,148 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,148 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:39:52,148 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,148 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:39:52,148 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:39:52,148 - on stmt: jump 646
DEBUG 2024-06-11 13:39:52,148 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:39:52,148 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E84800390>
DEBUG 2024-06-11 13:39:52,148 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:39:52,148 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:39:52,148 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:39:52,148 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:39:52,148 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:39:52,148 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:39:52,148 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E84800390>
DEBUG 2024-06-11 13:39:52,148 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:39:52,148 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:39:52,148 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:39:52,148 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,148 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:39:52,148 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:39:52,148 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,148 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:39:52,148 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:39:52,148 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,148 - on stmt: $binop_add740.27 = n + k
DEBUG 2024-06-11 13:39:52,148 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:39:52,148 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:39:52,148 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,148 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:39:52,148 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:39:52,148 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:39:52,148 - on stmt: jump 646
DEBUG 2024-06-11 13:39:52,148 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:39:52,148 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E84800390>
DEBUG 2024-06-11 13:39:52,148 - on stmt: jump 176
DEBUG 2024-06-11 13:39:52,148 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:39:52,148 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E84800390>
DEBUG 2024-06-11 13:39:52,148 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:39:52,148 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:39:52,148 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:39:52,148 - Fix SSA violator on var n
DEBUG 2024-06-11 13:39:52,148 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:39:52,148 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847EA390>
DEBUG 2024-06-11 13:39:52,148 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:39:52,148 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:39:52,148 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:39:52,148 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:39:52,148 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:39:52,148 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:39:52,148 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:39:52,148 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,148 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:39:52,148 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,148 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,148 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:39:52,148 - first assign: n
DEBUG 2024-06-11 13:39:52,148 - replaced with: n = const(int, 0)
DEBUG 2024-06-11 13:39:52,148 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,148 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,148 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:39:52,148 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,148 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,154 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:39:52,154 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:39:52,154 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,154 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:39:52,154 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:39:52,154 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,154 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:39:52,154 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:39:52,154 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,154 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:39:52,154 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,154 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:39:52,154 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:39:52,154 - on stmt: jump 176
DEBUG 2024-06-11 13:39:52,154 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:39:52,154 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847EA390>
DEBUG 2024-06-11 13:39:52,154 - on stmt: jump 178
DEBUG 2024-06-11 13:39:52,154 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:39:52,154 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847EA390>
DEBUG 2024-06-11 13:39:52,154 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:39:52,154 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:39:52,154 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:39:52,154 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:39:52,154 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:39:52,154 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:39:52,154 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847EA390>
DEBUG 2024-06-11 13:39:52,154 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:39:52,154 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,154 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,154 - on stmt: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,154 - replaced with: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,154 - on stmt: $binop_sub234.12 = time_register.1 - n
DEBUG 2024-06-11 13:39:52,154 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 13:39:52,154 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:39:52,155 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,155 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,155 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:39:52,155 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:39:52,155 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:39:52,155 - on stmt: $binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 13:39:52,155 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:39:52,155 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:39:52,156 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,156 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:39:52,156 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,156 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:39:52,156 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:39:52,156 - on stmt: jump 374
DEBUG 2024-06-11 13:39:52,156 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:39:52,156 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847EA390>
DEBUG 2024-06-11 13:39:52,156 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:39:52,156 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:39:52,156 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:39:52,156 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:39:52,156 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:39:52,156 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:39:52,156 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847EA390>
DEBUG 2024-06-11 13:39:52,156 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:39:52,156 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:39:52,156 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:39:52,156 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,156 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:39:52,156 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:39:52,156 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,156 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:39:52,156 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:39:52,156 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,156 - on stmt: $binop_sub468.27 = n - i
DEBUG 2024-06-11 13:39:52,156 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,156 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:39:52,156 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:39:52,156 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:39:52,156 - on stmt: jump 374
DEBUG 2024-06-11 13:39:52,156 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:39:52,156 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847EA390>
DEBUG 2024-06-11 13:39:52,156 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 13:39:52,156 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 13:39:52,156 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:39:52,156 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,156 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,156 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:39:52,156 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:39:52,156 - on stmt: $binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 13:39:52,156 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:39:52,156 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:39:52,156 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:39:52,156 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:39:52,156 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,156 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:39:52,156 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,156 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:39:52,156 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:39:52,156 - on stmt: jump 646
DEBUG 2024-06-11 13:39:52,156 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:39:52,156 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847EA390>
DEBUG 2024-06-11 13:39:52,156 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:39:52,156 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:39:52,156 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:39:52,156 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:39:52,156 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:39:52,156 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:39:52,156 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847EA390>
DEBUG 2024-06-11 13:39:52,156 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:39:52,156 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:39:52,156 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:39:52,156 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,156 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:39:52,156 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:39:52,156 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,156 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:39:52,156 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:39:52,156 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,156 - on stmt: $binop_add740.27 = n + k
DEBUG 2024-06-11 13:39:52,156 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:39:52,156 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:39:52,156 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,156 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:39:52,156 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:39:52,156 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:39:52,156 - on stmt: jump 646
DEBUG 2024-06-11 13:39:52,156 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:39:52,156 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847EA390>
DEBUG 2024-06-11 13:39:52,156 - on stmt: jump 176
DEBUG 2024-06-11 13:39:52,156 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:39:52,156 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847EA390>
DEBUG 2024-06-11 13:39:52,156 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:39:52,156 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:39:52,156 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:39:52,156 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000021E847DC110>],
             180: [<numba.core.ir.Assign object at 0x0000021E84801610>]})
DEBUG 2024-06-11 13:39:52,156 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:39:52,156 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847A0410>
DEBUG 2024-06-11 13:39:52,156 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:39:52,156 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:39:52,156 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:39:52,156 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:39:52,156 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:39:52,156 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:39:52,156 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:39:52,156 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,156 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:39:52,156 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,156 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,156 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:39:52,156 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,156 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,156 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:39:52,156 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,156 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,156 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:39:52,156 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:39:52,156 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,156 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:39:52,156 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:39:52,156 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,156 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:39:52,162 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:39:52,162 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,162 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:39:52,162 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,162 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:39:52,162 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:39:52,162 - on stmt: jump 176
DEBUG 2024-06-11 13:39:52,163 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:39:52,163 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847A0410>
DEBUG 2024-06-11 13:39:52,163 - on stmt: jump 178
DEBUG 2024-06-11 13:39:52,163 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:39:52,163 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847A0410>
DEBUG 2024-06-11 13:39:52,163 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:39:52,163 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:39:52,163 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:39:52,163 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:39:52,163 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:39:52,163 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:39:52,163 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847A0410>
DEBUG 2024-06-11 13:39:52,163 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:39:52,163 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,163 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,163 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,163 - on stmt: $binop_sub234.12 = time_register.1 - n
DEBUG 2024-06-11 13:39:52,163 - find_def var='n' stmt=$binop_sub234.12 = time_register.1 - n
DEBUG 2024-06-11 13:39:52,163 - replaced with: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 13:39:52,163 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 13:39:52,164 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:39:52,164 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,164 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,164 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:39:52,164 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:39:52,164 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:39:52,164 - on stmt: $binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 13:39:52,164 - find_def var='n' stmt=$binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 13:39:52,164 - replaced with: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 13:39:52,164 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:39:52,164 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:39:52,164 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,164 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:39:52,164 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,164 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:39:52,164 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:39:52,164 - on stmt: jump 374
DEBUG 2024-06-11 13:39:52,164 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:39:52,164 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847A0410>
DEBUG 2024-06-11 13:39:52,164 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:39:52,164 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:39:52,164 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:39:52,164 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:39:52,164 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:39:52,164 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:39:52,164 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847A0410>
DEBUG 2024-06-11 13:39:52,164 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:39:52,164 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:39:52,164 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:39:52,164 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,164 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:39:52,164 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:39:52,164 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,164 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:39:52,164 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:39:52,164 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,164 - on stmt: $binop_sub468.27 = n - i
DEBUG 2024-06-11 13:39:52,164 - find_def var='n' stmt=$binop_sub468.27 = n - i
DEBUG 2024-06-11 13:39:52,164 - find_def_from_top label 376
DEBUG 2024-06-11 13:39:52,164 - idom 374 from label 376
DEBUG 2024-06-11 13:39:52,164 - find_def_from_bottom label 374
DEBUG 2024-06-11 13:39:52,164 - find_def_from_top label 374
DEBUG 2024-06-11 13:39:52,164 - idom 180 from label 374
DEBUG 2024-06-11 13:39:52,164 - find_def_from_bottom label 180
DEBUG 2024-06-11 13:39:52,164 - replaced with: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 13:39:52,164 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,164 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:39:52,164 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:39:52,164 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:39:52,164 - on stmt: jump 374
DEBUG 2024-06-11 13:39:52,164 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:39:52,164 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847A0410>
DEBUG 2024-06-11 13:39:52,164 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 13:39:52,164 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 13:39:52,164 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:39:52,164 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,164 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,164 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:39:52,164 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:39:52,164 - on stmt: $binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 13:39:52,164 - find_def var='n' stmt=$binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 13:39:52,164 - find_def_from_top label 500
DEBUG 2024-06-11 13:39:52,164 - idom 374 from label 500
DEBUG 2024-06-11 13:39:52,164 - find_def_from_bottom label 374
DEBUG 2024-06-11 13:39:52,164 - find_def_from_top label 374
DEBUG 2024-06-11 13:39:52,164 - idom 180 from label 374
DEBUG 2024-06-11 13:39:52,164 - find_def_from_bottom label 180
DEBUG 2024-06-11 13:39:52,164 - replaced with: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 13:39:52,164 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:39:52,164 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:39:52,164 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:39:52,164 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:39:52,164 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,164 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:39:52,164 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,164 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:39:52,164 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:39:52,164 - on stmt: jump 646
DEBUG 2024-06-11 13:39:52,164 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:39:52,164 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847A0410>
DEBUG 2024-06-11 13:39:52,164 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:39:52,164 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:39:52,164 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:39:52,164 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:39:52,164 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:39:52,164 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:39:52,164 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847A0410>
DEBUG 2024-06-11 13:39:52,164 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:39:52,164 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:39:52,164 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:39:52,164 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,164 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:39:52,164 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:39:52,164 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,164 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:39:52,164 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:39:52,164 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,164 - on stmt: $binop_add740.27 = n + k
DEBUG 2024-06-11 13:39:52,164 - find_def var='n' stmt=$binop_add740.27 = n + k
DEBUG 2024-06-11 13:39:52,164 - find_def_from_top label 648
DEBUG 2024-06-11 13:39:52,164 - idom 646 from label 648
DEBUG 2024-06-11 13:39:52,164 - find_def_from_bottom label 646
DEBUG 2024-06-11 13:39:52,164 - find_def_from_top label 646
DEBUG 2024-06-11 13:39:52,164 - idom 500 from label 646
DEBUG 2024-06-11 13:39:52,164 - find_def_from_bottom label 500
DEBUG 2024-06-11 13:39:52,164 - find_def_from_top label 500
DEBUG 2024-06-11 13:39:52,164 - idom 374 from label 500
DEBUG 2024-06-11 13:39:52,164 - find_def_from_bottom label 374
DEBUG 2024-06-11 13:39:52,164 - find_def_from_top label 374
DEBUG 2024-06-11 13:39:52,164 - idom 180 from label 374
DEBUG 2024-06-11 13:39:52,164 - find_def_from_bottom label 180
DEBUG 2024-06-11 13:39:52,164 - replaced with: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 13:39:52,164 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:39:52,164 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:39:52,170 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,170 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:39:52,170 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:39:52,170 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:39:52,170 - on stmt: jump 646
DEBUG 2024-06-11 13:39:52,170 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:39:52,170 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847A0410>
DEBUG 2024-06-11 13:39:52,170 - on stmt: jump 176
DEBUG 2024-06-11 13:39:52,170 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:39:52,170 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847A0410>
DEBUG 2024-06-11 13:39:52,171 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:39:52,171 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:39:52,171 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:39:52,171 - Fix SSA violator on var frac
DEBUG 2024-06-11 13:39:52,171 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:39:52,171 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847FE090>
DEBUG 2024-06-11 13:39:52,171 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:39:52,171 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:39:52,171 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:39:52,171 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:39:52,171 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:39:52,171 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:39:52,171 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:39:52,171 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,171 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:39:52,171 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,171 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,171 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:39:52,171 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,171 - first assign: frac
DEBUG 2024-06-11 13:39:52,171 - replaced with: frac = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,172 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,172 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:39:52,172 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,172 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:39:52,172 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:39:52,172 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:39:52,172 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:39:52,172 - on stmt: jump 176
DEBUG 2024-06-11 13:39:52,172 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:39:52,172 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847FE090>
DEBUG 2024-06-11 13:39:52,172 - on stmt: jump 178
DEBUG 2024-06-11 13:39:52,172 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:39:52,172 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847FE090>
DEBUG 2024-06-11 13:39:52,172 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:39:52,172 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:39:52,172 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:39:52,172 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847FE090>
DEBUG 2024-06-11 13:39:52,172 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:39:52,172 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,172 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 13:39:52,172 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 13:39:52,172 - replaced with: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 13:39:52,172 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:39:52,172 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,172 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,172 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:39:52,172 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 13:39:52,172 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:39:52,172 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:39:52,172 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:39:52,172 - on stmt: jump 374
DEBUG 2024-06-11 13:39:52,172 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:39:52,172 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847FE090>
DEBUG 2024-06-11 13:39:52,172 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:39:52,172 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:39:52,172 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:39:52,172 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847FE090>
DEBUG 2024-06-11 13:39:52,172 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:39:52,172 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:39:52,172 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:39:52,172 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:39:52,172 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:39:52,172 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:39:52,172 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:39:52,172 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 13:39:52,172 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:39:52,172 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:39:52,172 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:39:52,172 - on stmt: jump 374
DEBUG 2024-06-11 13:39:52,172 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:39:52,172 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847FE090>
DEBUG 2024-06-11 13:39:52,172 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 13:39:52,172 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 13:39:52,172 - replaced with: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 13:39:52,172 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:39:52,172 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,172 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,172 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:39:52,172 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 13:39:52,172 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:39:52,172 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:39:52,172 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:39:52,172 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:39:52,172 - on stmt: jump 646
DEBUG 2024-06-11 13:39:52,172 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:39:52,172 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847FE090>
DEBUG 2024-06-11 13:39:52,172 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:39:52,172 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:39:52,172 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:39:52,172 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847FE090>
DEBUG 2024-06-11 13:39:52,172 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:39:52,172 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:39:52,172 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:39:52,172 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:39:52,172 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:39:52,172 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:39:52,172 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:39:52,172 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 13:39:52,172 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:39:52,172 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:39:52,172 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:39:52,172 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:39:52,172 - on stmt: jump 646
DEBUG 2024-06-11 13:39:52,172 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:39:52,172 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847FE090>
DEBUG 2024-06-11 13:39:52,172 - on stmt: jump 176
DEBUG 2024-06-11 13:39:52,172 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:39:52,172 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847FE090>
DEBUG 2024-06-11 13:39:52,172 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:39:52,172 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:39:52,172 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000021E847FC990>],
             180: [<numba.core.ir.Assign object at 0x0000021E84801ED0>],
             500: [<numba.core.ir.Assign object at 0x0000021E847B5AD0>]})
DEBUG 2024-06-11 13:39:52,172 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:39:52,172 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E84808650>
DEBUG 2024-06-11 13:39:52,172 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:39:52,172 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:39:52,172 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:39:52,172 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:39:52,172 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:39:52,172 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:39:52,172 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:39:52,172 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,172 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,172 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:39:52,172 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,172 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,172 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:39:52,172 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,172 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:39:52,172 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:39:52,172 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:39:52,172 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:39:52,172 - on stmt: jump 176
DEBUG 2024-06-11 13:39:52,172 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:39:52,172 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E84808650>
DEBUG 2024-06-11 13:39:52,172 - on stmt: jump 178
DEBUG 2024-06-11 13:39:52,172 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:39:52,172 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E84808650>
DEBUG 2024-06-11 13:39:52,172 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:39:52,172 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:39:52,172 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:39:52,172 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E84808650>
DEBUG 2024-06-11 13:39:52,172 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:39:52,172 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,172 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,172 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 13:39:52,172 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 13:39:52,172 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:39:52,172 - find_def var='frac' stmt=index_frac = frac * num_table
DEBUG 2024-06-11 13:39:52,179 - replaced with: index_frac = frac.1 * num_table
DEBUG 2024-06-11 13:39:52,179 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,179 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,179 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:39:52,179 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:39:52,179 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:39:52,179 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 13:39:52,179 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:39:52,179 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:39:52,179 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,179 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:39:52,179 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,179 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:39:52,179 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:39:52,179 - on stmt: jump 374
DEBUG 2024-06-11 13:39:52,179 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:39:52,179 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E84808650>
DEBUG 2024-06-11 13:39:52,179 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:39:52,179 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:39:52,179 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:39:52,179 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:39:52,179 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:39:52,179 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:39:52,179 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E84808650>
DEBUG 2024-06-11 13:39:52,179 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:39:52,179 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:39:52,179 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:39:52,180 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,180 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:39:52,180 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:39:52,180 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,180 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:39:52,180 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:39:52,180 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,180 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 13:39:52,181 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,181 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:39:52,181 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:39:52,181 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:39:52,181 - on stmt: jump 374
DEBUG 2024-06-11 13:39:52,181 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:39:52,181 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E84808650>
DEBUG 2024-06-11 13:39:52,181 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 13:39:52,181 - find_def var='frac' stmt=$binop_sub504.3 = scale - frac
DEBUG 2024-06-11 13:39:52,181 - find_def_from_top label 500
DEBUG 2024-06-11 13:39:52,181 - idom 374 from label 500
DEBUG 2024-06-11 13:39:52,181 - find_def_from_bottom label 374
DEBUG 2024-06-11 13:39:52,181 - find_def_from_top label 374
DEBUG 2024-06-11 13:39:52,181 - idom 180 from label 374
DEBUG 2024-06-11 13:39:52,181 - find_def_from_bottom label 180
DEBUG 2024-06-11 13:39:52,181 - replaced with: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 13:39:52,181 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 13:39:52,181 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 13:39:52,181 - find_def var='frac' stmt=index_frac = frac * num_table
DEBUG 2024-06-11 13:39:52,181 - replaced with: index_frac = frac.2 * num_table
DEBUG 2024-06-11 13:39:52,181 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,181 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,181 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:39:52,181 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:39:52,181 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 13:39:52,181 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:39:52,181 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:39:52,181 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:39:52,181 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:39:52,181 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,181 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:39:52,181 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,181 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:39:52,181 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:39:52,181 - on stmt: jump 646
DEBUG 2024-06-11 13:39:52,181 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:39:52,181 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E84808650>
DEBUG 2024-06-11 13:39:52,181 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:39:52,181 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:39:52,181 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:39:52,181 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:39:52,181 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:39:52,181 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:39:52,181 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E84808650>
DEBUG 2024-06-11 13:39:52,181 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:39:52,181 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:39:52,181 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:39:52,181 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,181 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:39:52,181 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:39:52,181 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,181 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:39:52,181 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:39:52,181 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,181 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 13:39:52,181 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:39:52,181 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:39:52,181 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,181 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:39:52,181 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:39:52,181 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:39:52,181 - on stmt: jump 646
DEBUG 2024-06-11 13:39:52,181 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:39:52,181 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E84808650>
DEBUG 2024-06-11 13:39:52,181 - on stmt: jump 176
DEBUG 2024-06-11 13:39:52,181 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:39:52,181 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E84808650>
DEBUG 2024-06-11 13:39:52,181 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:39:52,181 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:39:52,181 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:39:52,181 - Fix SSA violator on var index_frac
DEBUG 2024-06-11 13:39:52,181 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:39:52,181 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847BC190>
DEBUG 2024-06-11 13:39:52,181 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:39:52,181 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:39:52,181 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:39:52,181 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:39:52,181 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:39:52,181 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:39:52,181 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:39:52,181 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,181 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:39:52,181 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,181 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,181 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:39:52,181 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,181 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,181 - first assign: index_frac
DEBUG 2024-06-11 13:39:52,181 - replaced with: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,181 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:39:52,181 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,181 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,181 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:39:52,181 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:39:52,181 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,181 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:39:52,181 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:39:52,181 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,181 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:39:52,181 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:39:52,181 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,181 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:39:52,181 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,181 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:39:52,181 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:39:52,181 - on stmt: jump 176
DEBUG 2024-06-11 13:39:52,181 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:39:52,181 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847BC190>
DEBUG 2024-06-11 13:39:52,181 - on stmt: jump 178
DEBUG 2024-06-11 13:39:52,181 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:39:52,181 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847BC190>
DEBUG 2024-06-11 13:39:52,187 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:39:52,187 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:39:52,187 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:39:52,187 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:39:52,187 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:39:52,187 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:39:52,187 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847BC190>
DEBUG 2024-06-11 13:39:52,187 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:39:52,188 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,188 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,188 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,188 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 13:39:52,188 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 13:39:52,188 - on stmt: index_frac = frac.1 * num_table
DEBUG 2024-06-11 13:39:52,188 - replaced with: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 13:39:52,188 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,188 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,188 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:39:52,188 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:39:52,188 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:39:52,188 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 13:39:52,188 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:39:52,188 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:39:52,188 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,188 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:39:52,188 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,188 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:39:52,188 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:39:52,189 - on stmt: jump 374
DEBUG 2024-06-11 13:39:52,189 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:39:52,189 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847BC190>
DEBUG 2024-06-11 13:39:52,189 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:39:52,189 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:39:52,189 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:39:52,189 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:39:52,189 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:39:52,189 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:39:52,189 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847BC190>
DEBUG 2024-06-11 13:39:52,189 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:39:52,189 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:39:52,189 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:39:52,189 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,189 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:39:52,189 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:39:52,189 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,189 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:39:52,189 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:39:52,189 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,189 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 13:39:52,189 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,189 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:39:52,189 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:39:52,189 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:39:52,189 - on stmt: jump 374
DEBUG 2024-06-11 13:39:52,189 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:39:52,189 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847BC190>
DEBUG 2024-06-11 13:39:52,189 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 13:39:52,189 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 13:39:52,189 - on stmt: index_frac = frac.2 * num_table
DEBUG 2024-06-11 13:39:52,189 - replaced with: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 13:39:52,189 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,189 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,189 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:39:52,189 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:39:52,189 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 13:39:52,189 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:39:52,189 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:39:52,189 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:39:52,189 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:39:52,189 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,189 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:39:52,189 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,189 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:39:52,189 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:39:52,189 - on stmt: jump 646
DEBUG 2024-06-11 13:39:52,189 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:39:52,189 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847BC190>
DEBUG 2024-06-11 13:39:52,189 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:39:52,189 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:39:52,189 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:39:52,189 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:39:52,189 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:39:52,189 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:39:52,189 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847BC190>
DEBUG 2024-06-11 13:39:52,189 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:39:52,189 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:39:52,189 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:39:52,189 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,189 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:39:52,189 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:39:52,189 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,189 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:39:52,189 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:39:52,189 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,189 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 13:39:52,189 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:39:52,189 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:39:52,189 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,189 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:39:52,189 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:39:52,189 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:39:52,189 - on stmt: jump 646
DEBUG 2024-06-11 13:39:52,189 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:39:52,189 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847BC190>
DEBUG 2024-06-11 13:39:52,189 - on stmt: jump 176
DEBUG 2024-06-11 13:39:52,189 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:39:52,189 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847BC190>
DEBUG 2024-06-11 13:39:52,189 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:39:52,189 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:39:52,189 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:39:52,189 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000021E847A0410>],
             180: [<numba.core.ir.Assign object at 0x0000021E84802AD0>],
             500: [<numba.core.ir.Assign object at 0x0000021E847C8B90>]})
DEBUG 2024-06-11 13:39:52,189 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:39:52,189 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847A2C90>
DEBUG 2024-06-11 13:39:52,189 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:39:52,189 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:39:52,189 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:39:52,189 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:39:52,189 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:39:52,189 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:39:52,189 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:39:52,189 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,189 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:39:52,189 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,189 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,189 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:39:52,189 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,189 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,189 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:39:52,189 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,189 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,189 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:39:52,189 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:39:52,189 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,189 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:39:52,189 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:39:52,189 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,189 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:39:52,189 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:39:52,189 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,189 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:39:52,189 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,189 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:39:52,189 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:39:52,189 - on stmt: jump 176
DEBUG 2024-06-11 13:39:52,189 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:39:52,189 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847A2C90>
DEBUG 2024-06-11 13:39:52,189 - on stmt: jump 178
DEBUG 2024-06-11 13:39:52,189 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:39:52,189 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847A2C90>
DEBUG 2024-06-11 13:39:52,195 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:39:52,195 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:39:52,195 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:39:52,195 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:39:52,195 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:39:52,195 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:39:52,195 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847A2C90>
DEBUG 2024-06-11 13:39:52,195 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:39:52,195 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,195 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,195 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,195 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 13:39:52,196 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 13:39:52,196 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 13:39:52,196 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,196 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,196 - find_def var='index_frac' stmt=offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,196 - replaced with: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,196 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:39:52,196 - find_def var='index_frac' stmt=eta = index_frac - offset
DEBUG 2024-06-11 13:39:52,196 - replaced with: eta = index_frac.1 - offset
DEBUG 2024-06-11 13:39:52,196 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:39:52,196 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:39:52,196 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 13:39:52,196 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:39:52,196 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:39:52,196 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,196 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:39:52,196 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,196 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:39:52,196 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:39:52,196 - on stmt: jump 374
DEBUG 2024-06-11 13:39:52,196 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:39:52,196 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847A2C90>
DEBUG 2024-06-11 13:39:52,196 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:39:52,196 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:39:52,196 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:39:52,196 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:39:52,196 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:39:52,196 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:39:52,196 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847A2C90>
DEBUG 2024-06-11 13:39:52,196 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:39:52,196 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:39:52,196 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:39:52,198 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:39:52,198 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:39:52,198 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:39:52,198 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:39:52,198 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 13:39:52,198 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:39:52,198 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:39:52,198 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:39:52,198 - on stmt: jump 374
DEBUG 2024-06-11 13:39:52,198 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:39:52,198 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847A2C90>
DEBUG 2024-06-11 13:39:52,198 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 13:39:52,198 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 13:39:52,198 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 13:39:52,198 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,198 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,198 - find_def var='index_frac' stmt=offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,198 - replaced with: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,198 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 13:39:52,198 - find_def var='index_frac' stmt=eta = index_frac - offset
DEBUG 2024-06-11 13:39:52,198 - replaced with: eta = index_frac.2 - offset
DEBUG 2024-06-11 13:39:52,198 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 13:39:52,198 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:39:52,198 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:39:52,198 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:39:52,198 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:39:52,198 - on stmt: jump 646
DEBUG 2024-06-11 13:39:52,198 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:39:52,198 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847A2C90>
DEBUG 2024-06-11 13:39:52,198 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:39:52,198 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:39:52,198 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:39:52,198 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847A2C90>
DEBUG 2024-06-11 13:39:52,198 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:39:52,198 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:39:52,198 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:39:52,198 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:39:52,198 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:39:52,198 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:39:52,198 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:39:52,198 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 13:39:52,198 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:39:52,198 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:39:52,198 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:39:52,198 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:39:52,198 - on stmt: jump 646
DEBUG 2024-06-11 13:39:52,198 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:39:52,198 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847A2C90>
DEBUG 2024-06-11 13:39:52,198 - on stmt: jump 176
DEBUG 2024-06-11 13:39:52,198 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:39:52,198 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847A2C90>
DEBUG 2024-06-11 13:39:52,198 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:39:52,198 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:39:52,198 - Fix SSA violator on var offset
DEBUG 2024-06-11 13:39:52,198 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:39:52,198 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E84801210>
DEBUG 2024-06-11 13:39:52,198 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:39:52,198 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:39:52,198 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:39:52,198 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:39:52,198 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:39:52,198 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:39:52,198 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:39:52,198 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,198 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,198 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:39:52,198 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,198 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,198 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:39:52,198 - first assign: offset
DEBUG 2024-06-11 13:39:52,198 - replaced with: offset = const(int, 0)
DEBUG 2024-06-11 13:39:52,198 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,198 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:39:52,198 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:39:52,198 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:39:52,198 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:39:52,198 - on stmt: jump 176
DEBUG 2024-06-11 13:39:52,198 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:39:52,198 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E84801210>
DEBUG 2024-06-11 13:39:52,198 - on stmt: jump 178
DEBUG 2024-06-11 13:39:52,198 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:39:52,198 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E84801210>
DEBUG 2024-06-11 13:39:52,198 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:39:52,198 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:39:52,198 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:39:52,198 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E84801210>
DEBUG 2024-06-11 13:39:52,198 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:39:52,198 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,198 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 13:39:52,198 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 13:39:52,198 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 13:39:52,198 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,198 - on stmt: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,198 - replaced with: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,198 - on stmt: eta = index_frac.1 - offset
DEBUG 2024-06-11 13:39:52,198 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 13:39:52,198 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:39:52,198 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:39:52,198 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:39:52,198 - on stmt: jump 374
DEBUG 2024-06-11 13:39:52,198 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:39:52,198 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E84801210>
DEBUG 2024-06-11 13:39:52,198 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:39:52,198 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:39:52,198 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:39:52,198 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:39:52,198 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E84801210>
DEBUG 2024-06-11 13:39:52,198 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:39:52,198 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:39:52,204 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:39:52,204 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,204 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:39:52,204 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:39:52,204 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,204 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:39:52,204 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:39:52,204 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,204 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 13:39:52,204 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,204 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:39:52,204 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:39:52,204 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:39:52,204 - on stmt: jump 374
DEBUG 2024-06-11 13:39:52,204 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:39:52,204 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E84801210>
DEBUG 2024-06-11 13:39:52,204 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 13:39:52,204 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 13:39:52,204 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 13:39:52,204 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,204 - on stmt: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,204 - replaced with: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,204 - on stmt: eta = index_frac.2 - offset
DEBUG 2024-06-11 13:39:52,204 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:39:52,204 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 13:39:52,204 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:39:52,204 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:39:52,204 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:39:52,204 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:39:52,204 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,204 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:39:52,204 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,204 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:39:52,204 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:39:52,204 - on stmt: jump 646
DEBUG 2024-06-11 13:39:52,204 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:39:52,204 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E84801210>
DEBUG 2024-06-11 13:39:52,204 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:39:52,204 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:39:52,204 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:39:52,204 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:39:52,204 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:39:52,204 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:39:52,204 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E84801210>
DEBUG 2024-06-11 13:39:52,204 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:39:52,205 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:39:52,205 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:39:52,205 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,205 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:39:52,205 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:39:52,205 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,205 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:39:52,205 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:39:52,205 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,205 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 13:39:52,205 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:39:52,205 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:39:52,205 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,206 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:39:52,206 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:39:52,206 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:39:52,206 - on stmt: jump 646
DEBUG 2024-06-11 13:39:52,206 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:39:52,206 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E84801210>
DEBUG 2024-06-11 13:39:52,206 - on stmt: jump 176
DEBUG 2024-06-11 13:39:52,206 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:39:52,206 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E84801210>
DEBUG 2024-06-11 13:39:52,206 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:39:52,206 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:39:52,206 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:39:52,206 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000021E84808650>],
             180: [<numba.core.ir.Assign object at 0x0000021E847C8AD0>],
             500: [<numba.core.ir.Assign object at 0x0000021E847CBB50>]})
DEBUG 2024-06-11 13:39:52,206 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:39:52,206 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847BF3D0>
DEBUG 2024-06-11 13:39:52,206 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:39:52,206 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:39:52,206 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:39:52,206 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:39:52,206 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:39:52,206 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:39:52,206 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:39:52,206 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,206 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:39:52,206 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,206 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,206 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:39:52,206 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,206 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,206 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:39:52,206 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,206 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,206 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:39:52,206 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:39:52,206 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,206 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:39:52,206 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:39:52,207 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,207 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:39:52,207 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:39:52,207 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,207 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:39:52,207 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,207 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:39:52,207 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:39:52,207 - on stmt: jump 176
DEBUG 2024-06-11 13:39:52,207 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:39:52,207 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847BF3D0>
DEBUG 2024-06-11 13:39:52,207 - on stmt: jump 178
DEBUG 2024-06-11 13:39:52,207 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:39:52,207 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847BF3D0>
DEBUG 2024-06-11 13:39:52,207 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:39:52,208 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:39:52,208 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:39:52,208 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:39:52,208 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:39:52,208 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:39:52,208 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847BF3D0>
DEBUG 2024-06-11 13:39:52,208 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:39:52,208 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,208 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,208 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,208 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 13:39:52,208 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 13:39:52,208 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 13:39:52,208 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,208 - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,208 - on stmt: eta = index_frac.1 - offset
DEBUG 2024-06-11 13:39:52,208 - find_def var='offset' stmt=eta = index_frac.1 - offset
DEBUG 2024-06-11 13:39:52,208 - replaced with: eta = index_frac.1 - offset.1
DEBUG 2024-06-11 13:39:52,208 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:39:52,208 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:39:52,208 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 13:39:52,208 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:39:52,208 - find_def var='offset' stmt=$binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 13:39:52,208 - replaced with: $binop_sub318.31 = nwin - offset.1
DEBUG 2024-06-11 13:39:52,208 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:39:52,208 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,208 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:39:52,208 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,208 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:39:52,208 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:39:52,208 - on stmt: jump 374
DEBUG 2024-06-11 13:39:52,208 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:39:52,208 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847BF3D0>
DEBUG 2024-06-11 13:39:52,208 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:39:52,208 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:39:52,208 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:39:52,208 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:39:52,208 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:39:52,208 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:39:52,208 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847BF3D0>
DEBUG 2024-06-11 13:39:52,208 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:39:52,208 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:39:52,208 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:39:52,208 - find_def var='offset' stmt=$binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 13:39:52,208 - find_def_from_top label 376
DEBUG 2024-06-11 13:39:52,208 - idom 374 from label 376
DEBUG 2024-06-11 13:39:52,208 - find_def_from_bottom label 374
DEBUG 2024-06-11 13:39:52,208 - find_def_from_top label 374
DEBUG 2024-06-11 13:39:52,208 - idom 180 from label 374
DEBUG 2024-06-11 13:39:52,208 - find_def_from_bottom label 180
DEBUG 2024-06-11 13:39:52,208 - replaced with: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG 2024-06-11 13:39:52,208 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,208 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:39:52,208 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:39:52,208 - find_def var='offset' stmt=$binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 13:39:52,208 - find_def_from_top label 376
DEBUG 2024-06-11 13:39:52,208 - idom 374 from label 376
DEBUG 2024-06-11 13:39:52,208 - find_def_from_bottom label 374
DEBUG 2024-06-11 13:39:52,208 - find_def_from_top label 374
DEBUG 2024-06-11 13:39:52,208 - idom 180 from label 374
DEBUG 2024-06-11 13:39:52,208 - find_def_from_bottom label 180
DEBUG 2024-06-11 13:39:52,208 - replaced with: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG 2024-06-11 13:39:52,208 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,208 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:39:52,208 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:39:52,208 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,208 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 13:39:52,208 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,208 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:39:52,208 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:39:52,208 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:39:52,208 - on stmt: jump 374
DEBUG 2024-06-11 13:39:52,208 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:39:52,208 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847BF3D0>
DEBUG 2024-06-11 13:39:52,208 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 13:39:52,208 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 13:39:52,208 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 13:39:52,208 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,208 - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,208 - on stmt: eta = index_frac.2 - offset
DEBUG 2024-06-11 13:39:52,208 - find_def var='offset' stmt=eta = index_frac.2 - offset
DEBUG 2024-06-11 13:39:52,208 - replaced with: eta = index_frac.2 - offset.2
DEBUG 2024-06-11 13:39:52,208 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:39:52,208 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 13:39:52,208 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:39:52,208 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:39:52,208 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:39:52,208 - find_def var='offset' stmt=$binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 13:39:52,208 - replaced with: $binop_sub590.23 = nwin - offset.2
DEBUG 2024-06-11 13:39:52,208 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:39:52,208 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,208 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:39:52,208 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,208 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:39:52,208 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:39:52,208 - on stmt: jump 646
DEBUG 2024-06-11 13:39:52,208 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:39:52,208 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847BF3D0>
DEBUG 2024-06-11 13:39:52,208 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:39:52,208 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:39:52,208 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:39:52,208 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:39:52,208 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:39:52,208 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:39:52,208 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847BF3D0>
DEBUG 2024-06-11 13:39:52,208 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:39:52,208 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:39:52,208 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:39:52,208 - find_def var='offset' stmt=$binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 13:39:52,208 - find_def_from_top label 648
DEBUG 2024-06-11 13:39:52,208 - idom 646 from label 648
DEBUG 2024-06-11 13:39:52,208 - find_def_from_bottom label 646
DEBUG 2024-06-11 13:39:52,208 - find_def_from_top label 646
DEBUG 2024-06-11 13:39:52,208 - idom 500 from label 646
DEBUG 2024-06-11 13:39:52,208 - find_def_from_bottom label 500
DEBUG 2024-06-11 13:39:52,208 - replaced with: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG 2024-06-11 13:39:52,212 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,212 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:39:52,212 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:39:52,212 - find_def var='offset' stmt=$binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 13:39:52,212 - find_def_from_top label 648
DEBUG 2024-06-11 13:39:52,212 - idom 646 from label 648
DEBUG 2024-06-11 13:39:52,212 - find_def_from_bottom label 646
DEBUG 2024-06-11 13:39:52,212 - find_def_from_top label 646
DEBUG 2024-06-11 13:39:52,212 - idom 500 from label 646
DEBUG 2024-06-11 13:39:52,213 - find_def_from_bottom label 500
DEBUG 2024-06-11 13:39:52,213 - replaced with: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG 2024-06-11 13:39:52,213 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,213 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:39:52,213 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:39:52,213 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,213 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 13:39:52,213 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:39:52,213 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:39:52,213 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,213 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:39:52,213 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:39:52,213 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:39:52,213 - on stmt: jump 646
DEBUG 2024-06-11 13:39:52,213 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:39:52,213 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847BF3D0>
DEBUG 2024-06-11 13:39:52,213 - on stmt: jump 176
DEBUG 2024-06-11 13:39:52,213 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:39:52,213 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847BF3D0>
DEBUG 2024-06-11 13:39:52,213 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:39:52,213 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:39:52,213 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:39:52,213 - Fix SSA violator on var eta
DEBUG 2024-06-11 13:39:52,213 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:39:52,213 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847DD890>
DEBUG 2024-06-11 13:39:52,213 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:39:52,213 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:39:52,213 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:39:52,213 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:39:52,213 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:39:52,213 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:39:52,213 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:39:52,213 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,214 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:39:52,214 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,214 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,214 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:39:52,214 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,214 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,214 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:39:52,214 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,214 - first assign: eta
DEBUG 2024-06-11 13:39:52,214 - replaced with: eta = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,214 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,214 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:39:52,214 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:39:52,214 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,214 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:39:52,214 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:39:52,214 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,214 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:39:52,214 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:39:52,214 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,214 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:39:52,214 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,214 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:39:52,214 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:39:52,214 - on stmt: jump 176
DEBUG 2024-06-11 13:39:52,214 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:39:52,214 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847DD890>
DEBUG 2024-06-11 13:39:52,214 - on stmt: jump 178
DEBUG 2024-06-11 13:39:52,214 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:39:52,214 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847DD890>
DEBUG 2024-06-11 13:39:52,214 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:39:52,214 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:39:52,214 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:39:52,214 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:39:52,214 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:39:52,214 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:39:52,214 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847DD890>
DEBUG 2024-06-11 13:39:52,214 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:39:52,214 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,214 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,214 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,214 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 13:39:52,214 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 13:39:52,214 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 13:39:52,214 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,214 - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,214 - on stmt: eta = index_frac.1 - offset.1
DEBUG 2024-06-11 13:39:52,214 - replaced with: eta.1 = index_frac.1 - offset.1
DEBUG 2024-06-11 13:39:52,214 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:39:52,214 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:39:52,214 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 13:39:52,214 - on stmt: $binop_sub318.31 = nwin - offset.1
DEBUG 2024-06-11 13:39:52,214 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:39:52,214 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,214 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:39:52,214 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,214 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:39:52,214 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:39:52,214 - on stmt: jump 374
DEBUG 2024-06-11 13:39:52,214 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:39:52,216 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847DD890>
DEBUG 2024-06-11 13:39:52,216 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:39:52,216 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:39:52,216 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:39:52,216 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:39:52,216 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:39:52,216 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:39:52,216 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847DD890>
DEBUG 2024-06-11 13:39:52,216 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:39:52,216 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:39:52,216 - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG 2024-06-11 13:39:52,216 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,216 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:39:52,216 - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG 2024-06-11 13:39:52,216 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,216 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:39:52,216 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:39:52,216 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,216 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 13:39:52,216 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,216 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:39:52,216 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:39:52,216 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:39:52,216 - on stmt: jump 374
DEBUG 2024-06-11 13:39:52,216 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:39:52,216 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847DD890>
DEBUG 2024-06-11 13:39:52,216 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 13:39:52,216 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 13:39:52,216 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 13:39:52,216 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,216 - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,216 - on stmt: eta = index_frac.2 - offset.2
DEBUG 2024-06-11 13:39:52,216 - replaced with: eta.2 = index_frac.2 - offset.2
DEBUG 2024-06-11 13:39:52,216 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:39:52,216 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 13:39:52,216 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:39:52,216 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:39:52,216 - on stmt: $binop_sub590.23 = nwin - offset.2
DEBUG 2024-06-11 13:39:52,216 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:39:52,216 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,216 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:39:52,216 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,216 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:39:52,216 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:39:52,216 - on stmt: jump 646
DEBUG 2024-06-11 13:39:52,216 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:39:52,216 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847DD890>
DEBUG 2024-06-11 13:39:52,216 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:39:52,216 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:39:52,216 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:39:52,216 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:39:52,216 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:39:52,216 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:39:52,216 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847DD890>
DEBUG 2024-06-11 13:39:52,216 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:39:52,216 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:39:52,216 - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG 2024-06-11 13:39:52,216 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,216 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:39:52,216 - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG 2024-06-11 13:39:52,216 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,216 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:39:52,216 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:39:52,216 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,216 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 13:39:52,216 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:39:52,216 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:39:52,216 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,216 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:39:52,216 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:39:52,216 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:39:52,216 - on stmt: jump 646
DEBUG 2024-06-11 13:39:52,216 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:39:52,216 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847DD890>
DEBUG 2024-06-11 13:39:52,216 - on stmt: jump 176
DEBUG 2024-06-11 13:39:52,216 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:39:52,216 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847DD890>
DEBUG 2024-06-11 13:39:52,216 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:39:52,216 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:39:52,216 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:39:52,216 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000021E847BC190>],
             180: [<numba.core.ir.Assign object at 0x0000021E847CBD50>],
             500: [<numba.core.ir.Assign object at 0x0000021E847CB410>]})
DEBUG 2024-06-11 13:39:52,216 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:39:52,216 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847DD890>
DEBUG 2024-06-11 13:39:52,216 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:39:52,216 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:39:52,216 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:39:52,216 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:39:52,216 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:39:52,216 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:39:52,216 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:39:52,216 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,216 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:39:52,216 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,216 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,216 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:39:52,216 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,216 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,216 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:39:52,216 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,216 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,216 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:39:52,216 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:39:52,216 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,216 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:39:52,216 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:39:52,216 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,216 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:39:52,216 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:39:52,216 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,216 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:39:52,216 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,216 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:39:52,216 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:39:52,216 - on stmt: jump 176
DEBUG 2024-06-11 13:39:52,216 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:39:52,216 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847DD890>
DEBUG 2024-06-11 13:39:52,216 - on stmt: jump 178
DEBUG 2024-06-11 13:39:52,216 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:39:52,216 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847DD890>
DEBUG 2024-06-11 13:39:52,220 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:39:52,220 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:39:52,220 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:39:52,220 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:39:52,220 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:39:52,220 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:39:52,220 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847DD890>
DEBUG 2024-06-11 13:39:52,220 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:39:52,220 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,220 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,220 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,221 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 13:39:52,221 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 13:39:52,221 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 13:39:52,221 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,221 - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,221 - on stmt: eta.1 = index_frac.1 - offset.1
DEBUG 2024-06-11 13:39:52,221 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:39:52,221 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:39:52,221 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 13:39:52,221 - on stmt: $binop_sub318.31 = nwin - offset.1
DEBUG 2024-06-11 13:39:52,221 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:39:52,221 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,221 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:39:52,221 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,221 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:39:52,221 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:39:52,221 - on stmt: jump 374
DEBUG 2024-06-11 13:39:52,221 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:39:52,221 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847DD890>
DEBUG 2024-06-11 13:39:52,222 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:39:52,222 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:39:52,222 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:39:52,222 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:39:52,222 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:39:52,222 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:39:52,222 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847DD890>
DEBUG 2024-06-11 13:39:52,222 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:39:52,222 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:39:52,222 - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG 2024-06-11 13:39:52,222 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,222 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:39:52,222 - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG 2024-06-11 13:39:52,222 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,222 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:39:52,222 - find_def var='eta' stmt=$binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 13:39:52,222 - find_def_from_top label 376
DEBUG 2024-06-11 13:39:52,222 - idom 374 from label 376
DEBUG 2024-06-11 13:39:52,222 - find_def_from_bottom label 374
DEBUG 2024-06-11 13:39:52,222 - find_def_from_top label 374
DEBUG 2024-06-11 13:39:52,222 - idom 180 from label 374
DEBUG 2024-06-11 13:39:52,222 - find_def_from_bottom label 180
DEBUG 2024-06-11 13:39:52,222 - replaced with: $binop_mul432.18 = eta.1 * $422binary_subscr.17
DEBUG 2024-06-11 13:39:52,222 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:39:52,222 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,222 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 13:39:52,222 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,222 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:39:52,222 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:39:52,222 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:39:52,222 - on stmt: jump 374
DEBUG 2024-06-11 13:39:52,222 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:39:52,222 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847DD890>
DEBUG 2024-06-11 13:39:52,222 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 13:39:52,222 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 13:39:52,222 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 13:39:52,222 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,222 - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,222 - on stmt: eta.2 = index_frac.2 - offset.2
DEBUG 2024-06-11 13:39:52,222 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:39:52,222 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 13:39:52,222 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:39:52,222 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:39:52,222 - on stmt: $binop_sub590.23 = nwin - offset.2
DEBUG 2024-06-11 13:39:52,222 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:39:52,222 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,222 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:39:52,222 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,222 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:39:52,222 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:39:52,222 - on stmt: jump 646
DEBUG 2024-06-11 13:39:52,222 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:39:52,222 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847DD890>
DEBUG 2024-06-11 13:39:52,222 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:39:52,222 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:39:52,222 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:39:52,222 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:39:52,222 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:39:52,222 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:39:52,222 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847DD890>
DEBUG 2024-06-11 13:39:52,222 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:39:52,222 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:39:52,222 - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG 2024-06-11 13:39:52,222 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,222 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:39:52,222 - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG 2024-06-11 13:39:52,222 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,222 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:39:52,222 - find_def var='eta' stmt=$binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 13:39:52,222 - find_def_from_top label 648
DEBUG 2024-06-11 13:39:52,222 - idom 646 from label 648
DEBUG 2024-06-11 13:39:52,222 - find_def_from_bottom label 646
DEBUG 2024-06-11 13:39:52,222 - find_def_from_top label 646
DEBUG 2024-06-11 13:39:52,222 - idom 500 from label 646
DEBUG 2024-06-11 13:39:52,222 - find_def_from_bottom label 500
DEBUG 2024-06-11 13:39:52,222 - replaced with: $binop_mul704.18 = eta.2 * $694binary_subscr.17
DEBUG 2024-06-11 13:39:52,222 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:39:52,222 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,222 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 13:39:52,222 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:39:52,222 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:39:52,222 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,222 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:39:52,222 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:39:52,222 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:39:52,222 - on stmt: jump 646
DEBUG 2024-06-11 13:39:52,222 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:39:52,222 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847DD890>
DEBUG 2024-06-11 13:39:52,222 - on stmt: jump 176
DEBUG 2024-06-11 13:39:52,222 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:39:52,222 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847DD890>
DEBUG 2024-06-11 13:39:52,222 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:39:52,222 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:39:52,222 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:39:52,222 - Fix SSA violator on var weight
DEBUG 2024-06-11 13:39:52,222 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:39:52,222 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847BEE10>
DEBUG 2024-06-11 13:39:52,222 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:39:52,222 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:39:52,222 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:39:52,222 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:39:52,222 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:39:52,222 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:39:52,222 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:39:52,222 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,222 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:39:52,222 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,222 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,222 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:39:52,222 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,222 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,222 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:39:52,222 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,222 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,222 - first assign: weight
DEBUG 2024-06-11 13:39:52,222 - replaced with: weight = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,222 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:39:52,222 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:39:52,222 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,229 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:39:52,229 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:39:52,229 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,229 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:39:52,229 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:39:52,229 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,229 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:39:52,229 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,229 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:39:52,229 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:39:52,229 - on stmt: jump 176
DEBUG 2024-06-11 13:39:52,229 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:39:52,229 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847BEE10>
DEBUG 2024-06-11 13:39:52,229 - on stmt: jump 178
DEBUG 2024-06-11 13:39:52,229 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:39:52,229 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847BEE10>
DEBUG 2024-06-11 13:39:52,229 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:39:52,229 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:39:52,229 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:39:52,229 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:39:52,229 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:39:52,229 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:39:52,229 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847BEE10>
DEBUG 2024-06-11 13:39:52,229 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:39:52,229 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,230 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,230 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,230 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 13:39:52,230 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 13:39:52,230 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 13:39:52,230 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,230 - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,230 - on stmt: eta.1 = index_frac.1 - offset.1
DEBUG 2024-06-11 13:39:52,230 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:39:52,230 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:39:52,231 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 13:39:52,231 - on stmt: $binop_sub318.31 = nwin - offset.1
DEBUG 2024-06-11 13:39:52,231 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:39:52,231 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,231 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:39:52,231 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,231 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:39:52,231 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:39:52,231 - on stmt: jump 374
DEBUG 2024-06-11 13:39:52,231 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:39:52,231 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847BEE10>
DEBUG 2024-06-11 13:39:52,231 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:39:52,231 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:39:52,231 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:39:52,231 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:39:52,231 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:39:52,231 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:39:52,231 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847BEE10>
DEBUG 2024-06-11 13:39:52,231 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:39:52,231 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:39:52,231 - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG 2024-06-11 13:39:52,231 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,231 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:39:52,231 - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG 2024-06-11 13:39:52,231 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,231 - on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
DEBUG 2024-06-11 13:39:52,231 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:39:52,231 - replaced with: weight.1 = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:39:52,231 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,231 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 13:39:52,231 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,231 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:39:52,231 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:39:52,231 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:39:52,231 - on stmt: jump 374
DEBUG 2024-06-11 13:39:52,231 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:39:52,231 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847BEE10>
DEBUG 2024-06-11 13:39:52,231 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 13:39:52,231 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 13:39:52,231 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 13:39:52,231 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,231 - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,231 - on stmt: eta.2 = index_frac.2 - offset.2
DEBUG 2024-06-11 13:39:52,231 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:39:52,231 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 13:39:52,231 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:39:52,231 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:39:52,231 - on stmt: $binop_sub590.23 = nwin - offset.2
DEBUG 2024-06-11 13:39:52,231 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:39:52,231 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,231 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:39:52,231 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,231 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:39:52,231 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:39:52,231 - on stmt: jump 646
DEBUG 2024-06-11 13:39:52,231 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:39:52,231 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847BEE10>
DEBUG 2024-06-11 13:39:52,231 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:39:52,231 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:39:52,231 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:39:52,231 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:39:52,231 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:39:52,231 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:39:52,231 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847BEE10>
DEBUG 2024-06-11 13:39:52,231 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:39:52,231 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:39:52,231 - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG 2024-06-11 13:39:52,231 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,231 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:39:52,231 - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG 2024-06-11 13:39:52,231 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,231 - on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
DEBUG 2024-06-11 13:39:52,231 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:39:52,231 - replaced with: weight.2 = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:39:52,231 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,231 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 13:39:52,231 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:39:52,231 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:39:52,231 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,231 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:39:52,231 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:39:52,231 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:39:52,231 - on stmt: jump 646
DEBUG 2024-06-11 13:39:52,231 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:39:52,231 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847BEE10>
DEBUG 2024-06-11 13:39:52,231 - on stmt: jump 176
DEBUG 2024-06-11 13:39:52,231 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:39:52,231 - Running <numba.core.ssa._FreshVarHandler object at 0x0000021E847BEE10>
DEBUG 2024-06-11 13:39:52,231 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:39:52,231 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:39:52,231 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:39:52,231 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000021E847CB290>],
             376: [<numba.core.ir.Assign object at 0x0000021E847CB090>],
             648: [<numba.core.ir.Assign object at 0x0000021E847CA250>]})
DEBUG 2024-06-11 13:39:52,231 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 13:39:52,231 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847BEE10>
DEBUG 2024-06-11 13:39:52,231 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 13:39:52,231 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 13:39:52,231 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 13:39:52,231 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 13:39:52,231 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 13:39:52,231 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 13:39:52,231 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 13:39:52,231 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,231 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 13:39:52,231 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,231 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,231 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 13:39:52,231 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,231 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,237 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 13:39:52,237 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,237 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 13:39:52,237 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 13:39:52,237 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 13:39:52,237 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,237 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 13:39:52,237 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 13:39:52,237 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,237 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 13:39:52,237 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 13:39:52,237 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,237 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 13:39:52,237 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,237 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 13:39:52,237 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 13:39:52,237 - on stmt: jump 176
DEBUG 2024-06-11 13:39:52,237 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 13:39:52,237 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847BEE10>
DEBUG 2024-06-11 13:39:52,237 - on stmt: jump 178
DEBUG 2024-06-11 13:39:52,237 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 13:39:52,237 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847BEE10>
DEBUG 2024-06-11 13:39:52,237 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 13:39:52,237 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 13:39:52,237 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 13:39:52,237 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 13:39:52,237 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 13:39:52,237 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 13:39:52,237 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847BEE10>
DEBUG 2024-06-11 13:39:52,237 - on stmt: t = $phi180.1
DEBUG 2024-06-11 13:39:52,237 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,239 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,239 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,239 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 13:39:52,239 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 13:39:52,239 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 13:39:52,239 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,239 - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,239 - on stmt: eta.1 = index_frac.1 - offset.1
DEBUG 2024-06-11 13:39:52,239 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:39:52,239 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 13:39:52,239 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 13:39:52,239 - on stmt: $binop_sub318.31 = nwin - offset.1
DEBUG 2024-06-11 13:39:52,239 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 13:39:52,239 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,239 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:39:52,239 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,239 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 13:39:52,239 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 13:39:52,239 - on stmt: jump 374
DEBUG 2024-06-11 13:39:52,239 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 13:39:52,239 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847BEE10>
DEBUG 2024-06-11 13:39:52,239 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 13:39:52,239 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 13:39:52,239 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 13:39:52,239 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 13:39:52,239 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 13:39:52,239 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 13:39:52,239 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847BEE10>
DEBUG 2024-06-11 13:39:52,239 - on stmt: i = $phi376.2
DEBUG 2024-06-11 13:39:52,239 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 13:39:52,239 - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG 2024-06-11 13:39:52,239 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,239 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 13:39:52,239 - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG 2024-06-11 13:39:52,239 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,239 - on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
DEBUG 2024-06-11 13:39:52,239 - on stmt: weight.1 = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 13:39:52,239 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,239 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 13:39:52,239 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,239 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:39:52,239 - find_def var='weight' stmt=$binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 13:39:52,239 - replaced with: $binop_mul482.29 = weight.1 * $472binary_subscr.28
DEBUG 2024-06-11 13:39:52,239 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:39:52,239 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 13:39:52,239 - on stmt: jump 374
DEBUG 2024-06-11 13:39:52,239 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 13:39:52,239 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847BEE10>
DEBUG 2024-06-11 13:39:52,239 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 13:39:52,239 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 13:39:52,239 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 13:39:52,239 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 13:39:52,239 - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,239 - on stmt: eta.2 = index_frac.2 - offset.2
DEBUG 2024-06-11 13:39:52,239 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 13:39:52,239 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 13:39:52,239 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 13:39:52,239 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 13:39:52,239 - on stmt: $binop_sub590.23 = nwin - offset.2
DEBUG 2024-06-11 13:39:52,239 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 13:39:52,239 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,239 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 13:39:52,239 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 13:39:52,239 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 13:39:52,239 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 13:39:52,239 - on stmt: jump 646
DEBUG 2024-06-11 13:39:52,239 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 13:39:52,239 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847BEE10>
DEBUG 2024-06-11 13:39:52,239 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 13:39:52,239 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 13:39:52,239 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 13:39:52,239 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 13:39:52,239 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 13:39:52,239 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 13:39:52,239 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847BEE10>
DEBUG 2024-06-11 13:39:52,239 - on stmt: k = $phi648.2
DEBUG 2024-06-11 13:39:52,239 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 13:39:52,239 - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG 2024-06-11 13:39:52,239 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,239 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 13:39:52,239 - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG 2024-06-11 13:39:52,239 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,239 - on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
DEBUG 2024-06-11 13:39:52,239 - on stmt: weight.2 = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 13:39:52,239 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,239 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 13:39:52,239 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 13:39:52,239 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 13:39:52,239 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 13:39:52,239 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:39:52,239 - find_def var='weight' stmt=$binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 13:39:52,239 - replaced with: $binop_mul760.31 = weight.2 * $750binary_subscr.30
DEBUG 2024-06-11 13:39:52,239 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 13:39:52,239 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 13:39:52,239 - on stmt: jump 646
DEBUG 2024-06-11 13:39:52,239 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 13:39:52,239 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847BEE10>
DEBUG 2024-06-11 13:39:52,239 - on stmt: jump 176
DEBUG 2024-06-11 13:39:52,239 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 13:39:52,239 - Running <numba.core.ssa._FixSSAVars object at 0x0000021E847BEE10>
DEBUG 2024-06-11 13:39:52,239 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 13:39:52,239 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 13:39:52,239 - on stmt: return $784return_value.1
DEBUG 2024-06-11 13:39:53,108 - bytecode dump:
>          0	NOP(arg=None, lineno=425)
           2	RESUME(arg=0, lineno=425)
           4	LOAD_FAST(arg=0, lineno=428)
           6	LOAD_CONST(arg=1, lineno=428)
           8	BINARY_SUBSCR(arg=None, lineno=428)
          18	LOAD_FAST(arg=0, lineno=428)
          20	LOAD_CONST(arg=2, lineno=428)
          22	BINARY_SUBSCR(arg=None, lineno=428)
          32	BINARY_OP(arg=0, lineno=428)
          36	LOAD_CONST(arg=3, lineno=428)
          38	LOAD_FAST(arg=0, lineno=428)
          40	LOAD_CONST(arg=4, lineno=428)
          42	BINARY_SUBSCR(arg=None, lineno=428)
          52	BINARY_OP(arg=5, lineno=428)
          56	BINARY_OP(arg=10, lineno=428)
          60	STORE_FAST(arg=1, lineno=428)
          62	LOAD_FAST(arg=0, lineno=429)
          64	LOAD_CONST(arg=1, lineno=429)
          66	BINARY_SUBSCR(arg=None, lineno=429)
          76	LOAD_FAST(arg=0, lineno=429)
          78	LOAD_CONST(arg=2, lineno=429)
          80	BINARY_SUBSCR(arg=None, lineno=429)
          90	BINARY_OP(arg=10, lineno=429)
          94	LOAD_CONST(arg=3, lineno=429)
          96	BINARY_OP(arg=11, lineno=429)
         100	STORE_FAST(arg=2, lineno=429)
         102	LOAD_GLOBAL(arg=1, lineno=431)
         114	LOAD_ATTR(arg=1, lineno=431)
         124	LOAD_FAST(arg=2, lineno=431)
         126	PRECALL(arg=1, lineno=431)
         130	CALL(arg=1, lineno=431)
         140	LOAD_GLOBAL(arg=1, lineno=431)
         152	LOAD_ATTR(arg=1, lineno=431)
         162	LOAD_FAST(arg=1, lineno=431)
         164	PRECALL(arg=1, lineno=431)
         168	CALL(arg=1, lineno=431)
         178	COMPARE_OP(arg=5, lineno=431)
         184	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=431)
         186	LOAD_CONST(arg=4, lineno=434)
         188	RETURN_VALUE(arg=None, lineno=434)
>        190	LOAD_FAST(arg=2, lineno=436)
         192	UNARY_NEGATIVE(arg=None, lineno=436)
         194	LOAD_FAST(arg=1, lineno=436)
         196	BINARY_OP(arg=11, lineno=436)
         200	RETURN_VALUE(arg=None, lineno=436)
DEBUG 2024-06-11 13:39:53,108 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 13:39:53,108 - stack: []
DEBUG 2024-06-11 13:39:53,108 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=0, inst=NOP(arg=None, lineno=425)
DEBUG 2024-06-11 13:39:53,108 - stack []
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=2, inst=RESUME(arg=0, lineno=425)
DEBUG 2024-06-11 13:39:53,108 - stack []
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=428)
DEBUG 2024-06-11 13:39:53,108 - stack []
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=428)
DEBUG 2024-06-11 13:39:53,108 - stack ['$x4.0']
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=428)
DEBUG 2024-06-11 13:39:53,108 - stack ['$x4.0', '$const6.1']
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=428)
DEBUG 2024-06-11 13:39:53,108 - stack ['$8binary_subscr.2']
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=428)
DEBUG 2024-06-11 13:39:53,108 - stack ['$8binary_subscr.2', '$x18.3']
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=428)
DEBUG 2024-06-11 13:39:53,108 - stack ['$8binary_subscr.2', '$x18.3', '$const20.4']
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=32, inst=BINARY_OP(arg=0, lineno=428)
DEBUG 2024-06-11 13:39:53,108 - stack ['$8binary_subscr.2', '$22binary_subscr.5']
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=36, inst=LOAD_CONST(arg=3, lineno=428)
DEBUG 2024-06-11 13:39:53,108 - stack ['$binop_add32.6']
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=428)
DEBUG 2024-06-11 13:39:53,108 - stack ['$binop_add32.6', '$const36.7']
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=428)
DEBUG 2024-06-11 13:39:53,108 - stack ['$binop_add32.6', '$const36.7', '$x38.8']
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=428)
DEBUG 2024-06-11 13:39:53,108 - stack ['$binop_add32.6', '$const36.7', '$x38.8', '$const40.9']
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=52, inst=BINARY_OP(arg=5, lineno=428)
DEBUG 2024-06-11 13:39:53,108 - stack ['$binop_add32.6', '$const36.7', '$42binary_subscr.10']
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=56, inst=BINARY_OP(arg=10, lineno=428)
DEBUG 2024-06-11 13:39:53,108 - stack ['$binop_add32.6', '$binop_mul52.11']
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=60, inst=STORE_FAST(arg=1, lineno=428)
DEBUG 2024-06-11 13:39:53,108 - stack ['$binop_sub56.12']
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=62, inst=LOAD_FAST(arg=0, lineno=429)
DEBUG 2024-06-11 13:39:53,108 - stack []
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=429)
DEBUG 2024-06-11 13:39:53,108 - stack ['$x62.13']
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=429)
DEBUG 2024-06-11 13:39:53,108 - stack ['$x62.13', '$const64.14']
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=429)
DEBUG 2024-06-11 13:39:53,108 - stack ['$66binary_subscr.15']
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=78, inst=LOAD_CONST(arg=2, lineno=429)
DEBUG 2024-06-11 13:39:53,108 - stack ['$66binary_subscr.15', '$x76.16']
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=80, inst=BINARY_SUBSCR(arg=None, lineno=429)
DEBUG 2024-06-11 13:39:53,108 - stack ['$66binary_subscr.15', '$x76.16', '$const78.17']
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=90, inst=BINARY_OP(arg=10, lineno=429)
DEBUG 2024-06-11 13:39:53,108 - stack ['$66binary_subscr.15', '$80binary_subscr.18']
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=94, inst=LOAD_CONST(arg=3, lineno=429)
DEBUG 2024-06-11 13:39:53,108 - stack ['$binop_sub90.19']
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=96, inst=BINARY_OP(arg=11, lineno=429)
DEBUG 2024-06-11 13:39:53,108 - stack ['$binop_sub90.19', '$const94.20']
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=429)
DEBUG 2024-06-11 13:39:53,108 - stack ['$binop_truediv96.21']
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=102, inst=LOAD_GLOBAL(arg=1, lineno=431)
DEBUG 2024-06-11 13:39:53,108 - stack []
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=114, inst=LOAD_ATTR(arg=1, lineno=431)
DEBUG 2024-06-11 13:39:53,108 - stack ['$null$102.23', '$102load_global.22']
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=124, inst=LOAD_FAST(arg=2, lineno=431)
DEBUG 2024-06-11 13:39:53,108 - stack ['$null$102.23', '$114load_attr.24']
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=126, inst=PRECALL(arg=1, lineno=431)
DEBUG 2024-06-11 13:39:53,108 - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=130, inst=CALL(arg=1, lineno=431)
DEBUG 2024-06-11 13:39:53,108 - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=140, inst=LOAD_GLOBAL(arg=1, lineno=431)
DEBUG 2024-06-11 13:39:53,108 - stack ['$130call.26']
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=152, inst=LOAD_ATTR(arg=1, lineno=431)
DEBUG 2024-06-11 13:39:53,108 - stack ['$130call.26', '$null$140.28', '$140load_global.27']
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=162, inst=LOAD_FAST(arg=1, lineno=431)
DEBUG 2024-06-11 13:39:53,108 - stack ['$130call.26', '$null$140.28', '$152load_attr.29']
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=164, inst=PRECALL(arg=1, lineno=431)
DEBUG 2024-06-11 13:39:53,108 - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=168, inst=CALL(arg=1, lineno=431)
DEBUG 2024-06-11 13:39:53,108 - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=178, inst=COMPARE_OP(arg=5, lineno=431)
DEBUG 2024-06-11 13:39:53,108 - stack ['$130call.26', '$168call.31']
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=184, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=431)
DEBUG 2024-06-11 13:39:53,108 - stack ['$178compare_op.32']
DEBUG 2024-06-11 13:39:53,108 - end state. edges=[Edge(pc=186, stack=(), blockstack=(), npush=0), Edge(pc=190, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 13:39:53,108 - pending: deque([State(pc_initial=186 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
DEBUG 2024-06-11 13:39:53,108 - stack: []
DEBUG 2024-06-11 13:39:53,108 - state.pc_initial: State(pc_initial=186 nstack_initial=0)
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=186, inst=LOAD_CONST(arg=4, lineno=434)
DEBUG 2024-06-11 13:39:53,108 - stack []
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=188, inst=RETURN_VALUE(arg=None, lineno=434)
DEBUG 2024-06-11 13:39:53,108 - stack ['$const186.0']
DEBUG 2024-06-11 13:39:53,108 - end state. edges=[]
DEBUG 2024-06-11 13:39:53,108 - pending: deque([State(pc_initial=190 nstack_initial=0)])
DEBUG 2024-06-11 13:39:53,108 - stack: []
DEBUG 2024-06-11 13:39:53,108 - state.pc_initial: State(pc_initial=190 nstack_initial=0)
DEBUG 2024-06-11 13:39:53,108 - dispatch pc=190, inst=LOAD_FAST(arg=2, lineno=436)
DEBUG 2024-06-11 13:39:53,108 - stack []
DEBUG 2024-06-11 13:39:53,112 - dispatch pc=192, inst=UNARY_NEGATIVE(arg=None, lineno=436)
DEBUG 2024-06-11 13:39:53,112 - stack ['$b190.0']
DEBUG 2024-06-11 13:39:53,112 - dispatch pc=194, inst=LOAD_FAST(arg=1, lineno=436)
DEBUG 2024-06-11 13:39:53,112 - stack ['$192unary_negative.1']
DEBUG 2024-06-11 13:39:53,112 - dispatch pc=196, inst=BINARY_OP(arg=11, lineno=436)
DEBUG 2024-06-11 13:39:53,112 - stack ['$192unary_negative.1', '$a194.2']
DEBUG 2024-06-11 13:39:53,112 - dispatch pc=200, inst=RETURN_VALUE(arg=None, lineno=436)
DEBUG 2024-06-11 13:39:53,112 - stack ['$binop_truediv196.3']
DEBUG 2024-06-11 13:39:53,112 - end state. edges=[]
DEBUG 2024-06-11 13:39:53,112 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 13:39:53,112 - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=186 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set()})
DEBUG 2024-06-11 13:39:53,112 - defmap: {}
DEBUG 2024-06-11 13:39:53,112 - phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 13:39:53,112 - changing phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 13:39:53,112 - keep phismap: {}
DEBUG 2024-06-11 13:39:53,112 - new_out: defaultdict(<class 'dict'>, {})
DEBUG 2024-06-11 13:39:53,112 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 13:39:53,112 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4'}), (22, {'index': '$const20.4', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'op': '+', 'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$binop_add32.6'}), (34, {}), (36, {'res': '$const36.7'}), (38, {'res': '$x38.8'}), (40, {'res': '$const40.9'}), (42, {'index': '$const40.9', 'target': '$x38.8', 'res': '$42binary_subscr.10'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'op': '*', 'lhs': '$const36.7', 'rhs': '$42binary_subscr.10', 'res': '$binop_mul52.11'}), (54, {}), (56, {'op': '-', 'lhs': '$binop_add32.6', 'rhs': '$binop_mul52.11', 'res': '$binop_sub56.12'}), (58, {}), (60, {'value': '$binop_sub56.12'}), (62, {'res': '$x62.13'}), (64, {'res': '$const64.14'}), (66, {'index': '$const64.14', 'target': '$x62.13', 'res': '$66binary_subscr.15'}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {'res': '$x76.16'}), (78, {'res': '$const78.17'}), (80, {'index': '$const78.17', 'target': '$x76.16', 'res': '$80binary_subscr.18'}), (82, {}), (84, {}), (86, {}), (88, {}), (90, {'op': '-', 'lhs': '$66binary_subscr.15', 'rhs': '$80binary_subscr.18', 'res': '$binop_sub90.19'}), (92, {}), (94, {'res': '$const94.20'}), (96, {'op': '/', 'lhs': '$binop_sub90.19', 'rhs': '$const94.20', 'res': '$binop_truediv96.21'}), (98, {}), (100, {'value': '$binop_truediv96.21'}), (102, {'idx': 0, 'res': '$102load_global.22'}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'item': '$102load_global.22', 'res': '$114load_attr.24'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$b124.25'}), (126, {}), (128, {}), (130, {'func': '$114load_attr.24', 'args': ['$b124.25'], 'kw_names': None, 'res': '$130call.26'}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {'idx': 0, 'res': '$140load_global.27'}), (142, {}), (144, {}), (146, {}), (148, {}), (150, {}), (152, {'item': '$140load_global.27', 'res': '$152load_attr.29'}), (154, {}), (156, {}), (158, {}), (160, {}), (162, {'res': '$a162.30'}), (164, {}), (166, {}), (168, {'func': '$152load_attr.29', 'args': ['$a162.30'], 'kw_names': None, 'res': '$168call.31'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {'lhs': '$130call.26', 'rhs': '$168call.31', 'res': '$178compare_op.32'}), (180, {}), (182, {}), (184, {'pred': '$178compare_op.32'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={186: (), 190: ()})
DEBUG 2024-06-11 13:39:53,112 - block_infos State(pc_initial=186 nstack_initial=0):
AdaptBlockInfo(insts=((186, {'res': '$const186.0'}), (188, {'retval': '$const186.0', 'castval': '$188return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 13:39:53,112 - block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$b190.0'}), (192, {'value': '$b190.0', 'res': '$192unary_negative.1'}), (194, {'res': '$a194.2'}), (196, {'op': '/', 'lhs': '$192unary_negative.1', 'rhs': '$a194.2', 'res': '$binop_truediv196.3'}), (198, {}), (200, {'retval': '$binop_truediv196.3', 'castval': '$200return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 13:39:53,113 - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1 = const(int, 1)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $const20.4 = const(int, -1)              ['$const20.4']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4', 'x']
    $binop_add32.6 = $8binary_subscr.2 + $22binary_subscr.5 ['$22binary_subscr.5', '$8binary_subscr.2', '$binop_add32.6']
    $const36.7 = const(int, 2)               ['$const36.7']
    $const40.9 = const(int, 0)               ['$const40.9']
    $42binary_subscr.10 = getitem(value=x, index=$const40.9, fn=<built-in function getitem>) ['$42binary_subscr.10', '$const40.9', 'x']
    $binop_mul52.11 = $const36.7 * $42binary_subscr.10 ['$42binary_subscr.10', '$binop_mul52.11', '$const36.7']
    a = $binop_add32.6 - $binop_mul52.11     ['$binop_add32.6', '$binop_mul52.11', 'a']
    $const64.14 = const(int, 1)              ['$const64.14']
    $66binary_subscr.15 = getitem(value=x, index=$const64.14, fn=<built-in function getitem>) ['$66binary_subscr.15', '$const64.14', 'x']
    $const78.17 = const(int, -1)             ['$const78.17']
    $80binary_subscr.18 = getitem(value=x, index=$const78.17, fn=<built-in function getitem>) ['$80binary_subscr.18', '$const78.17', 'x']
    $binop_sub90.19 = $66binary_subscr.15 - $80binary_subscr.18 ['$66binary_subscr.15', '$80binary_subscr.18', '$binop_sub90.19']
    $const94.20 = const(int, 2)              ['$const94.20']
    b = $binop_sub90.19 / $const94.20        ['$binop_sub90.19', '$const94.20', 'b']
    $102load_global.22 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$102load_global.22']
    $114load_attr.24 = getattr(value=$102load_global.22, attr=abs) ['$102load_global.22', '$114load_attr.24']
    $130call.26 = call $114load_attr.24(b, func=$114load_attr.24, args=[Var(b, pitch.py:429)], kws=(), vararg=None, varkwarg=None, target=None) ['$114load_attr.24', '$130call.26', 'b']
    $140load_global.27 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$140load_global.27']
    $152load_attr.29 = getattr(value=$140load_global.27, attr=abs) ['$140load_global.27', '$152load_attr.29']
    $168call.31 = call $152load_attr.29(a, func=$152load_attr.29, args=[Var(a, pitch.py:428)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_attr.29', '$168call.31', 'a']
    $178compare_op.32 = $130call.26 >= $168call.31 ['$130call.26', '$168call.31', '$178compare_op.32']
    bool184 = global(bool: <class 'bool'>)   ['bool184']
    $184pred = call bool184($178compare_op.32, func=bool184, args=(Var($178compare_op.32, pitch.py:431),), kws=(), vararg=None, varkwarg=None, target=None) ['$178compare_op.32', '$184pred', 'bool184']
    branch $184pred, 186, 190                ['$184pred']
label 186:
    $const186.0 = const(int, 0)              ['$const186.0']
    $188return_value.1 = cast(value=$const186.0) ['$188return_value.1', '$const186.0']
    return $188return_value.1                ['$188return_value.1']
label 190:
    $192unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$192unary_negative.1', 'b']
    $binop_truediv196.3 = $192unary_negative.1 / a ['$192unary_negative.1', '$binop_truediv196.3', 'a']
    $200return_value.4 = cast(value=$binop_truediv196.3) ['$200return_value.4', '$binop_truediv196.3']
    return $200return_value.4                ['$200return_value.4']

INFO 2024-06-11 13:41:20,623 - Training model...
INFO 2024-06-11 13:57:50,335 - Training model...
WARNING 2024-06-11 14:03:40,085 - From C:\Users\Dell\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\backend\common\global_state.py:82: The name tf.reset_default_graph is deprecated. Please use tf.compat.v1.reset_default_graph instead.

DEBUG 2024-06-11 14:22:09,058 - bytecode dump:
>          0	NOP(arg=None, lineno=1141)
           2	RESUME(arg=0, lineno=1141)
           4	LOAD_FAST(arg=0, lineno=1144)
           6	LOAD_CONST(arg=1, lineno=1144)
           8	BINARY_SUBSCR(arg=None, lineno=1144)
          18	STORE_FAST(arg=3, lineno=1144)
          20	LOAD_FAST(arg=1, lineno=1145)
          22	UNARY_NEGATIVE(arg=None, lineno=1145)
          24	LOAD_FAST(arg=3, lineno=1145)
          26	SWAP(arg=2, lineno=1145)
          28	COPY(arg=2, lineno=1145)
          30	COMPARE_OP(arg=1, lineno=1145)
          36	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1145)
          38	LOAD_FAST(arg=1, lineno=1145)
          40	COMPARE_OP(arg=1, lineno=1145)
          46	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1145)
          48	JUMP_FORWARD(arg=2, lineno=1145)
>         50	POP_TOP(arg=None, lineno=1145)
          52	JUMP_FORWARD(arg=2, lineno=1145)
>         54	LOAD_CONST(arg=1, lineno=1146)
          56	STORE_FAST(arg=3, lineno=1146)
>         58	LOAD_FAST(arg=0, lineno=1148)
          60	LOAD_CONST(arg=2, lineno=1148)
          62	BINARY_SUBSCR(arg=None, lineno=1148)
          72	STORE_FAST(arg=4, lineno=1148)
          74	LOAD_FAST(arg=1, lineno=1149)
          76	UNARY_NEGATIVE(arg=None, lineno=1149)
          78	LOAD_FAST(arg=4, lineno=1149)
          80	SWAP(arg=2, lineno=1149)
          82	COPY(arg=2, lineno=1149)
          84	COMPARE_OP(arg=1, lineno=1149)
          90	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1149)
          92	LOAD_FAST(arg=1, lineno=1149)
          94	COMPARE_OP(arg=1, lineno=1149)
         100	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1149)
         102	JUMP_FORWARD(arg=2, lineno=1149)
>        104	POP_TOP(arg=None, lineno=1149)
         106	JUMP_FORWARD(arg=2, lineno=1149)
>        108	LOAD_CONST(arg=1, lineno=1150)
         110	STORE_FAST(arg=4, lineno=1150)
>        112	LOAD_FAST(arg=2, lineno=1152)
         114	POP_JUMP_FORWARD_IF_FALSE(arg=42, lineno=1152)
         116	LOAD_GLOBAL(arg=1, lineno=1153)
         128	LOAD_ATTR(arg=1, lineno=1153)
         138	LOAD_FAST(arg=3, lineno=1153)
         140	PRECALL(arg=1, lineno=1153)
         144	CALL(arg=1, lineno=1153)
         154	LOAD_GLOBAL(arg=1, lineno=1153)
         166	LOAD_ATTR(arg=1, lineno=1153)
         176	LOAD_FAST(arg=4, lineno=1153)
         178	PRECALL(arg=1, lineno=1153)
         182	CALL(arg=1, lineno=1153)
         192	COMPARE_OP(arg=3, lineno=1153)
         198	RETURN_VALUE(arg=None, lineno=1153)
>        200	LOAD_GLOBAL(arg=1, lineno=1155)
         212	LOAD_ATTR(arg=2, lineno=1155)
         222	LOAD_FAST(arg=3, lineno=1155)
         224	PRECALL(arg=1, lineno=1155)
         228	CALL(arg=1, lineno=1155)
         238	LOAD_GLOBAL(arg=1, lineno=1155)
         250	LOAD_ATTR(arg=2, lineno=1155)
         260	LOAD_FAST(arg=4, lineno=1155)
         262	PRECALL(arg=1, lineno=1155)
         266	CALL(arg=1, lineno=1155)
         276	COMPARE_OP(arg=3, lineno=1155)
         282	RETURN_VALUE(arg=None, lineno=1155)
DEBUG 2024-06-11 14:22:09,058 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 14:22:09,058 - stack: []
DEBUG 2024-06-11 14:22:09,058 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 14:22:09,058 - dispatch pc=0, inst=NOP(arg=None, lineno=1141)
DEBUG 2024-06-11 14:22:09,058 - stack []
DEBUG 2024-06-11 14:22:09,058 - dispatch pc=2, inst=RESUME(arg=0, lineno=1141)
DEBUG 2024-06-11 14:22:09,058 - stack []
DEBUG 2024-06-11 14:22:09,058 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1144)
DEBUG 2024-06-11 14:22:09,058 - stack []
DEBUG 2024-06-11 14:22:09,060 - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1144)
DEBUG 2024-06-11 14:22:09,060 - stack ['$x4.0']
DEBUG 2024-06-11 14:22:09,060 - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1144)
DEBUG 2024-06-11 14:22:09,060 - stack ['$x4.0', '$const6.1']
DEBUG 2024-06-11 14:22:09,060 - dispatch pc=18, inst=STORE_FAST(arg=3, lineno=1144)
DEBUG 2024-06-11 14:22:09,060 - stack ['$8binary_subscr.2']
DEBUG 2024-06-11 14:22:09,060 - dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=1145)
DEBUG 2024-06-11 14:22:09,060 - stack []
DEBUG 2024-06-11 14:22:09,060 - dispatch pc=22, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
DEBUG 2024-06-11 14:22:09,060 - stack ['$threshold20.3']
DEBUG 2024-06-11 14:22:09,060 - dispatch pc=24, inst=LOAD_FAST(arg=3, lineno=1145)
DEBUG 2024-06-11 14:22:09,060 - stack ['$22unary_negative.4']
DEBUG 2024-06-11 14:22:09,060 - dispatch pc=26, inst=SWAP(arg=2, lineno=1145)
DEBUG 2024-06-11 14:22:09,060 - stack ['$22unary_negative.4', '$x024.5']
DEBUG 2024-06-11 14:22:09,060 - dispatch pc=28, inst=COPY(arg=2, lineno=1145)
DEBUG 2024-06-11 14:22:09,060 - stack ['$x024.5', '$22unary_negative.4']
DEBUG 2024-06-11 14:22:09,060 - dispatch pc=30, inst=COMPARE_OP(arg=1, lineno=1145)
DEBUG 2024-06-11 14:22:09,060 - stack ['$x024.5', '$22unary_negative.4', '$x024.5']
DEBUG 2024-06-11 14:22:09,060 - dispatch pc=36, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1145)
DEBUG 2024-06-11 14:22:09,060 - stack ['$x024.5', '$30compare_op.6']
DEBUG 2024-06-11 14:22:09,060 - end state. edges=[Edge(pc=38, stack=('$x024.5',), blockstack=(), npush=0), Edge(pc=50, stack=('$x024.5',), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:22:09,061 - pending: deque([State(pc_initial=38 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
DEBUG 2024-06-11 14:22:09,061 - stack: ['$phi38.0']
DEBUG 2024-06-11 14:22:09,061 - state.pc_initial: State(pc_initial=38 nstack_initial=1)
DEBUG 2024-06-11 14:22:09,061 - dispatch pc=38, inst=LOAD_FAST(arg=1, lineno=1145)
DEBUG 2024-06-11 14:22:09,061 - stack ['$phi38.0']
DEBUG 2024-06-11 14:22:09,061 - dispatch pc=40, inst=COMPARE_OP(arg=1, lineno=1145)
DEBUG 2024-06-11 14:22:09,061 - stack ['$phi38.0', '$threshold38.1']
DEBUG 2024-06-11 14:22:09,061 - dispatch pc=46, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1145)
DEBUG 2024-06-11 14:22:09,061 - stack ['$40compare_op.2']
DEBUG 2024-06-11 14:22:09,061 - end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:22:09,061 - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=48 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
DEBUG 2024-06-11 14:22:09,061 - stack: ['$phi50.0']
DEBUG 2024-06-11 14:22:09,061 - state.pc_initial: State(pc_initial=50 nstack_initial=1)
DEBUG 2024-06-11 14:22:09,061 - dispatch pc=50, inst=POP_TOP(arg=None, lineno=1145)
DEBUG 2024-06-11 14:22:09,061 - stack ['$phi50.0']
DEBUG 2024-06-11 14:22:09,061 - dispatch pc=52, inst=JUMP_FORWARD(arg=2, lineno=1145)
DEBUG 2024-06-11 14:22:09,061 - stack []
DEBUG 2024-06-11 14:22:09,061 - end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:22:09,061 - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
DEBUG 2024-06-11 14:22:09,061 - stack: []
DEBUG 2024-06-11 14:22:09,061 - state.pc_initial: State(pc_initial=48 nstack_initial=0)
DEBUG 2024-06-11 14:22:09,061 - dispatch pc=48, inst=JUMP_FORWARD(arg=2, lineno=1145)
DEBUG 2024-06-11 14:22:09,061 - stack []
DEBUG 2024-06-11 14:22:09,061 - end state. edges=[Edge(pc=54, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:22:09,061 - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=54 nstack_initial=0)])
DEBUG 2024-06-11 14:22:09,061 - stack: []
DEBUG 2024-06-11 14:22:09,061 - state.pc_initial: State(pc_initial=58 nstack_initial=0)
DEBUG 2024-06-11 14:22:09,062 - dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1148)
DEBUG 2024-06-11 14:22:09,062 - stack []
DEBUG 2024-06-11 14:22:09,062 - dispatch pc=60, inst=LOAD_CONST(arg=2, lineno=1148)
DEBUG 2024-06-11 14:22:09,062 - stack ['$x58.0']
DEBUG 2024-06-11 14:22:09,062 - dispatch pc=62, inst=BINARY_SUBSCR(arg=None, lineno=1148)
DEBUG 2024-06-11 14:22:09,062 - stack ['$x58.0', '$const60.1']
DEBUG 2024-06-11 14:22:09,062 - dispatch pc=72, inst=STORE_FAST(arg=4, lineno=1148)
DEBUG 2024-06-11 14:22:09,062 - stack ['$62binary_subscr.2']
DEBUG 2024-06-11 14:22:09,062 - dispatch pc=74, inst=LOAD_FAST(arg=1, lineno=1149)
DEBUG 2024-06-11 14:22:09,062 - stack []
DEBUG 2024-06-11 14:22:09,062 - dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=1149)
DEBUG 2024-06-11 14:22:09,062 - stack ['$threshold74.3']
DEBUG 2024-06-11 14:22:09,062 - dispatch pc=78, inst=LOAD_FAST(arg=4, lineno=1149)
DEBUG 2024-06-11 14:22:09,062 - stack ['$76unary_negative.4']
DEBUG 2024-06-11 14:22:09,062 - dispatch pc=80, inst=SWAP(arg=2, lineno=1149)
DEBUG 2024-06-11 14:22:09,062 - stack ['$76unary_negative.4', '$x178.5']
DEBUG 2024-06-11 14:22:09,062 - dispatch pc=82, inst=COPY(arg=2, lineno=1149)
DEBUG 2024-06-11 14:22:09,062 - stack ['$x178.5', '$76unary_negative.4']
DEBUG 2024-06-11 14:22:09,062 - dispatch pc=84, inst=COMPARE_OP(arg=1, lineno=1149)
DEBUG 2024-06-11 14:22:09,062 - stack ['$x178.5', '$76unary_negative.4', '$x178.5']
DEBUG 2024-06-11 14:22:09,062 - dispatch pc=90, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1149)
DEBUG 2024-06-11 14:22:09,062 - stack ['$x178.5', '$84compare_op.6']
DEBUG 2024-06-11 14:22:09,062 - end state. edges=[Edge(pc=92, stack=('$x178.5',), blockstack=(), npush=0), Edge(pc=104, stack=('$x178.5',), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:22:09,062 - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=54 nstack_initial=0), State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1)])
DEBUG 2024-06-11 14:22:09,062 - pending: deque([State(pc_initial=54 nstack_initial=0), State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1)])
DEBUG 2024-06-11 14:22:09,062 - stack: []
DEBUG 2024-06-11 14:22:09,062 - state.pc_initial: State(pc_initial=54 nstack_initial=0)
DEBUG 2024-06-11 14:22:09,062 - dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=1146)
DEBUG 2024-06-11 14:22:09,062 - stack []
DEBUG 2024-06-11 14:22:09,062 - dispatch pc=56, inst=STORE_FAST(arg=3, lineno=1146)
DEBUG 2024-06-11 14:22:09,062 - stack ['$const54.0']
DEBUG 2024-06-11 14:22:09,062 - end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:22:09,062 - pending: deque([State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1), State(pc_initial=58 nstack_initial=0)])
DEBUG 2024-06-11 14:22:09,062 - stack: ['$phi92.0']
DEBUG 2024-06-11 14:22:09,062 - state.pc_initial: State(pc_initial=92 nstack_initial=1)
DEBUG 2024-06-11 14:22:09,062 - dispatch pc=92, inst=LOAD_FAST(arg=1, lineno=1149)
DEBUG 2024-06-11 14:22:09,062 - stack ['$phi92.0']
DEBUG 2024-06-11 14:22:09,062 - dispatch pc=94, inst=COMPARE_OP(arg=1, lineno=1149)
DEBUG 2024-06-11 14:22:09,062 - stack ['$phi92.0', '$threshold92.1']
DEBUG 2024-06-11 14:22:09,062 - dispatch pc=100, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1149)
DEBUG 2024-06-11 14:22:09,062 - stack ['$94compare_op.2']
DEBUG 2024-06-11 14:22:09,062 - end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=112, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:22:09,062 - pending: deque([State(pc_initial=104 nstack_initial=1), State(pc_initial=58 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 14:22:09,063 - stack: ['$phi104.0']
DEBUG 2024-06-11 14:22:09,063 - state.pc_initial: State(pc_initial=104 nstack_initial=1)
DEBUG 2024-06-11 14:22:09,063 - dispatch pc=104, inst=POP_TOP(arg=None, lineno=1149)
DEBUG 2024-06-11 14:22:09,063 - stack ['$phi104.0']
DEBUG 2024-06-11 14:22:09,063 - dispatch pc=106, inst=JUMP_FORWARD(arg=2, lineno=1149)
DEBUG 2024-06-11 14:22:09,063 - stack []
DEBUG 2024-06-11 14:22:09,063 - end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:22:09,063 - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 14:22:09,063 - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 14:22:09,063 - stack: []
DEBUG 2024-06-11 14:22:09,063 - state.pc_initial: State(pc_initial=102 nstack_initial=0)
DEBUG 2024-06-11 14:22:09,063 - dispatch pc=102, inst=JUMP_FORWARD(arg=2, lineno=1149)
DEBUG 2024-06-11 14:22:09,063 - stack []
DEBUG 2024-06-11 14:22:09,063 - end state. edges=[Edge(pc=108, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:22:09,063 - pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=108 nstack_initial=0)])
DEBUG 2024-06-11 14:22:09,063 - stack: []
DEBUG 2024-06-11 14:22:09,063 - state.pc_initial: State(pc_initial=112 nstack_initial=0)
DEBUG 2024-06-11 14:22:09,063 - dispatch pc=112, inst=LOAD_FAST(arg=2, lineno=1152)
DEBUG 2024-06-11 14:22:09,063 - stack []
DEBUG 2024-06-11 14:22:09,063 - dispatch pc=114, inst=POP_JUMP_FORWARD_IF_FALSE(arg=42, lineno=1152)
DEBUG 2024-06-11 14:22:09,063 - stack ['$zero_pos112.0']
DEBUG 2024-06-11 14:22:09,063 - end state. edges=[Edge(pc=116, stack=(), blockstack=(), npush=0), Edge(pc=200, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:22:09,063 - pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0)])
DEBUG 2024-06-11 14:22:09,063 - pending: deque([State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0)])
DEBUG 2024-06-11 14:22:09,063 - stack: []
DEBUG 2024-06-11 14:22:09,063 - state.pc_initial: State(pc_initial=108 nstack_initial=0)
DEBUG 2024-06-11 14:22:09,063 - dispatch pc=108, inst=LOAD_CONST(arg=1, lineno=1150)
DEBUG 2024-06-11 14:22:09,063 - stack []
DEBUG 2024-06-11 14:22:09,063 - dispatch pc=110, inst=STORE_FAST(arg=4, lineno=1150)
DEBUG 2024-06-11 14:22:09,063 - stack ['$const108.0']
DEBUG 2024-06-11 14:22:09,064 - end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:22:09,064 - pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 14:22:09,064 - stack: []
DEBUG 2024-06-11 14:22:09,064 - state.pc_initial: State(pc_initial=116 nstack_initial=0)
DEBUG 2024-06-11 14:22:09,064 - dispatch pc=116, inst=LOAD_GLOBAL(arg=1, lineno=1153)
DEBUG 2024-06-11 14:22:09,064 - stack []
DEBUG 2024-06-11 14:22:09,064 - dispatch pc=128, inst=LOAD_ATTR(arg=1, lineno=1153)
DEBUG 2024-06-11 14:22:09,064 - stack ['$null$116.1', '$116load_global.0']
DEBUG 2024-06-11 14:22:09,064 - dispatch pc=138, inst=LOAD_FAST(arg=3, lineno=1153)
DEBUG 2024-06-11 14:22:09,064 - stack ['$null$116.1', '$128load_attr.2']
DEBUG 2024-06-11 14:22:09,064 - dispatch pc=140, inst=PRECALL(arg=1, lineno=1153)
DEBUG 2024-06-11 14:22:09,064 - stack ['$null$116.1', '$128load_attr.2', '$x0138.3']
DEBUG 2024-06-11 14:22:09,064 - dispatch pc=144, inst=CALL(arg=1, lineno=1153)
DEBUG 2024-06-11 14:22:09,064 - stack ['$null$116.1', '$128load_attr.2', '$x0138.3']
DEBUG 2024-06-11 14:22:09,064 - dispatch pc=154, inst=LOAD_GLOBAL(arg=1, lineno=1153)
DEBUG 2024-06-11 14:22:09,064 - stack ['$144call.4']
DEBUG 2024-06-11 14:22:09,064 - dispatch pc=166, inst=LOAD_ATTR(arg=1, lineno=1153)
DEBUG 2024-06-11 14:22:09,064 - stack ['$144call.4', '$null$154.6', '$154load_global.5']
DEBUG 2024-06-11 14:22:09,064 - dispatch pc=176, inst=LOAD_FAST(arg=4, lineno=1153)
DEBUG 2024-06-11 14:22:09,064 - stack ['$144call.4', '$null$154.6', '$166load_attr.7']
DEBUG 2024-06-11 14:22:09,064 - dispatch pc=178, inst=PRECALL(arg=1, lineno=1153)
DEBUG 2024-06-11 14:22:09,064 - stack ['$144call.4', '$null$154.6', '$166load_attr.7', '$x1176.8']
DEBUG 2024-06-11 14:22:09,064 - dispatch pc=182, inst=CALL(arg=1, lineno=1153)
DEBUG 2024-06-11 14:22:09,064 - stack ['$144call.4', '$null$154.6', '$166load_attr.7', '$x1176.8']
DEBUG 2024-06-11 14:22:09,064 - dispatch pc=192, inst=COMPARE_OP(arg=3, lineno=1153)
DEBUG 2024-06-11 14:22:09,064 - stack ['$144call.4', '$182call.9']
DEBUG 2024-06-11 14:22:09,064 - dispatch pc=198, inst=RETURN_VALUE(arg=None, lineno=1153)
DEBUG 2024-06-11 14:22:09,064 - stack ['$192compare_op.10']
DEBUG 2024-06-11 14:22:09,065 - end state. edges=[]
DEBUG 2024-06-11 14:22:09,065 - pending: deque([State(pc_initial=200 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 14:22:09,065 - stack: []
DEBUG 2024-06-11 14:22:09,065 - state.pc_initial: State(pc_initial=200 nstack_initial=0)
DEBUG 2024-06-11 14:22:09,065 - dispatch pc=200, inst=LOAD_GLOBAL(arg=1, lineno=1155)
DEBUG 2024-06-11 14:22:09,065 - stack []
DEBUG 2024-06-11 14:22:09,065 - dispatch pc=212, inst=LOAD_ATTR(arg=2, lineno=1155)
DEBUG 2024-06-11 14:22:09,065 - stack ['$null$200.1', '$200load_global.0']
DEBUG 2024-06-11 14:22:09,065 - dispatch pc=222, inst=LOAD_FAST(arg=3, lineno=1155)
DEBUG 2024-06-11 14:22:09,065 - stack ['$null$200.1', '$212load_attr.2']
DEBUG 2024-06-11 14:22:09,065 - dispatch pc=224, inst=PRECALL(arg=1, lineno=1155)
DEBUG 2024-06-11 14:22:09,065 - stack ['$null$200.1', '$212load_attr.2', '$x0222.3']
DEBUG 2024-06-11 14:22:09,065 - dispatch pc=228, inst=CALL(arg=1, lineno=1155)
DEBUG 2024-06-11 14:22:09,065 - stack ['$null$200.1', '$212load_attr.2', '$x0222.3']
DEBUG 2024-06-11 14:22:09,065 - dispatch pc=238, inst=LOAD_GLOBAL(arg=1, lineno=1155)
DEBUG 2024-06-11 14:22:09,065 - stack ['$228call.4']
DEBUG 2024-06-11 14:22:09,065 - dispatch pc=250, inst=LOAD_ATTR(arg=2, lineno=1155)
DEBUG 2024-06-11 14:22:09,065 - stack ['$228call.4', '$null$238.6', '$238load_global.5']
DEBUG 2024-06-11 14:22:09,065 - dispatch pc=260, inst=LOAD_FAST(arg=4, lineno=1155)
DEBUG 2024-06-11 14:22:09,065 - stack ['$228call.4', '$null$238.6', '$250load_attr.7']
DEBUG 2024-06-11 14:22:09,065 - dispatch pc=262, inst=PRECALL(arg=1, lineno=1155)
DEBUG 2024-06-11 14:22:09,065 - stack ['$228call.4', '$null$238.6', '$250load_attr.7', '$x1260.8']
DEBUG 2024-06-11 14:22:09,065 - dispatch pc=266, inst=CALL(arg=1, lineno=1155)
DEBUG 2024-06-11 14:22:09,065 - stack ['$228call.4', '$null$238.6', '$250load_attr.7', '$x1260.8']
DEBUG 2024-06-11 14:22:09,065 - dispatch pc=276, inst=COMPARE_OP(arg=3, lineno=1155)
DEBUG 2024-06-11 14:22:09,065 - stack ['$228call.4', '$266call.9']
DEBUG 2024-06-11 14:22:09,066 - dispatch pc=282, inst=RETURN_VALUE(arg=None, lineno=1155)
DEBUG 2024-06-11 14:22:09,066 - stack ['$276compare_op.10']
DEBUG 2024-06-11 14:22:09,066 - end state. edges=[]
DEBUG 2024-06-11 14:22:09,066 - pending: deque([State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 14:22:09,066 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 14:22:09,066 - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=38 nstack_initial=1): {'$phi38.0'},
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): set(),
             State(pc_initial=54 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=1): {'$phi92.0'},
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=104 nstack_initial=1): set(),
             State(pc_initial=108 nstack_initial=0): set(),
             State(pc_initial=112 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=200 nstack_initial=0): set()})
DEBUG 2024-06-11 14:22:09,066 - defmap: {'$phi104.0': State(pc_initial=58 nstack_initial=0),
 '$phi38.0': State(pc_initial=0 nstack_initial=0),
 '$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi92.0': State(pc_initial=58 nstack_initial=0)}
DEBUG 2024-06-11 14:22:09,066 - phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))},
             '$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}})
DEBUG 2024-06-11 14:22:09,066 - changing phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))},
             '$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}})
DEBUG 2024-06-11 14:22:09,066 - keep phismap: {'$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
 '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}}
DEBUG 2024-06-11 14:22:09,066 - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi38.0': '$x024.5'},
             State(pc_initial=58 nstack_initial=0): {'$phi92.0': '$x178.5'}})
DEBUG 2024-06-11 14:22:09,066 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 14:22:09,066 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'value': '$8binary_subscr.2'}), (20, {'res': '$threshold20.3'}), (22, {'value': '$threshold20.3', 'res': '$22unary_negative.4'}), (24, {'res': '$x024.5'}), (30, {'lhs': '$22unary_negative.4', 'rhs': '$x024.5', 'res': '$30compare_op.6'}), (32, {}), (34, {}), (36, {'pred': '$30compare_op.6'})), outgoing_phis={'$phi38.0': '$x024.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={38: ('$x024.5',), 50: ('$x024.5',)})
DEBUG 2024-06-11 14:22:09,066 - block_infos State(pc_initial=38 nstack_initial=1):
AdaptBlockInfo(insts=((38, {'res': '$threshold38.1'}), (40, {'lhs': '$phi38.0', 'rhs': '$threshold38.1', 'res': '$40compare_op.2'}), (42, {}), (44, {}), (46, {'pred': '$40compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: (), 58: ()})
DEBUG 2024-06-11 14:22:09,067 - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={54: ()})
DEBUG 2024-06-11 14:22:09,067 - block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((52, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ()})
DEBUG 2024-06-11 14:22:09,067 - block_infos State(pc_initial=54 nstack_initial=0):
AdaptBlockInfo(insts=((54, {'res': '$const54.0'}), (56, {'value': '$const54.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ()})
DEBUG 2024-06-11 14:22:09,067 - block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$x58.0'}), (60, {'res': '$const60.1'}), (62, {'index': '$const60.1', 'target': '$x58.0', 'res': '$62binary_subscr.2'}), (64, {}), (66, {}), (68, {}), (70, {}), (72, {'value': '$62binary_subscr.2'}), (74, {'res': '$threshold74.3'}), (76, {'value': '$threshold74.3', 'res': '$76unary_negative.4'}), (78, {'res': '$x178.5'}), (84, {'lhs': '$76unary_negative.4', 'rhs': '$x178.5', 'res': '$84compare_op.6'}), (86, {}), (88, {}), (90, {'pred': '$84compare_op.6'})), outgoing_phis={'$phi92.0': '$x178.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: ('$x178.5',), 104: ('$x178.5',)})
DEBUG 2024-06-11 14:22:09,067 - block_infos State(pc_initial=92 nstack_initial=1):
AdaptBlockInfo(insts=((92, {'res': '$threshold92.1'}), (94, {'lhs': '$phi92.0', 'rhs': '$threshold92.1', 'res': '$94compare_op.2'}), (96, {}), (98, {}), (100, {'pred': '$94compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 112: ()})
DEBUG 2024-06-11 14:22:09,067 - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={108: ()})
DEBUG 2024-06-11 14:22:09,067 - block_infos State(pc_initial=104 nstack_initial=1):
AdaptBlockInfo(insts=((106, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ()})
DEBUG 2024-06-11 14:22:09,067 - block_infos State(pc_initial=108 nstack_initial=0):
AdaptBlockInfo(insts=((108, {'res': '$const108.0'}), (110, {'value': '$const108.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ()})
DEBUG 2024-06-11 14:22:09,067 - block_infos State(pc_initial=112 nstack_initial=0):
AdaptBlockInfo(insts=((112, {'res': '$zero_pos112.0'}), (114, {'pred': '$zero_pos112.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={116: (), 200: ()})
DEBUG 2024-06-11 14:22:09,067 - block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'idx': 0, 'res': '$116load_global.0'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {}), (128, {'item': '$116load_global.0', 'res': '$128load_attr.2'}), (130, {}), (132, {}), (134, {}), (136, {}), (138, {'res': '$x0138.3'}), (140, {}), (142, {}), (144, {'func': '$128load_attr.2', 'args': ['$x0138.3'], 'kw_names': None, 'res': '$144call.4'}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'idx': 0, 'res': '$154load_global.5'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {}), (166, {'item': '$154load_global.5', 'res': '$166load_attr.7'}), (168, {}), (170, {}), (172, {}), (174, {}), (176, {'res': '$x1176.8'}), (178, {}), (180, {}), (182, {'func': '$166load_attr.7', 'args': ['$x1176.8'], 'kw_names': None, 'res': '$182call.9'}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'lhs': '$144call.4', 'rhs': '$182call.9', 'res': '$192compare_op.10'}), (194, {}), (196, {}), (198, {'retval': '$192compare_op.10', 'castval': '$198return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 14:22:09,067 - block_infos State(pc_initial=200 nstack_initial=0):
AdaptBlockInfo(insts=((200, {'idx': 0, 'res': '$200load_global.0'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {'item': '$200load_global.0', 'res': '$212load_attr.2'}), (214, {}), (216, {}), (218, {}), (220, {}), (222, {'res': '$x0222.3'}), (224, {}), (226, {}), (228, {'func': '$212load_attr.2', 'args': ['$x0222.3'], 'kw_names': None, 'res': '$228call.4'}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'idx': 0, 'res': '$238load_global.5'}), (240, {}), (242, {}), (244, {}), (246, {}), (248, {}), (250, {'item': '$238load_global.5', 'res': '$250load_attr.7'}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {'res': '$x1260.8'}), (262, {}), (264, {}), (266, {'func': '$250load_attr.7', 'args': ['$x1260.8'], 'kw_names': None, 'res': '$266call.9'}), (268, {}), (270, {}), (272, {}), (274, {}), (276, {'lhs': '$228call.4', 'rhs': '$266call.9', 'res': '$276compare_op.10'}), (278, {}), (280, {}), (282, {'retval': '$276compare_op.10', 'castval': '$282return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 14:22:09,069 - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const6.1 = const(int, 0)                ['$const6.1']
    x0 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$const6.1', 'x', 'x0']
    $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$22unary_negative.4', 'threshold']
    $30compare_op.6 = $22unary_negative.4 <= x0 ['$22unary_negative.4', '$30compare_op.6', 'x0']
    bool36 = global(bool: <class 'bool'>)    ['bool36']
    $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.6', '$36pred', 'bool36']
    $phi38.0 = x0                            ['$phi38.0', 'x0']
    branch $36pred, 38, 50                   ['$36pred']
label 38:
    $40compare_op.2 = $phi38.0 <= threshold  ['$40compare_op.2', '$phi38.0', 'threshold']
    bool46 = global(bool: <class 'bool'>)    ['bool46']
    $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.2', '$46pred', 'bool46']
    branch $46pred, 48, 58                   ['$46pred']
label 48:
    jump 54                                  []
label 50:
    jump 58                                  []
label 54:
    x0 = const(int, 0)                       ['x0']
    jump 58                                  []
label 58:
    $const60.1 = const(int, -1)              ['$const60.1']
    x1 = getitem(value=x, index=$const60.1, fn=<built-in function getitem>) ['$const60.1', 'x', 'x1']
    $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$76unary_negative.4', 'threshold']
    $84compare_op.6 = $76unary_negative.4 <= x1 ['$76unary_negative.4', '$84compare_op.6', 'x1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None) ['$84compare_op.6', '$90pred', 'bool90']
    $phi92.0 = x1                            ['$phi92.0', 'x1']
    branch $90pred, 92, 104                  ['$90pred']
label 92:
    $94compare_op.2 = $phi92.0 <= threshold  ['$94compare_op.2', '$phi92.0', 'threshold']
    bool100 = global(bool: <class 'bool'>)   ['bool100']
    $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$94compare_op.2', 'bool100']
    branch $100pred, 102, 112                ['$100pred']
label 102:
    jump 108                                 []
label 104:
    jump 112                                 []
label 108:
    x1 = const(int, 0)                       ['x1']
    jump 112                                 []
label 112:
    bool114 = global(bool: <class 'bool'>)   ['bool114']
    $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$114pred', 'bool114', 'zero_pos']
    branch $114pred, 116, 200                ['$114pred']
label 116:
    $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$116load_global.0']
    $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit) ['$116load_global.0', '$128load_attr.2']
    $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$128load_attr.2', '$144call.4', 'x0']
    $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$154load_global.5']
    $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit) ['$154load_global.5', '$166load_attr.7']
    $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_attr.7', '$182call.9', 'x1']
    $192compare_op.10 = $144call.4 != $182call.9 ['$144call.4', '$182call.9', '$192compare_op.10']
    $198return_value.11 = cast(value=$192compare_op.10) ['$192compare_op.10', '$198return_value.11']
    return $198return_value.11               ['$198return_value.11']
label 200:
    $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$200load_global.0']
    $212load_attr.2 = getattr(value=$200load_global.0, attr=sign) ['$200load_global.0', '$212load_attr.2']
    $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$212load_attr.2', '$228call.4', 'x0']
    $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$238load_global.5']
    $250load_attr.7 = getattr(value=$238load_global.5, attr=sign) ['$238load_global.5', '$250load_attr.7']
    $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None) ['$250load_attr.7', '$266call.9', 'x1']
    $276compare_op.10 = $228call.4 != $266call.9 ['$228call.4', '$266call.9', '$276compare_op.10']
    $282return_value.11 = cast(value=$276compare_op.10) ['$276compare_op.10', '$282return_value.11']
    return $282return_value.11               ['$282return_value.11']

DEBUG 2024-06-11 14:22:09,639 - bytecode dump:
>          0	NOP(arg=None, lineno=1039)
           2	RESUME(arg=0, lineno=1039)
           4	LOAD_FAST(arg=0, lineno=1042)
           6	LOAD_CONST(arg=1, lineno=1042)
           8	BINARY_SUBSCR(arg=None, lineno=1042)
          18	LOAD_FAST(arg=0, lineno=1042)
          20	LOAD_CONST(arg=2, lineno=1042)
          22	BINARY_SUBSCR(arg=None, lineno=1042)
          32	COMPARE_OP(arg=4, lineno=1042)
          38	LOAD_FAST(arg=0, lineno=1042)
          40	LOAD_CONST(arg=1, lineno=1042)
          42	BINARY_SUBSCR(arg=None, lineno=1042)
          52	LOAD_FAST(arg=0, lineno=1042)
          54	LOAD_CONST(arg=3, lineno=1042)
          56	BINARY_SUBSCR(arg=None, lineno=1042)
          66	COMPARE_OP(arg=5, lineno=1042)
          72	BINARY_OP(arg=1, lineno=1042)
          76	RETURN_VALUE(arg=None, lineno=1042)
DEBUG 2024-06-11 14:22:09,639 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 14:22:09,639 - stack: []
DEBUG 2024-06-11 14:22:09,639 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 14:22:09,639 - dispatch pc=0, inst=NOP(arg=None, lineno=1039)
DEBUG 2024-06-11 14:22:09,639 - stack []
DEBUG 2024-06-11 14:22:09,639 - dispatch pc=2, inst=RESUME(arg=0, lineno=1039)
DEBUG 2024-06-11 14:22:09,640 - stack []
DEBUG 2024-06-11 14:22:09,640 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1042)
DEBUG 2024-06-11 14:22:09,640 - stack []
DEBUG 2024-06-11 14:22:09,640 - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1042)
DEBUG 2024-06-11 14:22:09,640 - stack ['$x4.0']
DEBUG 2024-06-11 14:22:09,640 - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1042)
DEBUG 2024-06-11 14:22:09,640 - stack ['$x4.0', '$const6.1']
DEBUG 2024-06-11 14:22:09,640 - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=1042)
DEBUG 2024-06-11 14:22:09,640 - stack ['$8binary_subscr.2']
DEBUG 2024-06-11 14:22:09,640 - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=1042)
DEBUG 2024-06-11 14:22:09,640 - stack ['$8binary_subscr.2', '$x18.3']
DEBUG 2024-06-11 14:22:09,640 - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=1042)
DEBUG 2024-06-11 14:22:09,640 - stack ['$8binary_subscr.2', '$x18.3', '$const20.4']
DEBUG 2024-06-11 14:22:09,640 - dispatch pc=32, inst=COMPARE_OP(arg=4, lineno=1042)
DEBUG 2024-06-11 14:22:09,640 - stack ['$8binary_subscr.2', '$22binary_subscr.5']
DEBUG 2024-06-11 14:22:09,640 - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=1042)
DEBUG 2024-06-11 14:22:09,640 - stack ['$32compare_op.6']
DEBUG 2024-06-11 14:22:09,640 - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1042)
DEBUG 2024-06-11 14:22:09,640 - stack ['$32compare_op.6', '$x38.7']
DEBUG 2024-06-11 14:22:09,640 - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=1042)
DEBUG 2024-06-11 14:22:09,640 - stack ['$32compare_op.6', '$x38.7', '$const40.8']
DEBUG 2024-06-11 14:22:09,640 - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1042)
DEBUG 2024-06-11 14:22:09,640 - stack ['$32compare_op.6', '$42binary_subscr.9']
DEBUG 2024-06-11 14:22:09,640 - dispatch pc=54, inst=LOAD_CONST(arg=3, lineno=1042)
DEBUG 2024-06-11 14:22:09,640 - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10']
DEBUG 2024-06-11 14:22:09,640 - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1042)
DEBUG 2024-06-11 14:22:09,641 - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10', '$const54.11']
DEBUG 2024-06-11 14:22:09,641 - dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=1042)
DEBUG 2024-06-11 14:22:09,641 - stack ['$32compare_op.6', '$42binary_subscr.9', '$56binary_subscr.12']
DEBUG 2024-06-11 14:22:09,641 - dispatch pc=72, inst=BINARY_OP(arg=1, lineno=1042)
DEBUG 2024-06-11 14:22:09,641 - stack ['$32compare_op.6', '$66compare_op.13']
DEBUG 2024-06-11 14:22:09,641 - dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=1042)
DEBUG 2024-06-11 14:22:09,641 - stack ['$binop_and_72.14']
DEBUG 2024-06-11 14:22:09,641 - end state. edges=[]
DEBUG 2024-06-11 14:22:09,641 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 14:22:09,641 - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG 2024-06-11 14:22:09,641 - defmap: {}
DEBUG 2024-06-11 14:22:09,641 - phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 14:22:09,641 - changing phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 14:22:09,641 - keep phismap: {}
DEBUG 2024-06-11 14:22:09,641 - new_out: defaultdict(<class 'dict'>, {})
DEBUG 2024-06-11 14:22:09,641 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 14:22:09,641 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4'}), (22, {'index': '$const20.4', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$32compare_op.6'}), (34, {}), (36, {}), (38, {'res': '$x38.7'}), (40, {'res': '$const40.8'}), (42, {'index': '$const40.8', 'target': '$x38.7', 'res': '$42binary_subscr.9'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$x52.10'}), (54, {'res': '$const54.11'}), (56, {'index': '$const54.11', 'target': '$x52.10', 'res': '$56binary_subscr.12'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'lhs': '$42binary_subscr.9', 'rhs': '$56binary_subscr.12', 'res': '$66compare_op.13'}), (68, {}), (70, {}), (72, {'op': '&', 'lhs': '$32compare_op.6', 'rhs': '$66compare_op.13', 'res': '$binop_and_72.14'}), (74, {}), (76, {'retval': '$binop_and_72.14', 'castval': '$76return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 14:22:09,642 - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $const20.4 = const(int, -1)              ['$const20.4']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4', 'x']
    $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5 ['$22binary_subscr.5', '$32compare_op.6', '$8binary_subscr.2']
    $const40.8 = const(int, 0)               ['$const40.8']
    $42binary_subscr.9 = getitem(value=x, index=$const40.8, fn=<built-in function getitem>) ['$42binary_subscr.9', '$const40.8', 'x']
    $const54.11 = const(int, 1)              ['$const54.11']
    $56binary_subscr.12 = getitem(value=x, index=$const54.11, fn=<built-in function getitem>) ['$56binary_subscr.12', '$const54.11', 'x']
    $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12 ['$42binary_subscr.9', '$56binary_subscr.12', '$66compare_op.13']
    $binop_and_72.14 = $32compare_op.6 & $66compare_op.13 ['$32compare_op.6', '$66compare_op.13', '$binop_and_72.14']
    $76return_value.15 = cast(value=$binop_and_72.14) ['$76return_value.15', '$binop_and_72.14']
    return $76return_value.15                ['$76return_value.15']

DEBUG 2024-06-11 14:22:09,642 - bytecode dump:
>          0	NOP(arg=None, lineno=1045)
           2	RESUME(arg=0, lineno=1045)
           4	LOAD_FAST(arg=0, lineno=1048)
           6	LOAD_CONST(arg=1, lineno=1048)
           8	BINARY_SUBSCR(arg=None, lineno=1048)
          18	LOAD_FAST(arg=0, lineno=1048)
          20	LOAD_CONST(arg=2, lineno=1048)
          22	BINARY_SUBSCR(arg=None, lineno=1048)
          32	COMPARE_OP(arg=0, lineno=1048)
          38	LOAD_FAST(arg=0, lineno=1048)
          40	LOAD_CONST(arg=1, lineno=1048)
          42	BINARY_SUBSCR(arg=None, lineno=1048)
          52	LOAD_FAST(arg=0, lineno=1048)
          54	LOAD_CONST(arg=3, lineno=1048)
          56	BINARY_SUBSCR(arg=None, lineno=1048)
          66	COMPARE_OP(arg=1, lineno=1048)
          72	BINARY_OP(arg=1, lineno=1048)
          76	RETURN_VALUE(arg=None, lineno=1048)
DEBUG 2024-06-11 14:22:09,642 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 14:22:09,642 - stack: []
DEBUG 2024-06-11 14:22:09,642 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 14:22:09,642 - dispatch pc=0, inst=NOP(arg=None, lineno=1045)
DEBUG 2024-06-11 14:22:09,642 - stack []
DEBUG 2024-06-11 14:22:09,642 - dispatch pc=2, inst=RESUME(arg=0, lineno=1045)
DEBUG 2024-06-11 14:22:09,642 - stack []
DEBUG 2024-06-11 14:22:09,642 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1048)
DEBUG 2024-06-11 14:22:09,642 - stack []
DEBUG 2024-06-11 14:22:09,642 - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1048)
DEBUG 2024-06-11 14:22:09,642 - stack ['$x4.0']
DEBUG 2024-06-11 14:22:09,642 - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1048)
DEBUG 2024-06-11 14:22:09,642 - stack ['$x4.0', '$const6.1']
DEBUG 2024-06-11 14:22:09,642 - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=1048)
DEBUG 2024-06-11 14:22:09,642 - stack ['$8binary_subscr.2']
DEBUG 2024-06-11 14:22:09,644 - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=1048)
DEBUG 2024-06-11 14:22:09,644 - stack ['$8binary_subscr.2', '$x18.3']
DEBUG 2024-06-11 14:22:09,644 - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=1048)
DEBUG 2024-06-11 14:22:09,644 - stack ['$8binary_subscr.2', '$x18.3', '$const20.4']
DEBUG 2024-06-11 14:22:09,644 - dispatch pc=32, inst=COMPARE_OP(arg=0, lineno=1048)
DEBUG 2024-06-11 14:22:09,644 - stack ['$8binary_subscr.2', '$22binary_subscr.5']
DEBUG 2024-06-11 14:22:09,644 - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=1048)
DEBUG 2024-06-11 14:22:09,644 - stack ['$32compare_op.6']
DEBUG 2024-06-11 14:22:09,644 - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1048)
DEBUG 2024-06-11 14:22:09,644 - stack ['$32compare_op.6', '$x38.7']
DEBUG 2024-06-11 14:22:09,644 - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=1048)
DEBUG 2024-06-11 14:22:09,644 - stack ['$32compare_op.6', '$x38.7', '$const40.8']
DEBUG 2024-06-11 14:22:09,644 - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1048)
DEBUG 2024-06-11 14:22:09,644 - stack ['$32compare_op.6', '$42binary_subscr.9']
DEBUG 2024-06-11 14:22:09,644 - dispatch pc=54, inst=LOAD_CONST(arg=3, lineno=1048)
DEBUG 2024-06-11 14:22:09,644 - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10']
DEBUG 2024-06-11 14:22:09,644 - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1048)
DEBUG 2024-06-11 14:22:09,644 - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10', '$const54.11']
DEBUG 2024-06-11 14:22:09,644 - dispatch pc=66, inst=COMPARE_OP(arg=1, lineno=1048)
DEBUG 2024-06-11 14:22:09,644 - stack ['$32compare_op.6', '$42binary_subscr.9', '$56binary_subscr.12']
DEBUG 2024-06-11 14:22:09,644 - dispatch pc=72, inst=BINARY_OP(arg=1, lineno=1048)
DEBUG 2024-06-11 14:22:09,644 - stack ['$32compare_op.6', '$66compare_op.13']
DEBUG 2024-06-11 14:22:09,644 - dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=1048)
DEBUG 2024-06-11 14:22:09,644 - stack ['$binop_and_72.14']
DEBUG 2024-06-11 14:22:09,644 - end state. edges=[]
DEBUG 2024-06-11 14:22:09,644 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 14:22:09,645 - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG 2024-06-11 14:22:09,645 - defmap: {}
DEBUG 2024-06-11 14:22:09,645 - phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 14:22:09,645 - changing phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 14:22:09,645 - keep phismap: {}
DEBUG 2024-06-11 14:22:09,645 - new_out: defaultdict(<class 'dict'>, {})
DEBUG 2024-06-11 14:22:09,645 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 14:22:09,645 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4'}), (22, {'index': '$const20.4', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$32compare_op.6'}), (34, {}), (36, {}), (38, {'res': '$x38.7'}), (40, {'res': '$const40.8'}), (42, {'index': '$const40.8', 'target': '$x38.7', 'res': '$42binary_subscr.9'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$x52.10'}), (54, {'res': '$const54.11'}), (56, {'index': '$const54.11', 'target': '$x52.10', 'res': '$56binary_subscr.12'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'lhs': '$42binary_subscr.9', 'rhs': '$56binary_subscr.12', 'res': '$66compare_op.13'}), (68, {}), (70, {}), (72, {'op': '&', 'lhs': '$32compare_op.6', 'rhs': '$66compare_op.13', 'res': '$binop_and_72.14'}), (74, {}), (76, {'retval': '$binop_and_72.14', 'castval': '$76return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 14:22:09,645 - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $const20.4 = const(int, -1)              ['$const20.4']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4', 'x']
    $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5 ['$22binary_subscr.5', '$32compare_op.6', '$8binary_subscr.2']
    $const40.8 = const(int, 0)               ['$const40.8']
    $42binary_subscr.9 = getitem(value=x, index=$const40.8, fn=<built-in function getitem>) ['$42binary_subscr.9', '$const40.8', 'x']
    $const54.11 = const(int, 1)              ['$const54.11']
    $56binary_subscr.12 = getitem(value=x, index=$const54.11, fn=<built-in function getitem>) ['$56binary_subscr.12', '$const54.11', 'x']
    $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12 ['$42binary_subscr.9', '$56binary_subscr.12', '$66compare_op.13']
    $binop_and_72.14 = $32compare_op.6 & $66compare_op.13 ['$32compare_op.6', '$66compare_op.13', '$binop_and_72.14']
    $76return_value.15 = cast(value=$binop_and_72.14) ['$76return_value.15', '$binop_and_72.14']
    return $76return_value.15                ['$76return_value.15']

ERROR 2024-06-11 14:22:10,309 - Error extracting features from data\ravdess\Actor_02\03-01-02-01-01-01-02.wav: module 'resampy' has no attribute 'resample'
ERROR 2024-06-11 14:22:10,309 - Error preparing data: module 'resampy' has no attribute 'resample'
DEBUG 2024-06-11 14:22:10,469 - bytecode dump:
>          0	NOP(arg=None, lineno=81)
           2	RESUME(arg=0, lineno=81)
           4	LOAD_GLOBAL(arg=1, lineno=86)
          16	LOAD_FAST(arg=0, lineno=86)
          18	LOAD_FAST(arg=1, lineno=86)
          20	LOAD_FAST(arg=2, lineno=86)
          22	LOAD_FAST(arg=3, lineno=86)
          24	LOAD_FAST(arg=4, lineno=86)
          26	LOAD_FAST(arg=5, lineno=86)
          28	LOAD_FAST(arg=6, lineno=86)
          30	PRECALL(arg=7, lineno=86)
          34	CALL(arg=7, lineno=86)
          44	POP_TOP(arg=None, lineno=86)
          46	LOAD_CONST(arg=0, lineno=86)
          48	RETURN_VALUE(arg=None, lineno=86)
DEBUG 2024-06-11 14:22:10,469 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 14:22:10,469 - stack: []
DEBUG 2024-06-11 14:22:10,469 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 14:22:10,469 - dispatch pc=0, inst=NOP(arg=None, lineno=81)
DEBUG 2024-06-11 14:22:10,469 - stack []
DEBUG 2024-06-11 14:22:10,469 - dispatch pc=2, inst=RESUME(arg=0, lineno=81)
DEBUG 2024-06-11 14:22:10,469 - stack []
DEBUG 2024-06-11 14:22:10,469 - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=86)
DEBUG 2024-06-11 14:22:10,469 - stack []
DEBUG 2024-06-11 14:22:10,469 - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=86)
DEBUG 2024-06-11 14:22:10,469 - stack ['$null$4.1', '$4load_global.0']
DEBUG 2024-06-11 14:22:10,470 - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=86)
DEBUG 2024-06-11 14:22:10,470 - stack ['$null$4.1', '$4load_global.0', '$x16.2']
DEBUG 2024-06-11 14:22:10,470 - dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=86)
DEBUG 2024-06-11 14:22:10,470 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3']
DEBUG 2024-06-11 14:22:10,470 - dispatch pc=22, inst=LOAD_FAST(arg=3, lineno=86)
DEBUG 2024-06-11 14:22:10,470 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4']
DEBUG 2024-06-11 14:22:10,470 - dispatch pc=24, inst=LOAD_FAST(arg=4, lineno=86)
DEBUG 2024-06-11 14:22:10,470 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5']
DEBUG 2024-06-11 14:22:10,470 - dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=86)
DEBUG 2024-06-11 14:22:10,470 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6']
DEBUG 2024-06-11 14:22:10,470 - dispatch pc=28, inst=LOAD_FAST(arg=6, lineno=86)
DEBUG 2024-06-11 14:22:10,470 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7']
DEBUG 2024-06-11 14:22:10,470 - dispatch pc=30, inst=PRECALL(arg=7, lineno=86)
DEBUG 2024-06-11 14:22:10,470 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
DEBUG 2024-06-11 14:22:10,470 - dispatch pc=34, inst=CALL(arg=7, lineno=86)
DEBUG 2024-06-11 14:22:10,470 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
DEBUG 2024-06-11 14:22:10,470 - dispatch pc=44, inst=POP_TOP(arg=None, lineno=86)
DEBUG 2024-06-11 14:22:10,470 - stack ['$34call.9']
DEBUG 2024-06-11 14:22:10,470 - dispatch pc=46, inst=LOAD_CONST(arg=0, lineno=86)
DEBUG 2024-06-11 14:22:10,470 - stack []
DEBUG 2024-06-11 14:22:10,470 - dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=86)
DEBUG 2024-06-11 14:22:10,470 - stack ['$const46.10']
DEBUG 2024-06-11 14:22:10,470 - end state. edges=[]
DEBUG 2024-06-11 14:22:10,470 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 14:22:10,472 - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG 2024-06-11 14:22:10,472 - defmap: {}
DEBUG 2024-06-11 14:22:10,472 - phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 14:22:10,472 - changing phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 14:22:10,472 - keep phismap: {}
DEBUG 2024-06-11 14:22:10,472 - new_out: defaultdict(<class 'dict'>, {})
DEBUG 2024-06-11 14:22:10,472 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 14:22:10,472 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {'res': '$t_out18.3'}), (20, {'res': '$interp_win20.4'}), (22, {'res': '$interp_delta22.5'}), (24, {'res': '$num_table24.6'}), (26, {'res': '$scale26.7'}), (28, {'res': '$y28.8'}), (30, {}), (32, {}), (34, {'func': '$4load_global.0', 'args': ['$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8'], 'kw_names': None, 'res': '$34call.9'}), (36, {}), (38, {}), (40, {}), (42, {}), (46, {'res': '$const46.10'}), (48, {'retval': '$const46.10', 'castval': '$48return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 14:22:10,472 - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x000001971DB33E20>)) ['$4load_global.0']
    $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None) ['$34call.9', '$4load_global.0', 'interp_delta', 'interp_win', 'num_table', 'scale', 't_out', 'x', 'y']
    $const46.10 = const(NoneType, None)      ['$const46.10']
    $48return_value.11 = cast(value=$const46.10) ['$48return_value.11', '$const46.10']
    return $48return_value.11                ['$48return_value.11']

DEBUG 2024-06-11 14:22:10,477 - ==== SSA block analysis pass on 0
WARNING 2024-06-11 14:22:10,474 - From C:\Users\Dell\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\backend\common\global_state.py:82: The name tf.reset_default_graph is deprecated. Please use tf.compat.v1.reset_default_graph instead.

DEBUG 2024-06-11 14:22:10,477 - Running <numba.core.ssa._GatherDefsHandler object at 0x000001971DC24950>
DEBUG 2024-06-11 14:22:10,626 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:22:10,627 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:22:10,627 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:22:10,627 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:22:10,627 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:22:10,627 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:22:10,627 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:22:10,627 - on stmt: $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x000001971DB33E20>))
DEBUG 2024-06-11 14:22:10,627 - on stmt: $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,627 - on stmt: $const46.10 = const(NoneType, None)
DEBUG 2024-06-11 14:22:10,627 - on stmt: $48return_value.11 = cast(value=$const46.10)
DEBUG 2024-06-11 14:22:10,627 - on stmt: return $48return_value.11
DEBUG 2024-06-11 14:22:10,628 - defs defaultdict(<class 'list'>,
            {'$34call.9': [(<numba.core.ir.Assign object at 0x000001971DC21050>,
                            0)],
             '$48return_value.11': [(<numba.core.ir.Assign object at 0x000001971DC21690>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000001971DC22E50>,
                                  0)],
             '$const46.10': [(<numba.core.ir.Assign object at 0x000001971DC213D0>,
                              0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x000001971DC23950>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x000001971DC238D0>,
                             0)],
             'num_table': [(<numba.core.ir.Assign object at 0x000001971DC23810>,
                            0)],
             'scale': [(<numba.core.ir.Assign object at 0x000001971DC23690>,
                        0)],
             't_out': [(<numba.core.ir.Assign object at 0x000001971DC23790>,
                        0)],
             'x': [(<numba.core.ir.Assign object at 0x000001971DC23CD0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x000001971DC233D0>, 0)]})
DEBUG 2024-06-11 14:22:10,628 - SSA violators <numba.core.utils.OrderedSet object at 0x000001971DC24950>
DEBUG 2024-06-11 14:22:10,631 - bytecode dump:
>          0	NOP(arg=None, lineno=7)
           2	RESUME(arg=0, lineno=7)
           4	LOAD_GLOBAL(arg=1, lineno=9)
          16	LOAD_FAST(arg=5, lineno=9)
          18	LOAD_FAST(arg=4, lineno=9)
          20	BINARY_OP(arg=5, lineno=9)
          24	PRECALL(arg=1, lineno=9)
          28	CALL(arg=1, lineno=9)
          38	STORE_FAST(arg=7, lineno=9)
          40	LOAD_CONST(arg=1, lineno=10)
          42	STORE_FAST(arg=8, lineno=10)
          44	LOAD_CONST(arg=2, lineno=12)
          46	STORE_FAST(arg=9, lineno=12)
          48	LOAD_CONST(arg=1, lineno=13)
          50	STORE_FAST(arg=10, lineno=13)
          52	LOAD_CONST(arg=1, lineno=14)
          54	STORE_FAST(arg=11, lineno=14)
          56	LOAD_CONST(arg=2, lineno=15)
          58	STORE_FAST(arg=12, lineno=15)
          60	LOAD_CONST(arg=1, lineno=16)
          62	STORE_FAST(arg=13, lineno=16)
          64	LOAD_CONST(arg=1, lineno=17)
          66	STORE_FAST(arg=14, lineno=17)
          68	LOAD_FAST(arg=2, lineno=19)
          70	LOAD_ATTR(arg=1, lineno=19)
          80	LOAD_CONST(arg=2, lineno=19)
          82	BINARY_SUBSCR(arg=None, lineno=19)
          92	STORE_FAST(arg=15, lineno=19)
          94	LOAD_FAST(arg=0, lineno=20)
          96	LOAD_ATTR(arg=1, lineno=20)
         106	LOAD_CONST(arg=2, lineno=20)
         108	BINARY_SUBSCR(arg=None, lineno=20)
         118	STORE_FAST(arg=16, lineno=20)
         120	LOAD_FAST(arg=1, lineno=21)
         122	LOAD_ATTR(arg=1, lineno=21)
         132	LOAD_CONST(arg=2, lineno=21)
         134	BINARY_SUBSCR(arg=None, lineno=21)
         144	STORE_FAST(arg=17, lineno=21)
         146	LOAD_GLOBAL(arg=5, lineno=23)
         158	LOAD_FAST(arg=17, lineno=23)
         160	PRECALL(arg=1, lineno=23)
         164	CALL(arg=1, lineno=23)
         174	GET_ITER(arg=None, lineno=23)
>        176	NOP(arg=1, lineno=23)
         178	FOR_ITER(arg=301, lineno=23)
         180	STORE_FAST(arg=18, lineno=23)
         182	LOAD_FAST(arg=1, lineno=24)
         184	LOAD_FAST(arg=18, lineno=24)
         186	BINARY_SUBSCR(arg=None, lineno=24)
         196	STORE_FAST(arg=8, lineno=24)
         198	LOAD_GLOBAL(arg=1, lineno=27)
         210	LOAD_FAST(arg=8, lineno=27)
         212	PRECALL(arg=1, lineno=27)
         216	CALL(arg=1, lineno=27)
         226	STORE_FAST(arg=9, lineno=27)
         228	LOAD_FAST(arg=5, lineno=30)
         230	LOAD_FAST(arg=8, lineno=30)
         232	LOAD_FAST(arg=9, lineno=30)
         234	BINARY_OP(arg=10, lineno=30)
         238	BINARY_OP(arg=5, lineno=30)
         242	STORE_FAST(arg=10, lineno=30)
         244	LOAD_FAST(arg=10, lineno=33)
         246	LOAD_FAST(arg=4, lineno=33)
         248	BINARY_OP(arg=5, lineno=33)
         252	STORE_FAST(arg=11, lineno=33)
         254	LOAD_GLOBAL(arg=1, lineno=34)
         266	LOAD_FAST(arg=11, lineno=34)
         268	PRECALL(arg=1, lineno=34)
         272	CALL(arg=1, lineno=34)
         282	STORE_FAST(arg=12, lineno=34)
         284	LOAD_FAST(arg=11, lineno=37)
         286	LOAD_FAST(arg=12, lineno=37)
         288	BINARY_OP(arg=10, lineno=37)
         292	STORE_FAST(arg=13, lineno=37)
         294	LOAD_GLOBAL(arg=7, lineno=40)
         306	LOAD_FAST(arg=9, lineno=40)
         308	LOAD_CONST(arg=3, lineno=40)
         310	BINARY_OP(arg=0, lineno=40)
         314	LOAD_FAST(arg=15, lineno=40)
         316	LOAD_FAST(arg=12, lineno=40)
         318	BINARY_OP(arg=10, lineno=40)
         322	LOAD_FAST(arg=7, lineno=40)
         324	BINARY_OP(arg=2, lineno=40)
         328	PRECALL(arg=2, lineno=40)
         332	CALL(arg=2, lineno=40)
         342	STORE_FAST(arg=19, lineno=40)
         344	LOAD_GLOBAL(arg=9, lineno=41)
         356	LOAD_FAST(arg=19, lineno=41)
         358	PRECALL(arg=1, lineno=41)
         362	CALL(arg=1, lineno=41)
         372	GET_ITER(arg=None, lineno=41)
>        374	FOR_ITER(arg=62, lineno=41)
         376	STORE_FAST(arg=20, lineno=41)
         378	LOAD_FAST(arg=2, lineno=44)
         380	LOAD_FAST(arg=12, lineno=44)
         382	LOAD_FAST(arg=20, lineno=44)
         384	LOAD_FAST(arg=7, lineno=44)
         386	BINARY_OP(arg=5, lineno=44)
         390	BINARY_OP(arg=0, lineno=44)
         394	BINARY_SUBSCR(arg=None, lineno=44)
         404	LOAD_FAST(arg=13, lineno=45)
         406	LOAD_FAST(arg=3, lineno=45)
         408	LOAD_FAST(arg=12, lineno=45)
         410	LOAD_FAST(arg=20, lineno=45)
         412	LOAD_FAST(arg=7, lineno=45)
         414	BINARY_OP(arg=5, lineno=45)
         418	BINARY_OP(arg=0, lineno=45)
         422	BINARY_SUBSCR(arg=None, lineno=45)
         432	BINARY_OP(arg=5, lineno=45)
         436	BINARY_OP(arg=0, lineno=44)
         440	STORE_FAST(arg=14, lineno=43)
         442	LOAD_FAST(arg=6, lineno=47)
         444	LOAD_FAST(arg=18, lineno=47)
         446	COPY(arg=2, lineno=47)
         448	COPY(arg=2, lineno=47)
         450	BINARY_SUBSCR(arg=None, lineno=47)
         460	LOAD_FAST(arg=14, lineno=47)
         462	LOAD_FAST(arg=0, lineno=47)
         464	LOAD_FAST(arg=9, lineno=47)
         466	LOAD_FAST(arg=20, lineno=47)
         468	BINARY_OP(arg=10, lineno=47)
         472	BINARY_SUBSCR(arg=None, lineno=47)
         482	BINARY_OP(arg=5, lineno=47)
         486	BINARY_OP(arg=13, lineno=47)
         490	SWAP(arg=3, lineno=47)
         492	SWAP(arg=2, lineno=47)
         494	STORE_SUBSCR(arg=None, lineno=47)
         498	JUMP_BACKWARD(arg=63, lineno=47)
>        500	LOAD_FAST(arg=5, lineno=50)
         502	LOAD_FAST(arg=10, lineno=50)
         504	BINARY_OP(arg=10, lineno=50)
         508	STORE_FAST(arg=10, lineno=50)
         510	LOAD_FAST(arg=10, lineno=53)
         512	LOAD_FAST(arg=4, lineno=53)
         514	BINARY_OP(arg=5, lineno=53)
         518	STORE_FAST(arg=11, lineno=53)
         520	LOAD_GLOBAL(arg=1, lineno=54)
         532	LOAD_FAST(arg=11, lineno=54)
         534	PRECALL(arg=1, lineno=54)
         538	CALL(arg=1, lineno=54)
         548	STORE_FAST(arg=12, lineno=54)
         550	LOAD_FAST(arg=11, lineno=57)
         552	LOAD_FAST(arg=12, lineno=57)
         554	BINARY_OP(arg=10, lineno=57)
         558	STORE_FAST(arg=13, lineno=57)
         560	LOAD_GLOBAL(arg=7, lineno=60)
         572	LOAD_FAST(arg=16, lineno=60)
         574	LOAD_FAST(arg=9, lineno=60)
         576	BINARY_OP(arg=10, lineno=60)
         580	LOAD_CONST(arg=3, lineno=60)
         582	BINARY_OP(arg=10, lineno=60)
         586	LOAD_FAST(arg=15, lineno=60)
         588	LOAD_FAST(arg=12, lineno=60)
         590	BINARY_OP(arg=10, lineno=60)
         594	LOAD_FAST(arg=7, lineno=60)
         596	BINARY_OP(arg=2, lineno=60)
         600	PRECALL(arg=2, lineno=60)
         604	CALL(arg=2, lineno=60)
         614	STORE_FAST(arg=21, lineno=60)
         616	LOAD_GLOBAL(arg=9, lineno=61)
         628	LOAD_FAST(arg=21, lineno=61)
         630	PRECALL(arg=1, lineno=61)
         634	CALL(arg=1, lineno=61)
         644	GET_ITER(arg=None, lineno=61)
>        646	FOR_ITER(arg=65, lineno=61)
         648	STORE_FAST(arg=22, lineno=61)
         650	LOAD_FAST(arg=2, lineno=63)
         652	LOAD_FAST(arg=12, lineno=63)
         654	LOAD_FAST(arg=22, lineno=63)
         656	LOAD_FAST(arg=7, lineno=63)
         658	BINARY_OP(arg=5, lineno=63)
         662	BINARY_OP(arg=0, lineno=63)
         666	BINARY_SUBSCR(arg=None, lineno=63)
         676	LOAD_FAST(arg=13, lineno=64)
         678	LOAD_FAST(arg=3, lineno=64)
         680	LOAD_FAST(arg=12, lineno=64)
         682	LOAD_FAST(arg=22, lineno=64)
         684	LOAD_FAST(arg=7, lineno=64)
         686	BINARY_OP(arg=5, lineno=64)
         690	BINARY_OP(arg=0, lineno=64)
         694	BINARY_SUBSCR(arg=None, lineno=64)
         704	BINARY_OP(arg=5, lineno=64)
         708	BINARY_OP(arg=0, lineno=63)
         712	STORE_FAST(arg=14, lineno=62)
         714	LOAD_FAST(arg=6, lineno=66)
         716	LOAD_FAST(arg=18, lineno=66)
         718	COPY(arg=2, lineno=66)
         720	COPY(arg=2, lineno=66)
         722	BINARY_SUBSCR(arg=None, lineno=66)
         732	LOAD_FAST(arg=14, lineno=66)
         734	LOAD_FAST(arg=0, lineno=66)
         736	LOAD_FAST(arg=9, lineno=66)
         738	LOAD_FAST(arg=22, lineno=66)
         740	BINARY_OP(arg=0, lineno=66)
         744	LOAD_CONST(arg=3, lineno=66)
         746	BINARY_OP(arg=0, lineno=66)
         750	BINARY_SUBSCR(arg=None, lineno=66)
         760	BINARY_OP(arg=5, lineno=66)
         764	BINARY_OP(arg=13, lineno=66)
         768	SWAP(arg=3, lineno=66)
         770	SWAP(arg=2, lineno=66)
         772	STORE_SUBSCR(arg=None, lineno=66)
         776	JUMP_BACKWARD(arg=66, lineno=66)
>        778	NOP(arg=1, lineno=61)
         780	JUMP_BACKWARD(arg=303, lineno=61)
>        782	LOAD_CONST(arg=0, lineno=23)
         784	RETURN_VALUE(arg=None, lineno=23)
DEBUG 2024-06-11 14:22:10,631 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 14:22:10,631 - stack: []
DEBUG 2024-06-11 14:22:10,631 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 14:22:10,631 - dispatch pc=0, inst=NOP(arg=None, lineno=7)
DEBUG 2024-06-11 14:22:10,631 - stack []
DEBUG 2024-06-11 14:22:10,631 - dispatch pc=2, inst=RESUME(arg=0, lineno=7)
DEBUG 2024-06-11 14:22:10,631 - stack []
DEBUG 2024-06-11 14:22:10,631 - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=9)
DEBUG 2024-06-11 14:22:10,631 - stack []
DEBUG 2024-06-11 14:22:10,631 - dispatch pc=16, inst=LOAD_FAST(arg=5, lineno=9)
DEBUG 2024-06-11 14:22:10,631 - stack ['$null$4.1', '$4load_global.0']
DEBUG 2024-06-11 14:22:10,631 - dispatch pc=18, inst=LOAD_FAST(arg=4, lineno=9)
DEBUG 2024-06-11 14:22:10,631 - stack ['$null$4.1', '$4load_global.0', '$scale16.2']
DEBUG 2024-06-11 14:22:10,631 - dispatch pc=20, inst=BINARY_OP(arg=5, lineno=9)
DEBUG 2024-06-11 14:22:10,632 - stack ['$null$4.1', '$4load_global.0', '$scale16.2', '$num_table18.3']
DEBUG 2024-06-11 14:22:10,632 - dispatch pc=24, inst=PRECALL(arg=1, lineno=9)
DEBUG 2024-06-11 14:22:10,632 - stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
DEBUG 2024-06-11 14:22:10,632 - dispatch pc=28, inst=CALL(arg=1, lineno=9)
DEBUG 2024-06-11 14:22:10,632 - stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
DEBUG 2024-06-11 14:22:10,632 - dispatch pc=38, inst=STORE_FAST(arg=7, lineno=9)
DEBUG 2024-06-11 14:22:10,632 - stack ['$28call.5']
DEBUG 2024-06-11 14:22:10,632 - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=10)
DEBUG 2024-06-11 14:22:10,632 - stack []
DEBUG 2024-06-11 14:22:10,632 - dispatch pc=42, inst=STORE_FAST(arg=8, lineno=10)
DEBUG 2024-06-11 14:22:10,632 - stack ['$const40.6']
DEBUG 2024-06-11 14:22:10,632 - dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=12)
DEBUG 2024-06-11 14:22:10,632 - stack []
DEBUG 2024-06-11 14:22:10,632 - dispatch pc=46, inst=STORE_FAST(arg=9, lineno=12)
DEBUG 2024-06-11 14:22:10,632 - stack ['$const44.7']
DEBUG 2024-06-11 14:22:10,632 - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=13)
DEBUG 2024-06-11 14:22:10,632 - stack []
DEBUG 2024-06-11 14:22:10,632 - dispatch pc=50, inst=STORE_FAST(arg=10, lineno=13)
DEBUG 2024-06-11 14:22:10,632 - stack ['$const48.8']
DEBUG 2024-06-11 14:22:10,632 - dispatch pc=52, inst=LOAD_CONST(arg=1, lineno=14)
DEBUG 2024-06-11 14:22:10,632 - stack []
DEBUG 2024-06-11 14:22:10,632 - dispatch pc=54, inst=STORE_FAST(arg=11, lineno=14)
DEBUG 2024-06-11 14:22:10,632 - stack ['$const52.9']
DEBUG 2024-06-11 14:22:10,632 - dispatch pc=56, inst=LOAD_CONST(arg=2, lineno=15)
DEBUG 2024-06-11 14:22:10,632 - stack []
DEBUG 2024-06-11 14:22:10,632 - dispatch pc=58, inst=STORE_FAST(arg=12, lineno=15)
DEBUG 2024-06-11 14:22:10,632 - stack ['$const56.10']
DEBUG 2024-06-11 14:22:10,632 - dispatch pc=60, inst=LOAD_CONST(arg=1, lineno=16)
DEBUG 2024-06-11 14:22:10,632 - stack []
DEBUG 2024-06-11 14:22:10,632 - dispatch pc=62, inst=STORE_FAST(arg=13, lineno=16)
DEBUG 2024-06-11 14:22:10,632 - stack ['$const60.11']
DEBUG 2024-06-11 14:22:10,632 - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=17)
DEBUG 2024-06-11 14:22:10,632 - stack []
DEBUG 2024-06-11 14:22:10,632 - dispatch pc=66, inst=STORE_FAST(arg=14, lineno=17)
DEBUG 2024-06-11 14:22:10,632 - stack ['$const64.12']
DEBUG 2024-06-11 14:22:10,632 - dispatch pc=68, inst=LOAD_FAST(arg=2, lineno=19)
DEBUG 2024-06-11 14:22:10,632 - stack []
DEBUG 2024-06-11 14:22:10,632 - dispatch pc=70, inst=LOAD_ATTR(arg=1, lineno=19)
DEBUG 2024-06-11 14:22:10,632 - stack ['$interp_win68.13']
DEBUG 2024-06-11 14:22:10,632 - dispatch pc=80, inst=LOAD_CONST(arg=2, lineno=19)
DEBUG 2024-06-11 14:22:10,633 - stack ['$70load_attr.14']
DEBUG 2024-06-11 14:22:10,633 - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=19)
DEBUG 2024-06-11 14:22:10,633 - stack ['$70load_attr.14', '$const80.15']
DEBUG 2024-06-11 14:22:10,633 - dispatch pc=92, inst=STORE_FAST(arg=15, lineno=19)
DEBUG 2024-06-11 14:22:10,633 - stack ['$82binary_subscr.16']
DEBUG 2024-06-11 14:22:10,633 - dispatch pc=94, inst=LOAD_FAST(arg=0, lineno=20)
DEBUG 2024-06-11 14:22:10,633 - stack []
DEBUG 2024-06-11 14:22:10,633 - dispatch pc=96, inst=LOAD_ATTR(arg=1, lineno=20)
DEBUG 2024-06-11 14:22:10,633 - stack ['$x94.17']
DEBUG 2024-06-11 14:22:10,633 - dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=20)
DEBUG 2024-06-11 14:22:10,633 - stack ['$96load_attr.18']
DEBUG 2024-06-11 14:22:10,633 - dispatch pc=108, inst=BINARY_SUBSCR(arg=None, lineno=20)
DEBUG 2024-06-11 14:22:10,633 - stack ['$96load_attr.18', '$const106.19']
DEBUG 2024-06-11 14:22:10,633 - dispatch pc=118, inst=STORE_FAST(arg=16, lineno=20)
DEBUG 2024-06-11 14:22:10,634 - stack ['$108binary_subscr.20']
DEBUG 2024-06-11 14:22:10,634 - dispatch pc=120, inst=LOAD_FAST(arg=1, lineno=21)
DEBUG 2024-06-11 14:22:10,634 - stack []
DEBUG 2024-06-11 14:22:10,634 - dispatch pc=122, inst=LOAD_ATTR(arg=1, lineno=21)
DEBUG 2024-06-11 14:22:10,634 - stack ['$t_out120.21']
DEBUG 2024-06-11 14:22:10,634 - dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=21)
DEBUG 2024-06-11 14:22:10,634 - stack ['$122load_attr.22']
DEBUG 2024-06-11 14:22:10,634 - dispatch pc=134, inst=BINARY_SUBSCR(arg=None, lineno=21)
DEBUG 2024-06-11 14:22:10,634 - stack ['$122load_attr.22', '$const132.23']
DEBUG 2024-06-11 14:22:10,634 - dispatch pc=144, inst=STORE_FAST(arg=17, lineno=21)
DEBUG 2024-06-11 14:22:10,634 - stack ['$134binary_subscr.24']
DEBUG 2024-06-11 14:22:10,634 - dispatch pc=146, inst=LOAD_GLOBAL(arg=5, lineno=23)
DEBUG 2024-06-11 14:22:10,634 - stack []
DEBUG 2024-06-11 14:22:10,634 - dispatch pc=158, inst=LOAD_FAST(arg=17, lineno=23)
DEBUG 2024-06-11 14:22:10,634 - stack ['$null$146.26', '$146load_global.25']
DEBUG 2024-06-11 14:22:10,634 - dispatch pc=160, inst=PRECALL(arg=1, lineno=23)
DEBUG 2024-06-11 14:22:10,634 - stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
DEBUG 2024-06-11 14:22:10,634 - dispatch pc=164, inst=CALL(arg=1, lineno=23)
DEBUG 2024-06-11 14:22:10,634 - stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
DEBUG 2024-06-11 14:22:10,634 - dispatch pc=174, inst=GET_ITER(arg=None, lineno=23)
DEBUG 2024-06-11 14:22:10,634 - stack ['$164call.28']
DEBUG 2024-06-11 14:22:10,634 - end state. edges=[Edge(pc=176, stack=('$174get_iter.29',), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:22:10,634 - pending: deque([State(pc_initial=176 nstack_initial=1)])
DEBUG 2024-06-11 14:22:10,634 - stack: ['$phi176.0']
DEBUG 2024-06-11 14:22:10,634 - state.pc_initial: State(pc_initial=176 nstack_initial=1)
DEBUG 2024-06-11 14:22:10,634 - dispatch pc=176, inst=NOP(arg=1, lineno=23)
DEBUG 2024-06-11 14:22:10,634 - stack ['$phi176.0']
DEBUG 2024-06-11 14:22:10,634 - end state. edges=[Edge(pc=178, stack=('$phi176.0',), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:22:10,634 - pending: deque([State(pc_initial=178 nstack_initial=1)])
DEBUG 2024-06-11 14:22:10,634 - stack: ['$phi178.0']
DEBUG 2024-06-11 14:22:10,634 - state.pc_initial: State(pc_initial=178 nstack_initial=1)
DEBUG 2024-06-11 14:22:10,634 - dispatch pc=178, inst=FOR_ITER(arg=301, lineno=23)
DEBUG 2024-06-11 14:22:10,634 - stack ['$phi178.0']
DEBUG 2024-06-11 14:22:10,635 - end state. edges=[Edge(pc=782, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=('$phi178.0', '$178for_iter.2'), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:22:10,635 - pending: deque([State(pc_initial=782 nstack_initial=0), State(pc_initial=180 nstack_initial=2)])
DEBUG 2024-06-11 14:22:10,635 - stack: []
DEBUG 2024-06-11 14:22:10,635 - state.pc_initial: State(pc_initial=782 nstack_initial=0)
DEBUG 2024-06-11 14:22:10,635 - dispatch pc=782, inst=LOAD_CONST(arg=0, lineno=23)
DEBUG 2024-06-11 14:22:10,635 - stack []
DEBUG 2024-06-11 14:22:10,635 - dispatch pc=784, inst=RETURN_VALUE(arg=None, lineno=23)
DEBUG 2024-06-11 14:22:10,635 - stack ['$const782.0']
DEBUG 2024-06-11 14:22:10,635 - end state. edges=[]
DEBUG 2024-06-11 14:22:10,635 - pending: deque([State(pc_initial=180 nstack_initial=2)])
DEBUG 2024-06-11 14:22:10,635 - stack: ['$phi180.0', '$phi180.1']
DEBUG 2024-06-11 14:22:10,635 - state.pc_initial: State(pc_initial=180 nstack_initial=2)
DEBUG 2024-06-11 14:22:10,635 - dispatch pc=180, inst=STORE_FAST(arg=18, lineno=23)
DEBUG 2024-06-11 14:22:10,635 - stack ['$phi180.0', '$phi180.1']
DEBUG 2024-06-11 14:22:10,635 - dispatch pc=182, inst=LOAD_FAST(arg=1, lineno=24)
DEBUG 2024-06-11 14:22:10,635 - stack ['$phi180.0']
DEBUG 2024-06-11 14:22:10,635 - dispatch pc=184, inst=LOAD_FAST(arg=18, lineno=24)
DEBUG 2024-06-11 14:22:10,635 - stack ['$phi180.0', '$t_out182.2']
DEBUG 2024-06-11 14:22:10,635 - dispatch pc=186, inst=BINARY_SUBSCR(arg=None, lineno=24)
DEBUG 2024-06-11 14:22:10,635 - stack ['$phi180.0', '$t_out182.2', '$t184.3']
DEBUG 2024-06-11 14:22:10,635 - dispatch pc=196, inst=STORE_FAST(arg=8, lineno=24)
DEBUG 2024-06-11 14:22:10,635 - stack ['$phi180.0', '$186binary_subscr.4']
DEBUG 2024-06-11 14:22:10,635 - dispatch pc=198, inst=LOAD_GLOBAL(arg=1, lineno=27)
DEBUG 2024-06-11 14:22:10,635 - stack ['$phi180.0']
DEBUG 2024-06-11 14:22:10,635 - dispatch pc=210, inst=LOAD_FAST(arg=8, lineno=27)
DEBUG 2024-06-11 14:22:10,635 - stack ['$phi180.0', '$null$198.6', '$198load_global.5']
DEBUG 2024-06-11 14:22:10,635 - dispatch pc=212, inst=PRECALL(arg=1, lineno=27)
DEBUG 2024-06-11 14:22:10,635 - stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
DEBUG 2024-06-11 14:22:10,635 - dispatch pc=216, inst=CALL(arg=1, lineno=27)
DEBUG 2024-06-11 14:22:10,635 - stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
DEBUG 2024-06-11 14:22:10,635 - dispatch pc=226, inst=STORE_FAST(arg=9, lineno=27)
DEBUG 2024-06-11 14:22:10,636 - stack ['$phi180.0', '$216call.8']
DEBUG 2024-06-11 14:22:10,636 - dispatch pc=228, inst=LOAD_FAST(arg=5, lineno=30)
DEBUG 2024-06-11 14:22:10,636 - stack ['$phi180.0']
DEBUG 2024-06-11 14:22:10,636 - dispatch pc=230, inst=LOAD_FAST(arg=8, lineno=30)
DEBUG 2024-06-11 14:22:10,636 - stack ['$phi180.0', '$scale228.9']
DEBUG 2024-06-11 14:22:10,636 - dispatch pc=232, inst=LOAD_FAST(arg=9, lineno=30)
DEBUG 2024-06-11 14:22:10,636 - stack ['$phi180.0', '$scale228.9', '$time_register230.10']
DEBUG 2024-06-11 14:22:10,636 - dispatch pc=234, inst=BINARY_OP(arg=10, lineno=30)
DEBUG 2024-06-11 14:22:10,636 - stack ['$phi180.0', '$scale228.9', '$time_register230.10', '$n232.11']
DEBUG 2024-06-11 14:22:10,636 - dispatch pc=238, inst=BINARY_OP(arg=5, lineno=30)
DEBUG 2024-06-11 14:22:10,636 - stack ['$phi180.0', '$scale228.9', '$binop_sub234.12']
DEBUG 2024-06-11 14:22:10,636 - dispatch pc=242, inst=STORE_FAST(arg=10, lineno=30)
DEBUG 2024-06-11 14:22:10,636 - stack ['$phi180.0', '$binop_mul238.13']
DEBUG 2024-06-11 14:22:10,636 - dispatch pc=244, inst=LOAD_FAST(arg=10, lineno=33)
DEBUG 2024-06-11 14:22:10,636 - stack ['$phi180.0']
DEBUG 2024-06-11 14:22:10,636 - dispatch pc=246, inst=LOAD_FAST(arg=4, lineno=33)
DEBUG 2024-06-11 14:22:10,636 - stack ['$phi180.0', '$frac244.14']
DEBUG 2024-06-11 14:22:10,636 - dispatch pc=248, inst=BINARY_OP(arg=5, lineno=33)
DEBUG 2024-06-11 14:22:10,636 - stack ['$phi180.0', '$frac244.14', '$num_table246.15']
DEBUG 2024-06-11 14:22:10,636 - dispatch pc=252, inst=STORE_FAST(arg=11, lineno=33)
DEBUG 2024-06-11 14:22:10,636 - stack ['$phi180.0', '$binop_mul248.16']
DEBUG 2024-06-11 14:22:10,636 - dispatch pc=254, inst=LOAD_GLOBAL(arg=1, lineno=34)
DEBUG 2024-06-11 14:22:10,636 - stack ['$phi180.0']
DEBUG 2024-06-11 14:22:10,636 - dispatch pc=266, inst=LOAD_FAST(arg=11, lineno=34)
DEBUG 2024-06-11 14:22:10,636 - stack ['$phi180.0', '$null$254.18', '$254load_global.17']
DEBUG 2024-06-11 14:22:10,636 - dispatch pc=268, inst=PRECALL(arg=1, lineno=34)
DEBUG 2024-06-11 14:22:10,636 - stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
DEBUG 2024-06-11 14:22:10,636 - dispatch pc=272, inst=CALL(arg=1, lineno=34)
DEBUG 2024-06-11 14:22:10,636 - stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
DEBUG 2024-06-11 14:22:10,636 - dispatch pc=282, inst=STORE_FAST(arg=12, lineno=34)
DEBUG 2024-06-11 14:22:10,636 - stack ['$phi180.0', '$272call.20']
DEBUG 2024-06-11 14:22:10,636 - dispatch pc=284, inst=LOAD_FAST(arg=11, lineno=37)
DEBUG 2024-06-11 14:22:10,636 - stack ['$phi180.0']
DEBUG 2024-06-11 14:22:10,636 - dispatch pc=286, inst=LOAD_FAST(arg=12, lineno=37)
DEBUG 2024-06-11 14:22:10,638 - stack ['$phi180.0', '$index_frac284.21']
DEBUG 2024-06-11 14:22:10,638 - dispatch pc=288, inst=BINARY_OP(arg=10, lineno=37)
DEBUG 2024-06-11 14:22:10,638 - stack ['$phi180.0', '$index_frac284.21', '$offset286.22']
DEBUG 2024-06-11 14:22:10,638 - dispatch pc=292, inst=STORE_FAST(arg=13, lineno=37)
DEBUG 2024-06-11 14:22:10,638 - stack ['$phi180.0', '$binop_sub288.23']
DEBUG 2024-06-11 14:22:10,638 - dispatch pc=294, inst=LOAD_GLOBAL(arg=7, lineno=40)
DEBUG 2024-06-11 14:22:10,638 - stack ['$phi180.0']
DEBUG 2024-06-11 14:22:10,638 - dispatch pc=306, inst=LOAD_FAST(arg=9, lineno=40)
DEBUG 2024-06-11 14:22:10,638 - stack ['$phi180.0', '$null$294.25', '$294load_global.24']
DEBUG 2024-06-11 14:22:10,638 - dispatch pc=308, inst=LOAD_CONST(arg=3, lineno=40)
DEBUG 2024-06-11 14:22:10,638 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26']
DEBUG 2024-06-11 14:22:10,638 - dispatch pc=310, inst=BINARY_OP(arg=0, lineno=40)
DEBUG 2024-06-11 14:22:10,638 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26', '$const308.27']
DEBUG 2024-06-11 14:22:10,638 - dispatch pc=314, inst=LOAD_FAST(arg=15, lineno=40)
DEBUG 2024-06-11 14:22:10,638 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28']
DEBUG 2024-06-11 14:22:10,638 - dispatch pc=316, inst=LOAD_FAST(arg=12, lineno=40)
DEBUG 2024-06-11 14:22:10,638 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29']
DEBUG 2024-06-11 14:22:10,638 - dispatch pc=318, inst=BINARY_OP(arg=10, lineno=40)
DEBUG 2024-06-11 14:22:10,638 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29', '$offset316.30']
DEBUG 2024-06-11 14:22:10,638 - dispatch pc=322, inst=LOAD_FAST(arg=7, lineno=40)
DEBUG 2024-06-11 14:22:10,638 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31']
DEBUG 2024-06-11 14:22:10,638 - dispatch pc=324, inst=BINARY_OP(arg=2, lineno=40)
DEBUG 2024-06-11 14:22:10,638 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31', '$index_step322.32']
DEBUG 2024-06-11 14:22:10,638 - dispatch pc=328, inst=PRECALL(arg=2, lineno=40)
DEBUG 2024-06-11 14:22:10,638 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
DEBUG 2024-06-11 14:22:10,638 - dispatch pc=332, inst=CALL(arg=2, lineno=40)
DEBUG 2024-06-11 14:22:10,638 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
DEBUG 2024-06-11 14:22:10,638 - dispatch pc=342, inst=STORE_FAST(arg=19, lineno=40)
DEBUG 2024-06-11 14:22:10,638 - stack ['$phi180.0', '$332call.34']
DEBUG 2024-06-11 14:22:10,638 - dispatch pc=344, inst=LOAD_GLOBAL(arg=9, lineno=41)
DEBUG 2024-06-11 14:22:10,638 - stack ['$phi180.0']
DEBUG 2024-06-11 14:22:10,638 - dispatch pc=356, inst=LOAD_FAST(arg=19, lineno=41)
DEBUG 2024-06-11 14:22:10,638 - stack ['$phi180.0', '$null$344.36', '$344load_global.35']
DEBUG 2024-06-11 14:22:10,638 - dispatch pc=358, inst=PRECALL(arg=1, lineno=41)
DEBUG 2024-06-11 14:22:10,638 - stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
DEBUG 2024-06-11 14:22:10,638 - dispatch pc=362, inst=CALL(arg=1, lineno=41)
DEBUG 2024-06-11 14:22:10,638 - stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
DEBUG 2024-06-11 14:22:10,638 - dispatch pc=372, inst=GET_ITER(arg=None, lineno=41)
DEBUG 2024-06-11 14:22:10,638 - stack ['$phi180.0', '$362call.38']
DEBUG 2024-06-11 14:22:10,638 - end state. edges=[Edge(pc=374, stack=('$phi180.0', '$372get_iter.39'), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:22:10,638 - pending: deque([State(pc_initial=374 nstack_initial=2)])
DEBUG 2024-06-11 14:22:10,638 - stack: ['$phi374.0', '$phi374.1']
DEBUG 2024-06-11 14:22:10,639 - state.pc_initial: State(pc_initial=374 nstack_initial=2)
DEBUG 2024-06-11 14:22:10,639 - dispatch pc=374, inst=FOR_ITER(arg=62, lineno=41)
DEBUG 2024-06-11 14:22:10,639 - stack ['$phi374.0', '$phi374.1']
DEBUG 2024-06-11 14:22:10,639 - end state. edges=[Edge(pc=500, stack=('$phi374.0',), blockstack=(), npush=0), Edge(pc=376, stack=('$phi374.0', '$phi374.1', '$374for_iter.3'), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:22:10,639 - pending: deque([State(pc_initial=500 nstack_initial=1), State(pc_initial=376 nstack_initial=3)])
DEBUG 2024-06-11 14:22:10,639 - stack: ['$phi500.0']
DEBUG 2024-06-11 14:22:10,639 - state.pc_initial: State(pc_initial=500 nstack_initial=1)
DEBUG 2024-06-11 14:22:10,639 - dispatch pc=500, inst=LOAD_FAST(arg=5, lineno=50)
DEBUG 2024-06-11 14:22:10,639 - stack ['$phi500.0']
DEBUG 2024-06-11 14:22:10,639 - dispatch pc=502, inst=LOAD_FAST(arg=10, lineno=50)
DEBUG 2024-06-11 14:22:10,639 - stack ['$phi500.0', '$scale500.1']
DEBUG 2024-06-11 14:22:10,639 - dispatch pc=504, inst=BINARY_OP(arg=10, lineno=50)
DEBUG 2024-06-11 14:22:10,639 - stack ['$phi500.0', '$scale500.1', '$frac502.2']
DEBUG 2024-06-11 14:22:10,639 - dispatch pc=508, inst=STORE_FAST(arg=10, lineno=50)
DEBUG 2024-06-11 14:22:10,639 - stack ['$phi500.0', '$binop_sub504.3']
DEBUG 2024-06-11 14:22:10,639 - dispatch pc=510, inst=LOAD_FAST(arg=10, lineno=53)
DEBUG 2024-06-11 14:22:10,639 - stack ['$phi500.0']
DEBUG 2024-06-11 14:22:10,639 - dispatch pc=512, inst=LOAD_FAST(arg=4, lineno=53)
DEBUG 2024-06-11 14:22:10,639 - stack ['$phi500.0', '$frac510.4']
DEBUG 2024-06-11 14:22:10,639 - dispatch pc=514, inst=BINARY_OP(arg=5, lineno=53)
DEBUG 2024-06-11 14:22:10,639 - stack ['$phi500.0', '$frac510.4', '$num_table512.5']
DEBUG 2024-06-11 14:22:10,639 - dispatch pc=518, inst=STORE_FAST(arg=11, lineno=53)
DEBUG 2024-06-11 14:22:10,639 - stack ['$phi500.0', '$binop_mul514.6']
DEBUG 2024-06-11 14:22:10,639 - dispatch pc=520, inst=LOAD_GLOBAL(arg=1, lineno=54)
DEBUG 2024-06-11 14:22:10,639 - stack ['$phi500.0']
DEBUG 2024-06-11 14:22:10,639 - dispatch pc=532, inst=LOAD_FAST(arg=11, lineno=54)
DEBUG 2024-06-11 14:22:10,639 - stack ['$phi500.0', '$null$520.8', '$520load_global.7']
DEBUG 2024-06-11 14:22:10,639 - dispatch pc=534, inst=PRECALL(arg=1, lineno=54)
DEBUG 2024-06-11 14:22:10,639 - stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
DEBUG 2024-06-11 14:22:10,639 - dispatch pc=538, inst=CALL(arg=1, lineno=54)
DEBUG 2024-06-11 14:22:10,640 - stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
DEBUG 2024-06-11 14:22:10,640 - dispatch pc=548, inst=STORE_FAST(arg=12, lineno=54)
DEBUG 2024-06-11 14:22:10,640 - stack ['$phi500.0', '$538call.10']
DEBUG 2024-06-11 14:22:10,640 - dispatch pc=550, inst=LOAD_FAST(arg=11, lineno=57)
DEBUG 2024-06-11 14:22:10,640 - stack ['$phi500.0']
DEBUG 2024-06-11 14:22:10,640 - dispatch pc=552, inst=LOAD_FAST(arg=12, lineno=57)
DEBUG 2024-06-11 14:22:10,640 - stack ['$phi500.0', '$index_frac550.11']
DEBUG 2024-06-11 14:22:10,640 - dispatch pc=554, inst=BINARY_OP(arg=10, lineno=57)
DEBUG 2024-06-11 14:22:10,640 - stack ['$phi500.0', '$index_frac550.11', '$offset552.12']
DEBUG 2024-06-11 14:22:10,640 - dispatch pc=558, inst=STORE_FAST(arg=13, lineno=57)
DEBUG 2024-06-11 14:22:10,640 - stack ['$phi500.0', '$binop_sub554.13']
DEBUG 2024-06-11 14:22:10,640 - dispatch pc=560, inst=LOAD_GLOBAL(arg=7, lineno=60)
DEBUG 2024-06-11 14:22:10,640 - stack ['$phi500.0']
DEBUG 2024-06-11 14:22:10,640 - dispatch pc=572, inst=LOAD_FAST(arg=16, lineno=60)
DEBUG 2024-06-11 14:22:10,640 - stack ['$phi500.0', '$null$560.15', '$560load_global.14']
DEBUG 2024-06-11 14:22:10,640 - dispatch pc=574, inst=LOAD_FAST(arg=9, lineno=60)
DEBUG 2024-06-11 14:22:10,640 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16']
DEBUG 2024-06-11 14:22:10,640 - dispatch pc=576, inst=BINARY_OP(arg=10, lineno=60)
DEBUG 2024-06-11 14:22:10,640 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16', '$n574.17']
DEBUG 2024-06-11 14:22:10,640 - dispatch pc=580, inst=LOAD_CONST(arg=3, lineno=60)
DEBUG 2024-06-11 14:22:10,640 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18']
DEBUG 2024-06-11 14:22:10,640 - dispatch pc=582, inst=BINARY_OP(arg=10, lineno=60)
DEBUG 2024-06-11 14:22:10,640 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18', '$const580.19']
DEBUG 2024-06-11 14:22:10,640 - dispatch pc=586, inst=LOAD_FAST(arg=15, lineno=60)
DEBUG 2024-06-11 14:22:10,640 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20']
DEBUG 2024-06-11 14:22:10,640 - dispatch pc=588, inst=LOAD_FAST(arg=12, lineno=60)
DEBUG 2024-06-11 14:22:10,640 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21']
DEBUG 2024-06-11 14:22:10,640 - dispatch pc=590, inst=BINARY_OP(arg=10, lineno=60)
DEBUG 2024-06-11 14:22:10,640 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21', '$offset588.22']
DEBUG 2024-06-11 14:22:10,641 - dispatch pc=594, inst=LOAD_FAST(arg=7, lineno=60)
DEBUG 2024-06-11 14:22:10,641 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23']
DEBUG 2024-06-11 14:22:10,641 - dispatch pc=596, inst=BINARY_OP(arg=2, lineno=60)
DEBUG 2024-06-11 14:22:10,641 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23', '$index_step594.24']
DEBUG 2024-06-11 14:22:10,641 - dispatch pc=600, inst=PRECALL(arg=2, lineno=60)
DEBUG 2024-06-11 14:22:10,641 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
DEBUG 2024-06-11 14:22:10,641 - dispatch pc=604, inst=CALL(arg=2, lineno=60)
DEBUG 2024-06-11 14:22:10,641 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
DEBUG 2024-06-11 14:22:10,641 - dispatch pc=614, inst=STORE_FAST(arg=21, lineno=60)
DEBUG 2024-06-11 14:22:10,641 - stack ['$phi500.0', '$604call.26']
DEBUG 2024-06-11 14:22:10,641 - dispatch pc=616, inst=LOAD_GLOBAL(arg=9, lineno=61)
DEBUG 2024-06-11 14:22:10,641 - stack ['$phi500.0']
DEBUG 2024-06-11 14:22:10,641 - dispatch pc=628, inst=LOAD_FAST(arg=21, lineno=61)
DEBUG 2024-06-11 14:22:10,641 - stack ['$phi500.0', '$null$616.28', '$616load_global.27']
DEBUG 2024-06-11 14:22:10,641 - dispatch pc=630, inst=PRECALL(arg=1, lineno=61)
DEBUG 2024-06-11 14:22:10,641 - stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
DEBUG 2024-06-11 14:22:10,641 - dispatch pc=634, inst=CALL(arg=1, lineno=61)
DEBUG 2024-06-11 14:22:10,641 - stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
DEBUG 2024-06-11 14:22:10,641 - dispatch pc=644, inst=GET_ITER(arg=None, lineno=61)
DEBUG 2024-06-11 14:22:10,641 - stack ['$phi500.0', '$634call.30']
DEBUG 2024-06-11 14:22:10,641 - end state. edges=[Edge(pc=646, stack=('$phi500.0', '$644get_iter.31'), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:22:10,641 - pending: deque([State(pc_initial=376 nstack_initial=3), State(pc_initial=646 nstack_initial=2)])
DEBUG 2024-06-11 14:22:10,641 - stack: ['$phi376.0', '$phi376.1', '$phi376.2']
DEBUG 2024-06-11 14:22:10,641 - state.pc_initial: State(pc_initial=376 nstack_initial=3)
DEBUG 2024-06-11 14:22:10,641 - dispatch pc=376, inst=STORE_FAST(arg=20, lineno=41)
DEBUG 2024-06-11 14:22:10,641 - stack ['$phi376.0', '$phi376.1', '$phi376.2']
DEBUG 2024-06-11 14:22:10,641 - dispatch pc=378, inst=LOAD_FAST(arg=2, lineno=44)
DEBUG 2024-06-11 14:22:10,642 - stack ['$phi376.0', '$phi376.1']
DEBUG 2024-06-11 14:22:10,642 - dispatch pc=380, inst=LOAD_FAST(arg=12, lineno=44)
DEBUG 2024-06-11 14:22:10,642 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3']
DEBUG 2024-06-11 14:22:10,642 - dispatch pc=382, inst=LOAD_FAST(arg=20, lineno=44)
DEBUG 2024-06-11 14:22:10,642 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4']
DEBUG 2024-06-11 14:22:10,642 - dispatch pc=384, inst=LOAD_FAST(arg=7, lineno=44)
DEBUG 2024-06-11 14:22:10,642 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5']
DEBUG 2024-06-11 14:22:10,643 - dispatch pc=386, inst=BINARY_OP(arg=5, lineno=44)
DEBUG 2024-06-11 14:22:10,643 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5', '$index_step384.6']
DEBUG 2024-06-11 14:22:10,643 - dispatch pc=390, inst=BINARY_OP(arg=0, lineno=44)
DEBUG 2024-06-11 14:22:10,643 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$binop_mul386.7']
DEBUG 2024-06-11 14:22:10,643 - dispatch pc=394, inst=BINARY_SUBSCR(arg=None, lineno=44)
DEBUG 2024-06-11 14:22:10,643 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$binop_add390.8']
DEBUG 2024-06-11 14:22:10,643 - dispatch pc=404, inst=LOAD_FAST(arg=13, lineno=45)
DEBUG 2024-06-11 14:22:10,643 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9']
DEBUG 2024-06-11 14:22:10,643 - dispatch pc=406, inst=LOAD_FAST(arg=3, lineno=45)
DEBUG 2024-06-11 14:22:10,643 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10']
DEBUG 2024-06-11 14:22:10,643 - dispatch pc=408, inst=LOAD_FAST(arg=12, lineno=45)
DEBUG 2024-06-11 14:22:10,643 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11']
DEBUG 2024-06-11 14:22:10,643 - dispatch pc=410, inst=LOAD_FAST(arg=20, lineno=45)
DEBUG 2024-06-11 14:22:10,643 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12']
DEBUG 2024-06-11 14:22:10,643 - dispatch pc=412, inst=LOAD_FAST(arg=7, lineno=45)
DEBUG 2024-06-11 14:22:10,643 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13']
DEBUG 2024-06-11 14:22:10,643 - dispatch pc=414, inst=BINARY_OP(arg=5, lineno=45)
DEBUG 2024-06-11 14:22:10,643 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13', '$index_step412.14']
DEBUG 2024-06-11 14:22:10,643 - dispatch pc=418, inst=BINARY_OP(arg=0, lineno=45)
DEBUG 2024-06-11 14:22:10,643 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$binop_mul414.15']
DEBUG 2024-06-11 14:22:10,643 - dispatch pc=422, inst=BINARY_SUBSCR(arg=None, lineno=45)
DEBUG 2024-06-11 14:22:10,643 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$binop_add418.16']
DEBUG 2024-06-11 14:22:10,643 - dispatch pc=432, inst=BINARY_OP(arg=5, lineno=45)
DEBUG 2024-06-11 14:22:10,643 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$422binary_subscr.17']
DEBUG 2024-06-11 14:22:10,643 - dispatch pc=436, inst=BINARY_OP(arg=0, lineno=44)
DEBUG 2024-06-11 14:22:10,643 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$binop_mul432.18']
DEBUG 2024-06-11 14:22:10,643 - dispatch pc=440, inst=STORE_FAST(arg=14, lineno=43)
DEBUG 2024-06-11 14:22:10,643 - stack ['$phi376.0', '$phi376.1', '$binop_add436.19']
DEBUG 2024-06-11 14:22:10,643 - dispatch pc=442, inst=LOAD_FAST(arg=6, lineno=47)
DEBUG 2024-06-11 14:22:10,643 - stack ['$phi376.0', '$phi376.1']
DEBUG 2024-06-11 14:22:10,643 - dispatch pc=444, inst=LOAD_FAST(arg=18, lineno=47)
DEBUG 2024-06-11 14:22:10,644 - stack ['$phi376.0', '$phi376.1', '$y442.20']
DEBUG 2024-06-11 14:22:10,644 - dispatch pc=446, inst=COPY(arg=2, lineno=47)
DEBUG 2024-06-11 14:22:10,644 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21']
DEBUG 2024-06-11 14:22:10,644 - dispatch pc=448, inst=COPY(arg=2, lineno=47)
DEBUG 2024-06-11 14:22:10,644 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20']
DEBUG 2024-06-11 14:22:10,644 - dispatch pc=450, inst=BINARY_SUBSCR(arg=None, lineno=47)
DEBUG 2024-06-11 14:22:10,644 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20', '$t444.21']
DEBUG 2024-06-11 14:22:10,644 - dispatch pc=460, inst=LOAD_FAST(arg=14, lineno=47)
DEBUG 2024-06-11 14:22:10,644 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22']
DEBUG 2024-06-11 14:22:10,644 - dispatch pc=462, inst=LOAD_FAST(arg=0, lineno=47)
DEBUG 2024-06-11 14:22:10,644 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23']
DEBUG 2024-06-11 14:22:10,644 - dispatch pc=464, inst=LOAD_FAST(arg=9, lineno=47)
DEBUG 2024-06-11 14:22:10,644 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24']
DEBUG 2024-06-11 14:22:10,644 - dispatch pc=466, inst=LOAD_FAST(arg=20, lineno=47)
DEBUG 2024-06-11 14:22:10,644 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25']
DEBUG 2024-06-11 14:22:10,644 - dispatch pc=468, inst=BINARY_OP(arg=10, lineno=47)
DEBUG 2024-06-11 14:22:10,644 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25', '$i466.26']
DEBUG 2024-06-11 14:22:10,644 - dispatch pc=472, inst=BINARY_SUBSCR(arg=None, lineno=47)
DEBUG 2024-06-11 14:22:10,644 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$binop_sub468.27']
DEBUG 2024-06-11 14:22:10,644 - dispatch pc=482, inst=BINARY_OP(arg=5, lineno=47)
DEBUG 2024-06-11 14:22:10,644 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$472binary_subscr.28']
DEBUG 2024-06-11 14:22:10,644 - dispatch pc=486, inst=BINARY_OP(arg=13, lineno=47)
DEBUG 2024-06-11 14:22:10,644 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$binop_mul482.29']
DEBUG 2024-06-11 14:22:10,644 - dispatch pc=490, inst=SWAP(arg=3, lineno=47)
DEBUG 2024-06-11 14:22:10,644 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$binop_iadd486.30']
DEBUG 2024-06-11 14:22:10,644 - dispatch pc=492, inst=SWAP(arg=2, lineno=47)
DEBUG 2024-06-11 14:22:10,644 - stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$t444.21', '$y442.20']
DEBUG 2024-06-11 14:22:10,644 - dispatch pc=494, inst=STORE_SUBSCR(arg=None, lineno=47)
DEBUG 2024-06-11 14:22:10,644 - stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$y442.20', '$t444.21']
DEBUG 2024-06-11 14:22:10,644 - dispatch pc=498, inst=JUMP_BACKWARD(arg=63, lineno=47)
DEBUG 2024-06-11 14:22:10,645 - stack ['$phi376.0', '$phi376.1']
DEBUG 2024-06-11 14:22:10,645 - end state. edges=[Edge(pc=374, stack=('$phi376.0', '$phi376.1'), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:22:10,645 - pending: deque([State(pc_initial=646 nstack_initial=2), State(pc_initial=374 nstack_initial=2)])
DEBUG 2024-06-11 14:22:10,645 - stack: ['$phi646.0', '$phi646.1']
DEBUG 2024-06-11 14:22:10,645 - state.pc_initial: State(pc_initial=646 nstack_initial=2)
DEBUG 2024-06-11 14:22:10,645 - dispatch pc=646, inst=FOR_ITER(arg=65, lineno=61)
DEBUG 2024-06-11 14:22:10,645 - stack ['$phi646.0', '$phi646.1']
DEBUG 2024-06-11 14:22:10,645 - end state. edges=[Edge(pc=778, stack=('$phi646.0',), blockstack=(), npush=0), Edge(pc=648, stack=('$phi646.0', '$phi646.1', '$646for_iter.3'), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:22:10,645 - pending: deque([State(pc_initial=374 nstack_initial=2), State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
DEBUG 2024-06-11 14:22:10,645 - pending: deque([State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
DEBUG 2024-06-11 14:22:10,645 - stack: ['$phi778.0']
DEBUG 2024-06-11 14:22:10,645 - state.pc_initial: State(pc_initial=778 nstack_initial=1)
DEBUG 2024-06-11 14:22:10,645 - dispatch pc=778, inst=NOP(arg=1, lineno=61)
DEBUG 2024-06-11 14:22:10,645 - stack ['$phi778.0']
DEBUG 2024-06-11 14:22:10,645 - dispatch pc=780, inst=JUMP_BACKWARD(arg=303, lineno=61)
DEBUG 2024-06-11 14:22:10,645 - stack ['$phi778.0']
DEBUG 2024-06-11 14:22:10,645 - end state. edges=[Edge(pc=176, stack=('$phi778.0',), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:22:10,645 - pending: deque([State(pc_initial=648 nstack_initial=3), State(pc_initial=176 nstack_initial=1)])
DEBUG 2024-06-11 14:22:10,645 - stack: ['$phi648.0', '$phi648.1', '$phi648.2']
DEBUG 2024-06-11 14:22:10,645 - state.pc_initial: State(pc_initial=648 nstack_initial=3)
DEBUG 2024-06-11 14:22:10,645 - dispatch pc=648, inst=STORE_FAST(arg=22, lineno=61)
DEBUG 2024-06-11 14:22:10,645 - stack ['$phi648.0', '$phi648.1', '$phi648.2']
DEBUG 2024-06-11 14:22:10,645 - dispatch pc=650, inst=LOAD_FAST(arg=2, lineno=63)
DEBUG 2024-06-11 14:22:10,645 - stack ['$phi648.0', '$phi648.1']
DEBUG 2024-06-11 14:22:10,645 - dispatch pc=652, inst=LOAD_FAST(arg=12, lineno=63)
DEBUG 2024-06-11 14:22:10,645 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3']
DEBUG 2024-06-11 14:22:10,645 - dispatch pc=654, inst=LOAD_FAST(arg=22, lineno=63)
DEBUG 2024-06-11 14:22:10,645 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4']
DEBUG 2024-06-11 14:22:10,645 - dispatch pc=656, inst=LOAD_FAST(arg=7, lineno=63)
DEBUG 2024-06-11 14:22:10,646 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5']
DEBUG 2024-06-11 14:22:10,646 - dispatch pc=658, inst=BINARY_OP(arg=5, lineno=63)
DEBUG 2024-06-11 14:22:10,646 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5', '$index_step656.6']
DEBUG 2024-06-11 14:22:10,646 - dispatch pc=662, inst=BINARY_OP(arg=0, lineno=63)
DEBUG 2024-06-11 14:22:10,646 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$binop_mul658.7']
DEBUG 2024-06-11 14:22:10,646 - dispatch pc=666, inst=BINARY_SUBSCR(arg=None, lineno=63)
DEBUG 2024-06-11 14:22:10,646 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$binop_add662.8']
DEBUG 2024-06-11 14:22:10,646 - dispatch pc=676, inst=LOAD_FAST(arg=13, lineno=64)
DEBUG 2024-06-11 14:22:10,646 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9']
DEBUG 2024-06-11 14:22:10,646 - dispatch pc=678, inst=LOAD_FAST(arg=3, lineno=64)
DEBUG 2024-06-11 14:22:10,646 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10']
DEBUG 2024-06-11 14:22:10,646 - dispatch pc=680, inst=LOAD_FAST(arg=12, lineno=64)
DEBUG 2024-06-11 14:22:10,646 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11']
DEBUG 2024-06-11 14:22:10,646 - dispatch pc=682, inst=LOAD_FAST(arg=22, lineno=64)
DEBUG 2024-06-11 14:22:10,646 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12']
DEBUG 2024-06-11 14:22:10,646 - dispatch pc=684, inst=LOAD_FAST(arg=7, lineno=64)
DEBUG 2024-06-11 14:22:10,646 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13']
DEBUG 2024-06-11 14:22:10,646 - dispatch pc=686, inst=BINARY_OP(arg=5, lineno=64)
DEBUG 2024-06-11 14:22:10,646 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13', '$index_step684.14']
DEBUG 2024-06-11 14:22:10,646 - dispatch pc=690, inst=BINARY_OP(arg=0, lineno=64)
DEBUG 2024-06-11 14:22:10,646 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$binop_mul686.15']
DEBUG 2024-06-11 14:22:10,646 - dispatch pc=694, inst=BINARY_SUBSCR(arg=None, lineno=64)
DEBUG 2024-06-11 14:22:10,646 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$binop_add690.16']
DEBUG 2024-06-11 14:22:10,646 - dispatch pc=704, inst=BINARY_OP(arg=5, lineno=64)
DEBUG 2024-06-11 14:22:10,646 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$694binary_subscr.17']
DEBUG 2024-06-11 14:22:10,646 - dispatch pc=708, inst=BINARY_OP(arg=0, lineno=63)
DEBUG 2024-06-11 14:22:10,646 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$binop_mul704.18']
DEBUG 2024-06-11 14:22:10,646 - dispatch pc=712, inst=STORE_FAST(arg=14, lineno=62)
DEBUG 2024-06-11 14:22:10,646 - stack ['$phi648.0', '$phi648.1', '$binop_add708.19']
DEBUG 2024-06-11 14:22:10,646 - dispatch pc=714, inst=LOAD_FAST(arg=6, lineno=66)
DEBUG 2024-06-11 14:22:10,646 - stack ['$phi648.0', '$phi648.1']
DEBUG 2024-06-11 14:22:10,646 - dispatch pc=716, inst=LOAD_FAST(arg=18, lineno=66)
DEBUG 2024-06-11 14:22:10,646 - stack ['$phi648.0', '$phi648.1', '$y714.20']
DEBUG 2024-06-11 14:22:10,646 - dispatch pc=718, inst=COPY(arg=2, lineno=66)
DEBUG 2024-06-11 14:22:10,646 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21']
DEBUG 2024-06-11 14:22:10,646 - dispatch pc=720, inst=COPY(arg=2, lineno=66)
DEBUG 2024-06-11 14:22:10,646 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20']
DEBUG 2024-06-11 14:22:10,646 - dispatch pc=722, inst=BINARY_SUBSCR(arg=None, lineno=66)
DEBUG 2024-06-11 14:22:10,646 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20', '$t716.21']
DEBUG 2024-06-11 14:22:10,646 - dispatch pc=732, inst=LOAD_FAST(arg=14, lineno=66)
DEBUG 2024-06-11 14:22:10,646 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22']
DEBUG 2024-06-11 14:22:10,646 - dispatch pc=734, inst=LOAD_FAST(arg=0, lineno=66)
DEBUG 2024-06-11 14:22:10,646 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23']
DEBUG 2024-06-11 14:22:10,646 - dispatch pc=736, inst=LOAD_FAST(arg=9, lineno=66)
DEBUG 2024-06-11 14:22:10,646 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24']
DEBUG 2024-06-11 14:22:10,646 - dispatch pc=738, inst=LOAD_FAST(arg=22, lineno=66)
DEBUG 2024-06-11 14:22:10,646 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25']
DEBUG 2024-06-11 14:22:10,646 - dispatch pc=740, inst=BINARY_OP(arg=0, lineno=66)
DEBUG 2024-06-11 14:22:10,646 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25', '$k738.26']
DEBUG 2024-06-11 14:22:10,646 - dispatch pc=744, inst=LOAD_CONST(arg=3, lineno=66)
DEBUG 2024-06-11 14:22:10,646 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27']
DEBUG 2024-06-11 14:22:10,646 - dispatch pc=746, inst=BINARY_OP(arg=0, lineno=66)
DEBUG 2024-06-11 14:22:10,647 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27', '$const744.28']
DEBUG 2024-06-11 14:22:10,647 - dispatch pc=750, inst=BINARY_SUBSCR(arg=None, lineno=66)
DEBUG 2024-06-11 14:22:10,647 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add746.29']
DEBUG 2024-06-11 14:22:10,647 - dispatch pc=760, inst=BINARY_OP(arg=5, lineno=66)
DEBUG 2024-06-11 14:22:10,647 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$750binary_subscr.30']
DEBUG 2024-06-11 14:22:10,647 - dispatch pc=764, inst=BINARY_OP(arg=13, lineno=66)
DEBUG 2024-06-11 14:22:10,647 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$binop_mul760.31']
DEBUG 2024-06-11 14:22:10,647 - dispatch pc=768, inst=SWAP(arg=3, lineno=66)
DEBUG 2024-06-11 14:22:10,647 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$binop_iadd764.32']
DEBUG 2024-06-11 14:22:10,647 - dispatch pc=770, inst=SWAP(arg=2, lineno=66)
DEBUG 2024-06-11 14:22:10,647 - stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$t716.21', '$y714.20']
DEBUG 2024-06-11 14:22:10,647 - dispatch pc=772, inst=STORE_SUBSCR(arg=None, lineno=66)
DEBUG 2024-06-11 14:22:10,647 - stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$y714.20', '$t716.21']
DEBUG 2024-06-11 14:22:10,647 - dispatch pc=776, inst=JUMP_BACKWARD(arg=66, lineno=66)
DEBUG 2024-06-11 14:22:10,647 - stack ['$phi648.0', '$phi648.1']
DEBUG 2024-06-11 14:22:10,648 - end state. edges=[Edge(pc=646, stack=('$phi648.0', '$phi648.1'), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:22:10,648 - pending: deque([State(pc_initial=176 nstack_initial=1), State(pc_initial=646 nstack_initial=2)])
DEBUG 2024-06-11 14:22:10,648 - pending: deque([State(pc_initial=646 nstack_initial=2)])
DEBUG 2024-06-11 14:22:10,648 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 14:22:10,648 - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=1): set(),
             State(pc_initial=178 nstack_initial=1): {'$phi178.0'},
             State(pc_initial=180 nstack_initial=2): {'$phi180.1'},
             State(pc_initial=374 nstack_initial=2): {'$phi374.1'},
             State(pc_initial=376 nstack_initial=3): {'$phi376.2'},
             State(pc_initial=500 nstack_initial=1): set(),
             State(pc_initial=646 nstack_initial=2): {'$phi646.1'},
             State(pc_initial=648 nstack_initial=3): {'$phi648.2'},
             State(pc_initial=778 nstack_initial=1): set(),
             State(pc_initial=782 nstack_initial=0): set()})
DEBUG 2024-06-11 14:22:10,648 - defmap: {'$phi176.0': State(pc_initial=0 nstack_initial=0),
 '$phi180.1': State(pc_initial=178 nstack_initial=1),
 '$phi374.1': State(pc_initial=180 nstack_initial=2),
 '$phi376.2': State(pc_initial=374 nstack_initial=2),
 '$phi646.1': State(pc_initial=500 nstack_initial=1),
 '$phi648.2': State(pc_initial=646 nstack_initial=2)}
DEBUG 2024-06-11 14:22:10,648 - phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi778.0',
                            State(pc_initial=778 nstack_initial=1))},
             '$phi178.0': {('$phi176.0',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi180.0': {('$phi178.0',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$phi180.0',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.0',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.1',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi376.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.1': {('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi646.0': {('$phi500.0',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.0',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.1',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi648.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.1': {('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))}})
DEBUG 2024-06-11 14:22:10,648 - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi374.0',
                            State(pc_initial=374 nstack_initial=2)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
DEBUG 2024-06-11 14:22:10,649 - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
DEBUG 2024-06-11 14:22:10,649 - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
DEBUG 2024-06-11 14:22:10,649 - keep phismap: {'$phi178.0': {('$174get_iter.29', State(pc_initial=0 nstack_initial=0))},
 '$phi180.1': {('$178for_iter.2', State(pc_initial=178 nstack_initial=1))},
 '$phi374.1': {('$372get_iter.39', State(pc_initial=180 nstack_initial=2))},
 '$phi376.2': {('$374for_iter.3', State(pc_initial=374 nstack_initial=2))},
 '$phi646.1': {('$644get_iter.31', State(pc_initial=500 nstack_initial=1))},
 '$phi648.2': {('$646for_iter.3', State(pc_initial=646 nstack_initial=2))}}
DEBUG 2024-06-11 14:22:10,649 - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi178.0': '$174get_iter.29'},
             State(pc_initial=178 nstack_initial=1): {'$phi180.1': '$178for_iter.2'},
             State(pc_initial=180 nstack_initial=2): {'$phi374.1': '$372get_iter.39'},
             State(pc_initial=374 nstack_initial=2): {'$phi376.2': '$374for_iter.3'},
             State(pc_initial=500 nstack_initial=1): {'$phi646.1': '$644get_iter.31'},
             State(pc_initial=646 nstack_initial=2): {'$phi648.2': '$646for_iter.3'}})
DEBUG 2024-06-11 14:22:10,649 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 14:22:10,649 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$scale16.2'}), (18, {'res': '$num_table18.3'}), (20, {'op': '*', 'lhs': '$scale16.2', 'rhs': '$num_table18.3', 'res': '$binop_mul20.4'}), (22, {}), (24, {}), (26, {}), (28, {'func': '$4load_global.0', 'args': ['$binop_mul20.4'], 'kw_names': None, 'res': '$28call.5'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {'value': '$28call.5'}), (40, {'res': '$const40.6'}), (42, {'value': '$const40.6'}), (44, {'res': '$const44.7'}), (46, {'value': '$const44.7'}), (48, {'res': '$const48.8'}), (50, {'value': '$const48.8'}), (52, {'res': '$const52.9'}), (54, {'value': '$const52.9'}), (56, {'res': '$const56.10'}), (58, {'value': '$const56.10'}), (60, {'res': '$const60.11'}), (62, {'value': '$const60.11'}), (64, {'res': '$const64.12'}), (66, {'value': '$const64.12'}), (68, {'res': '$interp_win68.13'}), (70, {'item': '$interp_win68.13', 'res': '$70load_attr.14'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$const80.15'}), (82, {'index': '$const80.15', 'target': '$70load_attr.14', 'res': '$82binary_subscr.16'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82binary_subscr.16'}), (94, {'res': '$x94.17'}), (96, {'item': '$x94.17', 'res': '$96load_attr.18'}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {'res': '$const106.19'}), (108, {'index': '$const106.19', 'target': '$96load_attr.18', 'res': '$108binary_subscr.20'}), (110, {}), (112, {}), (114, {}), (116, {}), (118, {'value': '$108binary_subscr.20'}), (120, {'res': '$t_out120.21'}), (122, {'item': '$t_out120.21', 'res': '$122load_attr.22'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {'res': '$const132.23'}), (134, {'index': '$const132.23', 'target': '$122load_attr.22', 'res': '$134binary_subscr.24'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {'value': '$134binary_subscr.24'}), (146, {'idx': 2, 'res': '$146load_global.25'}), (148, {}), (150, {}), (152, {}), (154, {}), (156, {}), (158, {'res': '$n_out158.27'}), (160, {}), (162, {}), (164, {'func': '$146load_global.25', 'args': ['$n_out158.27'], 'kw_names': None, 'res': '$164call.28'}), (166, {}), (168, {}), (170, {}), (172, {}), (174, {'value': '$164call.28', 'res': '$174get_iter.29'})), outgoing_phis={'$phi178.0': '$174get_iter.29'}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$174get_iter.29',)})
DEBUG 2024-06-11 14:22:10,649 - block_infos State(pc_initial=176 nstack_initial=1):
AdaptBlockInfo(insts=((176, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={178: ('$phi176.0',)})
DEBUG 2024-06-11 14:22:10,649 - block_infos State(pc_initial=178 nstack_initial=1):
AdaptBlockInfo(insts=((178, {'iterator': '$phi178.0', 'pair': '$178for_iter.1', 'indval': '$178for_iter.2', 'pred': '$178for_iter.3'}),), outgoing_phis={'$phi180.1': '$178for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={782: (), 180: ('$phi178.0', '$178for_iter.2')})
DEBUG 2024-06-11 14:22:10,649 - block_infos State(pc_initial=180 nstack_initial=2):
AdaptBlockInfo(insts=((180, {'value': '$phi180.1'}), (182, {'res': '$t_out182.2'}), (184, {'res': '$t184.3'}), (186, {'index': '$t184.3', 'target': '$t_out182.2', 'res': '$186binary_subscr.4'}), (188, {}), (190, {}), (192, {}), (194, {}), (196, {'value': '$186binary_subscr.4'}), (198, {'idx': 0, 'res': '$198load_global.5'}), (200, {}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'res': '$time_register210.7'}), (212, {}), (214, {}), (216, {'func': '$198load_global.5', 'args': ['$time_register210.7'], 'kw_names': None, 'res': '$216call.8'}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {'value': '$216call.8'}), (228, {'res': '$scale228.9'}), (230, {'res': '$time_register230.10'}), (232, {'res': '$n232.11'}), (234, {'op': '-', 'lhs': '$time_register230.10', 'rhs': '$n232.11', 'res': '$binop_sub234.12'}), (236, {}), (238, {'op': '*', 'lhs': '$scale228.9', 'rhs': '$binop_sub234.12', 'res': '$binop_mul238.13'}), (240, {}), (242, {'value': '$binop_mul238.13'}), (244, {'res': '$frac244.14'}), (246, {'res': '$num_table246.15'}), (248, {'op': '*', 'lhs': '$frac244.14', 'rhs': '$num_table246.15', 'res': '$binop_mul248.16'}), (250, {}), (252, {'value': '$binop_mul248.16'}), (254, {'idx': 0, 'res': '$254load_global.17'}), (256, {}), (258, {}), (260, {}), (262, {}), (264, {}), (266, {'res': '$index_frac266.19'}), (268, {}), (270, {}), (272, {'func': '$254load_global.17', 'args': ['$index_frac266.19'], 'kw_names': None, 'res': '$272call.20'}), (274, {}), (276, {}), (278, {}), (280, {}), (282, {'value': '$272call.20'}), (284, {'res': '$index_frac284.21'}), (286, {'res': '$offset286.22'}), (288, {'op': '-', 'lhs': '$index_frac284.21', 'rhs': '$offset286.22', 'res': '$binop_sub288.23'}), (290, {}), (292, {'value': '$binop_sub288.23'}), (294, {'idx': 3, 'res': '$294load_global.24'}), (296, {}), (298, {}), (300, {}), (302, {}), (304, {}), (306, {'res': '$n306.26'}), (308, {'res': '$const308.27'}), (310, {'op': '+', 'lhs': '$n306.26', 'rhs': '$const308.27', 'res': '$binop_add310.28'}), (312, {}), (314, {'res': '$nwin314.29'}), (316, {'res': '$offset316.30'}), (318, {'op': '-', 'lhs': '$nwin314.29', 'rhs': '$offset316.30', 'res': '$binop_sub318.31'}), (320, {}), (322, {'res': '$index_step322.32'}), (324, {'op': '//', 'lhs': '$binop_sub318.31', 'rhs': '$index_step322.32', 'res': '$binop_floordiv324.33'}), (326, {}), (328, {}), (330, {}), (332, {'func': '$294load_global.24', 'args': ['$binop_add310.28', '$binop_floordiv324.33'], 'kw_names': None, 'res': '$332call.34'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'value': '$332call.34'}), (344, {'idx': 4, 'res': '$344load_global.35'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {}), (356, {'res': '$i_max356.37'}), (358, {}), (360, {}), (362, {'func': '$344load_global.35', 'args': ['$i_max356.37'], 'kw_names': None, 'res': '$362call.38'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {'value': '$362call.38', 'res': '$372get_iter.39'})), outgoing_phis={'$phi374.1': '$372get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi180.0', '$372get_iter.39')})
DEBUG 2024-06-11 14:22:10,649 - block_infos State(pc_initial=374 nstack_initial=2):
AdaptBlockInfo(insts=((374, {'iterator': '$phi374.1', 'pair': '$374for_iter.2', 'indval': '$374for_iter.3', 'pred': '$374for_iter.4'}),), outgoing_phis={'$phi376.2': '$374for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={500: ('$phi374.0',), 376: ('$phi374.0', '$phi374.1', '$374for_iter.3')})
DEBUG 2024-06-11 14:22:10,649 - block_infos State(pc_initial=376 nstack_initial=3):
AdaptBlockInfo(insts=((376, {'value': '$phi376.2'}), (378, {'res': '$interp_win378.3'}), (380, {'res': '$offset380.4'}), (382, {'res': '$i382.5'}), (384, {'res': '$index_step384.6'}), (386, {'op': '*', 'lhs': '$i382.5', 'rhs': '$index_step384.6', 'res': '$binop_mul386.7'}), (388, {}), (390, {'op': '+', 'lhs': '$offset380.4', 'rhs': '$binop_mul386.7', 'res': '$binop_add390.8'}), (392, {}), (394, {'index': '$binop_add390.8', 'target': '$interp_win378.3', 'res': '$394binary_subscr.9'}), (396, {}), (398, {}), (400, {}), (402, {}), (404, {'res': '$eta404.10'}), (406, {'res': '$interp_delta406.11'}), (408, {'res': '$offset408.12'}), (410, {'res': '$i410.13'}), (412, {'res': '$index_step412.14'}), (414, {'op': '*', 'lhs': '$i410.13', 'rhs': '$index_step412.14', 'res': '$binop_mul414.15'}), (416, {}), (418, {'op': '+', 'lhs': '$offset408.12', 'rhs': '$binop_mul414.15', 'res': '$binop_add418.16'}), (420, {}), (422, {'index': '$binop_add418.16', 'target': '$interp_delta406.11', 'res': '$422binary_subscr.17'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {'op': '*', 'lhs': '$eta404.10', 'rhs': '$422binary_subscr.17', 'res': '$binop_mul432.18'}), (434, {}), (436, {'op': '+', 'lhs': '$394binary_subscr.9', 'rhs': '$binop_mul432.18', 'res': '$binop_add436.19'}), (438, {}), (440, {'value': '$binop_add436.19'}), (442, {'res': '$y442.20'}), (444, {'res': '$t444.21'}), (450, {'index': '$t444.21', 'target': '$y442.20', 'res': '$450binary_subscr.22'}), (452, {}), (454, {}), (456, {}), (458, {}), (460, {'res': '$weight460.23'}), (462, {'res': '$x462.24'}), (464, {'res': '$n464.25'}), (466, {'res': '$i466.26'}), (468, {'op': '-', 'lhs': '$n464.25', 'rhs': '$i466.26', 'res': '$binop_sub468.27'}), (470, {}), (472, {'index': '$binop_sub468.27', 'target': '$x462.24', 'res': '$472binary_subscr.28'}), (474, {}), (476, {}), (478, {}), (480, {}), (482, {'op': '*', 'lhs': '$weight460.23', 'rhs': '$472binary_subscr.28', 'res': '$binop_mul482.29'}), (484, {}), (486, {'op': '+=', 'lhs': '$450binary_subscr.22', 'rhs': '$binop_mul482.29', 'res': '$binop_iadd486.30'}), (488, {}), (494, {'target': '$y442.20', 'index': '$t444.21', 'value': '$binop_iadd486.30'}), (496, {}), (498, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi376.0', '$phi376.1')})
DEBUG 2024-06-11 14:22:10,651 - block_infos State(pc_initial=500 nstack_initial=1):
AdaptBlockInfo(insts=((500, {'res': '$scale500.1'}), (502, {'res': '$frac502.2'}), (504, {'op': '-', 'lhs': '$scale500.1', 'rhs': '$frac502.2', 'res': '$binop_sub504.3'}), (506, {}), (508, {'value': '$binop_sub504.3'}), (510, {'res': '$frac510.4'}), (512, {'res': '$num_table512.5'}), (514, {'op': '*', 'lhs': '$frac510.4', 'rhs': '$num_table512.5', 'res': '$binop_mul514.6'}), (516, {}), (518, {'value': '$binop_mul514.6'}), (520, {'idx': 0, 'res': '$520load_global.7'}), (522, {}), (524, {}), (526, {}), (528, {}), (530, {}), (532, {'res': '$index_frac532.9'}), (534, {}), (536, {}), (538, {'func': '$520load_global.7', 'args': ['$index_frac532.9'], 'kw_names': None, 'res': '$538call.10'}), (540, {}), (542, {}), (544, {}), (546, {}), (548, {'value': '$538call.10'}), (550, {'res': '$index_frac550.11'}), (552, {'res': '$offset552.12'}), (554, {'op': '-', 'lhs': '$index_frac550.11', 'rhs': '$offset552.12', 'res': '$binop_sub554.13'}), (556, {}), (558, {'value': '$binop_sub554.13'}), (560, {'idx': 3, 'res': '$560load_global.14'}), (562, {}), (564, {}), (566, {}), (568, {}), (570, {}), (572, {'res': '$n_orig572.16'}), (574, {'res': '$n574.17'}), (576, {'op': '-', 'lhs': '$n_orig572.16', 'rhs': '$n574.17', 'res': '$binop_sub576.18'}), (578, {}), (580, {'res': '$const580.19'}), (582, {'op': '-', 'lhs': '$binop_sub576.18', 'rhs': '$const580.19', 'res': '$binop_sub582.20'}), (584, {}), (586, {'res': '$nwin586.21'}), (588, {'res': '$offset588.22'}), (590, {'op': '-', 'lhs': '$nwin586.21', 'rhs': '$offset588.22', 'res': '$binop_sub590.23'}), (592, {}), (594, {'res': '$index_step594.24'}), (596, {'op': '//', 'lhs': '$binop_sub590.23', 'rhs': '$index_step594.24', 'res': '$binop_floordiv596.25'}), (598, {}), (600, {}), (602, {}), (604, {'func': '$560load_global.14', 'args': ['$binop_sub582.20', '$binop_floordiv596.25'], 'kw_names': None, 'res': '$604call.26'}), (606, {}), (608, {}), (610, {}), (612, {}), (614, {'value': '$604call.26'}), (616, {'idx': 4, 'res': '$616load_global.27'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {}), (628, {'res': '$k_max628.29'}), (630, {}), (632, {}), (634, {'func': '$616load_global.27', 'args': ['$k_max628.29'], 'kw_names': None, 'res': '$634call.30'}), (636, {}), (638, {}), (640, {}), (642, {}), (644, {'value': '$634call.30', 'res': '$644get_iter.31'})), outgoing_phis={'$phi646.1': '$644get_iter.31'}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi500.0', '$644get_iter.31')})
DEBUG 2024-06-11 14:22:10,651 - block_infos State(pc_initial=646 nstack_initial=2):
AdaptBlockInfo(insts=((646, {'iterator': '$phi646.1', 'pair': '$646for_iter.2', 'indval': '$646for_iter.3', 'pred': '$646for_iter.4'}),), outgoing_phis={'$phi648.2': '$646for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={778: ('$phi646.0',), 648: ('$phi646.0', '$phi646.1', '$646for_iter.3')})
DEBUG 2024-06-11 14:22:10,651 - block_infos State(pc_initial=648 nstack_initial=3):
AdaptBlockInfo(insts=((648, {'value': '$phi648.2'}), (650, {'res': '$interp_win650.3'}), (652, {'res': '$offset652.4'}), (654, {'res': '$k654.5'}), (656, {'res': '$index_step656.6'}), (658, {'op': '*', 'lhs': '$k654.5', 'rhs': '$index_step656.6', 'res': '$binop_mul658.7'}), (660, {}), (662, {'op': '+', 'lhs': '$offset652.4', 'rhs': '$binop_mul658.7', 'res': '$binop_add662.8'}), (664, {}), (666, {'index': '$binop_add662.8', 'target': '$interp_win650.3', 'res': '$666binary_subscr.9'}), (668, {}), (670, {}), (672, {}), (674, {}), (676, {'res': '$eta676.10'}), (678, {'res': '$interp_delta678.11'}), (680, {'res': '$offset680.12'}), (682, {'res': '$k682.13'}), (684, {'res': '$index_step684.14'}), (686, {'op': '*', 'lhs': '$k682.13', 'rhs': '$index_step684.14', 'res': '$binop_mul686.15'}), (688, {}), (690, {'op': '+', 'lhs': '$offset680.12', 'rhs': '$binop_mul686.15', 'res': '$binop_add690.16'}), (692, {}), (694, {'index': '$binop_add690.16', 'target': '$interp_delta678.11', 'res': '$694binary_subscr.17'}), (696, {}), (698, {}), (700, {}), (702, {}), (704, {'op': '*', 'lhs': '$eta676.10', 'rhs': '$694binary_subscr.17', 'res': '$binop_mul704.18'}), (706, {}), (708, {'op': '+', 'lhs': '$666binary_subscr.9', 'rhs': '$binop_mul704.18', 'res': '$binop_add708.19'}), (710, {}), (712, {'value': '$binop_add708.19'}), (714, {'res': '$y714.20'}), (716, {'res': '$t716.21'}), (722, {'index': '$t716.21', 'target': '$y714.20', 'res': '$722binary_subscr.22'}), (724, {}), (726, {}), (728, {}), (730, {}), (732, {'res': '$weight732.23'}), (734, {'res': '$x734.24'}), (736, {'res': '$n736.25'}), (738, {'res': '$k738.26'}), (740, {'op': '+', 'lhs': '$n736.25', 'rhs': '$k738.26', 'res': '$binop_add740.27'}), (742, {}), (744, {'res': '$const744.28'}), (746, {'op': '+', 'lhs': '$binop_add740.27', 'rhs': '$const744.28', 'res': '$binop_add746.29'}), (748, {}), (750, {'index': '$binop_add746.29', 'target': '$x734.24', 'res': '$750binary_subscr.30'}), (752, {}), (754, {}), (756, {}), (758, {}), (760, {'op': '*', 'lhs': '$weight732.23', 'rhs': '$750binary_subscr.30', 'res': '$binop_mul760.31'}), (762, {}), (764, {'op': '+=', 'lhs': '$722binary_subscr.22', 'rhs': '$binop_mul760.31', 'res': '$binop_iadd764.32'}), (766, {}), (772, {'target': '$y714.20', 'index': '$t716.21', 'value': '$binop_iadd764.32'}), (774, {}), (776, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi648.0', '$phi648.1')})
DEBUG 2024-06-11 14:22:10,651 - block_infos State(pc_initial=778 nstack_initial=1):
AdaptBlockInfo(insts=((778, {}), (780, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$phi778.0',)})
DEBUG 2024-06-11 14:22:10,651 - block_infos State(pc_initial=782 nstack_initial=0):
AdaptBlockInfo(insts=((782, {'res': '$const782.0'}), (784, {'retval': '$const782.0', 'castval': '$784return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 14:22:10,653 - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(int: <class 'int'>) ['$4load_global.0']
    $binop_mul20.4 = scale * num_table       ['$binop_mul20.4', 'num_table', 'scale']
    index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_global.0', '$binop_mul20.4', 'index_step']
    time_register = const(float, 0.0)        ['time_register']
    n = const(int, 0)                        ['n']
    frac = const(float, 0.0)                 ['frac']
    index_frac = const(float, 0.0)           ['index_frac']
    offset = const(int, 0)                   ['offset']
    eta = const(float, 0.0)                  ['eta']
    weight = const(float, 0.0)               ['weight']
    $70load_attr.14 = getattr(value=interp_win, attr=shape) ['$70load_attr.14', 'interp_win']
    $const80.15 = const(int, 0)              ['$const80.15']
    nwin = getitem(value=$70load_attr.14, index=$const80.15, fn=<built-in function getitem>) ['$70load_attr.14', '$const80.15', 'nwin']
    $96load_attr.18 = getattr(value=x, attr=shape) ['$96load_attr.18', 'x']
    $const106.19 = const(int, 0)             ['$const106.19']
    n_orig = getitem(value=$96load_attr.18, index=$const106.19, fn=<built-in function getitem>) ['$96load_attr.18', '$const106.19', 'n_orig']
    $122load_attr.22 = getattr(value=t_out, attr=shape) ['$122load_attr.22', 't_out']
    $const132.23 = const(int, 0)             ['$const132.23']
    n_out = getitem(value=$122load_attr.22, index=$const132.23, fn=<built-in function getitem>) ['$122load_attr.22', '$const132.23', 'n_out']
    $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>) ['$146load_global.25']
    $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None) ['$146load_global.25', '$164call.28', 'n_out']
    $174get_iter.29 = getiter(value=$164call.28) ['$164call.28', '$174get_iter.29']
    $phi178.0 = $174get_iter.29              ['$174get_iter.29', '$phi178.0']
    jump 176                                 []
label 176:
    jump 178                                 []
label 178:
    $178for_iter.1 = iternext(value=$phi178.0) ['$178for_iter.1', '$phi178.0']
    $178for_iter.2 = pair_first(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.2']
    $178for_iter.3 = pair_second(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.3']
    $phi180.1 = $178for_iter.2               ['$178for_iter.2', '$phi180.1']
    branch $178for_iter.3, 180, 782          ['$178for_iter.3']
label 180:
    t = $phi180.1                            ['$phi180.1', 't']
    time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>) ['t', 't_out', 'time_register']
    $198load_global.5 = global(int: <class 'int'>) ['$198load_global.5']
    n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None) ['$198load_global.5', 'n', 'time_register']
    $binop_sub234.12 = time_register - n     ['$binop_sub234.12', 'n', 'time_register']
    frac = scale * $binop_sub234.12          ['$binop_sub234.12', 'frac', 'scale']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $254load_global.17 = global(int: <class 'int'>) ['$254load_global.17']
    offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$254load_global.17', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $294load_global.24 = global(min: <built-in function min>) ['$294load_global.24']
    $const308.27 = const(int, 1)             ['$const308.27']
    $binop_add310.28 = n + $const308.27      ['$binop_add310.28', '$const308.27', 'n']
    $binop_sub318.31 = nwin - offset         ['$binop_sub318.31', 'nwin', 'offset']
    $binop_floordiv324.33 = $binop_sub318.31 // index_step ['$binop_floordiv324.33', '$binop_sub318.31', 'index_step']
    i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33', 'i_max']
    $344load_global.35 = global(range: <class 'range'>) ['$344load_global.35']
    $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$344load_global.35', '$362call.38', 'i_max']
    $372get_iter.39 = getiter(value=$362call.38) ['$362call.38', '$372get_iter.39']
    $phi374.1 = $372get_iter.39              ['$372get_iter.39', '$phi374.1']
    jump 374                                 []
label 374:
    $374for_iter.2 = iternext(value=$phi374.1) ['$374for_iter.2', '$phi374.1']
    $374for_iter.3 = pair_first(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.3']
    $374for_iter.4 = pair_second(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.4']
    $phi376.2 = $374for_iter.3               ['$374for_iter.3', '$phi376.2']
    branch $374for_iter.4, 376, 500          ['$374for_iter.4']
label 376:
    i = $phi376.2                            ['$phi376.2', 'i']
    $binop_mul386.7 = i * index_step         ['$binop_mul386.7', 'i', 'index_step']
    $binop_add390.8 = offset + $binop_mul386.7 ['$binop_add390.8', '$binop_mul386.7', 'offset']
    $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>) ['$394binary_subscr.9', '$binop_add390.8', 'interp_win']
    $binop_mul414.15 = i * index_step        ['$binop_mul414.15', 'i', 'index_step']
    $binop_add418.16 = offset + $binop_mul414.15 ['$binop_add418.16', '$binop_mul414.15', 'offset']
    $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>) ['$422binary_subscr.17', '$binop_add418.16', 'interp_delta']
    $binop_mul432.18 = eta * $422binary_subscr.17 ['$422binary_subscr.17', '$binop_mul432.18', 'eta']
    weight = $394binary_subscr.9 + $binop_mul432.18 ['$394binary_subscr.9', '$binop_mul432.18', 'weight']
    $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$450binary_subscr.22', 't', 'y']
    $binop_sub468.27 = n - i                 ['$binop_sub468.27', 'i', 'n']
    $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>) ['$472binary_subscr.28', '$binop_sub468.27', 'x']
    $binop_mul482.29 = weight * $472binary_subscr.28 ['$472binary_subscr.28', '$binop_mul482.29', 'weight']
    $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined) ['$450binary_subscr.22', '$binop_iadd486.30', '$binop_mul482.29']
    y[t] = $binop_iadd486.30                 ['$binop_iadd486.30', 't', 'y']
    jump 374                                 []
label 500:
    $binop_sub504.3 = scale - frac           ['$binop_sub504.3', 'frac', 'scale']
    frac = $binop_sub504.3                   ['$binop_sub504.3', 'frac']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $520load_global.7 = global(int: <class 'int'>) ['$520load_global.7']
    offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$520load_global.7', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $560load_global.14 = global(min: <built-in function min>) ['$560load_global.14']
    $binop_sub576.18 = n_orig - n            ['$binop_sub576.18', 'n', 'n_orig']
    $const580.19 = const(int, 1)             ['$const580.19']
    $binop_sub582.20 = $binop_sub576.18 - $const580.19 ['$binop_sub576.18', '$binop_sub582.20', '$const580.19']
    $binop_sub590.23 = nwin - offset         ['$binop_sub590.23', 'nwin', 'offset']
    $binop_floordiv596.25 = $binop_sub590.23 // index_step ['$binop_floordiv596.25', '$binop_sub590.23', 'index_step']
    k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$560load_global.14', '$binop_floordiv596.25', '$binop_sub582.20', 'k_max']
    $616load_global.27 = global(range: <class 'range'>) ['$616load_global.27']
    $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$616load_global.27', '$634call.30', 'k_max']
    $644get_iter.31 = getiter(value=$634call.30) ['$634call.30', '$644get_iter.31']
    $phi646.1 = $644get_iter.31              ['$644get_iter.31', '$phi646.1']
    jump 646                                 []
label 646:
    $646for_iter.2 = iternext(value=$phi646.1) ['$646for_iter.2', '$phi646.1']
    $646for_iter.3 = pair_first(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.3']
    $646for_iter.4 = pair_second(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.4']
    $phi648.2 = $646for_iter.3               ['$646for_iter.3', '$phi648.2']
    branch $646for_iter.4, 648, 778          ['$646for_iter.4']
label 648:
    k = $phi648.2                            ['$phi648.2', 'k']
    $binop_mul658.7 = k * index_step         ['$binop_mul658.7', 'index_step', 'k']
    $binop_add662.8 = offset + $binop_mul658.7 ['$binop_add662.8', '$binop_mul658.7', 'offset']
    $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>) ['$666binary_subscr.9', '$binop_add662.8', 'interp_win']
    $binop_mul686.15 = k * index_step        ['$binop_mul686.15', 'index_step', 'k']
    $binop_add690.16 = offset + $binop_mul686.15 ['$binop_add690.16', '$binop_mul686.15', 'offset']
    $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>) ['$694binary_subscr.17', '$binop_add690.16', 'interp_delta']
    $binop_mul704.18 = eta * $694binary_subscr.17 ['$694binary_subscr.17', '$binop_mul704.18', 'eta']
    weight = $666binary_subscr.9 + $binop_mul704.18 ['$666binary_subscr.9', '$binop_mul704.18', 'weight']
    $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$722binary_subscr.22', 't', 'y']
    $binop_add740.27 = n + k                 ['$binop_add740.27', 'k', 'n']
    $const744.28 = const(int, 1)             ['$const744.28']
    $binop_add746.29 = $binop_add740.27 + $const744.28 ['$binop_add740.27', '$binop_add746.29', '$const744.28']
    $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>) ['$750binary_subscr.30', '$binop_add746.29', 'x']
    $binop_mul760.31 = weight * $750binary_subscr.30 ['$750binary_subscr.30', '$binop_mul760.31', 'weight']
    $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined) ['$722binary_subscr.22', '$binop_iadd764.32', '$binop_mul760.31']
    y[t] = $binop_iadd764.32                 ['$binop_iadd764.32', 't', 'y']
    jump 646                                 []
label 778:
    jump 176                                 []
label 782:
    $const782.0 = const(NoneType, None)      ['$const782.0']
    $784return_value.1 = cast(value=$const782.0) ['$784return_value.1', '$const782.0']
    return $784return_value.1                ['$784return_value.1']

DEBUG 2024-06-11 14:22:10,679 - ==== SSA block analysis pass on 0
DEBUG 2024-06-11 14:22:10,679 - Running <numba.core.ssa._GatherDefsHandler object at 0x000001971DAE34D0>
DEBUG 2024-06-11 14:22:10,679 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:22:10,679 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:22:10,679 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:22:10,679 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:22:10,679 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:22:10,679 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:22:10,679 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:22:10,679 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,679 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:22:10,679 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,680 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,680 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:22:10,680 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,680 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,680 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:22:10,680 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,680 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,680 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:22:10,680 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:22:10,680 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,680 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:22:10,681 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:22:10,681 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,681 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:22:10,681 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:22:10,681 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,681 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:22:10,681 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,681 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:22:10,681 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:22:10,681 - on stmt: jump 176
DEBUG 2024-06-11 14:22:10,681 - ==== SSA block analysis pass on 176
DEBUG 2024-06-11 14:22:10,681 - Running <numba.core.ssa._GatherDefsHandler object at 0x000001971DAE34D0>
DEBUG 2024-06-11 14:22:10,681 - on stmt: jump 178
DEBUG 2024-06-11 14:22:10,681 - ==== SSA block analysis pass on 178
DEBUG 2024-06-11 14:22:10,681 - Running <numba.core.ssa._GatherDefsHandler object at 0x000001971DAE34D0>
DEBUG 2024-06-11 14:22:10,681 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:22:10,681 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:22:10,682 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:22:10,682 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:22:10,682 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:22:10,682 - ==== SSA block analysis pass on 180
DEBUG 2024-06-11 14:22:10,682 - Running <numba.core.ssa._GatherDefsHandler object at 0x000001971DAE34D0>
DEBUG 2024-06-11 14:22:10,682 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:22:10,682 - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,682 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,682 - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,682 - on stmt: $binop_sub234.12 = time_register - n
DEBUG 2024-06-11 14:22:10,682 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 14:22:10,682 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:22:10,682 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,682 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,682 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:22:10,682 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:22:10,682 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:22:10,682 - on stmt: $binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 14:22:10,682 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:22:10,682 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:22:10,682 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,682 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:22:10,682 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,683 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:22:10,683 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:22:10,683 - on stmt: jump 374
DEBUG 2024-06-11 14:22:10,683 - ==== SSA block analysis pass on 374
DEBUG 2024-06-11 14:22:10,683 - Running <numba.core.ssa._GatherDefsHandler object at 0x000001971DAE34D0>
DEBUG 2024-06-11 14:22:10,683 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:22:10,683 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:22:10,683 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:22:10,683 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:22:10,683 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:22:10,683 - ==== SSA block analysis pass on 376
DEBUG 2024-06-11 14:22:10,683 - Running <numba.core.ssa._GatherDefsHandler object at 0x000001971DAE34D0>
DEBUG 2024-06-11 14:22:10,683 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:22:10,683 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:22:10,683 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:22:10,683 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,683 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:22:10,683 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:22:10,683 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,683 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:22:10,683 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:22:10,683 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,684 - on stmt: $binop_sub468.27 = n - i
DEBUG 2024-06-11 14:22:10,684 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,684 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:22:10,684 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:22:10,684 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:22:10,685 - on stmt: jump 374
DEBUG 2024-06-11 14:22:10,685 - ==== SSA block analysis pass on 500
DEBUG 2024-06-11 14:22:10,685 - Running <numba.core.ssa._GatherDefsHandler object at 0x000001971DAE34D0>
DEBUG 2024-06-11 14:22:10,685 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 14:22:10,685 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 14:22:10,685 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:22:10,685 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,685 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,685 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:22:10,685 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:22:10,685 - on stmt: $binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 14:22:10,685 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:22:10,685 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:22:10,685 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:22:10,685 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:22:10,685 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,685 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:22:10,685 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,685 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:22:10,685 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:22:10,685 - on stmt: jump 646
DEBUG 2024-06-11 14:22:10,686 - ==== SSA block analysis pass on 646
DEBUG 2024-06-11 14:22:10,686 - Running <numba.core.ssa._GatherDefsHandler object at 0x000001971DAE34D0>
DEBUG 2024-06-11 14:22:10,686 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:22:10,686 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:22:10,686 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:22:10,686 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:22:10,686 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:22:10,686 - ==== SSA block analysis pass on 648
DEBUG 2024-06-11 14:22:10,686 - Running <numba.core.ssa._GatherDefsHandler object at 0x000001971DAE34D0>
DEBUG 2024-06-11 14:22:10,686 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:22:10,686 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:22:10,686 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:22:10,686 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,686 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:22:10,686 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:22:10,686 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,686 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:22:10,686 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:22:10,686 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,686 - on stmt: $binop_add740.27 = n + k
DEBUG 2024-06-11 14:22:10,686 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:22:10,686 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:22:10,686 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,686 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:22:10,687 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:22:10,687 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:22:10,687 - on stmt: jump 646
DEBUG 2024-06-11 14:22:10,687 - ==== SSA block analysis pass on 778
DEBUG 2024-06-11 14:22:10,687 - Running <numba.core.ssa._GatherDefsHandler object at 0x000001971DAE34D0>
DEBUG 2024-06-11 14:22:10,687 - on stmt: jump 176
DEBUG 2024-06-11 14:22:10,687 - ==== SSA block analysis pass on 782
DEBUG 2024-06-11 14:22:10,687 - Running <numba.core.ssa._GatherDefsHandler object at 0x000001971DAE34D0>
DEBUG 2024-06-11 14:22:10,687 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:22:10,687 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:22:10,687 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:22:10,688 - defs defaultdict(<class 'list'>,
            {'$122load_attr.22': [(<numba.core.ir.Assign object at 0x000001971DB5BA90>,
                                   0)],
             '$146load_global.25': [(<numba.core.ir.Assign object at 0x000001971DB5F2D0>,
                                     0)],
             '$164call.28': [(<numba.core.ir.Assign object at 0x000001971DB5F310>,
                              0)],
             '$174get_iter.29': [(<numba.core.ir.Assign object at 0x000001971DB5F150>,
                                  0)],
             '$178for_iter.1': [(<numba.core.ir.Assign object at 0x000001971DB5F610>,
                                 178)],
             '$178for_iter.2': [(<numba.core.ir.Assign object at 0x000001971DB5EE50>,
                                 178)],
             '$178for_iter.3': [(<numba.core.ir.Assign object at 0x000001971DB5EC90>,
                                 178)],
             '$198load_global.5': [(<numba.core.ir.Assign object at 0x000001971DB5D390>,
                                    180)],
             '$254load_global.17': [(<numba.core.ir.Assign object at 0x000001971DB5CE10>,
                                     180)],
             '$294load_global.24': [(<numba.core.ir.Assign object at 0x000001971DB2E6D0>,
                                     180)],
             '$344load_global.35': [(<numba.core.ir.Assign object at 0x000001971DB2E350>,
                                     180)],
             '$362call.38': [(<numba.core.ir.Assign object at 0x000001971DB2D990>,
                              180)],
             '$372get_iter.39': [(<numba.core.ir.Assign object at 0x000001971DB2CFD0>,
                                  180)],
             '$374for_iter.2': [(<numba.core.ir.Assign object at 0x000001971DB5CE50>,
                                 374)],
             '$374for_iter.3': [(<numba.core.ir.Assign object at 0x000001971DB5DB10>,
                                 374)],
             '$374for_iter.4': [(<numba.core.ir.Assign object at 0x000001971DB5C4D0>,
                                 374)],
             '$394binary_subscr.9': [(<numba.core.ir.Assign object at 0x000001971DB2C2D0>,
                                      376)],
             '$422binary_subscr.17': [(<numba.core.ir.Assign object at 0x000001971CAA0410>,
                                       376)],
             '$450binary_subscr.22': [(<numba.core.ir.Assign object at 0x000001971CA8AB10>,
                                       376)],
             '$472binary_subscr.28': [(<numba.core.ir.Assign object at 0x000001971DAF07D0>,
                                       376)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000001971DBA83D0>,
                                  0)],
             '$520load_global.7': [(<numba.core.ir.Assign object at 0x000001971DAF3CD0>,
                                    500)],
             '$560load_global.14': [(<numba.core.ir.Assign object at 0x000001971DAF2410>,
                                     500)],
             '$616load_global.27': [(<numba.core.ir.Assign object at 0x000001971DAF00D0>,
                                     500)],
             '$634call.30': [(<numba.core.ir.Assign object at 0x000001971DAF1810>,
                              500)],
             '$644get_iter.31': [(<numba.core.ir.Assign object at 0x000001971DAF0890>,
                                  500)],
             '$646for_iter.2': [(<numba.core.ir.Assign object at 0x000001971DAF3ED0>,
                                 646)],
             '$646for_iter.3': [(<numba.core.ir.Assign object at 0x000001971DAF2F10>,
                                 646)],
             '$646for_iter.4': [(<numba.core.ir.Assign object at 0x000001971DAF19D0>,
                                 646)],
             '$666binary_subscr.9': [(<numba.core.ir.Assign object at 0x000001971DAE0550>,
                                      648)],
             '$694binary_subscr.17': [(<numba.core.ir.Assign object at 0x000001971DAE1010>,
                                       648)],
             '$70load_attr.14': [(<numba.core.ir.Assign object at 0x000001971DB58450>,
                                  0)],
             '$722binary_subscr.22': [(<numba.core.ir.Assign object at 0x000001971DAE0590>,
                                       648)],
             '$750binary_subscr.30': [(<numba.core.ir.Assign object at 0x000001971DAE1F50>,
                                       648)],
             '$784return_value.1': [(<numba.core.ir.Assign object at 0x000001971DAE29D0>,
                                     782)],
             '$96load_attr.18': [(<numba.core.ir.Assign object at 0x000001971DB58DD0>,
                                  0)],
             '$binop_add310.28': [(<numba.core.ir.Assign object at 0x000001971DB2F650>,
                                   180)],
             '$binop_add390.8': [(<numba.core.ir.Assign object at 0x000001971DB2C590>,
                                  376)],
             '$binop_add418.16': [(<numba.core.ir.Assign object at 0x000001971CA3D810>,
                                   376)],
             '$binop_add662.8': [(<numba.core.ir.Assign object at 0x000001971DAE0490>,
                                  648)],
             '$binop_add690.16': [(<numba.core.ir.Assign object at 0x000001971DAE14D0>,
                                   648)],
             '$binop_add740.27': [(<numba.core.ir.Assign object at 0x000001971DAE1E10>,
                                   648)],
             '$binop_add746.29': [(<numba.core.ir.Assign object at 0x000001971DAE3110>,
                                   648)],
             '$binop_floordiv324.33': [(<numba.core.ir.Assign object at 0x000001971DB2EA90>,
                                        180)],
             '$binop_floordiv596.25': [(<numba.core.ir.Assign object at 0x000001971DAF1050>,
                                        500)],
             '$binop_iadd486.30': [(<numba.core.ir.Assign object at 0x000001971DAF28D0>,
                                    376)],
             '$binop_iadd764.32': [(<numba.core.ir.Assign object at 0x000001971DAE01D0>,
                                    648)],
             '$binop_mul20.4': [(<numba.core.ir.Assign object at 0x000001971DB83E50>,
                                 0)],
             '$binop_mul386.7': [(<numba.core.ir.Assign object at 0x000001971DB2CAD0>,
                                  376)],
             '$binop_mul414.15': [(<numba.core.ir.Assign object at 0x000001971CA3D990>,
                                   376)],
             '$binop_mul432.18': [(<numba.core.ir.Assign object at 0x000001971CAA2510>,
                                   376)],
             '$binop_mul482.29': [(<numba.core.ir.Assign object at 0x000001971DAF0D90>,
                                   376)],
             '$binop_mul658.7': [(<numba.core.ir.Assign object at 0x000001971CAA9650>,
                                  648)],
             '$binop_mul686.15': [(<numba.core.ir.Assign object at 0x000001971DAE2C10>,
                                   648)],
             '$binop_mul704.18': [(<numba.core.ir.Assign object at 0x000001971DAE15D0>,
                                   648)],
             '$binop_mul760.31': [(<numba.core.ir.Assign object at 0x000001971DAE1550>,
                                   648)],
             '$binop_sub234.12': [(<numba.core.ir.Assign object at 0x000001971DB5D590>,
                                   180)],
             '$binop_sub318.31': [(<numba.core.ir.Assign object at 0x000001971DB2ED50>,
                                   180)],
             '$binop_sub468.27': [(<numba.core.ir.Assign object at 0x000001971C1AC890>,
                                   376)],
             '$binop_sub504.3': [(<numba.core.ir.Assign object at 0x000001971CA9BC10>,
                                  500)],
             '$binop_sub576.18': [(<numba.core.ir.Assign object at 0x000001971DAF27D0>,
                                   500)],
             '$binop_sub582.20': [(<numba.core.ir.Assign object at 0x000001971DAF1A10>,
                                   500)],
             '$binop_sub590.23': [(<numba.core.ir.Assign object at 0x000001971DAF16D0>,
                                   500)],
             '$const106.19': [(<numba.core.ir.Assign object at 0x000001971DB5B210>,
                               0)],
             '$const132.23': [(<numba.core.ir.Assign object at 0x000001971DB5BF10>,
                               0)],
             '$const308.27': [(<numba.core.ir.Assign object at 0x000001971DB2F410>,
                               180)],
             '$const580.19': [(<numba.core.ir.Assign object at 0x000001971DAF2150>,
                               500)],
             '$const744.28': [(<numba.core.ir.Assign object at 0x000001971DAE3750>,
                               648)],
             '$const782.0': [(<numba.core.ir.Assign object at 0x000001971DAE1A90>,
                              782)],
             '$const80.15': [(<numba.core.ir.Assign object at 0x000001971DB58150>,
                              0)],
             '$phi178.0': [(<numba.core.ir.Assign object at 0x000001971DB3F190>,
                            0)],
             '$phi180.1': [(<numba.core.ir.Assign object at 0x000001971DB5ED50>,
                            178)],
             '$phi374.1': [(<numba.core.ir.Assign object at 0x000001971DB5EF10>,
                            180)],
             '$phi376.2': [(<numba.core.ir.Assign object at 0x000001971DC23E50>,
                            374)],
             '$phi646.1': [(<numba.core.ir.Assign object at 0x000001971DC3B150>,
                            500)],
             '$phi648.2': [(<numba.core.ir.Assign object at 0x000001971DAF0710>,
                            646)],
             'eta': [(<numba.core.ir.Assign object at 0x000001971DB58C10>, 0),
                     (<numba.core.ir.Assign object at 0x000001971DB2F290>, 180),
                     (<numba.core.ir.Assign object at 0x000001971DAF2310>,
                      500)],
             'frac': [(<numba.core.ir.Assign object at 0x000001971DB59B90>, 0),
                      (<numba.core.ir.Assign object at 0x000001971DB5D910>,
                       180),
                      (<numba.core.ir.Assign object at 0x000001971CAA3290>,
                       500)],
             'i': [(<numba.core.ir.Assign object at 0x000001971DB2FFD0>, 376)],
             'i_max': [(<numba.core.ir.Assign object at 0x000001971DB2E7D0>,
                        180)],
             'index_frac': [(<numba.core.ir.Assign object at 0x000001971DB59690>,
                             0),
                            (<numba.core.ir.Assign object at 0x000001971DB5C750>,
                             180),
                            (<numba.core.ir.Assign object at 0x000001971DAF3F10>,
                             500)],
             'index_step': [(<numba.core.ir.Assign object at 0x000001971DB5AC50>,
                             0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x000001971DB82E10>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x000001971DC22350>,
                             0)],
             'k': [(<numba.core.ir.Assign object at 0x000001971DAF2FD0>, 648)],
             'k_max': [(<numba.core.ir.Assign object at 0x000001971DAF0690>,
                        500)],
             'n': [(<numba.core.ir.Assign object at 0x000001971DB59D10>, 0),
                   (<numba.core.ir.Assign object at 0x000001971DB5DE50>, 180)],
             'n_orig': [(<numba.core.ir.Assign object at 0x000001971DB802D0>,
                         0)],
             'n_out': [(<numba.core.ir.Assign object at 0x000001971DB812D0>,
                        0)],
             'num_table': [(<numba.core.ir.Assign object at 0x000001971DB83010>,
                            0)],
             'nwin': [(<numba.core.ir.Assign object at 0x000001975FA2E2D0>, 0)],
             'offset': [(<numba.core.ir.Assign object at 0x000001971DB59290>,
                         0),
                        (<numba.core.ir.Assign object at 0x000001971DB2DB50>,
                         180),
                        (<numba.core.ir.Assign object at 0x000001971DAF2D10>,
                         500)],
             'scale': [(<numba.core.ir.Assign object at 0x000001971DB808D0>,
                        0)],
             't': [(<numba.core.ir.Assign object at 0x000001971DB5E810>, 180)],
             't_out': [(<numba.core.ir.Assign object at 0x000001971DC23390>,
                        0)],
             'time_register': [(<numba.core.ir.Assign object at 0x000001971DB5A6D0>,
                                0),
                               (<numba.core.ir.Assign object at 0x000001971DB5E490>,
                                180)],
             'weight': [(<numba.core.ir.Assign object at 0x000001971DB59190>,
                         0),
                        (<numba.core.ir.Assign object at 0x000001971CAA27D0>,
                         376),
                        (<numba.core.ir.Assign object at 0x000001971DAE1FD0>,
                         648)],
             'x': [(<numba.core.ir.Assign object at 0x000001971DBC4B10>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x000001971DB82890>, 0)]})
DEBUG 2024-06-11 14:22:10,689 - SSA violators <numba.core.utils.OrderedSet object at 0x000001971DBA8990>
DEBUG 2024-06-11 14:22:10,689 - Fix SSA violator on var time_register
DEBUG 2024-06-11 14:22:10,689 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:22:10,689 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB73650>
DEBUG 2024-06-11 14:22:10,689 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:22:10,689 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:22:10,689 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:22:10,689 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:22:10,689 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:22:10,689 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:22:10,689 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:22:10,689 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,689 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:22:10,689 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,689 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,689 - first assign: time_register
DEBUG 2024-06-11 14:22:10,689 - replaced with: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,689 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:22:10,690 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,690 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,690 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:22:10,690 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,690 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,690 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:22:10,690 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:22:10,690 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,690 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:22:10,690 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:22:10,690 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,690 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:22:10,690 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:22:10,690 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,690 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:22:10,690 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,690 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:22:10,690 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:22:10,690 - on stmt: jump 176
DEBUG 2024-06-11 14:22:10,690 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:22:10,690 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB73650>
DEBUG 2024-06-11 14:22:10,690 - on stmt: jump 178
DEBUG 2024-06-11 14:22:10,690 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:22:10,690 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB73650>
DEBUG 2024-06-11 14:22:10,690 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:22:10,690 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:22:10,690 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:22:10,690 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:22:10,690 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:22:10,690 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:22:10,691 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB73650>
DEBUG 2024-06-11 14:22:10,691 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:22:10,691 - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,691 - replaced with: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,691 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,691 - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,691 - on stmt: $binop_sub234.12 = time_register - n
DEBUG 2024-06-11 14:22:10,691 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 14:22:10,691 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:22:10,691 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,691 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,691 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:22:10,691 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:22:10,691 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:22:10,691 - on stmt: $binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 14:22:10,691 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:22:10,691 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:22:10,691 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,691 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:22:10,691 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,691 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:22:10,691 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:22:10,691 - on stmt: jump 374
DEBUG 2024-06-11 14:22:10,691 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:22:10,691 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB73650>
DEBUG 2024-06-11 14:22:10,691 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:22:10,691 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:22:10,691 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:22:10,691 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:22:10,691 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:22:10,692 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:22:10,692 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB73650>
DEBUG 2024-06-11 14:22:10,692 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:22:10,692 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:22:10,692 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:22:10,692 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,692 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:22:10,692 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:22:10,692 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,692 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:22:10,692 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:22:10,692 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,692 - on stmt: $binop_sub468.27 = n - i
DEBUG 2024-06-11 14:22:10,692 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,692 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:22:10,692 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:22:10,692 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:22:10,692 - on stmt: jump 374
DEBUG 2024-06-11 14:22:10,692 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:22:10,692 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB73650>
DEBUG 2024-06-11 14:22:10,692 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 14:22:10,692 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 14:22:10,692 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:22:10,692 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,692 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,692 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:22:10,692 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:22:10,692 - on stmt: $binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 14:22:10,692 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:22:10,692 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:22:10,692 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:22:10,692 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:22:10,692 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,692 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:22:10,692 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,692 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:22:10,692 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:22:10,692 - on stmt: jump 646
DEBUG 2024-06-11 14:22:10,692 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:22:10,692 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB73650>
DEBUG 2024-06-11 14:22:10,692 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:22:10,692 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:22:10,692 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:22:10,692 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:22:10,692 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:22:10,692 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:22:10,692 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB73650>
DEBUG 2024-06-11 14:22:10,692 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:22:10,692 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:22:10,692 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:22:10,692 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,692 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:22:10,692 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:22:10,692 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,693 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:22:10,693 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:22:10,693 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,693 - on stmt: $binop_add740.27 = n + k
DEBUG 2024-06-11 14:22:10,693 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:22:10,693 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:22:10,693 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,693 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:22:10,693 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:22:10,693 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:22:10,693 - on stmt: jump 646
DEBUG 2024-06-11 14:22:10,693 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:22:10,693 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB73650>
DEBUG 2024-06-11 14:22:10,693 - on stmt: jump 176
DEBUG 2024-06-11 14:22:10,693 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:22:10,693 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB73650>
DEBUG 2024-06-11 14:22:10,693 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:22:10,693 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:22:10,693 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:22:10,693 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001971DAE1190>],
             180: [<numba.core.ir.Assign object at 0x000001971DAF10D0>]})
DEBUG 2024-06-11 14:22:10,693 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:22:10,693 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DB5FB90>
DEBUG 2024-06-11 14:22:10,693 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:22:10,693 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:22:10,693 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:22:10,693 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:22:10,693 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:22:10,693 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:22:10,693 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:22:10,693 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,693 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:22:10,694 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,694 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,694 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:22:10,694 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,694 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,694 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:22:10,694 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,694 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,694 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:22:10,694 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:22:10,694 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,694 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:22:10,694 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:22:10,694 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,694 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:22:10,694 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:22:10,695 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,695 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:22:10,695 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,695 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:22:10,695 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:22:10,695 - on stmt: jump 176
DEBUG 2024-06-11 14:22:10,695 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:22:10,695 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DB5FB90>
DEBUG 2024-06-11 14:22:10,695 - on stmt: jump 178
DEBUG 2024-06-11 14:22:10,695 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:22:10,695 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DB5FB90>
DEBUG 2024-06-11 14:22:10,695 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:22:10,695 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:22:10,695 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:22:10,695 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:22:10,695 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:22:10,695 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:22:10,695 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DB5FB90>
DEBUG 2024-06-11 14:22:10,695 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:22:10,695 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,695 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,695 - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,695 - find_def var='time_register' stmt=n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,695 - replaced with: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,695 - on stmt: $binop_sub234.12 = time_register - n
DEBUG 2024-06-11 14:22:10,695 - find_def var='time_register' stmt=$binop_sub234.12 = time_register - n
DEBUG 2024-06-11 14:22:10,695 - replaced with: $binop_sub234.12 = time_register.1 - n
DEBUG 2024-06-11 14:22:10,695 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 14:22:10,695 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:22:10,695 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,695 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,695 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:22:10,695 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:22:10,695 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:22:10,695 - on stmt: $binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 14:22:10,695 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:22:10,695 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:22:10,696 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,696 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:22:10,696 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,696 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:22:10,696 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:22:10,696 - on stmt: jump 374
DEBUG 2024-06-11 14:22:10,696 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:22:10,696 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DB5FB90>
DEBUG 2024-06-11 14:22:10,696 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:22:10,696 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:22:10,696 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:22:10,696 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:22:10,696 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:22:10,696 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:22:10,696 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DB5FB90>
DEBUG 2024-06-11 14:22:10,696 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:22:10,696 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:22:10,696 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:22:10,696 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,696 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:22:10,696 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:22:10,696 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,696 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:22:10,696 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:22:10,696 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,696 - on stmt: $binop_sub468.27 = n - i
DEBUG 2024-06-11 14:22:10,696 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,696 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:22:10,697 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:22:10,697 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:22:10,697 - on stmt: jump 374
DEBUG 2024-06-11 14:22:10,697 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:22:10,697 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DB5FB90>
DEBUG 2024-06-11 14:22:10,697 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 14:22:10,697 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 14:22:10,697 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:22:10,697 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,697 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,697 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:22:10,697 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:22:10,697 - on stmt: $binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 14:22:10,697 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:22:10,697 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:22:10,697 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:22:10,697 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:22:10,697 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,697 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:22:10,697 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,697 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:22:10,697 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:22:10,697 - on stmt: jump 646
DEBUG 2024-06-11 14:22:10,697 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:22:10,697 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DB5FB90>
DEBUG 2024-06-11 14:22:10,697 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:22:10,697 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:22:10,698 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:22:10,698 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:22:10,698 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:22:10,698 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:22:10,698 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DB5FB90>
DEBUG 2024-06-11 14:22:10,698 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:22:10,698 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:22:10,698 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:22:10,698 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,699 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:22:10,699 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:22:10,699 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,699 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:22:10,699 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:22:10,699 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,699 - on stmt: $binop_add740.27 = n + k
DEBUG 2024-06-11 14:22:10,699 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:22:10,699 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:22:10,699 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,699 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:22:10,699 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:22:10,699 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:22:10,699 - on stmt: jump 646
DEBUG 2024-06-11 14:22:10,699 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:22:10,699 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DB5FB90>
DEBUG 2024-06-11 14:22:10,699 - on stmt: jump 176
DEBUG 2024-06-11 14:22:10,699 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:22:10,699 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DB5FB90>
DEBUG 2024-06-11 14:22:10,699 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:22:10,699 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:22:10,699 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:22:10,699 - Fix SSA violator on var n
DEBUG 2024-06-11 14:22:10,699 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:22:10,699 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DAF2B90>
DEBUG 2024-06-11 14:22:10,699 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:22:10,699 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:22:10,699 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:22:10,699 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:22:10,699 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:22:10,700 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:22:10,700 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:22:10,700 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,700 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:22:10,700 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,700 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,700 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:22:10,700 - first assign: n
DEBUG 2024-06-11 14:22:10,700 - replaced with: n = const(int, 0)
DEBUG 2024-06-11 14:22:10,700 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,700 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,700 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:22:10,700 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,700 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,700 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:22:10,700 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:22:10,700 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,700 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:22:10,700 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:22:10,700 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,700 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:22:10,700 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:22:10,700 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,700 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:22:10,700 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,700 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:22:10,700 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:22:10,700 - on stmt: jump 176
DEBUG 2024-06-11 14:22:10,700 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:22:10,700 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DAF2B90>
DEBUG 2024-06-11 14:22:10,700 - on stmt: jump 178
DEBUG 2024-06-11 14:22:10,700 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:22:10,701 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DAF2B90>
DEBUG 2024-06-11 14:22:10,701 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:22:10,701 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:22:10,701 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:22:10,701 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:22:10,701 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:22:10,701 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:22:10,701 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DAF2B90>
DEBUG 2024-06-11 14:22:10,701 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:22:10,701 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,701 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,701 - on stmt: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,701 - replaced with: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,701 - on stmt: $binop_sub234.12 = time_register.1 - n
DEBUG 2024-06-11 14:22:10,701 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 14:22:10,701 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:22:10,701 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,701 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,701 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:22:10,701 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:22:10,701 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:22:10,701 - on stmt: $binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 14:22:10,701 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:22:10,701 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:22:10,701 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,701 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:22:10,701 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,701 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:22:10,701 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:22:10,701 - on stmt: jump 374
DEBUG 2024-06-11 14:22:10,701 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:22:10,701 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DAF2B90>
DEBUG 2024-06-11 14:22:10,701 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:22:10,701 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:22:10,701 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:22:10,701 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:22:10,701 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:22:10,701 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:22:10,701 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DAF2B90>
DEBUG 2024-06-11 14:22:10,701 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:22:10,701 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:22:10,701 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:22:10,701 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,701 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:22:10,701 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:22:10,702 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,702 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:22:10,702 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:22:10,702 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,702 - on stmt: $binop_sub468.27 = n - i
DEBUG 2024-06-11 14:22:10,702 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,702 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:22:10,702 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:22:10,702 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:22:10,702 - on stmt: jump 374
DEBUG 2024-06-11 14:22:10,702 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:22:10,702 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DAF2B90>
DEBUG 2024-06-11 14:22:10,702 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 14:22:10,702 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 14:22:10,702 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:22:10,702 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,702 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,702 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:22:10,702 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:22:10,702 - on stmt: $binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 14:22:10,702 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:22:10,702 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:22:10,702 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:22:10,702 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:22:10,702 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,702 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:22:10,702 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,702 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:22:10,702 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:22:10,702 - on stmt: jump 646
DEBUG 2024-06-11 14:22:10,702 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:22:10,702 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DAF2B90>
DEBUG 2024-06-11 14:22:10,703 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:22:10,703 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:22:10,703 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:22:10,703 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:22:10,703 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:22:10,703 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:22:10,703 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DAF2B90>
DEBUG 2024-06-11 14:22:10,703 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:22:10,703 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:22:10,703 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:22:10,703 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,703 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:22:10,703 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:22:10,703 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,703 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:22:10,703 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:22:10,703 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,703 - on stmt: $binop_add740.27 = n + k
DEBUG 2024-06-11 14:22:10,703 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:22:10,703 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:22:10,703 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,703 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:22:10,703 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:22:10,703 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:22:10,703 - on stmt: jump 646
DEBUG 2024-06-11 14:22:10,703 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:22:10,703 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DAF2B90>
DEBUG 2024-06-11 14:22:10,703 - on stmt: jump 176
DEBUG 2024-06-11 14:22:10,703 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:22:10,703 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DAF2B90>
DEBUG 2024-06-11 14:22:10,703 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:22:10,703 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:22:10,703 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:22:10,704 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001971DB81A10>],
             180: [<numba.core.ir.Assign object at 0x000001971DB5C450>]})
DEBUG 2024-06-11 14:22:10,704 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:22:10,704 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DBA35D0>
DEBUG 2024-06-11 14:22:10,704 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:22:10,704 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:22:10,704 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:22:10,704 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:22:10,704 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:22:10,704 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:22:10,704 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:22:10,704 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,704 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:22:10,704 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,704 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,704 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:22:10,704 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,704 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,704 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:22:10,704 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,704 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,704 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:22:10,704 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:22:10,704 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,704 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:22:10,704 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:22:10,704 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,704 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:22:10,704 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:22:10,704 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,704 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:22:10,705 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,705 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:22:10,705 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:22:10,705 - on stmt: jump 176
DEBUG 2024-06-11 14:22:10,705 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:22:10,705 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DBA35D0>
DEBUG 2024-06-11 14:22:10,705 - on stmt: jump 178
DEBUG 2024-06-11 14:22:10,705 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:22:10,705 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DBA35D0>
DEBUG 2024-06-11 14:22:10,705 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:22:10,705 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:22:10,705 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:22:10,705 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:22:10,705 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:22:10,705 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:22:10,705 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DBA35D0>
DEBUG 2024-06-11 14:22:10,705 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:22:10,705 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,705 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,705 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,705 - on stmt: $binop_sub234.12 = time_register.1 - n
DEBUG 2024-06-11 14:22:10,705 - find_def var='n' stmt=$binop_sub234.12 = time_register.1 - n
DEBUG 2024-06-11 14:22:10,705 - replaced with: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 14:22:10,705 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 14:22:10,705 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:22:10,705 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,705 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,705 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:22:10,705 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:22:10,706 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:22:10,706 - on stmt: $binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 14:22:10,706 - find_def var='n' stmt=$binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 14:22:10,706 - replaced with: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 14:22:10,706 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:22:10,706 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:22:10,706 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,706 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:22:10,706 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,706 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:22:10,706 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:22:10,706 - on stmt: jump 374
DEBUG 2024-06-11 14:22:10,706 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:22:10,706 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DBA35D0>
DEBUG 2024-06-11 14:22:10,706 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:22:10,706 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:22:10,706 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:22:10,706 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:22:10,706 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:22:10,706 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:22:10,706 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DBA35D0>
DEBUG 2024-06-11 14:22:10,706 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:22:10,706 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:22:10,706 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:22:10,706 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,706 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:22:10,706 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:22:10,706 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,706 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:22:10,706 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:22:10,707 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,707 - on stmt: $binop_sub468.27 = n - i
DEBUG 2024-06-11 14:22:10,707 - find_def var='n' stmt=$binop_sub468.27 = n - i
DEBUG 2024-06-11 14:22:10,707 - find_def_from_top label 376
DEBUG 2024-06-11 14:22:10,707 - idom 374 from label 376
DEBUG 2024-06-11 14:22:10,707 - find_def_from_bottom label 374
DEBUG 2024-06-11 14:22:10,707 - find_def_from_top label 374
DEBUG 2024-06-11 14:22:10,707 - idom 180 from label 374
DEBUG 2024-06-11 14:22:10,707 - find_def_from_bottom label 180
DEBUG 2024-06-11 14:22:10,707 - replaced with: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 14:22:10,707 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,707 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:22:10,707 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:22:10,707 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:22:10,707 - on stmt: jump 374
DEBUG 2024-06-11 14:22:10,707 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:22:10,707 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DBA35D0>
DEBUG 2024-06-11 14:22:10,707 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 14:22:10,707 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 14:22:10,707 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:22:10,707 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,707 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,707 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:22:10,707 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:22:10,707 - on stmt: $binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 14:22:10,707 - find_def var='n' stmt=$binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 14:22:10,707 - find_def_from_top label 500
DEBUG 2024-06-11 14:22:10,707 - idom 374 from label 500
DEBUG 2024-06-11 14:22:10,707 - find_def_from_bottom label 374
DEBUG 2024-06-11 14:22:10,707 - find_def_from_top label 374
DEBUG 2024-06-11 14:22:10,708 - idom 180 from label 374
DEBUG 2024-06-11 14:22:10,708 - find_def_from_bottom label 180
DEBUG 2024-06-11 14:22:10,708 - replaced with: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 14:22:10,708 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:22:10,708 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:22:10,708 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:22:10,708 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:22:10,708 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,708 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:22:10,708 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,708 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:22:10,708 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:22:10,708 - on stmt: jump 646
DEBUG 2024-06-11 14:22:10,708 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:22:10,708 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DBA35D0>
DEBUG 2024-06-11 14:22:10,708 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:22:10,708 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:22:10,708 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:22:10,708 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:22:10,708 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:22:10,708 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:22:10,708 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DBA35D0>
DEBUG 2024-06-11 14:22:10,708 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:22:10,708 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:22:10,708 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:22:10,708 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,708 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:22:10,708 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:22:10,708 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,708 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:22:10,708 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:22:10,709 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,709 - on stmt: $binop_add740.27 = n + k
DEBUG 2024-06-11 14:22:10,709 - find_def var='n' stmt=$binop_add740.27 = n + k
DEBUG 2024-06-11 14:22:10,709 - find_def_from_top label 648
DEBUG 2024-06-11 14:22:10,709 - idom 646 from label 648
DEBUG 2024-06-11 14:22:10,709 - find_def_from_bottom label 646
DEBUG 2024-06-11 14:22:10,709 - find_def_from_top label 646
DEBUG 2024-06-11 14:22:10,709 - idom 500 from label 646
DEBUG 2024-06-11 14:22:10,709 - find_def_from_bottom label 500
DEBUG 2024-06-11 14:22:10,709 - find_def_from_top label 500
DEBUG 2024-06-11 14:22:10,709 - idom 374 from label 500
DEBUG 2024-06-11 14:22:10,709 - find_def_from_bottom label 374
DEBUG 2024-06-11 14:22:10,709 - find_def_from_top label 374
DEBUG 2024-06-11 14:22:10,709 - idom 180 from label 374
DEBUG 2024-06-11 14:22:10,709 - find_def_from_bottom label 180
DEBUG 2024-06-11 14:22:10,709 - replaced with: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 14:22:10,709 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:22:10,709 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:22:10,709 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,709 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:22:10,709 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:22:10,709 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:22:10,709 - on stmt: jump 646
DEBUG 2024-06-11 14:22:10,709 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:22:10,709 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DBA35D0>
DEBUG 2024-06-11 14:22:10,709 - on stmt: jump 176
DEBUG 2024-06-11 14:22:10,709 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:22:10,709 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DBA35D0>
DEBUG 2024-06-11 14:22:10,709 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:22:10,709 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:22:10,709 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:22:10,709 - Fix SSA violator on var frac
DEBUG 2024-06-11 14:22:10,710 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:22:10,710 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB3C610>
DEBUG 2024-06-11 14:22:10,710 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:22:10,710 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:22:10,710 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:22:10,710 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:22:10,710 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:22:10,710 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:22:10,710 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:22:10,710 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,710 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:22:10,710 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,710 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,710 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:22:10,710 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,710 - first assign: frac
DEBUG 2024-06-11 14:22:10,710 - replaced with: frac = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,710 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,710 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:22:10,710 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,710 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,710 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:22:10,710 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:22:10,710 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,710 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:22:10,710 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:22:10,710 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,710 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:22:10,710 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:22:10,710 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,710 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:22:10,710 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,711 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:22:10,711 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:22:10,711 - on stmt: jump 176
DEBUG 2024-06-11 14:22:10,711 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:22:10,711 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB3C610>
DEBUG 2024-06-11 14:22:10,711 - on stmt: jump 178
DEBUG 2024-06-11 14:22:10,711 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:22:10,711 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB3C610>
DEBUG 2024-06-11 14:22:10,711 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:22:10,711 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:22:10,711 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:22:10,711 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:22:10,711 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:22:10,711 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:22:10,711 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB3C610>
DEBUG 2024-06-11 14:22:10,711 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:22:10,711 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,711 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,711 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,711 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 14:22:10,711 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 14:22:10,711 - replaced with: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 14:22:10,711 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:22:10,711 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,711 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,711 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:22:10,711 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:22:10,711 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:22:10,711 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 14:22:10,711 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:22:10,711 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:22:10,711 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,712 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:22:10,712 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,712 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:22:10,712 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:22:10,712 - on stmt: jump 374
DEBUG 2024-06-11 14:22:10,712 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:22:10,712 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB3C610>
DEBUG 2024-06-11 14:22:10,712 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:22:10,712 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:22:10,712 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:22:10,712 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:22:10,712 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:22:10,712 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:22:10,712 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB3C610>
DEBUG 2024-06-11 14:22:10,712 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:22:10,712 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:22:10,712 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:22:10,712 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,713 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:22:10,713 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:22:10,713 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,713 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:22:10,713 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:22:10,713 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,713 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 14:22:10,713 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,713 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:22:10,713 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:22:10,713 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:22:10,713 - on stmt: jump 374
DEBUG 2024-06-11 14:22:10,713 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:22:10,713 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB3C610>
DEBUG 2024-06-11 14:22:10,713 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 14:22:10,713 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 14:22:10,713 - replaced with: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 14:22:10,713 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:22:10,713 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,713 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,713 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:22:10,713 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:22:10,713 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 14:22:10,713 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:22:10,713 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:22:10,713 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:22:10,713 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:22:10,713 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,713 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:22:10,713 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,713 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:22:10,714 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:22:10,714 - on stmt: jump 646
DEBUG 2024-06-11 14:22:10,714 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:22:10,714 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB3C610>
DEBUG 2024-06-11 14:22:10,714 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:22:10,714 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:22:10,714 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:22:10,714 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:22:10,714 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:22:10,714 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:22:10,714 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB3C610>
DEBUG 2024-06-11 14:22:10,714 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:22:10,714 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:22:10,714 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:22:10,714 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,714 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:22:10,714 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:22:10,714 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,714 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:22:10,714 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:22:10,714 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,714 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 14:22:10,714 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:22:10,714 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:22:10,714 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,714 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:22:10,714 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:22:10,714 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:22:10,714 - on stmt: jump 646
DEBUG 2024-06-11 14:22:10,714 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:22:10,714 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB3C610>
DEBUG 2024-06-11 14:22:10,714 - on stmt: jump 176
DEBUG 2024-06-11 14:22:10,715 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:22:10,715 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB3C610>
DEBUG 2024-06-11 14:22:10,715 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:22:10,715 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:22:10,715 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:22:10,715 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001971DC240D0>],
             180: [<numba.core.ir.Assign object at 0x000001971DAF3010>],
             500: [<numba.core.ir.Assign object at 0x000001971DB5B0D0>]})
DEBUG 2024-06-11 14:22:10,715 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:22:10,715 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DBA2590>
DEBUG 2024-06-11 14:22:10,715 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:22:10,715 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:22:10,715 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:22:10,715 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:22:10,715 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:22:10,715 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:22:10,715 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:22:10,715 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,715 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:22:10,715 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,715 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,715 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:22:10,715 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,715 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,715 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:22:10,715 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,715 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,715 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:22:10,715 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:22:10,715 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,715 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:22:10,715 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:22:10,715 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,715 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:22:10,715 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:22:10,715 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,715 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:22:10,715 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,715 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:22:10,716 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:22:10,716 - on stmt: jump 176
DEBUG 2024-06-11 14:22:10,716 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:22:10,716 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DBA2590>
DEBUG 2024-06-11 14:22:10,716 - on stmt: jump 178
DEBUG 2024-06-11 14:22:10,716 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:22:10,716 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DBA2590>
DEBUG 2024-06-11 14:22:10,716 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:22:10,716 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:22:10,716 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:22:10,716 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:22:10,716 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:22:10,716 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:22:10,716 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DBA2590>
DEBUG 2024-06-11 14:22:10,716 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:22:10,716 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,716 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,716 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,716 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 14:22:10,716 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 14:22:10,716 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:22:10,716 - find_def var='frac' stmt=index_frac = frac * num_table
DEBUG 2024-06-11 14:22:10,717 - replaced with: index_frac = frac.1 * num_table
DEBUG 2024-06-11 14:22:10,717 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,717 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,717 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:22:10,717 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:22:10,717 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:22:10,717 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 14:22:10,717 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:22:10,717 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:22:10,717 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,717 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:22:10,717 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,717 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:22:10,717 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:22:10,717 - on stmt: jump 374
DEBUG 2024-06-11 14:22:10,717 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:22:10,717 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DBA2590>
DEBUG 2024-06-11 14:22:10,717 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:22:10,717 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:22:10,717 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:22:10,717 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:22:10,717 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:22:10,717 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:22:10,717 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DBA2590>
DEBUG 2024-06-11 14:22:10,717 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:22:10,717 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:22:10,717 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:22:10,717 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,717 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:22:10,717 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:22:10,717 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,717 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:22:10,717 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:22:10,717 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,717 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 14:22:10,717 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,717 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:22:10,717 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:22:10,717 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:22:10,718 - on stmt: jump 374
DEBUG 2024-06-11 14:22:10,718 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:22:10,718 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DBA2590>
DEBUG 2024-06-11 14:22:10,718 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 14:22:10,718 - find_def var='frac' stmt=$binop_sub504.3 = scale - frac
DEBUG 2024-06-11 14:22:10,718 - find_def_from_top label 500
DEBUG 2024-06-11 14:22:10,718 - idom 374 from label 500
DEBUG 2024-06-11 14:22:10,718 - find_def_from_bottom label 374
DEBUG 2024-06-11 14:22:10,718 - find_def_from_top label 374
DEBUG 2024-06-11 14:22:10,718 - idom 180 from label 374
DEBUG 2024-06-11 14:22:10,718 - find_def_from_bottom label 180
DEBUG 2024-06-11 14:22:10,718 - replaced with: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 14:22:10,718 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 14:22:10,718 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:22:10,718 - find_def var='frac' stmt=index_frac = frac * num_table
DEBUG 2024-06-11 14:22:10,719 - replaced with: index_frac = frac.2 * num_table
DEBUG 2024-06-11 14:22:10,719 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,719 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,719 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:22:10,719 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:22:10,719 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 14:22:10,719 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:22:10,719 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:22:10,719 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:22:10,719 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:22:10,719 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,719 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:22:10,719 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,719 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:22:10,719 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:22:10,719 - on stmt: jump 646
DEBUG 2024-06-11 14:22:10,719 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:22:10,719 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DBA2590>
DEBUG 2024-06-11 14:22:10,719 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:22:10,719 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:22:10,719 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:22:10,719 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:22:10,719 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:22:10,719 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:22:10,719 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DBA2590>
DEBUG 2024-06-11 14:22:10,719 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:22:10,719 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:22:10,719 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:22:10,719 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,719 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:22:10,720 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:22:10,720 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,720 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:22:10,720 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:22:10,720 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,720 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 14:22:10,720 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:22:10,720 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:22:10,720 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,720 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:22:10,720 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:22:10,720 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:22:10,720 - on stmt: jump 646
DEBUG 2024-06-11 14:22:10,720 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:22:10,720 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DBA2590>
DEBUG 2024-06-11 14:22:10,720 - on stmt: jump 176
DEBUG 2024-06-11 14:22:10,720 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:22:10,720 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DBA2590>
DEBUG 2024-06-11 14:22:10,720 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:22:10,720 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:22:10,720 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:22:10,720 - Fix SSA violator on var index_frac
DEBUG 2024-06-11 14:22:10,720 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:22:10,720 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB5AD10>
DEBUG 2024-06-11 14:22:10,720 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:22:10,720 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:22:10,720 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:22:10,720 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:22:10,720 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:22:10,720 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:22:10,720 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:22:10,720 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,721 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:22:10,721 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,721 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,721 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:22:10,721 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,721 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,721 - first assign: index_frac
DEBUG 2024-06-11 14:22:10,721 - replaced with: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,721 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:22:10,721 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,721 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,721 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:22:10,721 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:22:10,721 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,721 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:22:10,721 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:22:10,721 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,721 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:22:10,721 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:22:10,721 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,721 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:22:10,721 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,721 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:22:10,721 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:22:10,721 - on stmt: jump 176
DEBUG 2024-06-11 14:22:10,721 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:22:10,721 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB5AD10>
DEBUG 2024-06-11 14:22:10,721 - on stmt: jump 178
DEBUG 2024-06-11 14:22:10,721 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:22:10,721 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB5AD10>
DEBUG 2024-06-11 14:22:10,721 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:22:10,721 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:22:10,721 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:22:10,721 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:22:10,721 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:22:10,721 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:22:10,721 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB5AD10>
DEBUG 2024-06-11 14:22:10,721 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:22:10,721 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,721 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,721 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,721 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 14:22:10,721 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 14:22:10,721 - on stmt: index_frac = frac.1 * num_table
DEBUG 2024-06-11 14:22:10,721 - replaced with: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 14:22:10,721 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,721 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,721 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:22:10,722 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:22:10,722 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:22:10,722 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 14:22:10,722 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:22:10,722 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:22:10,722 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,722 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:22:10,722 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,722 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:22:10,722 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:22:10,722 - on stmt: jump 374
DEBUG 2024-06-11 14:22:10,722 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:22:10,722 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB5AD10>
DEBUG 2024-06-11 14:22:10,722 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:22:10,722 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:22:10,722 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:22:10,722 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:22:10,722 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:22:10,722 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:22:10,722 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB5AD10>
DEBUG 2024-06-11 14:22:10,722 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:22:10,722 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:22:10,722 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:22:10,722 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,722 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:22:10,722 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:22:10,722 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,722 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:22:10,722 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:22:10,722 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,722 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 14:22:10,722 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,722 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:22:10,722 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:22:10,722 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:22:10,722 - on stmt: jump 374
DEBUG 2024-06-11 14:22:10,722 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:22:10,722 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB5AD10>
DEBUG 2024-06-11 14:22:10,722 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 14:22:10,722 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 14:22:10,722 - on stmt: index_frac = frac.2 * num_table
DEBUG 2024-06-11 14:22:10,722 - replaced with: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 14:22:10,722 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,722 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,722 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:22:10,722 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:22:10,722 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 14:22:10,724 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:22:10,724 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:22:10,724 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:22:10,724 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:22:10,724 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,724 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:22:10,724 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,724 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:22:10,724 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:22:10,724 - on stmt: jump 646
DEBUG 2024-06-11 14:22:10,724 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:22:10,724 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB5AD10>
DEBUG 2024-06-11 14:22:10,724 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:22:10,724 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:22:10,724 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:22:10,724 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:22:10,724 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:22:10,724 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:22:10,724 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB5AD10>
DEBUG 2024-06-11 14:22:10,724 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:22:10,724 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:22:10,724 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:22:10,724 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,724 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:22:10,724 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:22:10,724 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,724 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:22:10,724 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:22:10,724 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,724 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 14:22:10,724 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:22:10,724 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:22:10,725 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,725 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:22:10,725 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:22:10,725 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:22:10,725 - on stmt: jump 646
DEBUG 2024-06-11 14:22:10,725 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:22:10,725 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB5AD10>
DEBUG 2024-06-11 14:22:10,725 - on stmt: jump 176
DEBUG 2024-06-11 14:22:10,725 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:22:10,725 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB5AD10>
DEBUG 2024-06-11 14:22:10,725 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:22:10,725 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:22:10,725 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:22:10,725 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001971DAF1BD0>],
             180: [<numba.core.ir.Assign object at 0x000001971DB3FA50>],
             500: [<numba.core.ir.Assign object at 0x000001971DAD6150>]})
DEBUG 2024-06-11 14:22:10,725 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:22:10,725 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DAD7B50>
DEBUG 2024-06-11 14:22:10,725 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:22:10,725 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:22:10,725 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:22:10,725 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:22:10,725 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:22:10,725 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:22:10,725 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:22:10,725 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,725 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:22:10,725 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,725 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,725 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:22:10,726 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,726 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,726 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:22:10,726 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,726 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,726 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:22:10,726 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:22:10,726 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,726 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:22:10,726 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:22:10,726 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,726 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:22:10,726 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:22:10,726 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,726 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:22:10,726 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,726 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:22:10,726 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:22:10,726 - on stmt: jump 176
DEBUG 2024-06-11 14:22:10,726 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:22:10,726 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DAD7B50>
DEBUG 2024-06-11 14:22:10,726 - on stmt: jump 178
DEBUG 2024-06-11 14:22:10,726 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:22:10,726 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DAD7B50>
DEBUG 2024-06-11 14:22:10,726 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:22:10,726 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:22:10,726 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:22:10,726 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:22:10,726 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:22:10,726 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:22:10,726 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DAD7B50>
DEBUG 2024-06-11 14:22:10,726 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:22:10,727 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,727 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,727 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,727 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 14:22:10,727 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 14:22:10,727 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 14:22:10,727 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,727 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,727 - find_def var='index_frac' stmt=offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,727 - replaced with: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,727 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:22:10,727 - find_def var='index_frac' stmt=eta = index_frac - offset
DEBUG 2024-06-11 14:22:10,727 - replaced with: eta = index_frac.1 - offset
DEBUG 2024-06-11 14:22:10,727 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:22:10,727 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:22:10,727 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 14:22:10,727 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:22:10,727 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:22:10,727 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,727 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:22:10,727 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,727 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:22:10,727 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:22:10,727 - on stmt: jump 374
DEBUG 2024-06-11 14:22:10,727 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:22:10,727 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DAD7B50>
DEBUG 2024-06-11 14:22:10,727 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:22:10,728 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:22:10,728 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:22:10,728 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:22:10,728 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:22:10,728 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:22:10,728 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DAD7B50>
DEBUG 2024-06-11 14:22:10,728 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:22:10,728 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:22:10,728 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:22:10,728 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,728 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:22:10,728 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:22:10,728 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,728 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:22:10,728 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:22:10,728 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,728 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 14:22:10,728 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,728 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:22:10,728 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:22:10,728 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:22:10,728 - on stmt: jump 374
DEBUG 2024-06-11 14:22:10,728 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:22:10,728 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DAD7B50>
DEBUG 2024-06-11 14:22:10,728 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 14:22:10,728 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 14:22:10,728 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 14:22:10,728 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,728 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,728 - find_def var='index_frac' stmt=offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,728 - replaced with: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,728 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:22:10,728 - find_def var='index_frac' stmt=eta = index_frac - offset
DEBUG 2024-06-11 14:22:10,729 - replaced with: eta = index_frac.2 - offset
DEBUG 2024-06-11 14:22:10,729 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:22:10,729 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 14:22:10,729 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:22:10,729 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:22:10,729 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:22:10,729 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:22:10,729 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,729 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:22:10,729 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,729 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:22:10,729 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:22:10,729 - on stmt: jump 646
DEBUG 2024-06-11 14:22:10,729 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:22:10,729 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DAD7B50>
DEBUG 2024-06-11 14:22:10,729 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:22:10,729 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:22:10,729 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:22:10,729 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:22:10,729 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:22:10,729 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:22:10,729 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DAD7B50>
DEBUG 2024-06-11 14:22:10,729 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:22:10,729 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:22:10,729 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:22:10,729 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,729 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:22:10,729 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:22:10,729 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,729 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:22:10,730 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:22:10,730 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,730 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 14:22:10,730 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:22:10,730 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:22:10,730 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,730 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:22:10,730 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:22:10,730 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:22:10,730 - on stmt: jump 646
DEBUG 2024-06-11 14:22:10,730 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:22:10,730 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DAD7B50>
DEBUG 2024-06-11 14:22:10,730 - on stmt: jump 176
DEBUG 2024-06-11 14:22:10,730 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:22:10,730 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DAD7B50>
DEBUG 2024-06-11 14:22:10,730 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:22:10,730 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:22:10,730 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:22:10,730 - Fix SSA violator on var offset
DEBUG 2024-06-11 14:22:10,730 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:22:10,730 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DBA35D0>
DEBUG 2024-06-11 14:22:10,730 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:22:10,730 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:22:10,730 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:22:10,730 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:22:10,730 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:22:10,730 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:22:10,730 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:22:10,730 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,730 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:22:10,730 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,730 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,730 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:22:10,730 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,730 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,730 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:22:10,730 - first assign: offset
DEBUG 2024-06-11 14:22:10,730 - replaced with: offset = const(int, 0)
DEBUG 2024-06-11 14:22:10,730 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,730 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,730 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:22:10,730 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:22:10,730 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,730 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:22:10,730 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:22:10,730 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,730 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:22:10,730 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:22:10,730 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,730 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:22:10,731 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,731 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:22:10,731 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:22:10,731 - on stmt: jump 176
DEBUG 2024-06-11 14:22:10,731 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:22:10,731 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DBA35D0>
DEBUG 2024-06-11 14:22:10,731 - on stmt: jump 178
DEBUG 2024-06-11 14:22:10,731 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:22:10,731 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DBA35D0>
DEBUG 2024-06-11 14:22:10,731 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:22:10,731 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:22:10,731 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:22:10,731 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:22:10,731 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:22:10,731 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:22:10,731 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DBA35D0>
DEBUG 2024-06-11 14:22:10,731 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:22:10,732 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,732 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,732 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,732 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 14:22:10,732 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 14:22:10,732 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 14:22:10,732 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,732 - on stmt: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,732 - replaced with: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,732 - on stmt: eta = index_frac.1 - offset
DEBUG 2024-06-11 14:22:10,732 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:22:10,732 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:22:10,732 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 14:22:10,732 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:22:10,732 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:22:10,732 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,732 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:22:10,732 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,732 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:22:10,732 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:22:10,732 - on stmt: jump 374
DEBUG 2024-06-11 14:22:10,732 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:22:10,732 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DBA35D0>
DEBUG 2024-06-11 14:22:10,732 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:22:10,732 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:22:10,732 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:22:10,732 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:22:10,732 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:22:10,732 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:22:10,732 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DBA35D0>
DEBUG 2024-06-11 14:22:10,733 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:22:10,733 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:22:10,733 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:22:10,733 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,733 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:22:10,733 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:22:10,733 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,733 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:22:10,733 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:22:10,733 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,733 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 14:22:10,733 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,733 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:22:10,733 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:22:10,733 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:22:10,733 - on stmt: jump 374
DEBUG 2024-06-11 14:22:10,733 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:22:10,733 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DBA35D0>
DEBUG 2024-06-11 14:22:10,733 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 14:22:10,733 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 14:22:10,733 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 14:22:10,733 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,733 - on stmt: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,733 - replaced with: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,733 - on stmt: eta = index_frac.2 - offset
DEBUG 2024-06-11 14:22:10,733 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:22:10,733 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 14:22:10,733 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:22:10,733 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:22:10,733 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:22:10,733 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:22:10,733 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,733 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:22:10,733 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,733 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:22:10,733 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:22:10,733 - on stmt: jump 646
DEBUG 2024-06-11 14:22:10,733 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:22:10,733 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DBA35D0>
DEBUG 2024-06-11 14:22:10,733 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:22:10,733 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:22:10,733 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:22:10,733 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:22:10,733 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:22:10,733 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:22:10,733 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DBA35D0>
DEBUG 2024-06-11 14:22:10,733 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:22:10,733 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:22:10,734 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:22:10,734 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,734 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:22:10,734 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:22:10,734 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,734 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:22:10,734 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:22:10,734 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,734 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 14:22:10,734 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:22:10,734 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:22:10,734 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,734 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:22:10,734 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:22:10,734 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:22:10,734 - on stmt: jump 646
DEBUG 2024-06-11 14:22:10,734 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:22:10,734 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DBA35D0>
DEBUG 2024-06-11 14:22:10,734 - on stmt: jump 176
DEBUG 2024-06-11 14:22:10,734 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:22:10,734 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DBA35D0>
DEBUG 2024-06-11 14:22:10,734 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:22:10,734 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:22:10,734 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:22:10,734 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001971DB5AF10>],
             180: [<numba.core.ir.Assign object at 0x000001971DAD6D90>],
             500: [<numba.core.ir.Assign object at 0x000001971DB12E90>]})
DEBUG 2024-06-11 14:22:10,734 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:22:10,734 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DB59910>
DEBUG 2024-06-11 14:22:10,734 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:22:10,735 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:22:10,735 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:22:10,735 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:22:10,735 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:22:10,735 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:22:10,735 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:22:10,735 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,735 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:22:10,735 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,735 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,735 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:22:10,735 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,735 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,735 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:22:10,735 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,735 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,735 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:22:10,735 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:22:10,735 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,735 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:22:10,735 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:22:10,735 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,735 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:22:10,735 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:22:10,735 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,735 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:22:10,735 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,735 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:22:10,735 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:22:10,736 - on stmt: jump 176
DEBUG 2024-06-11 14:22:10,736 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:22:10,736 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DB59910>
DEBUG 2024-06-11 14:22:10,736 - on stmt: jump 178
DEBUG 2024-06-11 14:22:10,736 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:22:10,736 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DB59910>
DEBUG 2024-06-11 14:22:10,736 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:22:10,736 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:22:10,736 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:22:10,736 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:22:10,736 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:22:10,736 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:22:10,736 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DB59910>
DEBUG 2024-06-11 14:22:10,736 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:22:10,736 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,736 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,736 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,736 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 14:22:10,736 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 14:22:10,736 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 14:22:10,736 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,736 - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,736 - on stmt: eta = index_frac.1 - offset
DEBUG 2024-06-11 14:22:10,736 - find_def var='offset' stmt=eta = index_frac.1 - offset
DEBUG 2024-06-11 14:22:10,736 - replaced with: eta = index_frac.1 - offset.1
DEBUG 2024-06-11 14:22:10,736 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:22:10,736 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:22:10,736 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 14:22:10,736 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:22:10,736 - find_def var='offset' stmt=$binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:22:10,737 - replaced with: $binop_sub318.31 = nwin - offset.1
DEBUG 2024-06-11 14:22:10,737 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:22:10,737 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,737 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:22:10,737 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,737 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:22:10,737 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:22:10,737 - on stmt: jump 374
DEBUG 2024-06-11 14:22:10,737 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:22:10,737 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DB59910>
DEBUG 2024-06-11 14:22:10,737 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:22:10,737 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:22:10,737 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:22:10,737 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:22:10,737 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:22:10,738 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:22:10,738 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DB59910>
DEBUG 2024-06-11 14:22:10,738 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:22:10,738 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:22:10,738 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:22:10,738 - find_def var='offset' stmt=$binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:22:10,738 - find_def_from_top label 376
DEBUG 2024-06-11 14:22:10,738 - idom 374 from label 376
DEBUG 2024-06-11 14:22:10,738 - find_def_from_bottom label 374
DEBUG 2024-06-11 14:22:10,738 - find_def_from_top label 374
DEBUG 2024-06-11 14:22:10,738 - idom 180 from label 374
DEBUG 2024-06-11 14:22:10,738 - find_def_from_bottom label 180
DEBUG 2024-06-11 14:22:10,738 - replaced with: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG 2024-06-11 14:22:10,738 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,738 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:22:10,738 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:22:10,738 - find_def var='offset' stmt=$binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:22:10,738 - find_def_from_top label 376
DEBUG 2024-06-11 14:22:10,738 - idom 374 from label 376
DEBUG 2024-06-11 14:22:10,738 - find_def_from_bottom label 374
DEBUG 2024-06-11 14:22:10,738 - find_def_from_top label 374
DEBUG 2024-06-11 14:22:10,738 - idom 180 from label 374
DEBUG 2024-06-11 14:22:10,738 - find_def_from_bottom label 180
DEBUG 2024-06-11 14:22:10,738 - replaced with: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG 2024-06-11 14:22:10,738 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,738 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:22:10,738 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:22:10,738 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,738 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 14:22:10,738 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,738 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:22:10,738 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:22:10,738 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:22:10,738 - on stmt: jump 374
DEBUG 2024-06-11 14:22:10,738 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:22:10,738 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DB59910>
DEBUG 2024-06-11 14:22:10,738 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 14:22:10,738 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 14:22:10,738 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 14:22:10,738 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,738 - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,738 - on stmt: eta = index_frac.2 - offset
DEBUG 2024-06-11 14:22:10,738 - find_def var='offset' stmt=eta = index_frac.2 - offset
DEBUG 2024-06-11 14:22:10,738 - replaced with: eta = index_frac.2 - offset.2
DEBUG 2024-06-11 14:22:10,738 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:22:10,738 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 14:22:10,739 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:22:10,739 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:22:10,739 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:22:10,739 - find_def var='offset' stmt=$binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:22:10,739 - replaced with: $binop_sub590.23 = nwin - offset.2
DEBUG 2024-06-11 14:22:10,739 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:22:10,739 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,739 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:22:10,739 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,739 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:22:10,739 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:22:10,739 - on stmt: jump 646
DEBUG 2024-06-11 14:22:10,739 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:22:10,739 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DB59910>
DEBUG 2024-06-11 14:22:10,739 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:22:10,739 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:22:10,739 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:22:10,739 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:22:10,739 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:22:10,739 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:22:10,739 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DB59910>
DEBUG 2024-06-11 14:22:10,739 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:22:10,739 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:22:10,739 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:22:10,739 - find_def var='offset' stmt=$binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:22:10,739 - find_def_from_top label 648
DEBUG 2024-06-11 14:22:10,739 - idom 646 from label 648
DEBUG 2024-06-11 14:22:10,739 - find_def_from_bottom label 646
DEBUG 2024-06-11 14:22:10,739 - find_def_from_top label 646
DEBUG 2024-06-11 14:22:10,739 - idom 500 from label 646
DEBUG 2024-06-11 14:22:10,740 - find_def_from_bottom label 500
DEBUG 2024-06-11 14:22:10,740 - replaced with: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG 2024-06-11 14:22:10,740 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,740 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:22:10,740 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:22:10,740 - find_def var='offset' stmt=$binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:22:10,740 - find_def_from_top label 648
DEBUG 2024-06-11 14:22:10,740 - idom 646 from label 648
DEBUG 2024-06-11 14:22:10,740 - find_def_from_bottom label 646
DEBUG 2024-06-11 14:22:10,740 - find_def_from_top label 646
DEBUG 2024-06-11 14:22:10,740 - idom 500 from label 646
DEBUG 2024-06-11 14:22:10,740 - find_def_from_bottom label 500
DEBUG 2024-06-11 14:22:10,740 - replaced with: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG 2024-06-11 14:22:10,740 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,740 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:22:10,740 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:22:10,740 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,740 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 14:22:10,740 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:22:10,740 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:22:10,740 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,740 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:22:10,740 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:22:10,740 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:22:10,740 - on stmt: jump 646
DEBUG 2024-06-11 14:22:10,740 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:22:10,740 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DB59910>
DEBUG 2024-06-11 14:22:10,740 - on stmt: jump 176
DEBUG 2024-06-11 14:22:10,740 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:22:10,740 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DB59910>
DEBUG 2024-06-11 14:22:10,740 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:22:10,741 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:22:10,741 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:22:10,741 - Fix SSA violator on var eta
DEBUG 2024-06-11 14:22:10,741 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:22:10,741 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DAD7C50>
DEBUG 2024-06-11 14:22:10,741 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:22:10,741 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:22:10,741 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:22:10,741 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:22:10,741 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:22:10,741 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:22:10,741 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:22:10,741 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,741 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:22:10,741 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,741 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,741 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:22:10,741 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,741 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,741 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:22:10,741 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,741 - first assign: eta
DEBUG 2024-06-11 14:22:10,741 - replaced with: eta = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,741 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,741 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:22:10,741 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:22:10,741 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,741 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:22:10,741 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:22:10,741 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,741 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:22:10,741 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:22:10,742 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,742 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:22:10,743 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,743 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:22:10,743 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:22:10,743 - on stmt: jump 176
DEBUG 2024-06-11 14:22:10,743 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:22:10,743 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DAD7C50>
DEBUG 2024-06-11 14:22:10,743 - on stmt: jump 178
DEBUG 2024-06-11 14:22:10,743 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:22:10,743 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DAD7C50>
DEBUG 2024-06-11 14:22:10,743 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:22:10,743 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:22:10,743 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:22:10,743 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:22:10,743 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:22:10,743 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:22:10,743 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DAD7C50>
DEBUG 2024-06-11 14:22:10,743 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:22:10,743 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,743 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,743 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,743 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 14:22:10,743 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 14:22:10,743 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 14:22:10,743 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,743 - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,743 - on stmt: eta = index_frac.1 - offset.1
DEBUG 2024-06-11 14:22:10,743 - replaced with: eta.1 = index_frac.1 - offset.1
DEBUG 2024-06-11 14:22:10,743 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:22:10,743 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:22:10,743 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 14:22:10,743 - on stmt: $binop_sub318.31 = nwin - offset.1
DEBUG 2024-06-11 14:22:10,743 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:22:10,743 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,743 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:22:10,744 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,744 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:22:10,744 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:22:10,744 - on stmt: jump 374
DEBUG 2024-06-11 14:22:10,744 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:22:10,744 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DAD7C50>
DEBUG 2024-06-11 14:22:10,744 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:22:10,744 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:22:10,744 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:22:10,744 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:22:10,744 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:22:10,744 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:22:10,744 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DAD7C50>
DEBUG 2024-06-11 14:22:10,744 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:22:10,744 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:22:10,744 - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG 2024-06-11 14:22:10,744 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,744 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:22:10,744 - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG 2024-06-11 14:22:10,744 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,744 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:22:10,744 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:22:10,744 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,744 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 14:22:10,744 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,744 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:22:10,744 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:22:10,744 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:22:10,744 - on stmt: jump 374
DEBUG 2024-06-11 14:22:10,744 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:22:10,744 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DAD7C50>
DEBUG 2024-06-11 14:22:10,744 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 14:22:10,744 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 14:22:10,744 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 14:22:10,744 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,744 - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,744 - on stmt: eta = index_frac.2 - offset.2
DEBUG 2024-06-11 14:22:10,744 - replaced with: eta.2 = index_frac.2 - offset.2
DEBUG 2024-06-11 14:22:10,744 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:22:10,744 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 14:22:10,744 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:22:10,744 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:22:10,744 - on stmt: $binop_sub590.23 = nwin - offset.2
DEBUG 2024-06-11 14:22:10,744 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:22:10,744 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,744 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:22:10,744 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,744 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:22:10,745 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:22:10,745 - on stmt: jump 646
DEBUG 2024-06-11 14:22:10,745 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:22:10,745 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DAD7C50>
DEBUG 2024-06-11 14:22:10,745 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:22:10,745 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:22:10,745 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:22:10,745 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:22:10,745 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:22:10,745 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:22:10,745 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DAD7C50>
DEBUG 2024-06-11 14:22:10,745 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:22:10,745 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:22:10,745 - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG 2024-06-11 14:22:10,745 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,745 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:22:10,745 - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG 2024-06-11 14:22:10,745 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,745 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:22:10,746 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:22:10,746 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,746 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 14:22:10,746 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:22:10,746 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:22:10,746 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,746 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:22:10,746 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:22:10,746 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:22:10,746 - on stmt: jump 646
DEBUG 2024-06-11 14:22:10,746 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:22:10,746 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DAD7C50>
DEBUG 2024-06-11 14:22:10,746 - on stmt: jump 176
DEBUG 2024-06-11 14:22:10,746 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:22:10,746 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DAD7C50>
DEBUG 2024-06-11 14:22:10,746 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:22:10,746 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:22:10,746 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:22:10,746 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001971DAD7BD0>],
             180: [<numba.core.ir.Assign object at 0x000001971DB13D90>],
             500: [<numba.core.ir.Assign object at 0x000001971DB13810>]})
DEBUG 2024-06-11 14:22:10,746 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:22:10,746 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DB5AD10>
DEBUG 2024-06-11 14:22:10,746 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:22:10,746 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:22:10,747 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:22:10,747 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:22:10,747 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:22:10,747 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:22:10,747 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:22:10,747 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,747 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:22:10,747 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,747 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,747 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:22:10,747 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,747 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,747 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:22:10,747 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,747 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,747 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:22:10,747 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:22:10,747 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,747 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:22:10,747 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:22:10,747 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,747 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:22:10,747 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:22:10,747 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,747 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:22:10,747 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,747 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:22:10,747 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:22:10,747 - on stmt: jump 176
DEBUG 2024-06-11 14:22:10,747 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:22:10,747 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DB5AD10>
DEBUG 2024-06-11 14:22:10,747 - on stmt: jump 178
DEBUG 2024-06-11 14:22:10,747 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:22:10,747 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DB5AD10>
DEBUG 2024-06-11 14:22:10,747 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:22:10,747 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:22:10,747 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:22:10,747 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:22:10,747 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:22:10,748 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:22:10,748 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DB5AD10>
DEBUG 2024-06-11 14:22:10,748 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:22:10,748 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,748 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,748 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,748 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 14:22:10,748 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 14:22:10,748 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 14:22:10,748 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,748 - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,748 - on stmt: eta.1 = index_frac.1 - offset.1
DEBUG 2024-06-11 14:22:10,748 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:22:10,748 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:22:10,749 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 14:22:10,749 - on stmt: $binop_sub318.31 = nwin - offset.1
DEBUG 2024-06-11 14:22:10,749 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:22:10,749 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,749 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:22:10,749 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,749 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:22:10,749 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:22:10,749 - on stmt: jump 374
DEBUG 2024-06-11 14:22:10,749 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:22:10,749 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DB5AD10>
DEBUG 2024-06-11 14:22:10,749 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:22:10,749 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:22:10,749 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:22:10,749 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:22:10,749 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:22:10,749 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:22:10,749 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DB5AD10>
DEBUG 2024-06-11 14:22:10,749 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:22:10,749 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:22:10,749 - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG 2024-06-11 14:22:10,749 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,749 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:22:10,749 - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG 2024-06-11 14:22:10,749 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,749 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:22:10,749 - find_def var='eta' stmt=$binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:22:10,749 - find_def_from_top label 376
DEBUG 2024-06-11 14:22:10,749 - idom 374 from label 376
DEBUG 2024-06-11 14:22:10,749 - find_def_from_bottom label 374
DEBUG 2024-06-11 14:22:10,749 - find_def_from_top label 374
DEBUG 2024-06-11 14:22:10,749 - idom 180 from label 374
DEBUG 2024-06-11 14:22:10,749 - find_def_from_bottom label 180
DEBUG 2024-06-11 14:22:10,749 - replaced with: $binop_mul432.18 = eta.1 * $422binary_subscr.17
DEBUG 2024-06-11 14:22:10,750 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:22:10,750 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,750 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 14:22:10,750 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,750 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:22:10,750 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:22:10,750 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:22:10,750 - on stmt: jump 374
DEBUG 2024-06-11 14:22:10,750 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:22:10,750 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DB5AD10>
DEBUG 2024-06-11 14:22:10,750 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 14:22:10,750 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 14:22:10,750 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 14:22:10,750 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,750 - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,750 - on stmt: eta.2 = index_frac.2 - offset.2
DEBUG 2024-06-11 14:22:10,750 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:22:10,750 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 14:22:10,750 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:22:10,750 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:22:10,750 - on stmt: $binop_sub590.23 = nwin - offset.2
DEBUG 2024-06-11 14:22:10,750 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:22:10,750 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,750 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:22:10,750 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,750 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:22:10,750 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:22:10,750 - on stmt: jump 646
DEBUG 2024-06-11 14:22:10,750 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:22:10,750 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DB5AD10>
DEBUG 2024-06-11 14:22:10,750 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:22:10,750 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:22:10,750 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:22:10,750 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:22:10,750 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:22:10,750 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:22:10,750 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DB5AD10>
DEBUG 2024-06-11 14:22:10,750 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:22:10,750 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:22:10,750 - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG 2024-06-11 14:22:10,750 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,750 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:22:10,750 - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG 2024-06-11 14:22:10,750 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,750 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:22:10,750 - find_def var='eta' stmt=$binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:22:10,751 - find_def_from_top label 648
DEBUG 2024-06-11 14:22:10,751 - idom 646 from label 648
DEBUG 2024-06-11 14:22:10,751 - find_def_from_bottom label 646
DEBUG 2024-06-11 14:22:10,751 - find_def_from_top label 646
DEBUG 2024-06-11 14:22:10,751 - idom 500 from label 646
DEBUG 2024-06-11 14:22:10,751 - find_def_from_bottom label 500
DEBUG 2024-06-11 14:22:10,751 - replaced with: $binop_mul704.18 = eta.2 * $694binary_subscr.17
DEBUG 2024-06-11 14:22:10,751 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:22:10,751 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,751 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 14:22:10,751 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:22:10,751 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:22:10,751 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,751 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:22:10,751 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:22:10,752 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:22:10,752 - on stmt: jump 646
DEBUG 2024-06-11 14:22:10,752 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:22:10,752 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DB5AD10>
DEBUG 2024-06-11 14:22:10,752 - on stmt: jump 176
DEBUG 2024-06-11 14:22:10,752 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:22:10,752 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DB5AD10>
DEBUG 2024-06-11 14:22:10,752 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:22:10,752 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:22:10,752 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:22:10,752 - Fix SSA violator on var weight
DEBUG 2024-06-11 14:22:10,752 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:22:10,752 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB5AF50>
DEBUG 2024-06-11 14:22:10,752 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:22:10,752 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:22:10,752 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:22:10,752 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:22:10,752 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:22:10,752 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:22:10,752 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:22:10,752 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,752 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:22:10,752 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,752 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,752 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:22:10,752 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,752 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,752 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:22:10,752 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,752 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,752 - first assign: weight
DEBUG 2024-06-11 14:22:10,752 - replaced with: weight = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,752 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:22:10,753 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:22:10,753 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,753 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:22:10,753 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:22:10,753 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,753 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:22:10,753 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:22:10,753 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,753 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:22:10,753 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,753 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:22:10,753 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:22:10,753 - on stmt: jump 176
DEBUG 2024-06-11 14:22:10,753 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:22:10,753 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB5AF50>
DEBUG 2024-06-11 14:22:10,753 - on stmt: jump 178
DEBUG 2024-06-11 14:22:10,753 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:22:10,753 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB5AF50>
DEBUG 2024-06-11 14:22:10,753 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:22:10,753 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:22:10,753 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:22:10,753 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:22:10,753 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:22:10,753 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:22:10,753 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB5AF50>
DEBUG 2024-06-11 14:22:10,753 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:22:10,753 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,753 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,753 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,753 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 14:22:10,753 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 14:22:10,753 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 14:22:10,753 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,753 - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,754 - on stmt: eta.1 = index_frac.1 - offset.1
DEBUG 2024-06-11 14:22:10,754 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:22:10,754 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:22:10,754 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 14:22:10,754 - on stmt: $binop_sub318.31 = nwin - offset.1
DEBUG 2024-06-11 14:22:10,754 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:22:10,754 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,754 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:22:10,754 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,754 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:22:10,754 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:22:10,754 - on stmt: jump 374
DEBUG 2024-06-11 14:22:10,754 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:22:10,754 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB5AF50>
DEBUG 2024-06-11 14:22:10,754 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:22:10,754 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:22:10,754 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:22:10,754 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:22:10,754 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:22:10,754 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:22:10,754 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB5AF50>
DEBUG 2024-06-11 14:22:10,754 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:22:10,754 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:22:10,754 - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG 2024-06-11 14:22:10,754 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,754 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:22:10,754 - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG 2024-06-11 14:22:10,754 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,754 - on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
DEBUG 2024-06-11 14:22:10,754 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:22:10,754 - replaced with: weight.1 = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:22:10,754 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,754 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 14:22:10,754 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,754 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:22:10,754 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:22:10,754 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:22:10,754 - on stmt: jump 374
DEBUG 2024-06-11 14:22:10,754 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:22:10,754 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB5AF50>
DEBUG 2024-06-11 14:22:10,754 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 14:22:10,754 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 14:22:10,754 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 14:22:10,754 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,754 - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,754 - on stmt: eta.2 = index_frac.2 - offset.2
DEBUG 2024-06-11 14:22:10,754 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:22:10,755 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 14:22:10,755 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:22:10,755 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:22:10,755 - on stmt: $binop_sub590.23 = nwin - offset.2
DEBUG 2024-06-11 14:22:10,755 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:22:10,755 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,755 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:22:10,755 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,755 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:22:10,755 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:22:10,755 - on stmt: jump 646
DEBUG 2024-06-11 14:22:10,755 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:22:10,755 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB5AF50>
DEBUG 2024-06-11 14:22:10,755 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:22:10,755 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:22:10,755 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:22:10,755 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:22:10,755 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:22:10,755 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:22:10,755 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB5AF50>
DEBUG 2024-06-11 14:22:10,755 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:22:10,755 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:22:10,755 - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG 2024-06-11 14:22:10,755 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,755 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:22:10,755 - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG 2024-06-11 14:22:10,755 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,755 - on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
DEBUG 2024-06-11 14:22:10,755 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:22:10,755 - replaced with: weight.2 = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:22:10,755 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,755 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 14:22:10,755 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:22:10,756 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:22:10,756 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,756 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:22:10,756 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:22:10,756 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:22:10,756 - on stmt: jump 646
DEBUG 2024-06-11 14:22:10,756 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:22:10,756 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB5AF50>
DEBUG 2024-06-11 14:22:10,756 - on stmt: jump 176
DEBUG 2024-06-11 14:22:10,756 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:22:10,756 - Running <numba.core.ssa._FreshVarHandler object at 0x000001971DB5AF50>
DEBUG 2024-06-11 14:22:10,756 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:22:10,756 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:22:10,756 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:22:10,756 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001971DB59910>],
             376: [<numba.core.ir.Assign object at 0x000001971DB135D0>],
             648: [<numba.core.ir.Assign object at 0x000001971DB13550>]})
DEBUG 2024-06-11 14:22:10,756 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:22:10,756 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DAD7490>
DEBUG 2024-06-11 14:22:10,756 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:22:10,756 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:22:10,756 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:22:10,756 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:22:10,756 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:22:10,756 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:22:10,756 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:22:10,756 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,756 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:22:10,756 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,756 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,756 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:22:10,756 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,756 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,757 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:22:10,757 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,757 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:22:10,757 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:22:10,757 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:22:10,757 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,757 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:22:10,757 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:22:10,757 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,757 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:22:10,757 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:22:10,757 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,757 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:22:10,757 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,757 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:22:10,757 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:22:10,757 - on stmt: jump 176
DEBUG 2024-06-11 14:22:10,757 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:22:10,757 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DAD7490>
DEBUG 2024-06-11 14:22:10,757 - on stmt: jump 178
DEBUG 2024-06-11 14:22:10,757 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:22:10,757 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DAD7490>
DEBUG 2024-06-11 14:22:10,757 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:22:10,757 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:22:10,757 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:22:10,757 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:22:10,757 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:22:10,757 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:22:10,757 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DAD7490>
DEBUG 2024-06-11 14:22:10,757 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:22:10,757 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,757 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,758 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,758 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 14:22:10,758 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 14:22:10,758 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 14:22:10,758 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,758 - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,758 - on stmt: eta.1 = index_frac.1 - offset.1
DEBUG 2024-06-11 14:22:10,758 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:22:10,758 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:22:10,758 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 14:22:10,758 - on stmt: $binop_sub318.31 = nwin - offset.1
DEBUG 2024-06-11 14:22:10,758 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:22:10,758 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,758 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:22:10,758 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,758 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:22:10,758 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:22:10,758 - on stmt: jump 374
DEBUG 2024-06-11 14:22:10,758 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:22:10,758 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DAD7490>
DEBUG 2024-06-11 14:22:10,758 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:22:10,758 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:22:10,758 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:22:10,758 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:22:10,758 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:22:10,758 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:22:10,758 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DAD7490>
DEBUG 2024-06-11 14:22:10,758 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:22:10,758 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:22:10,758 - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG 2024-06-11 14:22:10,758 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,758 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:22:10,758 - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG 2024-06-11 14:22:10,758 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,760 - on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
DEBUG 2024-06-11 14:22:10,760 - on stmt: weight.1 = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:22:10,760 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,760 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 14:22:10,760 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,760 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:22:10,760 - find_def var='weight' stmt=$binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:22:10,760 - replaced with: $binop_mul482.29 = weight.1 * $472binary_subscr.28
DEBUG 2024-06-11 14:22:10,760 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:22:10,760 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:22:10,760 - on stmt: jump 374
DEBUG 2024-06-11 14:22:10,760 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:22:10,760 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DAD7490>
DEBUG 2024-06-11 14:22:10,760 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 14:22:10,760 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 14:22:10,760 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 14:22:10,760 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:22:10,760 - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,760 - on stmt: eta.2 = index_frac.2 - offset.2
DEBUG 2024-06-11 14:22:10,760 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:22:10,760 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 14:22:10,760 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:22:10,760 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:22:10,760 - on stmt: $binop_sub590.23 = nwin - offset.2
DEBUG 2024-06-11 14:22:10,760 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:22:10,760 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,760 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:22:10,760 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:22:10,760 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:22:10,760 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:22:10,760 - on stmt: jump 646
DEBUG 2024-06-11 14:22:10,760 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:22:10,760 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DAD7490>
DEBUG 2024-06-11 14:22:10,760 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:22:10,760 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:22:10,760 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:22:10,760 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:22:10,760 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:22:10,760 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:22:10,760 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DAD7490>
DEBUG 2024-06-11 14:22:10,760 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:22:10,760 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:22:10,760 - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG 2024-06-11 14:22:10,760 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,760 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:22:10,760 - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG 2024-06-11 14:22:10,760 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,760 - on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
DEBUG 2024-06-11 14:22:10,760 - on stmt: weight.2 = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:22:10,760 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,760 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 14:22:10,760 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:22:10,761 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:22:10,761 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:22:10,761 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:22:10,761 - find_def var='weight' stmt=$binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:22:10,761 - replaced with: $binop_mul760.31 = weight.2 * $750binary_subscr.30
DEBUG 2024-06-11 14:22:10,761 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:22:10,761 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:22:10,761 - on stmt: jump 646
DEBUG 2024-06-11 14:22:10,761 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:22:10,761 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DAD7490>
DEBUG 2024-06-11 14:22:10,761 - on stmt: jump 176
DEBUG 2024-06-11 14:22:10,761 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:22:10,761 - Running <numba.core.ssa._FixSSAVars object at 0x000001971DAD7490>
DEBUG 2024-06-11 14:22:10,762 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:22:10,762 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:22:10,762 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:22:11,413 - bytecode dump:
>          0	NOP(arg=None, lineno=425)
           2	RESUME(arg=0, lineno=425)
           4	LOAD_FAST(arg=0, lineno=428)
           6	LOAD_CONST(arg=1, lineno=428)
           8	BINARY_SUBSCR(arg=None, lineno=428)
          18	LOAD_FAST(arg=0, lineno=428)
          20	LOAD_CONST(arg=2, lineno=428)
          22	BINARY_SUBSCR(arg=None, lineno=428)
          32	BINARY_OP(arg=0, lineno=428)
          36	LOAD_CONST(arg=3, lineno=428)
          38	LOAD_FAST(arg=0, lineno=428)
          40	LOAD_CONST(arg=4, lineno=428)
          42	BINARY_SUBSCR(arg=None, lineno=428)
          52	BINARY_OP(arg=5, lineno=428)
          56	BINARY_OP(arg=10, lineno=428)
          60	STORE_FAST(arg=1, lineno=428)
          62	LOAD_FAST(arg=0, lineno=429)
          64	LOAD_CONST(arg=1, lineno=429)
          66	BINARY_SUBSCR(arg=None, lineno=429)
          76	LOAD_FAST(arg=0, lineno=429)
          78	LOAD_CONST(arg=2, lineno=429)
          80	BINARY_SUBSCR(arg=None, lineno=429)
          90	BINARY_OP(arg=10, lineno=429)
          94	LOAD_CONST(arg=3, lineno=429)
          96	BINARY_OP(arg=11, lineno=429)
         100	STORE_FAST(arg=2, lineno=429)
         102	LOAD_GLOBAL(arg=1, lineno=431)
         114	LOAD_ATTR(arg=1, lineno=431)
         124	LOAD_FAST(arg=2, lineno=431)
         126	PRECALL(arg=1, lineno=431)
         130	CALL(arg=1, lineno=431)
         140	LOAD_GLOBAL(arg=1, lineno=431)
         152	LOAD_ATTR(arg=1, lineno=431)
         162	LOAD_FAST(arg=1, lineno=431)
         164	PRECALL(arg=1, lineno=431)
         168	CALL(arg=1, lineno=431)
         178	COMPARE_OP(arg=5, lineno=431)
         184	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=431)
         186	LOAD_CONST(arg=4, lineno=434)
         188	RETURN_VALUE(arg=None, lineno=434)
>        190	LOAD_FAST(arg=2, lineno=436)
         192	UNARY_NEGATIVE(arg=None, lineno=436)
         194	LOAD_FAST(arg=1, lineno=436)
         196	BINARY_OP(arg=11, lineno=436)
         200	RETURN_VALUE(arg=None, lineno=436)
DEBUG 2024-06-11 14:22:11,413 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 14:22:11,413 - stack: []
DEBUG 2024-06-11 14:22:11,413 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 14:22:11,413 - dispatch pc=0, inst=NOP(arg=None, lineno=425)
DEBUG 2024-06-11 14:22:11,413 - stack []
DEBUG 2024-06-11 14:22:11,413 - dispatch pc=2, inst=RESUME(arg=0, lineno=425)
DEBUG 2024-06-11 14:22:11,413 - stack []
DEBUG 2024-06-11 14:22:11,413 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=428)
DEBUG 2024-06-11 14:22:11,413 - stack []
DEBUG 2024-06-11 14:22:11,413 - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=428)
DEBUG 2024-06-11 14:22:11,413 - stack ['$x4.0']
DEBUG 2024-06-11 14:22:11,413 - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=428)
DEBUG 2024-06-11 14:22:11,413 - stack ['$x4.0', '$const6.1']
DEBUG 2024-06-11 14:22:11,413 - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=428)
DEBUG 2024-06-11 14:22:11,414 - stack ['$8binary_subscr.2']
DEBUG 2024-06-11 14:22:11,414 - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=428)
DEBUG 2024-06-11 14:22:11,414 - stack ['$8binary_subscr.2', '$x18.3']
DEBUG 2024-06-11 14:22:11,414 - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=428)
DEBUG 2024-06-11 14:22:11,414 - stack ['$8binary_subscr.2', '$x18.3', '$const20.4']
DEBUG 2024-06-11 14:22:11,414 - dispatch pc=32, inst=BINARY_OP(arg=0, lineno=428)
DEBUG 2024-06-11 14:22:11,414 - stack ['$8binary_subscr.2', '$22binary_subscr.5']
DEBUG 2024-06-11 14:22:11,414 - dispatch pc=36, inst=LOAD_CONST(arg=3, lineno=428)
DEBUG 2024-06-11 14:22:11,414 - stack ['$binop_add32.6']
DEBUG 2024-06-11 14:22:11,414 - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=428)
DEBUG 2024-06-11 14:22:11,414 - stack ['$binop_add32.6', '$const36.7']
DEBUG 2024-06-11 14:22:11,414 - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=428)
DEBUG 2024-06-11 14:22:11,414 - stack ['$binop_add32.6', '$const36.7', '$x38.8']
DEBUG 2024-06-11 14:22:11,414 - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=428)
DEBUG 2024-06-11 14:22:11,414 - stack ['$binop_add32.6', '$const36.7', '$x38.8', '$const40.9']
DEBUG 2024-06-11 14:22:11,414 - dispatch pc=52, inst=BINARY_OP(arg=5, lineno=428)
DEBUG 2024-06-11 14:22:11,414 - stack ['$binop_add32.6', '$const36.7', '$42binary_subscr.10']
DEBUG 2024-06-11 14:22:11,414 - dispatch pc=56, inst=BINARY_OP(arg=10, lineno=428)
DEBUG 2024-06-11 14:22:11,414 - stack ['$binop_add32.6', '$binop_mul52.11']
DEBUG 2024-06-11 14:22:11,414 - dispatch pc=60, inst=STORE_FAST(arg=1, lineno=428)
DEBUG 2024-06-11 14:22:11,414 - stack ['$binop_sub56.12']
DEBUG 2024-06-11 14:22:11,414 - dispatch pc=62, inst=LOAD_FAST(arg=0, lineno=429)
DEBUG 2024-06-11 14:22:11,414 - stack []
DEBUG 2024-06-11 14:22:11,414 - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=429)
DEBUG 2024-06-11 14:22:11,414 - stack ['$x62.13']
DEBUG 2024-06-11 14:22:11,414 - dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=429)
DEBUG 2024-06-11 14:22:11,414 - stack ['$x62.13', '$const64.14']
DEBUG 2024-06-11 14:22:11,415 - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=429)
DEBUG 2024-06-11 14:22:11,416 - stack ['$66binary_subscr.15']
DEBUG 2024-06-11 14:22:11,416 - dispatch pc=78, inst=LOAD_CONST(arg=2, lineno=429)
DEBUG 2024-06-11 14:22:11,416 - stack ['$66binary_subscr.15', '$x76.16']
DEBUG 2024-06-11 14:22:11,416 - dispatch pc=80, inst=BINARY_SUBSCR(arg=None, lineno=429)
DEBUG 2024-06-11 14:22:11,416 - stack ['$66binary_subscr.15', '$x76.16', '$const78.17']
DEBUG 2024-06-11 14:22:11,416 - dispatch pc=90, inst=BINARY_OP(arg=10, lineno=429)
DEBUG 2024-06-11 14:22:11,416 - stack ['$66binary_subscr.15', '$80binary_subscr.18']
DEBUG 2024-06-11 14:22:11,416 - dispatch pc=94, inst=LOAD_CONST(arg=3, lineno=429)
DEBUG 2024-06-11 14:22:11,416 - stack ['$binop_sub90.19']
DEBUG 2024-06-11 14:22:11,416 - dispatch pc=96, inst=BINARY_OP(arg=11, lineno=429)
DEBUG 2024-06-11 14:22:11,416 - stack ['$binop_sub90.19', '$const94.20']
DEBUG 2024-06-11 14:22:11,416 - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=429)
DEBUG 2024-06-11 14:22:11,416 - stack ['$binop_truediv96.21']
DEBUG 2024-06-11 14:22:11,416 - dispatch pc=102, inst=LOAD_GLOBAL(arg=1, lineno=431)
DEBUG 2024-06-11 14:22:11,416 - stack []
DEBUG 2024-06-11 14:22:11,416 - dispatch pc=114, inst=LOAD_ATTR(arg=1, lineno=431)
DEBUG 2024-06-11 14:22:11,416 - stack ['$null$102.23', '$102load_global.22']
DEBUG 2024-06-11 14:22:11,416 - dispatch pc=124, inst=LOAD_FAST(arg=2, lineno=431)
DEBUG 2024-06-11 14:22:11,416 - stack ['$null$102.23', '$114load_attr.24']
DEBUG 2024-06-11 14:22:11,416 - dispatch pc=126, inst=PRECALL(arg=1, lineno=431)
DEBUG 2024-06-11 14:22:11,416 - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
DEBUG 2024-06-11 14:22:11,416 - dispatch pc=130, inst=CALL(arg=1, lineno=431)
DEBUG 2024-06-11 14:22:11,416 - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
DEBUG 2024-06-11 14:22:11,416 - dispatch pc=140, inst=LOAD_GLOBAL(arg=1, lineno=431)
DEBUG 2024-06-11 14:22:11,416 - stack ['$130call.26']
DEBUG 2024-06-11 14:22:11,416 - dispatch pc=152, inst=LOAD_ATTR(arg=1, lineno=431)
DEBUG 2024-06-11 14:22:11,416 - stack ['$130call.26', '$null$140.28', '$140load_global.27']
DEBUG 2024-06-11 14:22:11,416 - dispatch pc=162, inst=LOAD_FAST(arg=1, lineno=431)
DEBUG 2024-06-11 14:22:11,416 - stack ['$130call.26', '$null$140.28', '$152load_attr.29']
DEBUG 2024-06-11 14:22:11,416 - dispatch pc=164, inst=PRECALL(arg=1, lineno=431)
DEBUG 2024-06-11 14:22:11,416 - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
DEBUG 2024-06-11 14:22:11,416 - dispatch pc=168, inst=CALL(arg=1, lineno=431)
DEBUG 2024-06-11 14:22:11,416 - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
DEBUG 2024-06-11 14:22:11,416 - dispatch pc=178, inst=COMPARE_OP(arg=5, lineno=431)
DEBUG 2024-06-11 14:22:11,416 - stack ['$130call.26', '$168call.31']
DEBUG 2024-06-11 14:22:11,416 - dispatch pc=184, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=431)
DEBUG 2024-06-11 14:22:11,416 - stack ['$178compare_op.32']
DEBUG 2024-06-11 14:22:11,416 - end state. edges=[Edge(pc=186, stack=(), blockstack=(), npush=0), Edge(pc=190, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:22:11,417 - pending: deque([State(pc_initial=186 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
DEBUG 2024-06-11 14:22:11,417 - stack: []
DEBUG 2024-06-11 14:22:11,417 - state.pc_initial: State(pc_initial=186 nstack_initial=0)
DEBUG 2024-06-11 14:22:11,417 - dispatch pc=186, inst=LOAD_CONST(arg=4, lineno=434)
DEBUG 2024-06-11 14:22:11,417 - stack []
DEBUG 2024-06-11 14:22:11,417 - dispatch pc=188, inst=RETURN_VALUE(arg=None, lineno=434)
DEBUG 2024-06-11 14:22:11,417 - stack ['$const186.0']
DEBUG 2024-06-11 14:22:11,417 - end state. edges=[]
DEBUG 2024-06-11 14:22:11,417 - pending: deque([State(pc_initial=190 nstack_initial=0)])
DEBUG 2024-06-11 14:22:11,417 - stack: []
DEBUG 2024-06-11 14:22:11,417 - state.pc_initial: State(pc_initial=190 nstack_initial=0)
DEBUG 2024-06-11 14:22:11,417 - dispatch pc=190, inst=LOAD_FAST(arg=2, lineno=436)
DEBUG 2024-06-11 14:22:11,417 - stack []
DEBUG 2024-06-11 14:22:11,417 - dispatch pc=192, inst=UNARY_NEGATIVE(arg=None, lineno=436)
DEBUG 2024-06-11 14:22:11,417 - stack ['$b190.0']
DEBUG 2024-06-11 14:22:11,417 - dispatch pc=194, inst=LOAD_FAST(arg=1, lineno=436)
DEBUG 2024-06-11 14:22:11,417 - stack ['$192unary_negative.1']
DEBUG 2024-06-11 14:22:11,417 - dispatch pc=196, inst=BINARY_OP(arg=11, lineno=436)
DEBUG 2024-06-11 14:22:11,417 - stack ['$192unary_negative.1', '$a194.2']
DEBUG 2024-06-11 14:22:11,417 - dispatch pc=200, inst=RETURN_VALUE(arg=None, lineno=436)
DEBUG 2024-06-11 14:22:11,417 - stack ['$binop_truediv196.3']
DEBUG 2024-06-11 14:22:11,417 - end state. edges=[]
DEBUG 2024-06-11 14:22:11,417 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 14:22:11,417 - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=186 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set()})
DEBUG 2024-06-11 14:22:11,418 - defmap: {}
DEBUG 2024-06-11 14:22:11,418 - phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 14:22:11,418 - changing phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 14:22:11,418 - keep phismap: {}
DEBUG 2024-06-11 14:22:11,418 - new_out: defaultdict(<class 'dict'>, {})
DEBUG 2024-06-11 14:22:11,418 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 14:22:11,418 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4'}), (22, {'index': '$const20.4', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'op': '+', 'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$binop_add32.6'}), (34, {}), (36, {'res': '$const36.7'}), (38, {'res': '$x38.8'}), (40, {'res': '$const40.9'}), (42, {'index': '$const40.9', 'target': '$x38.8', 'res': '$42binary_subscr.10'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'op': '*', 'lhs': '$const36.7', 'rhs': '$42binary_subscr.10', 'res': '$binop_mul52.11'}), (54, {}), (56, {'op': '-', 'lhs': '$binop_add32.6', 'rhs': '$binop_mul52.11', 'res': '$binop_sub56.12'}), (58, {}), (60, {'value': '$binop_sub56.12'}), (62, {'res': '$x62.13'}), (64, {'res': '$const64.14'}), (66, {'index': '$const64.14', 'target': '$x62.13', 'res': '$66binary_subscr.15'}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {'res': '$x76.16'}), (78, {'res': '$const78.17'}), (80, {'index': '$const78.17', 'target': '$x76.16', 'res': '$80binary_subscr.18'}), (82, {}), (84, {}), (86, {}), (88, {}), (90, {'op': '-', 'lhs': '$66binary_subscr.15', 'rhs': '$80binary_subscr.18', 'res': '$binop_sub90.19'}), (92, {}), (94, {'res': '$const94.20'}), (96, {'op': '/', 'lhs': '$binop_sub90.19', 'rhs': '$const94.20', 'res': '$binop_truediv96.21'}), (98, {}), (100, {'value': '$binop_truediv96.21'}), (102, {'idx': 0, 'res': '$102load_global.22'}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'item': '$102load_global.22', 'res': '$114load_attr.24'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$b124.25'}), (126, {}), (128, {}), (130, {'func': '$114load_attr.24', 'args': ['$b124.25'], 'kw_names': None, 'res': '$130call.26'}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {'idx': 0, 'res': '$140load_global.27'}), (142, {}), (144, {}), (146, {}), (148, {}), (150, {}), (152, {'item': '$140load_global.27', 'res': '$152load_attr.29'}), (154, {}), (156, {}), (158, {}), (160, {}), (162, {'res': '$a162.30'}), (164, {}), (166, {}), (168, {'func': '$152load_attr.29', 'args': ['$a162.30'], 'kw_names': None, 'res': '$168call.31'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {'lhs': '$130call.26', 'rhs': '$168call.31', 'res': '$178compare_op.32'}), (180, {}), (182, {}), (184, {'pred': '$178compare_op.32'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={186: (), 190: ()})
DEBUG 2024-06-11 14:22:11,418 - block_infos State(pc_initial=186 nstack_initial=0):
AdaptBlockInfo(insts=((186, {'res': '$const186.0'}), (188, {'retval': '$const186.0', 'castval': '$188return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 14:22:11,418 - block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$b190.0'}), (192, {'value': '$b190.0', 'res': '$192unary_negative.1'}), (194, {'res': '$a194.2'}), (196, {'op': '/', 'lhs': '$192unary_negative.1', 'rhs': '$a194.2', 'res': '$binop_truediv196.3'}), (198, {}), (200, {'retval': '$binop_truediv196.3', 'castval': '$200return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 14:22:11,419 - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1 = const(int, 1)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $const20.4 = const(int, -1)              ['$const20.4']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4', 'x']
    $binop_add32.6 = $8binary_subscr.2 + $22binary_subscr.5 ['$22binary_subscr.5', '$8binary_subscr.2', '$binop_add32.6']
    $const36.7 = const(int, 2)               ['$const36.7']
    $const40.9 = const(int, 0)               ['$const40.9']
    $42binary_subscr.10 = getitem(value=x, index=$const40.9, fn=<built-in function getitem>) ['$42binary_subscr.10', '$const40.9', 'x']
    $binop_mul52.11 = $const36.7 * $42binary_subscr.10 ['$42binary_subscr.10', '$binop_mul52.11', '$const36.7']
    a = $binop_add32.6 - $binop_mul52.11     ['$binop_add32.6', '$binop_mul52.11', 'a']
    $const64.14 = const(int, 1)              ['$const64.14']
    $66binary_subscr.15 = getitem(value=x, index=$const64.14, fn=<built-in function getitem>) ['$66binary_subscr.15', '$const64.14', 'x']
    $const78.17 = const(int, -1)             ['$const78.17']
    $80binary_subscr.18 = getitem(value=x, index=$const78.17, fn=<built-in function getitem>) ['$80binary_subscr.18', '$const78.17', 'x']
    $binop_sub90.19 = $66binary_subscr.15 - $80binary_subscr.18 ['$66binary_subscr.15', '$80binary_subscr.18', '$binop_sub90.19']
    $const94.20 = const(int, 2)              ['$const94.20']
    b = $binop_sub90.19 / $const94.20        ['$binop_sub90.19', '$const94.20', 'b']
    $102load_global.22 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$102load_global.22']
    $114load_attr.24 = getattr(value=$102load_global.22, attr=abs) ['$102load_global.22', '$114load_attr.24']
    $130call.26 = call $114load_attr.24(b, func=$114load_attr.24, args=[Var(b, pitch.py:429)], kws=(), vararg=None, varkwarg=None, target=None) ['$114load_attr.24', '$130call.26', 'b']
    $140load_global.27 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$140load_global.27']
    $152load_attr.29 = getattr(value=$140load_global.27, attr=abs) ['$140load_global.27', '$152load_attr.29']
    $168call.31 = call $152load_attr.29(a, func=$152load_attr.29, args=[Var(a, pitch.py:428)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_attr.29', '$168call.31', 'a']
    $178compare_op.32 = $130call.26 >= $168call.31 ['$130call.26', '$168call.31', '$178compare_op.32']
    bool184 = global(bool: <class 'bool'>)   ['bool184']
    $184pred = call bool184($178compare_op.32, func=bool184, args=(Var($178compare_op.32, pitch.py:431),), kws=(), vararg=None, varkwarg=None, target=None) ['$178compare_op.32', '$184pred', 'bool184']
    branch $184pred, 186, 190                ['$184pred']
label 186:
    $const186.0 = const(int, 0)              ['$const186.0']
    $188return_value.1 = cast(value=$const186.0) ['$188return_value.1', '$const186.0']
    return $188return_value.1                ['$188return_value.1']
label 190:
    $192unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$192unary_negative.1', 'b']
    $binop_truediv196.3 = $192unary_negative.1 / a ['$192unary_negative.1', '$binop_truediv196.3', 'a']
    $200return_value.4 = cast(value=$binop_truediv196.3) ['$200return_value.4', '$binop_truediv196.3']
    return $200return_value.4                ['$200return_value.4']

DEBUG 2024-06-11 14:50:53,443 - bytecode dump:
>          0	NOP(arg=None, lineno=1141)
           2	RESUME(arg=0, lineno=1141)
           4	LOAD_FAST(arg=0, lineno=1144)
           6	LOAD_CONST(arg=1, lineno=1144)
           8	BINARY_SUBSCR(arg=None, lineno=1144)
          18	STORE_FAST(arg=3, lineno=1144)
          20	LOAD_FAST(arg=1, lineno=1145)
          22	UNARY_NEGATIVE(arg=None, lineno=1145)
          24	LOAD_FAST(arg=3, lineno=1145)
          26	SWAP(arg=2, lineno=1145)
          28	COPY(arg=2, lineno=1145)
          30	COMPARE_OP(arg=1, lineno=1145)
          36	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1145)
          38	LOAD_FAST(arg=1, lineno=1145)
          40	COMPARE_OP(arg=1, lineno=1145)
          46	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1145)
          48	JUMP_FORWARD(arg=2, lineno=1145)
>         50	POP_TOP(arg=None, lineno=1145)
          52	JUMP_FORWARD(arg=2, lineno=1145)
>         54	LOAD_CONST(arg=1, lineno=1146)
          56	STORE_FAST(arg=3, lineno=1146)
>         58	LOAD_FAST(arg=0, lineno=1148)
          60	LOAD_CONST(arg=2, lineno=1148)
          62	BINARY_SUBSCR(arg=None, lineno=1148)
          72	STORE_FAST(arg=4, lineno=1148)
          74	LOAD_FAST(arg=1, lineno=1149)
          76	UNARY_NEGATIVE(arg=None, lineno=1149)
          78	LOAD_FAST(arg=4, lineno=1149)
          80	SWAP(arg=2, lineno=1149)
          82	COPY(arg=2, lineno=1149)
          84	COMPARE_OP(arg=1, lineno=1149)
          90	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1149)
          92	LOAD_FAST(arg=1, lineno=1149)
          94	COMPARE_OP(arg=1, lineno=1149)
         100	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1149)
         102	JUMP_FORWARD(arg=2, lineno=1149)
>        104	POP_TOP(arg=None, lineno=1149)
         106	JUMP_FORWARD(arg=2, lineno=1149)
>        108	LOAD_CONST(arg=1, lineno=1150)
         110	STORE_FAST(arg=4, lineno=1150)
>        112	LOAD_FAST(arg=2, lineno=1152)
         114	POP_JUMP_FORWARD_IF_FALSE(arg=42, lineno=1152)
         116	LOAD_GLOBAL(arg=1, lineno=1153)
         128	LOAD_ATTR(arg=1, lineno=1153)
         138	LOAD_FAST(arg=3, lineno=1153)
         140	PRECALL(arg=1, lineno=1153)
         144	CALL(arg=1, lineno=1153)
         154	LOAD_GLOBAL(arg=1, lineno=1153)
         166	LOAD_ATTR(arg=1, lineno=1153)
         176	LOAD_FAST(arg=4, lineno=1153)
         178	PRECALL(arg=1, lineno=1153)
         182	CALL(arg=1, lineno=1153)
         192	COMPARE_OP(arg=3, lineno=1153)
         198	RETURN_VALUE(arg=None, lineno=1153)
>        200	LOAD_GLOBAL(arg=1, lineno=1155)
         212	LOAD_ATTR(arg=2, lineno=1155)
         222	LOAD_FAST(arg=3, lineno=1155)
         224	PRECALL(arg=1, lineno=1155)
         228	CALL(arg=1, lineno=1155)
         238	LOAD_GLOBAL(arg=1, lineno=1155)
         250	LOAD_ATTR(arg=2, lineno=1155)
         260	LOAD_FAST(arg=4, lineno=1155)
         262	PRECALL(arg=1, lineno=1155)
         266	CALL(arg=1, lineno=1155)
         276	COMPARE_OP(arg=3, lineno=1155)
         282	RETURN_VALUE(arg=None, lineno=1155)
DEBUG 2024-06-11 14:50:53,443 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 14:50:53,444 - stack: []
DEBUG 2024-06-11 14:50:53,444 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 14:50:53,444 - dispatch pc=0, inst=NOP(arg=None, lineno=1141)
DEBUG 2024-06-11 14:50:53,444 - stack []
DEBUG 2024-06-11 14:50:53,444 - dispatch pc=2, inst=RESUME(arg=0, lineno=1141)
DEBUG 2024-06-11 14:50:53,444 - stack []
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1144)
DEBUG 2024-06-11 14:50:53,445 - stack []
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1144)
DEBUG 2024-06-11 14:50:53,445 - stack ['$x4.0']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1144)
DEBUG 2024-06-11 14:50:53,445 - stack ['$x4.0', '$const6.1']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=18, inst=STORE_FAST(arg=3, lineno=1144)
DEBUG 2024-06-11 14:50:53,445 - stack ['$8binary_subscr.2']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=1145)
DEBUG 2024-06-11 14:50:53,445 - stack []
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=22, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
DEBUG 2024-06-11 14:50:53,445 - stack ['$threshold20.3']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=24, inst=LOAD_FAST(arg=3, lineno=1145)
DEBUG 2024-06-11 14:50:53,445 - stack ['$22unary_negative.4']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=26, inst=SWAP(arg=2, lineno=1145)
DEBUG 2024-06-11 14:50:53,445 - stack ['$22unary_negative.4', '$x024.5']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=28, inst=COPY(arg=2, lineno=1145)
DEBUG 2024-06-11 14:50:53,445 - stack ['$x024.5', '$22unary_negative.4']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=30, inst=COMPARE_OP(arg=1, lineno=1145)
DEBUG 2024-06-11 14:50:53,445 - stack ['$x024.5', '$22unary_negative.4', '$x024.5']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=36, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1145)
DEBUG 2024-06-11 14:50:53,445 - stack ['$x024.5', '$30compare_op.6']
DEBUG 2024-06-11 14:50:53,445 - end state. edges=[Edge(pc=38, stack=('$x024.5',), blockstack=(), npush=0), Edge(pc=50, stack=('$x024.5',), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:50:53,445 - pending: deque([State(pc_initial=38 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
DEBUG 2024-06-11 14:50:53,445 - stack: ['$phi38.0']
DEBUG 2024-06-11 14:50:53,445 - state.pc_initial: State(pc_initial=38 nstack_initial=1)
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=38, inst=LOAD_FAST(arg=1, lineno=1145)
DEBUG 2024-06-11 14:50:53,445 - stack ['$phi38.0']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=40, inst=COMPARE_OP(arg=1, lineno=1145)
DEBUG 2024-06-11 14:50:53,445 - stack ['$phi38.0', '$threshold38.1']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=46, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1145)
DEBUG 2024-06-11 14:50:53,445 - stack ['$40compare_op.2']
DEBUG 2024-06-11 14:50:53,445 - end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:50:53,445 - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=48 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
DEBUG 2024-06-11 14:50:53,445 - stack: ['$phi50.0']
DEBUG 2024-06-11 14:50:53,445 - state.pc_initial: State(pc_initial=50 nstack_initial=1)
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=50, inst=POP_TOP(arg=None, lineno=1145)
DEBUG 2024-06-11 14:50:53,445 - stack ['$phi50.0']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=52, inst=JUMP_FORWARD(arg=2, lineno=1145)
DEBUG 2024-06-11 14:50:53,445 - stack []
DEBUG 2024-06-11 14:50:53,445 - end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:50:53,445 - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
DEBUG 2024-06-11 14:50:53,445 - stack: []
DEBUG 2024-06-11 14:50:53,445 - state.pc_initial: State(pc_initial=48 nstack_initial=0)
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=48, inst=JUMP_FORWARD(arg=2, lineno=1145)
DEBUG 2024-06-11 14:50:53,445 - stack []
DEBUG 2024-06-11 14:50:53,445 - end state. edges=[Edge(pc=54, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:50:53,445 - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=54 nstack_initial=0)])
DEBUG 2024-06-11 14:50:53,445 - stack: []
DEBUG 2024-06-11 14:50:53,445 - state.pc_initial: State(pc_initial=58 nstack_initial=0)
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1148)
DEBUG 2024-06-11 14:50:53,445 - stack []
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=60, inst=LOAD_CONST(arg=2, lineno=1148)
DEBUG 2024-06-11 14:50:53,445 - stack ['$x58.0']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=62, inst=BINARY_SUBSCR(arg=None, lineno=1148)
DEBUG 2024-06-11 14:50:53,445 - stack ['$x58.0', '$const60.1']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=72, inst=STORE_FAST(arg=4, lineno=1148)
DEBUG 2024-06-11 14:50:53,445 - stack ['$62binary_subscr.2']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=74, inst=LOAD_FAST(arg=1, lineno=1149)
DEBUG 2024-06-11 14:50:53,445 - stack []
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=1149)
DEBUG 2024-06-11 14:50:53,445 - stack ['$threshold74.3']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=78, inst=LOAD_FAST(arg=4, lineno=1149)
DEBUG 2024-06-11 14:50:53,445 - stack ['$76unary_negative.4']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=80, inst=SWAP(arg=2, lineno=1149)
DEBUG 2024-06-11 14:50:53,445 - stack ['$76unary_negative.4', '$x178.5']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=82, inst=COPY(arg=2, lineno=1149)
DEBUG 2024-06-11 14:50:53,445 - stack ['$x178.5', '$76unary_negative.4']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=84, inst=COMPARE_OP(arg=1, lineno=1149)
DEBUG 2024-06-11 14:50:53,445 - stack ['$x178.5', '$76unary_negative.4', '$x178.5']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=90, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1149)
DEBUG 2024-06-11 14:50:53,445 - stack ['$x178.5', '$84compare_op.6']
DEBUG 2024-06-11 14:50:53,445 - end state. edges=[Edge(pc=92, stack=('$x178.5',), blockstack=(), npush=0), Edge(pc=104, stack=('$x178.5',), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:50:53,445 - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=54 nstack_initial=0), State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1)])
DEBUG 2024-06-11 14:50:53,445 - pending: deque([State(pc_initial=54 nstack_initial=0), State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1)])
DEBUG 2024-06-11 14:50:53,445 - stack: []
DEBUG 2024-06-11 14:50:53,445 - state.pc_initial: State(pc_initial=54 nstack_initial=0)
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=1146)
DEBUG 2024-06-11 14:50:53,445 - stack []
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=56, inst=STORE_FAST(arg=3, lineno=1146)
DEBUG 2024-06-11 14:50:53,445 - stack ['$const54.0']
DEBUG 2024-06-11 14:50:53,445 - end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:50:53,445 - pending: deque([State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1), State(pc_initial=58 nstack_initial=0)])
DEBUG 2024-06-11 14:50:53,445 - stack: ['$phi92.0']
DEBUG 2024-06-11 14:50:53,445 - state.pc_initial: State(pc_initial=92 nstack_initial=1)
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=92, inst=LOAD_FAST(arg=1, lineno=1149)
DEBUG 2024-06-11 14:50:53,445 - stack ['$phi92.0']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=94, inst=COMPARE_OP(arg=1, lineno=1149)
DEBUG 2024-06-11 14:50:53,445 - stack ['$phi92.0', '$threshold92.1']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=100, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1149)
DEBUG 2024-06-11 14:50:53,445 - stack ['$94compare_op.2']
DEBUG 2024-06-11 14:50:53,445 - end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=112, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:50:53,445 - pending: deque([State(pc_initial=104 nstack_initial=1), State(pc_initial=58 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 14:50:53,445 - stack: ['$phi104.0']
DEBUG 2024-06-11 14:50:53,445 - state.pc_initial: State(pc_initial=104 nstack_initial=1)
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=104, inst=POP_TOP(arg=None, lineno=1149)
DEBUG 2024-06-11 14:50:53,445 - stack ['$phi104.0']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=106, inst=JUMP_FORWARD(arg=2, lineno=1149)
DEBUG 2024-06-11 14:50:53,445 - stack []
DEBUG 2024-06-11 14:50:53,445 - end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:50:53,445 - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 14:50:53,445 - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 14:50:53,445 - stack: []
DEBUG 2024-06-11 14:50:53,445 - state.pc_initial: State(pc_initial=102 nstack_initial=0)
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=102, inst=JUMP_FORWARD(arg=2, lineno=1149)
DEBUG 2024-06-11 14:50:53,445 - stack []
DEBUG 2024-06-11 14:50:53,445 - end state. edges=[Edge(pc=108, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:50:53,445 - pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=108 nstack_initial=0)])
DEBUG 2024-06-11 14:50:53,445 - stack: []
DEBUG 2024-06-11 14:50:53,445 - state.pc_initial: State(pc_initial=112 nstack_initial=0)
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=112, inst=LOAD_FAST(arg=2, lineno=1152)
DEBUG 2024-06-11 14:50:53,445 - stack []
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=114, inst=POP_JUMP_FORWARD_IF_FALSE(arg=42, lineno=1152)
DEBUG 2024-06-11 14:50:53,445 - stack ['$zero_pos112.0']
DEBUG 2024-06-11 14:50:53,445 - end state. edges=[Edge(pc=116, stack=(), blockstack=(), npush=0), Edge(pc=200, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:50:53,445 - pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0)])
DEBUG 2024-06-11 14:50:53,445 - pending: deque([State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0)])
DEBUG 2024-06-11 14:50:53,445 - stack: []
DEBUG 2024-06-11 14:50:53,445 - state.pc_initial: State(pc_initial=108 nstack_initial=0)
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=108, inst=LOAD_CONST(arg=1, lineno=1150)
DEBUG 2024-06-11 14:50:53,445 - stack []
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=110, inst=STORE_FAST(arg=4, lineno=1150)
DEBUG 2024-06-11 14:50:53,445 - stack ['$const108.0']
DEBUG 2024-06-11 14:50:53,445 - end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:50:53,445 - pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 14:50:53,445 - stack: []
DEBUG 2024-06-11 14:50:53,445 - state.pc_initial: State(pc_initial=116 nstack_initial=0)
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=116, inst=LOAD_GLOBAL(arg=1, lineno=1153)
DEBUG 2024-06-11 14:50:53,445 - stack []
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=128, inst=LOAD_ATTR(arg=1, lineno=1153)
DEBUG 2024-06-11 14:50:53,445 - stack ['$null$116.1', '$116load_global.0']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=138, inst=LOAD_FAST(arg=3, lineno=1153)
DEBUG 2024-06-11 14:50:53,445 - stack ['$null$116.1', '$128load_attr.2']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=140, inst=PRECALL(arg=1, lineno=1153)
DEBUG 2024-06-11 14:50:53,445 - stack ['$null$116.1', '$128load_attr.2', '$x0138.3']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=144, inst=CALL(arg=1, lineno=1153)
DEBUG 2024-06-11 14:50:53,445 - stack ['$null$116.1', '$128load_attr.2', '$x0138.3']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=154, inst=LOAD_GLOBAL(arg=1, lineno=1153)
DEBUG 2024-06-11 14:50:53,445 - stack ['$144call.4']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=166, inst=LOAD_ATTR(arg=1, lineno=1153)
DEBUG 2024-06-11 14:50:53,445 - stack ['$144call.4', '$null$154.6', '$154load_global.5']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=176, inst=LOAD_FAST(arg=4, lineno=1153)
DEBUG 2024-06-11 14:50:53,445 - stack ['$144call.4', '$null$154.6', '$166load_attr.7']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=178, inst=PRECALL(arg=1, lineno=1153)
DEBUG 2024-06-11 14:50:53,445 - stack ['$144call.4', '$null$154.6', '$166load_attr.7', '$x1176.8']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=182, inst=CALL(arg=1, lineno=1153)
DEBUG 2024-06-11 14:50:53,445 - stack ['$144call.4', '$null$154.6', '$166load_attr.7', '$x1176.8']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=192, inst=COMPARE_OP(arg=3, lineno=1153)
DEBUG 2024-06-11 14:50:53,445 - stack ['$144call.4', '$182call.9']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=198, inst=RETURN_VALUE(arg=None, lineno=1153)
DEBUG 2024-06-11 14:50:53,445 - stack ['$192compare_op.10']
DEBUG 2024-06-11 14:50:53,445 - end state. edges=[]
DEBUG 2024-06-11 14:50:53,445 - pending: deque([State(pc_initial=200 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 14:50:53,445 - stack: []
DEBUG 2024-06-11 14:50:53,445 - state.pc_initial: State(pc_initial=200 nstack_initial=0)
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=200, inst=LOAD_GLOBAL(arg=1, lineno=1155)
DEBUG 2024-06-11 14:50:53,445 - stack []
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=212, inst=LOAD_ATTR(arg=2, lineno=1155)
DEBUG 2024-06-11 14:50:53,445 - stack ['$null$200.1', '$200load_global.0']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=222, inst=LOAD_FAST(arg=3, lineno=1155)
DEBUG 2024-06-11 14:50:53,445 - stack ['$null$200.1', '$212load_attr.2']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=224, inst=PRECALL(arg=1, lineno=1155)
DEBUG 2024-06-11 14:50:53,445 - stack ['$null$200.1', '$212load_attr.2', '$x0222.3']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=228, inst=CALL(arg=1, lineno=1155)
DEBUG 2024-06-11 14:50:53,445 - stack ['$null$200.1', '$212load_attr.2', '$x0222.3']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=238, inst=LOAD_GLOBAL(arg=1, lineno=1155)
DEBUG 2024-06-11 14:50:53,445 - stack ['$228call.4']
DEBUG 2024-06-11 14:50:53,445 - dispatch pc=250, inst=LOAD_ATTR(arg=2, lineno=1155)
DEBUG 2024-06-11 14:50:53,451 - stack ['$228call.4', '$null$238.6', '$238load_global.5']
DEBUG 2024-06-11 14:50:53,451 - dispatch pc=260, inst=LOAD_FAST(arg=4, lineno=1155)
DEBUG 2024-06-11 14:50:53,451 - stack ['$228call.4', '$null$238.6', '$250load_attr.7']
DEBUG 2024-06-11 14:50:53,451 - dispatch pc=262, inst=PRECALL(arg=1, lineno=1155)
DEBUG 2024-06-11 14:50:53,451 - stack ['$228call.4', '$null$238.6', '$250load_attr.7', '$x1260.8']
DEBUG 2024-06-11 14:50:53,451 - dispatch pc=266, inst=CALL(arg=1, lineno=1155)
DEBUG 2024-06-11 14:50:53,451 - stack ['$228call.4', '$null$238.6', '$250load_attr.7', '$x1260.8']
DEBUG 2024-06-11 14:50:53,451 - dispatch pc=276, inst=COMPARE_OP(arg=3, lineno=1155)
DEBUG 2024-06-11 14:50:53,451 - stack ['$228call.4', '$266call.9']
DEBUG 2024-06-11 14:50:53,451 - dispatch pc=282, inst=RETURN_VALUE(arg=None, lineno=1155)
DEBUG 2024-06-11 14:50:53,451 - stack ['$276compare_op.10']
DEBUG 2024-06-11 14:50:53,451 - end state. edges=[]
DEBUG 2024-06-11 14:50:53,451 - pending: deque([State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 14:50:53,451 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 14:50:53,451 - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=38 nstack_initial=1): {'$phi38.0'},
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): set(),
             State(pc_initial=54 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=1): {'$phi92.0'},
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=104 nstack_initial=1): set(),
             State(pc_initial=108 nstack_initial=0): set(),
             State(pc_initial=112 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=200 nstack_initial=0): set()})
DEBUG 2024-06-11 14:50:53,451 - defmap: {'$phi104.0': State(pc_initial=58 nstack_initial=0),
 '$phi38.0': State(pc_initial=0 nstack_initial=0),
 '$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi92.0': State(pc_initial=58 nstack_initial=0)}
DEBUG 2024-06-11 14:50:53,451 - phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))},
             '$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}})
DEBUG 2024-06-11 14:50:53,451 - changing phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))},
             '$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}})
DEBUG 2024-06-11 14:50:53,452 - keep phismap: {'$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
 '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}}
DEBUG 2024-06-11 14:50:53,452 - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi38.0': '$x024.5'},
             State(pc_initial=58 nstack_initial=0): {'$phi92.0': '$x178.5'}})
DEBUG 2024-06-11 14:50:53,452 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 14:50:53,452 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'value': '$8binary_subscr.2'}), (20, {'res': '$threshold20.3'}), (22, {'value': '$threshold20.3', 'res': '$22unary_negative.4'}), (24, {'res': '$x024.5'}), (30, {'lhs': '$22unary_negative.4', 'rhs': '$x024.5', 'res': '$30compare_op.6'}), (32, {}), (34, {}), (36, {'pred': '$30compare_op.6'})), outgoing_phis={'$phi38.0': '$x024.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={38: ('$x024.5',), 50: ('$x024.5',)})
DEBUG 2024-06-11 14:50:53,452 - block_infos State(pc_initial=38 nstack_initial=1):
AdaptBlockInfo(insts=((38, {'res': '$threshold38.1'}), (40, {'lhs': '$phi38.0', 'rhs': '$threshold38.1', 'res': '$40compare_op.2'}), (42, {}), (44, {}), (46, {'pred': '$40compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: (), 58: ()})
DEBUG 2024-06-11 14:50:53,452 - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={54: ()})
DEBUG 2024-06-11 14:50:53,452 - block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((52, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ()})
DEBUG 2024-06-11 14:50:53,452 - block_infos State(pc_initial=54 nstack_initial=0):
AdaptBlockInfo(insts=((54, {'res': '$const54.0'}), (56, {'value': '$const54.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ()})
DEBUG 2024-06-11 14:50:53,452 - block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$x58.0'}), (60, {'res': '$const60.1'}), (62, {'index': '$const60.1', 'target': '$x58.0', 'res': '$62binary_subscr.2'}), (64, {}), (66, {}), (68, {}), (70, {}), (72, {'value': '$62binary_subscr.2'}), (74, {'res': '$threshold74.3'}), (76, {'value': '$threshold74.3', 'res': '$76unary_negative.4'}), (78, {'res': '$x178.5'}), (84, {'lhs': '$76unary_negative.4', 'rhs': '$x178.5', 'res': '$84compare_op.6'}), (86, {}), (88, {}), (90, {'pred': '$84compare_op.6'})), outgoing_phis={'$phi92.0': '$x178.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: ('$x178.5',), 104: ('$x178.5',)})
DEBUG 2024-06-11 14:50:53,452 - block_infos State(pc_initial=92 nstack_initial=1):
AdaptBlockInfo(insts=((92, {'res': '$threshold92.1'}), (94, {'lhs': '$phi92.0', 'rhs': '$threshold92.1', 'res': '$94compare_op.2'}), (96, {}), (98, {}), (100, {'pred': '$94compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 112: ()})
DEBUG 2024-06-11 14:50:53,452 - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={108: ()})
DEBUG 2024-06-11 14:50:53,452 - block_infos State(pc_initial=104 nstack_initial=1):
AdaptBlockInfo(insts=((106, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ()})
DEBUG 2024-06-11 14:50:53,452 - block_infos State(pc_initial=108 nstack_initial=0):
AdaptBlockInfo(insts=((108, {'res': '$const108.0'}), (110, {'value': '$const108.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ()})
DEBUG 2024-06-11 14:50:53,452 - block_infos State(pc_initial=112 nstack_initial=0):
AdaptBlockInfo(insts=((112, {'res': '$zero_pos112.0'}), (114, {'pred': '$zero_pos112.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={116: (), 200: ()})
DEBUG 2024-06-11 14:50:53,452 - block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'idx': 0, 'res': '$116load_global.0'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {}), (128, {'item': '$116load_global.0', 'res': '$128load_attr.2'}), (130, {}), (132, {}), (134, {}), (136, {}), (138, {'res': '$x0138.3'}), (140, {}), (142, {}), (144, {'func': '$128load_attr.2', 'args': ['$x0138.3'], 'kw_names': None, 'res': '$144call.4'}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'idx': 0, 'res': '$154load_global.5'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {}), (166, {'item': '$154load_global.5', 'res': '$166load_attr.7'}), (168, {}), (170, {}), (172, {}), (174, {}), (176, {'res': '$x1176.8'}), (178, {}), (180, {}), (182, {'func': '$166load_attr.7', 'args': ['$x1176.8'], 'kw_names': None, 'res': '$182call.9'}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'lhs': '$144call.4', 'rhs': '$182call.9', 'res': '$192compare_op.10'}), (194, {}), (196, {}), (198, {'retval': '$192compare_op.10', 'castval': '$198return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 14:50:53,452 - block_infos State(pc_initial=200 nstack_initial=0):
AdaptBlockInfo(insts=((200, {'idx': 0, 'res': '$200load_global.0'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {'item': '$200load_global.0', 'res': '$212load_attr.2'}), (214, {}), (216, {}), (218, {}), (220, {}), (222, {'res': '$x0222.3'}), (224, {}), (226, {}), (228, {'func': '$212load_attr.2', 'args': ['$x0222.3'], 'kw_names': None, 'res': '$228call.4'}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'idx': 0, 'res': '$238load_global.5'}), (240, {}), (242, {}), (244, {}), (246, {}), (248, {}), (250, {'item': '$238load_global.5', 'res': '$250load_attr.7'}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {'res': '$x1260.8'}), (262, {}), (264, {}), (266, {'func': '$250load_attr.7', 'args': ['$x1260.8'], 'kw_names': None, 'res': '$266call.9'}), (268, {}), (270, {}), (272, {}), (274, {}), (276, {'lhs': '$228call.4', 'rhs': '$266call.9', 'res': '$276compare_op.10'}), (278, {}), (280, {}), (282, {'retval': '$276compare_op.10', 'castval': '$282return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 14:50:53,455 - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const6.1 = const(int, 0)                ['$const6.1']
    x0 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$const6.1', 'x', 'x0']
    $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$22unary_negative.4', 'threshold']
    $30compare_op.6 = $22unary_negative.4 <= x0 ['$22unary_negative.4', '$30compare_op.6', 'x0']
    bool36 = global(bool: <class 'bool'>)    ['bool36']
    $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.6', '$36pred', 'bool36']
    $phi38.0 = x0                            ['$phi38.0', 'x0']
    branch $36pred, 38, 50                   ['$36pred']
label 38:
    $40compare_op.2 = $phi38.0 <= threshold  ['$40compare_op.2', '$phi38.0', 'threshold']
    bool46 = global(bool: <class 'bool'>)    ['bool46']
    $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.2', '$46pred', 'bool46']
    branch $46pred, 48, 58                   ['$46pred']
label 48:
    jump 54                                  []
label 50:
    jump 58                                  []
label 54:
    x0 = const(int, 0)                       ['x0']
    jump 58                                  []
label 58:
    $const60.1 = const(int, -1)              ['$const60.1']
    x1 = getitem(value=x, index=$const60.1, fn=<built-in function getitem>) ['$const60.1', 'x', 'x1']
    $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$76unary_negative.4', 'threshold']
    $84compare_op.6 = $76unary_negative.4 <= x1 ['$76unary_negative.4', '$84compare_op.6', 'x1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None) ['$84compare_op.6', '$90pred', 'bool90']
    $phi92.0 = x1                            ['$phi92.0', 'x1']
    branch $90pred, 92, 104                  ['$90pred']
label 92:
    $94compare_op.2 = $phi92.0 <= threshold  ['$94compare_op.2', '$phi92.0', 'threshold']
    bool100 = global(bool: <class 'bool'>)   ['bool100']
    $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$94compare_op.2', 'bool100']
    branch $100pred, 102, 112                ['$100pred']
label 102:
    jump 108                                 []
label 104:
    jump 112                                 []
label 108:
    x1 = const(int, 0)                       ['x1']
    jump 112                                 []
label 112:
    bool114 = global(bool: <class 'bool'>)   ['bool114']
    $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$114pred', 'bool114', 'zero_pos']
    branch $114pred, 116, 200                ['$114pred']
label 116:
    $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$116load_global.0']
    $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit) ['$116load_global.0', '$128load_attr.2']
    $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$128load_attr.2', '$144call.4', 'x0']
    $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$154load_global.5']
    $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit) ['$154load_global.5', '$166load_attr.7']
    $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_attr.7', '$182call.9', 'x1']
    $192compare_op.10 = $144call.4 != $182call.9 ['$144call.4', '$182call.9', '$192compare_op.10']
    $198return_value.11 = cast(value=$192compare_op.10) ['$192compare_op.10', '$198return_value.11']
    return $198return_value.11               ['$198return_value.11']
label 200:
    $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$200load_global.0']
    $212load_attr.2 = getattr(value=$200load_global.0, attr=sign) ['$200load_global.0', '$212load_attr.2']
    $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$212load_attr.2', '$228call.4', 'x0']
    $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$238load_global.5']
    $250load_attr.7 = getattr(value=$238load_global.5, attr=sign) ['$238load_global.5', '$250load_attr.7']
    $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None) ['$250load_attr.7', '$266call.9', 'x1']
    $276compare_op.10 = $228call.4 != $266call.9 ['$228call.4', '$266call.9', '$276compare_op.10']
    $282return_value.11 = cast(value=$276compare_op.10) ['$276compare_op.10', '$282return_value.11']
    return $282return_value.11               ['$282return_value.11']

DEBUG 2024-06-11 14:50:53,810 - bytecode dump:
>          0	NOP(arg=None, lineno=1039)
           2	RESUME(arg=0, lineno=1039)
           4	LOAD_FAST(arg=0, lineno=1042)
           6	LOAD_CONST(arg=1, lineno=1042)
           8	BINARY_SUBSCR(arg=None, lineno=1042)
          18	LOAD_FAST(arg=0, lineno=1042)
          20	LOAD_CONST(arg=2, lineno=1042)
          22	BINARY_SUBSCR(arg=None, lineno=1042)
          32	COMPARE_OP(arg=4, lineno=1042)
          38	LOAD_FAST(arg=0, lineno=1042)
          40	LOAD_CONST(arg=1, lineno=1042)
          42	BINARY_SUBSCR(arg=None, lineno=1042)
          52	LOAD_FAST(arg=0, lineno=1042)
          54	LOAD_CONST(arg=3, lineno=1042)
          56	BINARY_SUBSCR(arg=None, lineno=1042)
          66	COMPARE_OP(arg=5, lineno=1042)
          72	BINARY_OP(arg=1, lineno=1042)
          76	RETURN_VALUE(arg=None, lineno=1042)
DEBUG 2024-06-11 14:50:53,810 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 14:50:53,810 - stack: []
DEBUG 2024-06-11 14:50:53,810 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 14:50:53,810 - dispatch pc=0, inst=NOP(arg=None, lineno=1039)
DEBUG 2024-06-11 14:50:53,810 - stack []
DEBUG 2024-06-11 14:50:53,814 - dispatch pc=2, inst=RESUME(arg=0, lineno=1039)
DEBUG 2024-06-11 14:50:53,814 - stack []
DEBUG 2024-06-11 14:50:53,814 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1042)
DEBUG 2024-06-11 14:50:53,814 - stack []
DEBUG 2024-06-11 14:50:53,814 - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1042)
DEBUG 2024-06-11 14:50:53,814 - stack ['$x4.0']
DEBUG 2024-06-11 14:50:53,814 - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1042)
DEBUG 2024-06-11 14:50:53,814 - stack ['$x4.0', '$const6.1']
DEBUG 2024-06-11 14:50:53,815 - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=1042)
DEBUG 2024-06-11 14:50:53,815 - stack ['$8binary_subscr.2']
DEBUG 2024-06-11 14:50:53,815 - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=1042)
DEBUG 2024-06-11 14:50:53,815 - stack ['$8binary_subscr.2', '$x18.3']
DEBUG 2024-06-11 14:50:53,815 - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=1042)
DEBUG 2024-06-11 14:50:53,815 - stack ['$8binary_subscr.2', '$x18.3', '$const20.4']
DEBUG 2024-06-11 14:50:53,815 - dispatch pc=32, inst=COMPARE_OP(arg=4, lineno=1042)
DEBUG 2024-06-11 14:50:53,815 - stack ['$8binary_subscr.2', '$22binary_subscr.5']
DEBUG 2024-06-11 14:50:53,815 - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=1042)
DEBUG 2024-06-11 14:50:53,815 - stack ['$32compare_op.6']
DEBUG 2024-06-11 14:50:53,815 - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1042)
DEBUG 2024-06-11 14:50:53,815 - stack ['$32compare_op.6', '$x38.7']
DEBUG 2024-06-11 14:50:53,815 - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=1042)
DEBUG 2024-06-11 14:50:53,815 - stack ['$32compare_op.6', '$x38.7', '$const40.8']
DEBUG 2024-06-11 14:50:53,815 - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1042)
DEBUG 2024-06-11 14:50:53,815 - stack ['$32compare_op.6', '$42binary_subscr.9']
DEBUG 2024-06-11 14:50:53,815 - dispatch pc=54, inst=LOAD_CONST(arg=3, lineno=1042)
DEBUG 2024-06-11 14:50:53,815 - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10']
DEBUG 2024-06-11 14:50:53,815 - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1042)
DEBUG 2024-06-11 14:50:53,815 - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10', '$const54.11']
DEBUG 2024-06-11 14:50:53,815 - dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=1042)
DEBUG 2024-06-11 14:50:53,815 - stack ['$32compare_op.6', '$42binary_subscr.9', '$56binary_subscr.12']
DEBUG 2024-06-11 14:50:53,815 - dispatch pc=72, inst=BINARY_OP(arg=1, lineno=1042)
DEBUG 2024-06-11 14:50:53,815 - stack ['$32compare_op.6', '$66compare_op.13']
DEBUG 2024-06-11 14:50:53,815 - dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=1042)
DEBUG 2024-06-11 14:50:53,816 - stack ['$binop_and_72.14']
DEBUG 2024-06-11 14:50:53,816 - end state. edges=[]
DEBUG 2024-06-11 14:50:53,816 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 14:50:53,816 - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG 2024-06-11 14:50:53,816 - defmap: {}
DEBUG 2024-06-11 14:50:53,816 - phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 14:50:53,816 - changing phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 14:50:53,816 - keep phismap: {}
DEBUG 2024-06-11 14:50:53,816 - new_out: defaultdict(<class 'dict'>, {})
DEBUG 2024-06-11 14:50:53,816 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 14:50:53,816 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4'}), (22, {'index': '$const20.4', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$32compare_op.6'}), (34, {}), (36, {}), (38, {'res': '$x38.7'}), (40, {'res': '$const40.8'}), (42, {'index': '$const40.8', 'target': '$x38.7', 'res': '$42binary_subscr.9'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$x52.10'}), (54, {'res': '$const54.11'}), (56, {'index': '$const54.11', 'target': '$x52.10', 'res': '$56binary_subscr.12'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'lhs': '$42binary_subscr.9', 'rhs': '$56binary_subscr.12', 'res': '$66compare_op.13'}), (68, {}), (70, {}), (72, {'op': '&', 'lhs': '$32compare_op.6', 'rhs': '$66compare_op.13', 'res': '$binop_and_72.14'}), (74, {}), (76, {'retval': '$binop_and_72.14', 'castval': '$76return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 14:50:53,816 - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $const20.4 = const(int, -1)              ['$const20.4']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4', 'x']
    $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5 ['$22binary_subscr.5', '$32compare_op.6', '$8binary_subscr.2']
    $const40.8 = const(int, 0)               ['$const40.8']
    $42binary_subscr.9 = getitem(value=x, index=$const40.8, fn=<built-in function getitem>) ['$42binary_subscr.9', '$const40.8', 'x']
    $const54.11 = const(int, 1)              ['$const54.11']
    $56binary_subscr.12 = getitem(value=x, index=$const54.11, fn=<built-in function getitem>) ['$56binary_subscr.12', '$const54.11', 'x']
    $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12 ['$42binary_subscr.9', '$56binary_subscr.12', '$66compare_op.13']
    $binop_and_72.14 = $32compare_op.6 & $66compare_op.13 ['$32compare_op.6', '$66compare_op.13', '$binop_and_72.14']
    $76return_value.15 = cast(value=$binop_and_72.14) ['$76return_value.15', '$binop_and_72.14']
    return $76return_value.15                ['$76return_value.15']

DEBUG 2024-06-11 14:50:53,817 - bytecode dump:
>          0	NOP(arg=None, lineno=1045)
           2	RESUME(arg=0, lineno=1045)
           4	LOAD_FAST(arg=0, lineno=1048)
           6	LOAD_CONST(arg=1, lineno=1048)
           8	BINARY_SUBSCR(arg=None, lineno=1048)
          18	LOAD_FAST(arg=0, lineno=1048)
          20	LOAD_CONST(arg=2, lineno=1048)
          22	BINARY_SUBSCR(arg=None, lineno=1048)
          32	COMPARE_OP(arg=0, lineno=1048)
          38	LOAD_FAST(arg=0, lineno=1048)
          40	LOAD_CONST(arg=1, lineno=1048)
          42	BINARY_SUBSCR(arg=None, lineno=1048)
          52	LOAD_FAST(arg=0, lineno=1048)
          54	LOAD_CONST(arg=3, lineno=1048)
          56	BINARY_SUBSCR(arg=None, lineno=1048)
          66	COMPARE_OP(arg=1, lineno=1048)
          72	BINARY_OP(arg=1, lineno=1048)
          76	RETURN_VALUE(arg=None, lineno=1048)
DEBUG 2024-06-11 14:50:53,817 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 14:50:53,817 - stack: []
DEBUG 2024-06-11 14:50:53,817 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 14:50:53,817 - dispatch pc=0, inst=NOP(arg=None, lineno=1045)
DEBUG 2024-06-11 14:50:53,817 - stack []
DEBUG 2024-06-11 14:50:53,817 - dispatch pc=2, inst=RESUME(arg=0, lineno=1045)
DEBUG 2024-06-11 14:50:53,817 - stack []
DEBUG 2024-06-11 14:50:53,817 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1048)
DEBUG 2024-06-11 14:50:53,817 - stack []
DEBUG 2024-06-11 14:50:53,817 - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1048)
DEBUG 2024-06-11 14:50:53,817 - stack ['$x4.0']
DEBUG 2024-06-11 14:50:53,817 - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1048)
DEBUG 2024-06-11 14:50:53,817 - stack ['$x4.0', '$const6.1']
DEBUG 2024-06-11 14:50:53,817 - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=1048)
DEBUG 2024-06-11 14:50:53,818 - stack ['$8binary_subscr.2']
DEBUG 2024-06-11 14:50:53,818 - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=1048)
DEBUG 2024-06-11 14:50:53,818 - stack ['$8binary_subscr.2', '$x18.3']
DEBUG 2024-06-11 14:50:53,818 - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=1048)
DEBUG 2024-06-11 14:50:53,818 - stack ['$8binary_subscr.2', '$x18.3', '$const20.4']
DEBUG 2024-06-11 14:50:53,818 - dispatch pc=32, inst=COMPARE_OP(arg=0, lineno=1048)
DEBUG 2024-06-11 14:50:53,818 - stack ['$8binary_subscr.2', '$22binary_subscr.5']
DEBUG 2024-06-11 14:50:53,818 - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=1048)
DEBUG 2024-06-11 14:50:53,818 - stack ['$32compare_op.6']
DEBUG 2024-06-11 14:50:53,818 - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1048)
DEBUG 2024-06-11 14:50:53,818 - stack ['$32compare_op.6', '$x38.7']
DEBUG 2024-06-11 14:50:53,818 - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=1048)
DEBUG 2024-06-11 14:50:53,818 - stack ['$32compare_op.6', '$x38.7', '$const40.8']
DEBUG 2024-06-11 14:50:53,818 - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1048)
DEBUG 2024-06-11 14:50:53,818 - stack ['$32compare_op.6', '$42binary_subscr.9']
DEBUG 2024-06-11 14:50:53,818 - dispatch pc=54, inst=LOAD_CONST(arg=3, lineno=1048)
DEBUG 2024-06-11 14:50:53,818 - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10']
DEBUG 2024-06-11 14:50:53,818 - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1048)
DEBUG 2024-06-11 14:50:53,818 - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10', '$const54.11']
DEBUG 2024-06-11 14:50:53,818 - dispatch pc=66, inst=COMPARE_OP(arg=1, lineno=1048)
DEBUG 2024-06-11 14:50:53,818 - stack ['$32compare_op.6', '$42binary_subscr.9', '$56binary_subscr.12']
DEBUG 2024-06-11 14:50:53,818 - dispatch pc=72, inst=BINARY_OP(arg=1, lineno=1048)
DEBUG 2024-06-11 14:50:53,819 - stack ['$32compare_op.6', '$66compare_op.13']
DEBUG 2024-06-11 14:50:53,819 - dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=1048)
DEBUG 2024-06-11 14:50:53,819 - stack ['$binop_and_72.14']
DEBUG 2024-06-11 14:50:53,819 - end state. edges=[]
DEBUG 2024-06-11 14:50:53,819 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 14:50:53,819 - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG 2024-06-11 14:50:53,819 - defmap: {}
DEBUG 2024-06-11 14:50:53,819 - phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 14:50:53,819 - changing phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 14:50:53,819 - keep phismap: {}
DEBUG 2024-06-11 14:50:53,819 - new_out: defaultdict(<class 'dict'>, {})
DEBUG 2024-06-11 14:50:53,819 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 14:50:53,819 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4'}), (22, {'index': '$const20.4', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$32compare_op.6'}), (34, {}), (36, {}), (38, {'res': '$x38.7'}), (40, {'res': '$const40.8'}), (42, {'index': '$const40.8', 'target': '$x38.7', 'res': '$42binary_subscr.9'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$x52.10'}), (54, {'res': '$const54.11'}), (56, {'index': '$const54.11', 'target': '$x52.10', 'res': '$56binary_subscr.12'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'lhs': '$42binary_subscr.9', 'rhs': '$56binary_subscr.12', 'res': '$66compare_op.13'}), (68, {}), (70, {}), (72, {'op': '&', 'lhs': '$32compare_op.6', 'rhs': '$66compare_op.13', 'res': '$binop_and_72.14'}), (74, {}), (76, {'retval': '$binop_and_72.14', 'castval': '$76return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 14:50:53,820 - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $const20.4 = const(int, -1)              ['$const20.4']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4', 'x']
    $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5 ['$22binary_subscr.5', '$32compare_op.6', '$8binary_subscr.2']
    $const40.8 = const(int, 0)               ['$const40.8']
    $42binary_subscr.9 = getitem(value=x, index=$const40.8, fn=<built-in function getitem>) ['$42binary_subscr.9', '$const40.8', 'x']
    $const54.11 = const(int, 1)              ['$const54.11']
    $56binary_subscr.12 = getitem(value=x, index=$const54.11, fn=<built-in function getitem>) ['$56binary_subscr.12', '$const54.11', 'x']
    $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12 ['$42binary_subscr.9', '$56binary_subscr.12', '$66compare_op.13']
    $binop_and_72.14 = $32compare_op.6 & $66compare_op.13 ['$32compare_op.6', '$66compare_op.13', '$binop_and_72.14']
    $76return_value.15 = cast(value=$binop_and_72.14) ['$76return_value.15', '$binop_and_72.14']
    return $76return_value.15                ['$76return_value.15']

ERROR 2024-06-11 14:50:54,226 - Error extracting features from data\ravdess\Actor_02\03-01-02-01-01-01-02.wav: module 'resampy' has no attribute 'resample'
ERROR 2024-06-11 14:50:54,226 - Error preparing data: module 'resampy' has no attribute 'resample'
DEBUG 2024-06-11 14:50:54,237 - bytecode dump:
>          0	NOP(arg=None, lineno=81)
           2	RESUME(arg=0, lineno=81)
           4	LOAD_GLOBAL(arg=1, lineno=86)
          16	LOAD_FAST(arg=0, lineno=86)
          18	LOAD_FAST(arg=1, lineno=86)
          20	LOAD_FAST(arg=2, lineno=86)
          22	LOAD_FAST(arg=3, lineno=86)
          24	LOAD_FAST(arg=4, lineno=86)
          26	LOAD_FAST(arg=5, lineno=86)
          28	LOAD_FAST(arg=6, lineno=86)
          30	PRECALL(arg=7, lineno=86)
          34	CALL(arg=7, lineno=86)
          44	POP_TOP(arg=None, lineno=86)
          46	LOAD_CONST(arg=0, lineno=86)
          48	RETURN_VALUE(arg=None, lineno=86)
DEBUG 2024-06-11 14:50:54,237 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 14:50:54,237 - stack: []
DEBUG 2024-06-11 14:50:54,237 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 14:50:54,237 - dispatch pc=0, inst=NOP(arg=None, lineno=81)
DEBUG 2024-06-11 14:50:54,237 - stack []
DEBUG 2024-06-11 14:50:54,238 - dispatch pc=2, inst=RESUME(arg=0, lineno=81)
DEBUG 2024-06-11 14:50:54,238 - stack []
DEBUG 2024-06-11 14:50:54,238 - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=86)
DEBUG 2024-06-11 14:50:54,238 - stack []
DEBUG 2024-06-11 14:50:54,238 - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=86)
DEBUG 2024-06-11 14:50:54,238 - stack ['$null$4.1', '$4load_global.0']
DEBUG 2024-06-11 14:50:54,238 - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=86)
DEBUG 2024-06-11 14:50:54,238 - stack ['$null$4.1', '$4load_global.0', '$x16.2']
DEBUG 2024-06-11 14:50:54,238 - dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=86)
DEBUG 2024-06-11 14:50:54,238 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3']
DEBUG 2024-06-11 14:50:54,238 - dispatch pc=22, inst=LOAD_FAST(arg=3, lineno=86)
DEBUG 2024-06-11 14:50:54,238 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4']
DEBUG 2024-06-11 14:50:54,238 - dispatch pc=24, inst=LOAD_FAST(arg=4, lineno=86)
DEBUG 2024-06-11 14:50:54,238 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5']
DEBUG 2024-06-11 14:50:54,238 - dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=86)
DEBUG 2024-06-11 14:50:54,240 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6']
DEBUG 2024-06-11 14:50:54,240 - dispatch pc=28, inst=LOAD_FAST(arg=6, lineno=86)
DEBUG 2024-06-11 14:50:54,240 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7']
DEBUG 2024-06-11 14:50:54,240 - dispatch pc=30, inst=PRECALL(arg=7, lineno=86)
DEBUG 2024-06-11 14:50:54,240 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
DEBUG 2024-06-11 14:50:54,240 - dispatch pc=34, inst=CALL(arg=7, lineno=86)
DEBUG 2024-06-11 14:50:54,240 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
DEBUG 2024-06-11 14:50:54,240 - dispatch pc=44, inst=POP_TOP(arg=None, lineno=86)
DEBUG 2024-06-11 14:50:54,240 - stack ['$34call.9']
DEBUG 2024-06-11 14:50:54,240 - dispatch pc=46, inst=LOAD_CONST(arg=0, lineno=86)
DEBUG 2024-06-11 14:50:54,240 - stack []
DEBUG 2024-06-11 14:50:54,241 - dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=86)
DEBUG 2024-06-11 14:50:54,241 - stack ['$const46.10']
DEBUG 2024-06-11 14:50:54,241 - end state. edges=[]
DEBUG 2024-06-11 14:50:54,241 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 14:50:54,241 - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG 2024-06-11 14:50:54,241 - defmap: {}
DEBUG 2024-06-11 14:50:54,241 - phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 14:50:54,241 - changing phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 14:50:54,241 - keep phismap: {}
DEBUG 2024-06-11 14:50:54,242 - new_out: defaultdict(<class 'dict'>, {})
DEBUG 2024-06-11 14:50:54,242 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 14:50:54,381 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {'res': '$t_out18.3'}), (20, {'res': '$interp_win20.4'}), (22, {'res': '$interp_delta22.5'}), (24, {'res': '$num_table24.6'}), (26, {'res': '$scale26.7'}), (28, {'res': '$y28.8'}), (30, {}), (32, {}), (34, {'func': '$4load_global.0', 'args': ['$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8'], 'kw_names': None, 'res': '$34call.9'}), (36, {}), (38, {}), (40, {}), (42, {}), (46, {'res': '$const46.10'}), (48, {'retval': '$const46.10', 'castval': '$48return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 14:50:54,382 - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x000002C65422C0E0>)) ['$4load_global.0']
    $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None) ['$34call.9', '$4load_global.0', 'interp_delta', 'interp_win', 'num_table', 'scale', 't_out', 'x', 'y']
    $const46.10 = const(NoneType, None)      ['$const46.10']
    $48return_value.11 = cast(value=$const46.10) ['$48return_value.11', '$const46.10']
    return $48return_value.11                ['$48return_value.11']

DEBUG 2024-06-11 14:50:54,388 - ==== SSA block analysis pass on 0
DEBUG 2024-06-11 14:50:54,388 - Running <numba.core.ssa._GatherDefsHandler object at 0x000002C65428C8D0>
DEBUG 2024-06-11 14:50:54,388 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:50:54,388 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:50:54,388 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:50:54,389 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:50:54,389 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:50:54,389 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:50:54,389 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:50:54,389 - on stmt: $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x000002C65422C0E0>))
DEBUG 2024-06-11 14:50:54,389 - on stmt: $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,389 - on stmt: $const46.10 = const(NoneType, None)
DEBUG 2024-06-11 14:50:54,389 - on stmt: $48return_value.11 = cast(value=$const46.10)
DEBUG 2024-06-11 14:50:54,389 - on stmt: return $48return_value.11
DEBUG 2024-06-11 14:50:54,390 - defs defaultdict(<class 'list'>,
            {'$34call.9': [(<numba.core.ir.Assign object at 0x000002C65428B310>,
                            0)],
             '$48return_value.11': [(<numba.core.ir.Assign object at 0x000002C65428B390>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000002C65423C110>,
                                  0)],
             '$const46.10': [(<numba.core.ir.Assign object at 0x000002C65428B7D0>,
                              0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x000002C65423D410>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x000002C65423CF10>,
                             0)],
             'num_table': [(<numba.core.ir.Assign object at 0x000002C65423D4D0>,
                            0)],
             'scale': [(<numba.core.ir.Assign object at 0x000002C65423C4D0>,
                        0)],
             't_out': [(<numba.core.ir.Assign object at 0x000002C65423C910>,
                        0)],
             'x': [(<numba.core.ir.Assign object at 0x000002C65423D6D0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x000002C65423C090>, 0)]})
DEBUG 2024-06-11 14:50:54,390 - SSA violators <numba.core.utils.OrderedSet object at 0x000002C6526A5D50>
DEBUG 2024-06-11 14:50:54,395 - bytecode dump:
>          0	NOP(arg=None, lineno=7)
           2	RESUME(arg=0, lineno=7)
           4	LOAD_GLOBAL(arg=1, lineno=9)
          16	LOAD_FAST(arg=5, lineno=9)
          18	LOAD_FAST(arg=4, lineno=9)
          20	BINARY_OP(arg=5, lineno=9)
          24	PRECALL(arg=1, lineno=9)
          28	CALL(arg=1, lineno=9)
          38	STORE_FAST(arg=7, lineno=9)
          40	LOAD_CONST(arg=1, lineno=10)
          42	STORE_FAST(arg=8, lineno=10)
          44	LOAD_CONST(arg=2, lineno=12)
          46	STORE_FAST(arg=9, lineno=12)
          48	LOAD_CONST(arg=1, lineno=13)
          50	STORE_FAST(arg=10, lineno=13)
          52	LOAD_CONST(arg=1, lineno=14)
          54	STORE_FAST(arg=11, lineno=14)
          56	LOAD_CONST(arg=2, lineno=15)
          58	STORE_FAST(arg=12, lineno=15)
          60	LOAD_CONST(arg=1, lineno=16)
          62	STORE_FAST(arg=13, lineno=16)
          64	LOAD_CONST(arg=1, lineno=17)
          66	STORE_FAST(arg=14, lineno=17)
          68	LOAD_FAST(arg=2, lineno=19)
          70	LOAD_ATTR(arg=1, lineno=19)
          80	LOAD_CONST(arg=2, lineno=19)
          82	BINARY_SUBSCR(arg=None, lineno=19)
          92	STORE_FAST(arg=15, lineno=19)
          94	LOAD_FAST(arg=0, lineno=20)
          96	LOAD_ATTR(arg=1, lineno=20)
         106	LOAD_CONST(arg=2, lineno=20)
         108	BINARY_SUBSCR(arg=None, lineno=20)
         118	STORE_FAST(arg=16, lineno=20)
         120	LOAD_FAST(arg=1, lineno=21)
         122	LOAD_ATTR(arg=1, lineno=21)
         132	LOAD_CONST(arg=2, lineno=21)
         134	BINARY_SUBSCR(arg=None, lineno=21)
         144	STORE_FAST(arg=17, lineno=21)
         146	LOAD_GLOBAL(arg=5, lineno=23)
         158	LOAD_FAST(arg=17, lineno=23)
         160	PRECALL(arg=1, lineno=23)
         164	CALL(arg=1, lineno=23)
         174	GET_ITER(arg=None, lineno=23)
>        176	NOP(arg=1, lineno=23)
         178	FOR_ITER(arg=301, lineno=23)
         180	STORE_FAST(arg=18, lineno=23)
         182	LOAD_FAST(arg=1, lineno=24)
         184	LOAD_FAST(arg=18, lineno=24)
         186	BINARY_SUBSCR(arg=None, lineno=24)
         196	STORE_FAST(arg=8, lineno=24)
         198	LOAD_GLOBAL(arg=1, lineno=27)
         210	LOAD_FAST(arg=8, lineno=27)
         212	PRECALL(arg=1, lineno=27)
         216	CALL(arg=1, lineno=27)
         226	STORE_FAST(arg=9, lineno=27)
         228	LOAD_FAST(arg=5, lineno=30)
         230	LOAD_FAST(arg=8, lineno=30)
         232	LOAD_FAST(arg=9, lineno=30)
         234	BINARY_OP(arg=10, lineno=30)
         238	BINARY_OP(arg=5, lineno=30)
         242	STORE_FAST(arg=10, lineno=30)
         244	LOAD_FAST(arg=10, lineno=33)
         246	LOAD_FAST(arg=4, lineno=33)
         248	BINARY_OP(arg=5, lineno=33)
         252	STORE_FAST(arg=11, lineno=33)
         254	LOAD_GLOBAL(arg=1, lineno=34)
         266	LOAD_FAST(arg=11, lineno=34)
         268	PRECALL(arg=1, lineno=34)
         272	CALL(arg=1, lineno=34)
         282	STORE_FAST(arg=12, lineno=34)
         284	LOAD_FAST(arg=11, lineno=37)
         286	LOAD_FAST(arg=12, lineno=37)
         288	BINARY_OP(arg=10, lineno=37)
         292	STORE_FAST(arg=13, lineno=37)
         294	LOAD_GLOBAL(arg=7, lineno=40)
         306	LOAD_FAST(arg=9, lineno=40)
         308	LOAD_CONST(arg=3, lineno=40)
         310	BINARY_OP(arg=0, lineno=40)
         314	LOAD_FAST(arg=15, lineno=40)
         316	LOAD_FAST(arg=12, lineno=40)
         318	BINARY_OP(arg=10, lineno=40)
         322	LOAD_FAST(arg=7, lineno=40)
         324	BINARY_OP(arg=2, lineno=40)
         328	PRECALL(arg=2, lineno=40)
         332	CALL(arg=2, lineno=40)
         342	STORE_FAST(arg=19, lineno=40)
         344	LOAD_GLOBAL(arg=9, lineno=41)
         356	LOAD_FAST(arg=19, lineno=41)
         358	PRECALL(arg=1, lineno=41)
         362	CALL(arg=1, lineno=41)
         372	GET_ITER(arg=None, lineno=41)
>        374	FOR_ITER(arg=62, lineno=41)
         376	STORE_FAST(arg=20, lineno=41)
         378	LOAD_FAST(arg=2, lineno=44)
         380	LOAD_FAST(arg=12, lineno=44)
         382	LOAD_FAST(arg=20, lineno=44)
         384	LOAD_FAST(arg=7, lineno=44)
         386	BINARY_OP(arg=5, lineno=44)
         390	BINARY_OP(arg=0, lineno=44)
         394	BINARY_SUBSCR(arg=None, lineno=44)
         404	LOAD_FAST(arg=13, lineno=45)
         406	LOAD_FAST(arg=3, lineno=45)
         408	LOAD_FAST(arg=12, lineno=45)
         410	LOAD_FAST(arg=20, lineno=45)
         412	LOAD_FAST(arg=7, lineno=45)
         414	BINARY_OP(arg=5, lineno=45)
         418	BINARY_OP(arg=0, lineno=45)
         422	BINARY_SUBSCR(arg=None, lineno=45)
         432	BINARY_OP(arg=5, lineno=45)
         436	BINARY_OP(arg=0, lineno=44)
         440	STORE_FAST(arg=14, lineno=43)
         442	LOAD_FAST(arg=6, lineno=47)
         444	LOAD_FAST(arg=18, lineno=47)
         446	COPY(arg=2, lineno=47)
         448	COPY(arg=2, lineno=47)
         450	BINARY_SUBSCR(arg=None, lineno=47)
         460	LOAD_FAST(arg=14, lineno=47)
         462	LOAD_FAST(arg=0, lineno=47)
         464	LOAD_FAST(arg=9, lineno=47)
         466	LOAD_FAST(arg=20, lineno=47)
         468	BINARY_OP(arg=10, lineno=47)
         472	BINARY_SUBSCR(arg=None, lineno=47)
         482	BINARY_OP(arg=5, lineno=47)
         486	BINARY_OP(arg=13, lineno=47)
         490	SWAP(arg=3, lineno=47)
         492	SWAP(arg=2, lineno=47)
         494	STORE_SUBSCR(arg=None, lineno=47)
         498	JUMP_BACKWARD(arg=63, lineno=47)
>        500	LOAD_FAST(arg=5, lineno=50)
         502	LOAD_FAST(arg=10, lineno=50)
         504	BINARY_OP(arg=10, lineno=50)
         508	STORE_FAST(arg=10, lineno=50)
         510	LOAD_FAST(arg=10, lineno=53)
         512	LOAD_FAST(arg=4, lineno=53)
         514	BINARY_OP(arg=5, lineno=53)
         518	STORE_FAST(arg=11, lineno=53)
         520	LOAD_GLOBAL(arg=1, lineno=54)
         532	LOAD_FAST(arg=11, lineno=54)
         534	PRECALL(arg=1, lineno=54)
         538	CALL(arg=1, lineno=54)
         548	STORE_FAST(arg=12, lineno=54)
         550	LOAD_FAST(arg=11, lineno=57)
         552	LOAD_FAST(arg=12, lineno=57)
         554	BINARY_OP(arg=10, lineno=57)
         558	STORE_FAST(arg=13, lineno=57)
         560	LOAD_GLOBAL(arg=7, lineno=60)
         572	LOAD_FAST(arg=16, lineno=60)
         574	LOAD_FAST(arg=9, lineno=60)
         576	BINARY_OP(arg=10, lineno=60)
         580	LOAD_CONST(arg=3, lineno=60)
         582	BINARY_OP(arg=10, lineno=60)
         586	LOAD_FAST(arg=15, lineno=60)
         588	LOAD_FAST(arg=12, lineno=60)
         590	BINARY_OP(arg=10, lineno=60)
         594	LOAD_FAST(arg=7, lineno=60)
         596	BINARY_OP(arg=2, lineno=60)
         600	PRECALL(arg=2, lineno=60)
         604	CALL(arg=2, lineno=60)
         614	STORE_FAST(arg=21, lineno=60)
         616	LOAD_GLOBAL(arg=9, lineno=61)
         628	LOAD_FAST(arg=21, lineno=61)
         630	PRECALL(arg=1, lineno=61)
         634	CALL(arg=1, lineno=61)
         644	GET_ITER(arg=None, lineno=61)
>        646	FOR_ITER(arg=65, lineno=61)
         648	STORE_FAST(arg=22, lineno=61)
         650	LOAD_FAST(arg=2, lineno=63)
         652	LOAD_FAST(arg=12, lineno=63)
         654	LOAD_FAST(arg=22, lineno=63)
         656	LOAD_FAST(arg=7, lineno=63)
         658	BINARY_OP(arg=5, lineno=63)
         662	BINARY_OP(arg=0, lineno=63)
         666	BINARY_SUBSCR(arg=None, lineno=63)
         676	LOAD_FAST(arg=13, lineno=64)
         678	LOAD_FAST(arg=3, lineno=64)
         680	LOAD_FAST(arg=12, lineno=64)
         682	LOAD_FAST(arg=22, lineno=64)
         684	LOAD_FAST(arg=7, lineno=64)
         686	BINARY_OP(arg=5, lineno=64)
         690	BINARY_OP(arg=0, lineno=64)
         694	BINARY_SUBSCR(arg=None, lineno=64)
         704	BINARY_OP(arg=5, lineno=64)
         708	BINARY_OP(arg=0, lineno=63)
         712	STORE_FAST(arg=14, lineno=62)
         714	LOAD_FAST(arg=6, lineno=66)
         716	LOAD_FAST(arg=18, lineno=66)
         718	COPY(arg=2, lineno=66)
         720	COPY(arg=2, lineno=66)
         722	BINARY_SUBSCR(arg=None, lineno=66)
         732	LOAD_FAST(arg=14, lineno=66)
         734	LOAD_FAST(arg=0, lineno=66)
         736	LOAD_FAST(arg=9, lineno=66)
         738	LOAD_FAST(arg=22, lineno=66)
         740	BINARY_OP(arg=0, lineno=66)
         744	LOAD_CONST(arg=3, lineno=66)
         746	BINARY_OP(arg=0, lineno=66)
         750	BINARY_SUBSCR(arg=None, lineno=66)
         760	BINARY_OP(arg=5, lineno=66)
         764	BINARY_OP(arg=13, lineno=66)
         768	SWAP(arg=3, lineno=66)
         770	SWAP(arg=2, lineno=66)
         772	STORE_SUBSCR(arg=None, lineno=66)
         776	JUMP_BACKWARD(arg=66, lineno=66)
>        778	NOP(arg=1, lineno=61)
         780	JUMP_BACKWARD(arg=303, lineno=61)
>        782	LOAD_CONST(arg=0, lineno=23)
         784	RETURN_VALUE(arg=None, lineno=23)
DEBUG 2024-06-11 14:50:54,395 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 14:50:54,395 - stack: []
DEBUG 2024-06-11 14:50:54,395 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 14:50:54,395 - dispatch pc=0, inst=NOP(arg=None, lineno=7)
DEBUG 2024-06-11 14:50:54,395 - stack []
DEBUG 2024-06-11 14:50:54,395 - dispatch pc=2, inst=RESUME(arg=0, lineno=7)
DEBUG 2024-06-11 14:50:54,395 - stack []
DEBUG 2024-06-11 14:50:54,395 - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=9)
DEBUG 2024-06-11 14:50:54,395 - stack []
DEBUG 2024-06-11 14:50:54,395 - dispatch pc=16, inst=LOAD_FAST(arg=5, lineno=9)
DEBUG 2024-06-11 14:50:54,395 - stack ['$null$4.1', '$4load_global.0']
DEBUG 2024-06-11 14:50:54,395 - dispatch pc=18, inst=LOAD_FAST(arg=4, lineno=9)
DEBUG 2024-06-11 14:50:54,395 - stack ['$null$4.1', '$4load_global.0', '$scale16.2']
DEBUG 2024-06-11 14:50:54,396 - dispatch pc=20, inst=BINARY_OP(arg=5, lineno=9)
DEBUG 2024-06-11 14:50:54,396 - stack ['$null$4.1', '$4load_global.0', '$scale16.2', '$num_table18.3']
DEBUG 2024-06-11 14:50:54,396 - dispatch pc=24, inst=PRECALL(arg=1, lineno=9)
DEBUG 2024-06-11 14:50:54,396 - stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
DEBUG 2024-06-11 14:50:54,396 - dispatch pc=28, inst=CALL(arg=1, lineno=9)
DEBUG 2024-06-11 14:50:54,396 - stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
DEBUG 2024-06-11 14:50:54,396 - dispatch pc=38, inst=STORE_FAST(arg=7, lineno=9)
DEBUG 2024-06-11 14:50:54,396 - stack ['$28call.5']
DEBUG 2024-06-11 14:50:54,396 - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=10)
DEBUG 2024-06-11 14:50:54,396 - stack []
DEBUG 2024-06-11 14:50:54,397 - dispatch pc=42, inst=STORE_FAST(arg=8, lineno=10)
DEBUG 2024-06-11 14:50:54,397 - stack ['$const40.6']
DEBUG 2024-06-11 14:50:54,397 - dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=12)
DEBUG 2024-06-11 14:50:54,397 - stack []
DEBUG 2024-06-11 14:50:54,397 - dispatch pc=46, inst=STORE_FAST(arg=9, lineno=12)
DEBUG 2024-06-11 14:50:54,397 - stack ['$const44.7']
DEBUG 2024-06-11 14:50:54,397 - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=13)
DEBUG 2024-06-11 14:50:54,397 - stack []
DEBUG 2024-06-11 14:50:54,397 - dispatch pc=50, inst=STORE_FAST(arg=10, lineno=13)
DEBUG 2024-06-11 14:50:54,397 - stack ['$const48.8']
DEBUG 2024-06-11 14:50:54,397 - dispatch pc=52, inst=LOAD_CONST(arg=1, lineno=14)
DEBUG 2024-06-11 14:50:54,398 - stack []
DEBUG 2024-06-11 14:50:54,398 - dispatch pc=54, inst=STORE_FAST(arg=11, lineno=14)
DEBUG 2024-06-11 14:50:54,398 - stack ['$const52.9']
DEBUG 2024-06-11 14:50:54,398 - dispatch pc=56, inst=LOAD_CONST(arg=2, lineno=15)
DEBUG 2024-06-11 14:50:54,398 - stack []
DEBUG 2024-06-11 14:50:54,398 - dispatch pc=58, inst=STORE_FAST(arg=12, lineno=15)
DEBUG 2024-06-11 14:50:54,398 - stack ['$const56.10']
DEBUG 2024-06-11 14:50:54,398 - dispatch pc=60, inst=LOAD_CONST(arg=1, lineno=16)
DEBUG 2024-06-11 14:50:54,398 - stack []
DEBUG 2024-06-11 14:50:54,398 - dispatch pc=62, inst=STORE_FAST(arg=13, lineno=16)
DEBUG 2024-06-11 14:50:54,398 - stack ['$const60.11']
DEBUG 2024-06-11 14:50:54,398 - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=17)
DEBUG 2024-06-11 14:50:54,400 - stack []
DEBUG 2024-06-11 14:50:54,400 - dispatch pc=66, inst=STORE_FAST(arg=14, lineno=17)
DEBUG 2024-06-11 14:50:54,400 - stack ['$const64.12']
DEBUG 2024-06-11 14:50:54,400 - dispatch pc=68, inst=LOAD_FAST(arg=2, lineno=19)
DEBUG 2024-06-11 14:50:54,400 - stack []
DEBUG 2024-06-11 14:50:54,400 - dispatch pc=70, inst=LOAD_ATTR(arg=1, lineno=19)
DEBUG 2024-06-11 14:50:54,400 - stack ['$interp_win68.13']
DEBUG 2024-06-11 14:50:54,400 - dispatch pc=80, inst=LOAD_CONST(arg=2, lineno=19)
DEBUG 2024-06-11 14:50:54,400 - stack ['$70load_attr.14']
DEBUG 2024-06-11 14:50:54,400 - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=19)
WARNING 2024-06-11 14:50:54,400 - From C:\Users\Dell\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\backend\common\global_state.py:82: The name tf.reset_default_graph is deprecated. Please use tf.compat.v1.reset_default_graph instead.

DEBUG 2024-06-11 14:50:54,400 - stack ['$70load_attr.14', '$const80.15']
DEBUG 2024-06-11 14:50:54,545 - dispatch pc=92, inst=STORE_FAST(arg=15, lineno=19)
DEBUG 2024-06-11 14:50:54,545 - stack ['$82binary_subscr.16']
DEBUG 2024-06-11 14:50:54,545 - dispatch pc=94, inst=LOAD_FAST(arg=0, lineno=20)
DEBUG 2024-06-11 14:50:54,545 - stack []
DEBUG 2024-06-11 14:50:54,545 - dispatch pc=96, inst=LOAD_ATTR(arg=1, lineno=20)
DEBUG 2024-06-11 14:50:54,545 - stack ['$x94.17']
DEBUG 2024-06-11 14:50:54,545 - dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=20)
DEBUG 2024-06-11 14:50:54,545 - stack ['$96load_attr.18']
DEBUG 2024-06-11 14:50:54,545 - dispatch pc=108, inst=BINARY_SUBSCR(arg=None, lineno=20)
DEBUG 2024-06-11 14:50:54,545 - stack ['$96load_attr.18', '$const106.19']
DEBUG 2024-06-11 14:50:54,545 - dispatch pc=118, inst=STORE_FAST(arg=16, lineno=20)
DEBUG 2024-06-11 14:50:54,545 - stack ['$108binary_subscr.20']
DEBUG 2024-06-11 14:50:54,545 - dispatch pc=120, inst=LOAD_FAST(arg=1, lineno=21)
DEBUG 2024-06-11 14:50:54,545 - stack []
DEBUG 2024-06-11 14:50:54,547 - dispatch pc=122, inst=LOAD_ATTR(arg=1, lineno=21)
DEBUG 2024-06-11 14:50:54,547 - stack ['$t_out120.21']
DEBUG 2024-06-11 14:50:54,547 - dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=21)
DEBUG 2024-06-11 14:50:54,547 - stack ['$122load_attr.22']
DEBUG 2024-06-11 14:50:54,547 - dispatch pc=134, inst=BINARY_SUBSCR(arg=None, lineno=21)
DEBUG 2024-06-11 14:50:54,547 - stack ['$122load_attr.22', '$const132.23']
DEBUG 2024-06-11 14:50:54,547 - dispatch pc=144, inst=STORE_FAST(arg=17, lineno=21)
DEBUG 2024-06-11 14:50:54,547 - stack ['$134binary_subscr.24']
DEBUG 2024-06-11 14:50:54,547 - dispatch pc=146, inst=LOAD_GLOBAL(arg=5, lineno=23)
DEBUG 2024-06-11 14:50:54,547 - stack []
DEBUG 2024-06-11 14:50:54,547 - dispatch pc=158, inst=LOAD_FAST(arg=17, lineno=23)
DEBUG 2024-06-11 14:50:54,547 - stack ['$null$146.26', '$146load_global.25']
DEBUG 2024-06-11 14:50:54,547 - dispatch pc=160, inst=PRECALL(arg=1, lineno=23)
DEBUG 2024-06-11 14:50:54,547 - stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
DEBUG 2024-06-11 14:50:54,547 - dispatch pc=164, inst=CALL(arg=1, lineno=23)
DEBUG 2024-06-11 14:50:54,547 - stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
DEBUG 2024-06-11 14:50:54,547 - dispatch pc=174, inst=GET_ITER(arg=None, lineno=23)
DEBUG 2024-06-11 14:50:54,547 - stack ['$164call.28']
DEBUG 2024-06-11 14:50:54,547 - end state. edges=[Edge(pc=176, stack=('$174get_iter.29',), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:50:54,547 - pending: deque([State(pc_initial=176 nstack_initial=1)])
DEBUG 2024-06-11 14:50:54,547 - stack: ['$phi176.0']
DEBUG 2024-06-11 14:50:54,547 - state.pc_initial: State(pc_initial=176 nstack_initial=1)
DEBUG 2024-06-11 14:50:54,547 - dispatch pc=176, inst=NOP(arg=1, lineno=23)
DEBUG 2024-06-11 14:50:54,547 - stack ['$phi176.0']
DEBUG 2024-06-11 14:50:54,547 - end state. edges=[Edge(pc=178, stack=('$phi176.0',), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:50:54,547 - pending: deque([State(pc_initial=178 nstack_initial=1)])
DEBUG 2024-06-11 14:50:54,547 - stack: ['$phi178.0']
DEBUG 2024-06-11 14:50:54,547 - state.pc_initial: State(pc_initial=178 nstack_initial=1)
DEBUG 2024-06-11 14:50:54,547 - dispatch pc=178, inst=FOR_ITER(arg=301, lineno=23)
DEBUG 2024-06-11 14:50:54,547 - stack ['$phi178.0']
DEBUG 2024-06-11 14:50:54,547 - end state. edges=[Edge(pc=782, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=('$phi178.0', '$178for_iter.2'), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:50:54,547 - pending: deque([State(pc_initial=782 nstack_initial=0), State(pc_initial=180 nstack_initial=2)])
DEBUG 2024-06-11 14:50:54,547 - stack: []
DEBUG 2024-06-11 14:50:54,548 - state.pc_initial: State(pc_initial=782 nstack_initial=0)
DEBUG 2024-06-11 14:50:54,548 - dispatch pc=782, inst=LOAD_CONST(arg=0, lineno=23)
DEBUG 2024-06-11 14:50:54,548 - stack []
DEBUG 2024-06-11 14:50:54,548 - dispatch pc=784, inst=RETURN_VALUE(arg=None, lineno=23)
DEBUG 2024-06-11 14:50:54,548 - stack ['$const782.0']
DEBUG 2024-06-11 14:50:54,548 - end state. edges=[]
DEBUG 2024-06-11 14:50:54,548 - pending: deque([State(pc_initial=180 nstack_initial=2)])
DEBUG 2024-06-11 14:50:54,548 - stack: ['$phi180.0', '$phi180.1']
DEBUG 2024-06-11 14:50:54,548 - state.pc_initial: State(pc_initial=180 nstack_initial=2)
DEBUG 2024-06-11 14:50:54,548 - dispatch pc=180, inst=STORE_FAST(arg=18, lineno=23)
DEBUG 2024-06-11 14:50:54,548 - stack ['$phi180.0', '$phi180.1']
DEBUG 2024-06-11 14:50:54,548 - dispatch pc=182, inst=LOAD_FAST(arg=1, lineno=24)
DEBUG 2024-06-11 14:50:54,548 - stack ['$phi180.0']
DEBUG 2024-06-11 14:50:54,548 - dispatch pc=184, inst=LOAD_FAST(arg=18, lineno=24)
DEBUG 2024-06-11 14:50:54,548 - stack ['$phi180.0', '$t_out182.2']
DEBUG 2024-06-11 14:50:54,548 - dispatch pc=186, inst=BINARY_SUBSCR(arg=None, lineno=24)
DEBUG 2024-06-11 14:50:54,548 - stack ['$phi180.0', '$t_out182.2', '$t184.3']
DEBUG 2024-06-11 14:50:54,548 - dispatch pc=196, inst=STORE_FAST(arg=8, lineno=24)
DEBUG 2024-06-11 14:50:54,548 - stack ['$phi180.0', '$186binary_subscr.4']
DEBUG 2024-06-11 14:50:54,548 - dispatch pc=198, inst=LOAD_GLOBAL(arg=1, lineno=27)
DEBUG 2024-06-11 14:50:54,548 - stack ['$phi180.0']
DEBUG 2024-06-11 14:50:54,548 - dispatch pc=210, inst=LOAD_FAST(arg=8, lineno=27)
DEBUG 2024-06-11 14:50:54,548 - stack ['$phi180.0', '$null$198.6', '$198load_global.5']
DEBUG 2024-06-11 14:50:54,548 - dispatch pc=212, inst=PRECALL(arg=1, lineno=27)
DEBUG 2024-06-11 14:50:54,548 - stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
DEBUG 2024-06-11 14:50:54,548 - dispatch pc=216, inst=CALL(arg=1, lineno=27)
DEBUG 2024-06-11 14:50:54,548 - stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
DEBUG 2024-06-11 14:50:54,549 - dispatch pc=226, inst=STORE_FAST(arg=9, lineno=27)
DEBUG 2024-06-11 14:50:54,549 - stack ['$phi180.0', '$216call.8']
DEBUG 2024-06-11 14:50:54,549 - dispatch pc=228, inst=LOAD_FAST(arg=5, lineno=30)
DEBUG 2024-06-11 14:50:54,549 - stack ['$phi180.0']
DEBUG 2024-06-11 14:50:54,549 - dispatch pc=230, inst=LOAD_FAST(arg=8, lineno=30)
DEBUG 2024-06-11 14:50:54,549 - stack ['$phi180.0', '$scale228.9']
DEBUG 2024-06-11 14:50:54,549 - dispatch pc=232, inst=LOAD_FAST(arg=9, lineno=30)
DEBUG 2024-06-11 14:50:54,549 - stack ['$phi180.0', '$scale228.9', '$time_register230.10']
DEBUG 2024-06-11 14:50:54,549 - dispatch pc=234, inst=BINARY_OP(arg=10, lineno=30)
DEBUG 2024-06-11 14:50:54,549 - stack ['$phi180.0', '$scale228.9', '$time_register230.10', '$n232.11']
DEBUG 2024-06-11 14:50:54,549 - dispatch pc=238, inst=BINARY_OP(arg=5, lineno=30)
DEBUG 2024-06-11 14:50:54,549 - stack ['$phi180.0', '$scale228.9', '$binop_sub234.12']
DEBUG 2024-06-11 14:50:54,549 - dispatch pc=242, inst=STORE_FAST(arg=10, lineno=30)
DEBUG 2024-06-11 14:50:54,549 - stack ['$phi180.0', '$binop_mul238.13']
DEBUG 2024-06-11 14:50:54,549 - dispatch pc=244, inst=LOAD_FAST(arg=10, lineno=33)
DEBUG 2024-06-11 14:50:54,549 - stack ['$phi180.0']
DEBUG 2024-06-11 14:50:54,549 - dispatch pc=246, inst=LOAD_FAST(arg=4, lineno=33)
DEBUG 2024-06-11 14:50:54,549 - stack ['$phi180.0', '$frac244.14']
DEBUG 2024-06-11 14:50:54,549 - dispatch pc=248, inst=BINARY_OP(arg=5, lineno=33)
DEBUG 2024-06-11 14:50:54,549 - stack ['$phi180.0', '$frac244.14', '$num_table246.15']
DEBUG 2024-06-11 14:50:54,549 - dispatch pc=252, inst=STORE_FAST(arg=11, lineno=33)
DEBUG 2024-06-11 14:50:54,549 - stack ['$phi180.0', '$binop_mul248.16']
DEBUG 2024-06-11 14:50:54,549 - dispatch pc=254, inst=LOAD_GLOBAL(arg=1, lineno=34)
DEBUG 2024-06-11 14:50:54,549 - stack ['$phi180.0']
DEBUG 2024-06-11 14:50:54,549 - dispatch pc=266, inst=LOAD_FAST(arg=11, lineno=34)
DEBUG 2024-06-11 14:50:54,549 - stack ['$phi180.0', '$null$254.18', '$254load_global.17']
DEBUG 2024-06-11 14:50:54,549 - dispatch pc=268, inst=PRECALL(arg=1, lineno=34)
DEBUG 2024-06-11 14:50:54,550 - stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
DEBUG 2024-06-11 14:50:54,550 - dispatch pc=272, inst=CALL(arg=1, lineno=34)
DEBUG 2024-06-11 14:50:54,550 - stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
DEBUG 2024-06-11 14:50:54,550 - dispatch pc=282, inst=STORE_FAST(arg=12, lineno=34)
DEBUG 2024-06-11 14:50:54,550 - stack ['$phi180.0', '$272call.20']
DEBUG 2024-06-11 14:50:54,550 - dispatch pc=284, inst=LOAD_FAST(arg=11, lineno=37)
DEBUG 2024-06-11 14:50:54,550 - stack ['$phi180.0']
DEBUG 2024-06-11 14:50:54,550 - dispatch pc=286, inst=LOAD_FAST(arg=12, lineno=37)
DEBUG 2024-06-11 14:50:54,550 - stack ['$phi180.0', '$index_frac284.21']
DEBUG 2024-06-11 14:50:54,550 - dispatch pc=288, inst=BINARY_OP(arg=10, lineno=37)
DEBUG 2024-06-11 14:50:54,550 - stack ['$phi180.0', '$index_frac284.21', '$offset286.22']
DEBUG 2024-06-11 14:50:54,550 - dispatch pc=292, inst=STORE_FAST(arg=13, lineno=37)
DEBUG 2024-06-11 14:50:54,550 - stack ['$phi180.0', '$binop_sub288.23']
DEBUG 2024-06-11 14:50:54,550 - dispatch pc=294, inst=LOAD_GLOBAL(arg=7, lineno=40)
DEBUG 2024-06-11 14:50:54,550 - stack ['$phi180.0']
DEBUG 2024-06-11 14:50:54,550 - dispatch pc=306, inst=LOAD_FAST(arg=9, lineno=40)
DEBUG 2024-06-11 14:50:54,550 - stack ['$phi180.0', '$null$294.25', '$294load_global.24']
DEBUG 2024-06-11 14:50:54,550 - dispatch pc=308, inst=LOAD_CONST(arg=3, lineno=40)
DEBUG 2024-06-11 14:50:54,550 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26']
DEBUG 2024-06-11 14:50:54,550 - dispatch pc=310, inst=BINARY_OP(arg=0, lineno=40)
DEBUG 2024-06-11 14:50:54,550 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26', '$const308.27']
DEBUG 2024-06-11 14:50:54,550 - dispatch pc=314, inst=LOAD_FAST(arg=15, lineno=40)
DEBUG 2024-06-11 14:50:54,550 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28']
DEBUG 2024-06-11 14:50:54,550 - dispatch pc=316, inst=LOAD_FAST(arg=12, lineno=40)
DEBUG 2024-06-11 14:50:54,550 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29']
DEBUG 2024-06-11 14:50:54,550 - dispatch pc=318, inst=BINARY_OP(arg=10, lineno=40)
DEBUG 2024-06-11 14:50:54,550 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29', '$offset316.30']
DEBUG 2024-06-11 14:50:54,550 - dispatch pc=322, inst=LOAD_FAST(arg=7, lineno=40)
DEBUG 2024-06-11 14:50:54,550 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31']
DEBUG 2024-06-11 14:50:54,550 - dispatch pc=324, inst=BINARY_OP(arg=2, lineno=40)
DEBUG 2024-06-11 14:50:54,550 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31', '$index_step322.32']
DEBUG 2024-06-11 14:50:54,550 - dispatch pc=328, inst=PRECALL(arg=2, lineno=40)
DEBUG 2024-06-11 14:50:54,550 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
DEBUG 2024-06-11 14:50:54,550 - dispatch pc=332, inst=CALL(arg=2, lineno=40)
DEBUG 2024-06-11 14:50:54,550 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
DEBUG 2024-06-11 14:50:54,550 - dispatch pc=342, inst=STORE_FAST(arg=19, lineno=40)
DEBUG 2024-06-11 14:50:54,551 - stack ['$phi180.0', '$332call.34']
DEBUG 2024-06-11 14:50:54,551 - dispatch pc=344, inst=LOAD_GLOBAL(arg=9, lineno=41)
DEBUG 2024-06-11 14:50:54,551 - stack ['$phi180.0']
DEBUG 2024-06-11 14:50:54,551 - dispatch pc=356, inst=LOAD_FAST(arg=19, lineno=41)
DEBUG 2024-06-11 14:50:54,551 - stack ['$phi180.0', '$null$344.36', '$344load_global.35']
DEBUG 2024-06-11 14:50:54,551 - dispatch pc=358, inst=PRECALL(arg=1, lineno=41)
DEBUG 2024-06-11 14:50:54,551 - stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
DEBUG 2024-06-11 14:50:54,551 - dispatch pc=362, inst=CALL(arg=1, lineno=41)
DEBUG 2024-06-11 14:50:54,551 - stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
DEBUG 2024-06-11 14:50:54,551 - dispatch pc=372, inst=GET_ITER(arg=None, lineno=41)
DEBUG 2024-06-11 14:50:54,551 - stack ['$phi180.0', '$362call.38']
DEBUG 2024-06-11 14:50:54,551 - end state. edges=[Edge(pc=374, stack=('$phi180.0', '$372get_iter.39'), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:50:54,551 - pending: deque([State(pc_initial=374 nstack_initial=2)])
DEBUG 2024-06-11 14:50:54,551 - stack: ['$phi374.0', '$phi374.1']
DEBUG 2024-06-11 14:50:54,551 - state.pc_initial: State(pc_initial=374 nstack_initial=2)
DEBUG 2024-06-11 14:50:54,551 - dispatch pc=374, inst=FOR_ITER(arg=62, lineno=41)
DEBUG 2024-06-11 14:50:54,551 - stack ['$phi374.0', '$phi374.1']
DEBUG 2024-06-11 14:50:54,551 - end state. edges=[Edge(pc=500, stack=('$phi374.0',), blockstack=(), npush=0), Edge(pc=376, stack=('$phi374.0', '$phi374.1', '$374for_iter.3'), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:50:54,551 - pending: deque([State(pc_initial=500 nstack_initial=1), State(pc_initial=376 nstack_initial=3)])
DEBUG 2024-06-11 14:50:54,551 - stack: ['$phi500.0']
DEBUG 2024-06-11 14:50:54,551 - state.pc_initial: State(pc_initial=500 nstack_initial=1)
DEBUG 2024-06-11 14:50:54,551 - dispatch pc=500, inst=LOAD_FAST(arg=5, lineno=50)
DEBUG 2024-06-11 14:50:54,551 - stack ['$phi500.0']
DEBUG 2024-06-11 14:50:54,551 - dispatch pc=502, inst=LOAD_FAST(arg=10, lineno=50)
DEBUG 2024-06-11 14:50:54,551 - stack ['$phi500.0', '$scale500.1']
DEBUG 2024-06-11 14:50:54,551 - dispatch pc=504, inst=BINARY_OP(arg=10, lineno=50)
DEBUG 2024-06-11 14:50:54,551 - stack ['$phi500.0', '$scale500.1', '$frac502.2']
DEBUG 2024-06-11 14:50:54,551 - dispatch pc=508, inst=STORE_FAST(arg=10, lineno=50)
DEBUG 2024-06-11 14:50:54,552 - stack ['$phi500.0', '$binop_sub504.3']
DEBUG 2024-06-11 14:50:54,552 - dispatch pc=510, inst=LOAD_FAST(arg=10, lineno=53)
DEBUG 2024-06-11 14:50:54,552 - stack ['$phi500.0']
DEBUG 2024-06-11 14:50:54,552 - dispatch pc=512, inst=LOAD_FAST(arg=4, lineno=53)
DEBUG 2024-06-11 14:50:54,552 - stack ['$phi500.0', '$frac510.4']
DEBUG 2024-06-11 14:50:54,552 - dispatch pc=514, inst=BINARY_OP(arg=5, lineno=53)
DEBUG 2024-06-11 14:50:54,552 - stack ['$phi500.0', '$frac510.4', '$num_table512.5']
DEBUG 2024-06-11 14:50:54,552 - dispatch pc=518, inst=STORE_FAST(arg=11, lineno=53)
DEBUG 2024-06-11 14:50:54,552 - stack ['$phi500.0', '$binop_mul514.6']
DEBUG 2024-06-11 14:50:54,552 - dispatch pc=520, inst=LOAD_GLOBAL(arg=1, lineno=54)
DEBUG 2024-06-11 14:50:54,552 - stack ['$phi500.0']
DEBUG 2024-06-11 14:50:54,552 - dispatch pc=532, inst=LOAD_FAST(arg=11, lineno=54)
DEBUG 2024-06-11 14:50:54,552 - stack ['$phi500.0', '$null$520.8', '$520load_global.7']
DEBUG 2024-06-11 14:50:54,552 - dispatch pc=534, inst=PRECALL(arg=1, lineno=54)
DEBUG 2024-06-11 14:50:54,552 - stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
DEBUG 2024-06-11 14:50:54,552 - dispatch pc=538, inst=CALL(arg=1, lineno=54)
DEBUG 2024-06-11 14:50:54,552 - stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
DEBUG 2024-06-11 14:50:54,552 - dispatch pc=548, inst=STORE_FAST(arg=12, lineno=54)
DEBUG 2024-06-11 14:50:54,552 - stack ['$phi500.0', '$538call.10']
DEBUG 2024-06-11 14:50:54,552 - dispatch pc=550, inst=LOAD_FAST(arg=11, lineno=57)
DEBUG 2024-06-11 14:50:54,552 - stack ['$phi500.0']
DEBUG 2024-06-11 14:50:54,552 - dispatch pc=552, inst=LOAD_FAST(arg=12, lineno=57)
DEBUG 2024-06-11 14:50:54,552 - stack ['$phi500.0', '$index_frac550.11']
DEBUG 2024-06-11 14:50:54,552 - dispatch pc=554, inst=BINARY_OP(arg=10, lineno=57)
DEBUG 2024-06-11 14:50:54,552 - stack ['$phi500.0', '$index_frac550.11', '$offset552.12']
DEBUG 2024-06-11 14:50:54,552 - dispatch pc=558, inst=STORE_FAST(arg=13, lineno=57)
DEBUG 2024-06-11 14:50:54,552 - stack ['$phi500.0', '$binop_sub554.13']
DEBUG 2024-06-11 14:50:54,552 - dispatch pc=560, inst=LOAD_GLOBAL(arg=7, lineno=60)
DEBUG 2024-06-11 14:50:54,552 - stack ['$phi500.0']
DEBUG 2024-06-11 14:50:54,553 - dispatch pc=572, inst=LOAD_FAST(arg=16, lineno=60)
DEBUG 2024-06-11 14:50:54,553 - stack ['$phi500.0', '$null$560.15', '$560load_global.14']
DEBUG 2024-06-11 14:50:54,553 - dispatch pc=574, inst=LOAD_FAST(arg=9, lineno=60)
DEBUG 2024-06-11 14:50:54,553 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16']
DEBUG 2024-06-11 14:50:54,553 - dispatch pc=576, inst=BINARY_OP(arg=10, lineno=60)
DEBUG 2024-06-11 14:50:54,553 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16', '$n574.17']
DEBUG 2024-06-11 14:50:54,553 - dispatch pc=580, inst=LOAD_CONST(arg=3, lineno=60)
DEBUG 2024-06-11 14:50:54,553 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18']
DEBUG 2024-06-11 14:50:54,553 - dispatch pc=582, inst=BINARY_OP(arg=10, lineno=60)
DEBUG 2024-06-11 14:50:54,553 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18', '$const580.19']
DEBUG 2024-06-11 14:50:54,553 - dispatch pc=586, inst=LOAD_FAST(arg=15, lineno=60)
DEBUG 2024-06-11 14:50:54,553 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20']
DEBUG 2024-06-11 14:50:54,553 - dispatch pc=588, inst=LOAD_FAST(arg=12, lineno=60)
DEBUG 2024-06-11 14:50:54,553 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21']
DEBUG 2024-06-11 14:50:54,553 - dispatch pc=590, inst=BINARY_OP(arg=10, lineno=60)
DEBUG 2024-06-11 14:50:54,553 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21', '$offset588.22']
DEBUG 2024-06-11 14:50:54,553 - dispatch pc=594, inst=LOAD_FAST(arg=7, lineno=60)
DEBUG 2024-06-11 14:50:54,553 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23']
DEBUG 2024-06-11 14:50:54,553 - dispatch pc=596, inst=BINARY_OP(arg=2, lineno=60)
DEBUG 2024-06-11 14:50:54,553 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23', '$index_step594.24']
DEBUG 2024-06-11 14:50:54,553 - dispatch pc=600, inst=PRECALL(arg=2, lineno=60)
DEBUG 2024-06-11 14:50:54,553 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
DEBUG 2024-06-11 14:50:54,553 - dispatch pc=604, inst=CALL(arg=2, lineno=60)
DEBUG 2024-06-11 14:50:54,553 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
DEBUG 2024-06-11 14:50:54,553 - dispatch pc=614, inst=STORE_FAST(arg=21, lineno=60)
DEBUG 2024-06-11 14:50:54,553 - stack ['$phi500.0', '$604call.26']
DEBUG 2024-06-11 14:50:54,553 - dispatch pc=616, inst=LOAD_GLOBAL(arg=9, lineno=61)
DEBUG 2024-06-11 14:50:54,553 - stack ['$phi500.0']
DEBUG 2024-06-11 14:50:54,554 - dispatch pc=628, inst=LOAD_FAST(arg=21, lineno=61)
DEBUG 2024-06-11 14:50:54,554 - stack ['$phi500.0', '$null$616.28', '$616load_global.27']
DEBUG 2024-06-11 14:50:54,554 - dispatch pc=630, inst=PRECALL(arg=1, lineno=61)
DEBUG 2024-06-11 14:50:54,554 - stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
DEBUG 2024-06-11 14:50:54,554 - dispatch pc=634, inst=CALL(arg=1, lineno=61)
DEBUG 2024-06-11 14:50:54,554 - stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
DEBUG 2024-06-11 14:50:54,554 - dispatch pc=644, inst=GET_ITER(arg=None, lineno=61)
DEBUG 2024-06-11 14:50:54,554 - stack ['$phi500.0', '$634call.30']
DEBUG 2024-06-11 14:50:54,554 - end state. edges=[Edge(pc=646, stack=('$phi500.0', '$644get_iter.31'), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:50:54,554 - pending: deque([State(pc_initial=376 nstack_initial=3), State(pc_initial=646 nstack_initial=2)])
DEBUG 2024-06-11 14:50:54,554 - stack: ['$phi376.0', '$phi376.1', '$phi376.2']
DEBUG 2024-06-11 14:50:54,554 - state.pc_initial: State(pc_initial=376 nstack_initial=3)
DEBUG 2024-06-11 14:50:54,554 - dispatch pc=376, inst=STORE_FAST(arg=20, lineno=41)
DEBUG 2024-06-11 14:50:54,554 - stack ['$phi376.0', '$phi376.1', '$phi376.2']
DEBUG 2024-06-11 14:50:54,554 - dispatch pc=378, inst=LOAD_FAST(arg=2, lineno=44)
DEBUG 2024-06-11 14:50:54,554 - stack ['$phi376.0', '$phi376.1']
DEBUG 2024-06-11 14:50:54,554 - dispatch pc=380, inst=LOAD_FAST(arg=12, lineno=44)
DEBUG 2024-06-11 14:50:54,554 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3']
DEBUG 2024-06-11 14:50:54,554 - dispatch pc=382, inst=LOAD_FAST(arg=20, lineno=44)
DEBUG 2024-06-11 14:50:54,554 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4']
DEBUG 2024-06-11 14:50:54,554 - dispatch pc=384, inst=LOAD_FAST(arg=7, lineno=44)
DEBUG 2024-06-11 14:50:54,554 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5']
DEBUG 2024-06-11 14:50:54,554 - dispatch pc=386, inst=BINARY_OP(arg=5, lineno=44)
DEBUG 2024-06-11 14:50:54,554 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5', '$index_step384.6']
DEBUG 2024-06-11 14:50:54,554 - dispatch pc=390, inst=BINARY_OP(arg=0, lineno=44)
DEBUG 2024-06-11 14:50:54,554 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$binop_mul386.7']
DEBUG 2024-06-11 14:50:54,554 - dispatch pc=394, inst=BINARY_SUBSCR(arg=None, lineno=44)
DEBUG 2024-06-11 14:50:54,554 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$binop_add390.8']
DEBUG 2024-06-11 14:50:54,555 - dispatch pc=404, inst=LOAD_FAST(arg=13, lineno=45)
DEBUG 2024-06-11 14:50:54,555 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9']
DEBUG 2024-06-11 14:50:54,555 - dispatch pc=406, inst=LOAD_FAST(arg=3, lineno=45)
DEBUG 2024-06-11 14:50:54,555 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10']
DEBUG 2024-06-11 14:50:54,555 - dispatch pc=408, inst=LOAD_FAST(arg=12, lineno=45)
DEBUG 2024-06-11 14:50:54,555 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11']
DEBUG 2024-06-11 14:50:54,555 - dispatch pc=410, inst=LOAD_FAST(arg=20, lineno=45)
DEBUG 2024-06-11 14:50:54,555 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12']
DEBUG 2024-06-11 14:50:54,555 - dispatch pc=412, inst=LOAD_FAST(arg=7, lineno=45)
DEBUG 2024-06-11 14:50:54,555 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13']
DEBUG 2024-06-11 14:50:54,555 - dispatch pc=414, inst=BINARY_OP(arg=5, lineno=45)
DEBUG 2024-06-11 14:50:54,555 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13', '$index_step412.14']
DEBUG 2024-06-11 14:50:54,555 - dispatch pc=418, inst=BINARY_OP(arg=0, lineno=45)
DEBUG 2024-06-11 14:50:54,555 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$binop_mul414.15']
DEBUG 2024-06-11 14:50:54,555 - dispatch pc=422, inst=BINARY_SUBSCR(arg=None, lineno=45)
DEBUG 2024-06-11 14:50:54,555 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$binop_add418.16']
DEBUG 2024-06-11 14:50:54,555 - dispatch pc=432, inst=BINARY_OP(arg=5, lineno=45)
DEBUG 2024-06-11 14:50:54,555 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$422binary_subscr.17']
DEBUG 2024-06-11 14:50:54,555 - dispatch pc=436, inst=BINARY_OP(arg=0, lineno=44)
DEBUG 2024-06-11 14:50:54,555 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$binop_mul432.18']
DEBUG 2024-06-11 14:50:54,555 - dispatch pc=440, inst=STORE_FAST(arg=14, lineno=43)
DEBUG 2024-06-11 14:50:54,555 - stack ['$phi376.0', '$phi376.1', '$binop_add436.19']
DEBUG 2024-06-11 14:50:54,555 - dispatch pc=442, inst=LOAD_FAST(arg=6, lineno=47)
DEBUG 2024-06-11 14:50:54,555 - stack ['$phi376.0', '$phi376.1']
DEBUG 2024-06-11 14:50:54,555 - dispatch pc=444, inst=LOAD_FAST(arg=18, lineno=47)
DEBUG 2024-06-11 14:50:54,555 - stack ['$phi376.0', '$phi376.1', '$y442.20']
DEBUG 2024-06-11 14:50:54,555 - dispatch pc=446, inst=COPY(arg=2, lineno=47)
DEBUG 2024-06-11 14:50:54,555 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21']
DEBUG 2024-06-11 14:50:54,555 - dispatch pc=448, inst=COPY(arg=2, lineno=47)
DEBUG 2024-06-11 14:50:54,556 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20']
DEBUG 2024-06-11 14:50:54,556 - dispatch pc=450, inst=BINARY_SUBSCR(arg=None, lineno=47)
DEBUG 2024-06-11 14:50:54,556 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20', '$t444.21']
DEBUG 2024-06-11 14:50:54,556 - dispatch pc=460, inst=LOAD_FAST(arg=14, lineno=47)
DEBUG 2024-06-11 14:50:54,556 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22']
DEBUG 2024-06-11 14:50:54,556 - dispatch pc=462, inst=LOAD_FAST(arg=0, lineno=47)
DEBUG 2024-06-11 14:50:54,556 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23']
DEBUG 2024-06-11 14:50:54,556 - dispatch pc=464, inst=LOAD_FAST(arg=9, lineno=47)
DEBUG 2024-06-11 14:50:54,556 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24']
DEBUG 2024-06-11 14:50:54,556 - dispatch pc=466, inst=LOAD_FAST(arg=20, lineno=47)
DEBUG 2024-06-11 14:50:54,556 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25']
DEBUG 2024-06-11 14:50:54,556 - dispatch pc=468, inst=BINARY_OP(arg=10, lineno=47)
DEBUG 2024-06-11 14:50:54,556 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25', '$i466.26']
DEBUG 2024-06-11 14:50:54,556 - dispatch pc=472, inst=BINARY_SUBSCR(arg=None, lineno=47)
DEBUG 2024-06-11 14:50:54,556 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$binop_sub468.27']
DEBUG 2024-06-11 14:50:54,556 - dispatch pc=482, inst=BINARY_OP(arg=5, lineno=47)
DEBUG 2024-06-11 14:50:54,556 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$472binary_subscr.28']
DEBUG 2024-06-11 14:50:54,556 - dispatch pc=486, inst=BINARY_OP(arg=13, lineno=47)
DEBUG 2024-06-11 14:50:54,556 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$binop_mul482.29']
DEBUG 2024-06-11 14:50:54,556 - dispatch pc=490, inst=SWAP(arg=3, lineno=47)
DEBUG 2024-06-11 14:50:54,556 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$binop_iadd486.30']
DEBUG 2024-06-11 14:50:54,556 - dispatch pc=492, inst=SWAP(arg=2, lineno=47)
DEBUG 2024-06-11 14:50:54,556 - stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$t444.21', '$y442.20']
DEBUG 2024-06-11 14:50:54,556 - dispatch pc=494, inst=STORE_SUBSCR(arg=None, lineno=47)
DEBUG 2024-06-11 14:50:54,556 - stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$y442.20', '$t444.21']
DEBUG 2024-06-11 14:50:54,556 - dispatch pc=498, inst=JUMP_BACKWARD(arg=63, lineno=47)
DEBUG 2024-06-11 14:50:54,556 - stack ['$phi376.0', '$phi376.1']
DEBUG 2024-06-11 14:50:54,556 - end state. edges=[Edge(pc=374, stack=('$phi376.0', '$phi376.1'), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:50:54,557 - pending: deque([State(pc_initial=646 nstack_initial=2), State(pc_initial=374 nstack_initial=2)])
DEBUG 2024-06-11 14:50:54,557 - stack: ['$phi646.0', '$phi646.1']
DEBUG 2024-06-11 14:50:54,557 - state.pc_initial: State(pc_initial=646 nstack_initial=2)
DEBUG 2024-06-11 14:50:54,557 - dispatch pc=646, inst=FOR_ITER(arg=65, lineno=61)
DEBUG 2024-06-11 14:50:54,557 - stack ['$phi646.0', '$phi646.1']
DEBUG 2024-06-11 14:50:54,557 - end state. edges=[Edge(pc=778, stack=('$phi646.0',), blockstack=(), npush=0), Edge(pc=648, stack=('$phi646.0', '$phi646.1', '$646for_iter.3'), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:50:54,557 - pending: deque([State(pc_initial=374 nstack_initial=2), State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
DEBUG 2024-06-11 14:50:54,557 - pending: deque([State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
DEBUG 2024-06-11 14:50:54,557 - stack: ['$phi778.0']
DEBUG 2024-06-11 14:50:54,557 - state.pc_initial: State(pc_initial=778 nstack_initial=1)
DEBUG 2024-06-11 14:50:54,557 - dispatch pc=778, inst=NOP(arg=1, lineno=61)
DEBUG 2024-06-11 14:50:54,557 - stack ['$phi778.0']
DEBUG 2024-06-11 14:50:54,557 - dispatch pc=780, inst=JUMP_BACKWARD(arg=303, lineno=61)
DEBUG 2024-06-11 14:50:54,557 - stack ['$phi778.0']
DEBUG 2024-06-11 14:50:54,557 - end state. edges=[Edge(pc=176, stack=('$phi778.0',), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:50:54,557 - pending: deque([State(pc_initial=648 nstack_initial=3), State(pc_initial=176 nstack_initial=1)])
DEBUG 2024-06-11 14:50:54,557 - stack: ['$phi648.0', '$phi648.1', '$phi648.2']
DEBUG 2024-06-11 14:50:54,557 - state.pc_initial: State(pc_initial=648 nstack_initial=3)
DEBUG 2024-06-11 14:50:54,557 - dispatch pc=648, inst=STORE_FAST(arg=22, lineno=61)
DEBUG 2024-06-11 14:50:54,557 - stack ['$phi648.0', '$phi648.1', '$phi648.2']
DEBUG 2024-06-11 14:50:54,557 - dispatch pc=650, inst=LOAD_FAST(arg=2, lineno=63)
DEBUG 2024-06-11 14:50:54,557 - stack ['$phi648.0', '$phi648.1']
DEBUG 2024-06-11 14:50:54,557 - dispatch pc=652, inst=LOAD_FAST(arg=12, lineno=63)
DEBUG 2024-06-11 14:50:54,557 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3']
DEBUG 2024-06-11 14:50:54,557 - dispatch pc=654, inst=LOAD_FAST(arg=22, lineno=63)
DEBUG 2024-06-11 14:50:54,557 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4']
DEBUG 2024-06-11 14:50:54,557 - dispatch pc=656, inst=LOAD_FAST(arg=7, lineno=63)
DEBUG 2024-06-11 14:50:54,557 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5']
DEBUG 2024-06-11 14:50:54,558 - dispatch pc=658, inst=BINARY_OP(arg=5, lineno=63)
DEBUG 2024-06-11 14:50:54,558 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5', '$index_step656.6']
DEBUG 2024-06-11 14:50:54,558 - dispatch pc=662, inst=BINARY_OP(arg=0, lineno=63)
DEBUG 2024-06-11 14:50:54,558 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$binop_mul658.7']
DEBUG 2024-06-11 14:50:54,558 - dispatch pc=666, inst=BINARY_SUBSCR(arg=None, lineno=63)
DEBUG 2024-06-11 14:50:54,558 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$binop_add662.8']
DEBUG 2024-06-11 14:50:54,558 - dispatch pc=676, inst=LOAD_FAST(arg=13, lineno=64)
DEBUG 2024-06-11 14:50:54,558 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9']
DEBUG 2024-06-11 14:50:54,558 - dispatch pc=678, inst=LOAD_FAST(arg=3, lineno=64)
DEBUG 2024-06-11 14:50:54,558 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10']
DEBUG 2024-06-11 14:50:54,558 - dispatch pc=680, inst=LOAD_FAST(arg=12, lineno=64)
DEBUG 2024-06-11 14:50:54,558 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11']
DEBUG 2024-06-11 14:50:54,558 - dispatch pc=682, inst=LOAD_FAST(arg=22, lineno=64)
DEBUG 2024-06-11 14:50:54,558 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12']
DEBUG 2024-06-11 14:50:54,558 - dispatch pc=684, inst=LOAD_FAST(arg=7, lineno=64)
DEBUG 2024-06-11 14:50:54,558 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13']
DEBUG 2024-06-11 14:50:54,558 - dispatch pc=686, inst=BINARY_OP(arg=5, lineno=64)
DEBUG 2024-06-11 14:50:54,558 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13', '$index_step684.14']
DEBUG 2024-06-11 14:50:54,558 - dispatch pc=690, inst=BINARY_OP(arg=0, lineno=64)
DEBUG 2024-06-11 14:50:54,558 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$binop_mul686.15']
DEBUG 2024-06-11 14:50:54,558 - dispatch pc=694, inst=BINARY_SUBSCR(arg=None, lineno=64)
DEBUG 2024-06-11 14:50:54,558 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$binop_add690.16']
DEBUG 2024-06-11 14:50:54,558 - dispatch pc=704, inst=BINARY_OP(arg=5, lineno=64)
DEBUG 2024-06-11 14:50:54,558 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$694binary_subscr.17']
DEBUG 2024-06-11 14:50:54,558 - dispatch pc=708, inst=BINARY_OP(arg=0, lineno=63)
DEBUG 2024-06-11 14:50:54,558 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$binop_mul704.18']
DEBUG 2024-06-11 14:50:54,558 - dispatch pc=712, inst=STORE_FAST(arg=14, lineno=62)
DEBUG 2024-06-11 14:50:54,558 - stack ['$phi648.0', '$phi648.1', '$binop_add708.19']
DEBUG 2024-06-11 14:50:54,559 - dispatch pc=714, inst=LOAD_FAST(arg=6, lineno=66)
DEBUG 2024-06-11 14:50:54,559 - stack ['$phi648.0', '$phi648.1']
DEBUG 2024-06-11 14:50:54,559 - dispatch pc=716, inst=LOAD_FAST(arg=18, lineno=66)
DEBUG 2024-06-11 14:50:54,559 - stack ['$phi648.0', '$phi648.1', '$y714.20']
DEBUG 2024-06-11 14:50:54,559 - dispatch pc=718, inst=COPY(arg=2, lineno=66)
DEBUG 2024-06-11 14:50:54,559 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21']
DEBUG 2024-06-11 14:50:54,559 - dispatch pc=720, inst=COPY(arg=2, lineno=66)
DEBUG 2024-06-11 14:50:54,559 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20']
DEBUG 2024-06-11 14:50:54,559 - dispatch pc=722, inst=BINARY_SUBSCR(arg=None, lineno=66)
DEBUG 2024-06-11 14:50:54,559 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20', '$t716.21']
DEBUG 2024-06-11 14:50:54,559 - dispatch pc=732, inst=LOAD_FAST(arg=14, lineno=66)
DEBUG 2024-06-11 14:50:54,559 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22']
DEBUG 2024-06-11 14:50:54,559 - dispatch pc=734, inst=LOAD_FAST(arg=0, lineno=66)
DEBUG 2024-06-11 14:50:54,559 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23']
DEBUG 2024-06-11 14:50:54,559 - dispatch pc=736, inst=LOAD_FAST(arg=9, lineno=66)
DEBUG 2024-06-11 14:50:54,559 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24']
DEBUG 2024-06-11 14:50:54,559 - dispatch pc=738, inst=LOAD_FAST(arg=22, lineno=66)
DEBUG 2024-06-11 14:50:54,559 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25']
DEBUG 2024-06-11 14:50:54,559 - dispatch pc=740, inst=BINARY_OP(arg=0, lineno=66)
DEBUG 2024-06-11 14:50:54,559 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25', '$k738.26']
DEBUG 2024-06-11 14:50:54,559 - dispatch pc=744, inst=LOAD_CONST(arg=3, lineno=66)
DEBUG 2024-06-11 14:50:54,559 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27']
DEBUG 2024-06-11 14:50:54,559 - dispatch pc=746, inst=BINARY_OP(arg=0, lineno=66)
DEBUG 2024-06-11 14:50:54,559 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27', '$const744.28']
DEBUG 2024-06-11 14:50:54,559 - dispatch pc=750, inst=BINARY_SUBSCR(arg=None, lineno=66)
DEBUG 2024-06-11 14:50:54,559 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add746.29']
DEBUG 2024-06-11 14:50:54,559 - dispatch pc=760, inst=BINARY_OP(arg=5, lineno=66)
DEBUG 2024-06-11 14:50:54,560 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$750binary_subscr.30']
DEBUG 2024-06-11 14:50:54,560 - dispatch pc=764, inst=BINARY_OP(arg=13, lineno=66)
DEBUG 2024-06-11 14:50:54,560 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$binop_mul760.31']
DEBUG 2024-06-11 14:50:54,560 - dispatch pc=768, inst=SWAP(arg=3, lineno=66)
DEBUG 2024-06-11 14:50:54,560 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$binop_iadd764.32']
DEBUG 2024-06-11 14:50:54,560 - dispatch pc=770, inst=SWAP(arg=2, lineno=66)
DEBUG 2024-06-11 14:50:54,560 - stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$t716.21', '$y714.20']
DEBUG 2024-06-11 14:50:54,560 - dispatch pc=772, inst=STORE_SUBSCR(arg=None, lineno=66)
DEBUG 2024-06-11 14:50:54,560 - stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$y714.20', '$t716.21']
DEBUG 2024-06-11 14:50:54,560 - dispatch pc=776, inst=JUMP_BACKWARD(arg=66, lineno=66)
DEBUG 2024-06-11 14:50:54,560 - stack ['$phi648.0', '$phi648.1']
DEBUG 2024-06-11 14:50:54,560 - end state. edges=[Edge(pc=646, stack=('$phi648.0', '$phi648.1'), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:50:54,560 - pending: deque([State(pc_initial=176 nstack_initial=1), State(pc_initial=646 nstack_initial=2)])
DEBUG 2024-06-11 14:50:54,560 - pending: deque([State(pc_initial=646 nstack_initial=2)])
DEBUG 2024-06-11 14:50:54,560 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 14:50:54,560 - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=1): set(),
             State(pc_initial=178 nstack_initial=1): {'$phi178.0'},
             State(pc_initial=180 nstack_initial=2): {'$phi180.1'},
             State(pc_initial=374 nstack_initial=2): {'$phi374.1'},
             State(pc_initial=376 nstack_initial=3): {'$phi376.2'},
             State(pc_initial=500 nstack_initial=1): set(),
             State(pc_initial=646 nstack_initial=2): {'$phi646.1'},
             State(pc_initial=648 nstack_initial=3): {'$phi648.2'},
             State(pc_initial=778 nstack_initial=1): set(),
             State(pc_initial=782 nstack_initial=0): set()})
DEBUG 2024-06-11 14:50:54,560 - defmap: {'$phi176.0': State(pc_initial=0 nstack_initial=0),
 '$phi180.1': State(pc_initial=178 nstack_initial=1),
 '$phi374.1': State(pc_initial=180 nstack_initial=2),
 '$phi376.2': State(pc_initial=374 nstack_initial=2),
 '$phi646.1': State(pc_initial=500 nstack_initial=1),
 '$phi648.2': State(pc_initial=646 nstack_initial=2)}
DEBUG 2024-06-11 14:50:54,560 - phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi778.0',
                            State(pc_initial=778 nstack_initial=1))},
             '$phi178.0': {('$phi176.0',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi180.0': {('$phi178.0',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$phi180.0',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.0',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.1',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi376.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.1': {('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi646.0': {('$phi500.0',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.0',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.1',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi648.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.1': {('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))}})
DEBUG 2024-06-11 14:50:54,561 - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi374.0',
                            State(pc_initial=374 nstack_initial=2)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
DEBUG 2024-06-11 14:50:54,561 - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
DEBUG 2024-06-11 14:50:54,562 - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
DEBUG 2024-06-11 14:50:54,562 - keep phismap: {'$phi178.0': {('$174get_iter.29', State(pc_initial=0 nstack_initial=0))},
 '$phi180.1': {('$178for_iter.2', State(pc_initial=178 nstack_initial=1))},
 '$phi374.1': {('$372get_iter.39', State(pc_initial=180 nstack_initial=2))},
 '$phi376.2': {('$374for_iter.3', State(pc_initial=374 nstack_initial=2))},
 '$phi646.1': {('$644get_iter.31', State(pc_initial=500 nstack_initial=1))},
 '$phi648.2': {('$646for_iter.3', State(pc_initial=646 nstack_initial=2))}}
DEBUG 2024-06-11 14:50:54,562 - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi178.0': '$174get_iter.29'},
             State(pc_initial=178 nstack_initial=1): {'$phi180.1': '$178for_iter.2'},
             State(pc_initial=180 nstack_initial=2): {'$phi374.1': '$372get_iter.39'},
             State(pc_initial=374 nstack_initial=2): {'$phi376.2': '$374for_iter.3'},
             State(pc_initial=500 nstack_initial=1): {'$phi646.1': '$644get_iter.31'},
             State(pc_initial=646 nstack_initial=2): {'$phi648.2': '$646for_iter.3'}})
DEBUG 2024-06-11 14:50:54,562 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 14:50:54,562 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$scale16.2'}), (18, {'res': '$num_table18.3'}), (20, {'op': '*', 'lhs': '$scale16.2', 'rhs': '$num_table18.3', 'res': '$binop_mul20.4'}), (22, {}), (24, {}), (26, {}), (28, {'func': '$4load_global.0', 'args': ['$binop_mul20.4'], 'kw_names': None, 'res': '$28call.5'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {'value': '$28call.5'}), (40, {'res': '$const40.6'}), (42, {'value': '$const40.6'}), (44, {'res': '$const44.7'}), (46, {'value': '$const44.7'}), (48, {'res': '$const48.8'}), (50, {'value': '$const48.8'}), (52, {'res': '$const52.9'}), (54, {'value': '$const52.9'}), (56, {'res': '$const56.10'}), (58, {'value': '$const56.10'}), (60, {'res': '$const60.11'}), (62, {'value': '$const60.11'}), (64, {'res': '$const64.12'}), (66, {'value': '$const64.12'}), (68, {'res': '$interp_win68.13'}), (70, {'item': '$interp_win68.13', 'res': '$70load_attr.14'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$const80.15'}), (82, {'index': '$const80.15', 'target': '$70load_attr.14', 'res': '$82binary_subscr.16'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82binary_subscr.16'}), (94, {'res': '$x94.17'}), (96, {'item': '$x94.17', 'res': '$96load_attr.18'}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {'res': '$const106.19'}), (108, {'index': '$const106.19', 'target': '$96load_attr.18', 'res': '$108binary_subscr.20'}), (110, {}), (112, {}), (114, {}), (116, {}), (118, {'value': '$108binary_subscr.20'}), (120, {'res': '$t_out120.21'}), (122, {'item': '$t_out120.21', 'res': '$122load_attr.22'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {'res': '$const132.23'}), (134, {'index': '$const132.23', 'target': '$122load_attr.22', 'res': '$134binary_subscr.24'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {'value': '$134binary_subscr.24'}), (146, {'idx': 2, 'res': '$146load_global.25'}), (148, {}), (150, {}), (152, {}), (154, {}), (156, {}), (158, {'res': '$n_out158.27'}), (160, {}), (162, {}), (164, {'func': '$146load_global.25', 'args': ['$n_out158.27'], 'kw_names': None, 'res': '$164call.28'}), (166, {}), (168, {}), (170, {}), (172, {}), (174, {'value': '$164call.28', 'res': '$174get_iter.29'})), outgoing_phis={'$phi178.0': '$174get_iter.29'}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$174get_iter.29',)})
DEBUG 2024-06-11 14:50:54,562 - block_infos State(pc_initial=176 nstack_initial=1):
AdaptBlockInfo(insts=((176, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={178: ('$phi176.0',)})
DEBUG 2024-06-11 14:50:54,562 - block_infos State(pc_initial=178 nstack_initial=1):
AdaptBlockInfo(insts=((178, {'iterator': '$phi178.0', 'pair': '$178for_iter.1', 'indval': '$178for_iter.2', 'pred': '$178for_iter.3'}),), outgoing_phis={'$phi180.1': '$178for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={782: (), 180: ('$phi178.0', '$178for_iter.2')})
DEBUG 2024-06-11 14:50:54,562 - block_infos State(pc_initial=180 nstack_initial=2):
AdaptBlockInfo(insts=((180, {'value': '$phi180.1'}), (182, {'res': '$t_out182.2'}), (184, {'res': '$t184.3'}), (186, {'index': '$t184.3', 'target': '$t_out182.2', 'res': '$186binary_subscr.4'}), (188, {}), (190, {}), (192, {}), (194, {}), (196, {'value': '$186binary_subscr.4'}), (198, {'idx': 0, 'res': '$198load_global.5'}), (200, {}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'res': '$time_register210.7'}), (212, {}), (214, {}), (216, {'func': '$198load_global.5', 'args': ['$time_register210.7'], 'kw_names': None, 'res': '$216call.8'}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {'value': '$216call.8'}), (228, {'res': '$scale228.9'}), (230, {'res': '$time_register230.10'}), (232, {'res': '$n232.11'}), (234, {'op': '-', 'lhs': '$time_register230.10', 'rhs': '$n232.11', 'res': '$binop_sub234.12'}), (236, {}), (238, {'op': '*', 'lhs': '$scale228.9', 'rhs': '$binop_sub234.12', 'res': '$binop_mul238.13'}), (240, {}), (242, {'value': '$binop_mul238.13'}), (244, {'res': '$frac244.14'}), (246, {'res': '$num_table246.15'}), (248, {'op': '*', 'lhs': '$frac244.14', 'rhs': '$num_table246.15', 'res': '$binop_mul248.16'}), (250, {}), (252, {'value': '$binop_mul248.16'}), (254, {'idx': 0, 'res': '$254load_global.17'}), (256, {}), (258, {}), (260, {}), (262, {}), (264, {}), (266, {'res': '$index_frac266.19'}), (268, {}), (270, {}), (272, {'func': '$254load_global.17', 'args': ['$index_frac266.19'], 'kw_names': None, 'res': '$272call.20'}), (274, {}), (276, {}), (278, {}), (280, {}), (282, {'value': '$272call.20'}), (284, {'res': '$index_frac284.21'}), (286, {'res': '$offset286.22'}), (288, {'op': '-', 'lhs': '$index_frac284.21', 'rhs': '$offset286.22', 'res': '$binop_sub288.23'}), (290, {}), (292, {'value': '$binop_sub288.23'}), (294, {'idx': 3, 'res': '$294load_global.24'}), (296, {}), (298, {}), (300, {}), (302, {}), (304, {}), (306, {'res': '$n306.26'}), (308, {'res': '$const308.27'}), (310, {'op': '+', 'lhs': '$n306.26', 'rhs': '$const308.27', 'res': '$binop_add310.28'}), (312, {}), (314, {'res': '$nwin314.29'}), (316, {'res': '$offset316.30'}), (318, {'op': '-', 'lhs': '$nwin314.29', 'rhs': '$offset316.30', 'res': '$binop_sub318.31'}), (320, {}), (322, {'res': '$index_step322.32'}), (324, {'op': '//', 'lhs': '$binop_sub318.31', 'rhs': '$index_step322.32', 'res': '$binop_floordiv324.33'}), (326, {}), (328, {}), (330, {}), (332, {'func': '$294load_global.24', 'args': ['$binop_add310.28', '$binop_floordiv324.33'], 'kw_names': None, 'res': '$332call.34'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'value': '$332call.34'}), (344, {'idx': 4, 'res': '$344load_global.35'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {}), (356, {'res': '$i_max356.37'}), (358, {}), (360, {}), (362, {'func': '$344load_global.35', 'args': ['$i_max356.37'], 'kw_names': None, 'res': '$362call.38'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {'value': '$362call.38', 'res': '$372get_iter.39'})), outgoing_phis={'$phi374.1': '$372get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi180.0', '$372get_iter.39')})
DEBUG 2024-06-11 14:50:54,563 - block_infos State(pc_initial=374 nstack_initial=2):
AdaptBlockInfo(insts=((374, {'iterator': '$phi374.1', 'pair': '$374for_iter.2', 'indval': '$374for_iter.3', 'pred': '$374for_iter.4'}),), outgoing_phis={'$phi376.2': '$374for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={500: ('$phi374.0',), 376: ('$phi374.0', '$phi374.1', '$374for_iter.3')})
DEBUG 2024-06-11 14:50:54,563 - block_infos State(pc_initial=376 nstack_initial=3):
AdaptBlockInfo(insts=((376, {'value': '$phi376.2'}), (378, {'res': '$interp_win378.3'}), (380, {'res': '$offset380.4'}), (382, {'res': '$i382.5'}), (384, {'res': '$index_step384.6'}), (386, {'op': '*', 'lhs': '$i382.5', 'rhs': '$index_step384.6', 'res': '$binop_mul386.7'}), (388, {}), (390, {'op': '+', 'lhs': '$offset380.4', 'rhs': '$binop_mul386.7', 'res': '$binop_add390.8'}), (392, {}), (394, {'index': '$binop_add390.8', 'target': '$interp_win378.3', 'res': '$394binary_subscr.9'}), (396, {}), (398, {}), (400, {}), (402, {}), (404, {'res': '$eta404.10'}), (406, {'res': '$interp_delta406.11'}), (408, {'res': '$offset408.12'}), (410, {'res': '$i410.13'}), (412, {'res': '$index_step412.14'}), (414, {'op': '*', 'lhs': '$i410.13', 'rhs': '$index_step412.14', 'res': '$binop_mul414.15'}), (416, {}), (418, {'op': '+', 'lhs': '$offset408.12', 'rhs': '$binop_mul414.15', 'res': '$binop_add418.16'}), (420, {}), (422, {'index': '$binop_add418.16', 'target': '$interp_delta406.11', 'res': '$422binary_subscr.17'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {'op': '*', 'lhs': '$eta404.10', 'rhs': '$422binary_subscr.17', 'res': '$binop_mul432.18'}), (434, {}), (436, {'op': '+', 'lhs': '$394binary_subscr.9', 'rhs': '$binop_mul432.18', 'res': '$binop_add436.19'}), (438, {}), (440, {'value': '$binop_add436.19'}), (442, {'res': '$y442.20'}), (444, {'res': '$t444.21'}), (450, {'index': '$t444.21', 'target': '$y442.20', 'res': '$450binary_subscr.22'}), (452, {}), (454, {}), (456, {}), (458, {}), (460, {'res': '$weight460.23'}), (462, {'res': '$x462.24'}), (464, {'res': '$n464.25'}), (466, {'res': '$i466.26'}), (468, {'op': '-', 'lhs': '$n464.25', 'rhs': '$i466.26', 'res': '$binop_sub468.27'}), (470, {}), (472, {'index': '$binop_sub468.27', 'target': '$x462.24', 'res': '$472binary_subscr.28'}), (474, {}), (476, {}), (478, {}), (480, {}), (482, {'op': '*', 'lhs': '$weight460.23', 'rhs': '$472binary_subscr.28', 'res': '$binop_mul482.29'}), (484, {}), (486, {'op': '+=', 'lhs': '$450binary_subscr.22', 'rhs': '$binop_mul482.29', 'res': '$binop_iadd486.30'}), (488, {}), (494, {'target': '$y442.20', 'index': '$t444.21', 'value': '$binop_iadd486.30'}), (496, {}), (498, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi376.0', '$phi376.1')})
DEBUG 2024-06-11 14:50:54,563 - block_infos State(pc_initial=500 nstack_initial=1):
AdaptBlockInfo(insts=((500, {'res': '$scale500.1'}), (502, {'res': '$frac502.2'}), (504, {'op': '-', 'lhs': '$scale500.1', 'rhs': '$frac502.2', 'res': '$binop_sub504.3'}), (506, {}), (508, {'value': '$binop_sub504.3'}), (510, {'res': '$frac510.4'}), (512, {'res': '$num_table512.5'}), (514, {'op': '*', 'lhs': '$frac510.4', 'rhs': '$num_table512.5', 'res': '$binop_mul514.6'}), (516, {}), (518, {'value': '$binop_mul514.6'}), (520, {'idx': 0, 'res': '$520load_global.7'}), (522, {}), (524, {}), (526, {}), (528, {}), (530, {}), (532, {'res': '$index_frac532.9'}), (534, {}), (536, {}), (538, {'func': '$520load_global.7', 'args': ['$index_frac532.9'], 'kw_names': None, 'res': '$538call.10'}), (540, {}), (542, {}), (544, {}), (546, {}), (548, {'value': '$538call.10'}), (550, {'res': '$index_frac550.11'}), (552, {'res': '$offset552.12'}), (554, {'op': '-', 'lhs': '$index_frac550.11', 'rhs': '$offset552.12', 'res': '$binop_sub554.13'}), (556, {}), (558, {'value': '$binop_sub554.13'}), (560, {'idx': 3, 'res': '$560load_global.14'}), (562, {}), (564, {}), (566, {}), (568, {}), (570, {}), (572, {'res': '$n_orig572.16'}), (574, {'res': '$n574.17'}), (576, {'op': '-', 'lhs': '$n_orig572.16', 'rhs': '$n574.17', 'res': '$binop_sub576.18'}), (578, {}), (580, {'res': '$const580.19'}), (582, {'op': '-', 'lhs': '$binop_sub576.18', 'rhs': '$const580.19', 'res': '$binop_sub582.20'}), (584, {}), (586, {'res': '$nwin586.21'}), (588, {'res': '$offset588.22'}), (590, {'op': '-', 'lhs': '$nwin586.21', 'rhs': '$offset588.22', 'res': '$binop_sub590.23'}), (592, {}), (594, {'res': '$index_step594.24'}), (596, {'op': '//', 'lhs': '$binop_sub590.23', 'rhs': '$index_step594.24', 'res': '$binop_floordiv596.25'}), (598, {}), (600, {}), (602, {}), (604, {'func': '$560load_global.14', 'args': ['$binop_sub582.20', '$binop_floordiv596.25'], 'kw_names': None, 'res': '$604call.26'}), (606, {}), (608, {}), (610, {}), (612, {}), (614, {'value': '$604call.26'}), (616, {'idx': 4, 'res': '$616load_global.27'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {}), (628, {'res': '$k_max628.29'}), (630, {}), (632, {}), (634, {'func': '$616load_global.27', 'args': ['$k_max628.29'], 'kw_names': None, 'res': '$634call.30'}), (636, {}), (638, {}), (640, {}), (642, {}), (644, {'value': '$634call.30', 'res': '$644get_iter.31'})), outgoing_phis={'$phi646.1': '$644get_iter.31'}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi500.0', '$644get_iter.31')})
DEBUG 2024-06-11 14:50:54,563 - block_infos State(pc_initial=646 nstack_initial=2):
AdaptBlockInfo(insts=((646, {'iterator': '$phi646.1', 'pair': '$646for_iter.2', 'indval': '$646for_iter.3', 'pred': '$646for_iter.4'}),), outgoing_phis={'$phi648.2': '$646for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={778: ('$phi646.0',), 648: ('$phi646.0', '$phi646.1', '$646for_iter.3')})
DEBUG 2024-06-11 14:50:54,563 - block_infos State(pc_initial=648 nstack_initial=3):
AdaptBlockInfo(insts=((648, {'value': '$phi648.2'}), (650, {'res': '$interp_win650.3'}), (652, {'res': '$offset652.4'}), (654, {'res': '$k654.5'}), (656, {'res': '$index_step656.6'}), (658, {'op': '*', 'lhs': '$k654.5', 'rhs': '$index_step656.6', 'res': '$binop_mul658.7'}), (660, {}), (662, {'op': '+', 'lhs': '$offset652.4', 'rhs': '$binop_mul658.7', 'res': '$binop_add662.8'}), (664, {}), (666, {'index': '$binop_add662.8', 'target': '$interp_win650.3', 'res': '$666binary_subscr.9'}), (668, {}), (670, {}), (672, {}), (674, {}), (676, {'res': '$eta676.10'}), (678, {'res': '$interp_delta678.11'}), (680, {'res': '$offset680.12'}), (682, {'res': '$k682.13'}), (684, {'res': '$index_step684.14'}), (686, {'op': '*', 'lhs': '$k682.13', 'rhs': '$index_step684.14', 'res': '$binop_mul686.15'}), (688, {}), (690, {'op': '+', 'lhs': '$offset680.12', 'rhs': '$binop_mul686.15', 'res': '$binop_add690.16'}), (692, {}), (694, {'index': '$binop_add690.16', 'target': '$interp_delta678.11', 'res': '$694binary_subscr.17'}), (696, {}), (698, {}), (700, {}), (702, {}), (704, {'op': '*', 'lhs': '$eta676.10', 'rhs': '$694binary_subscr.17', 'res': '$binop_mul704.18'}), (706, {}), (708, {'op': '+', 'lhs': '$666binary_subscr.9', 'rhs': '$binop_mul704.18', 'res': '$binop_add708.19'}), (710, {}), (712, {'value': '$binop_add708.19'}), (714, {'res': '$y714.20'}), (716, {'res': '$t716.21'}), (722, {'index': '$t716.21', 'target': '$y714.20', 'res': '$722binary_subscr.22'}), (724, {}), (726, {}), (728, {}), (730, {}), (732, {'res': '$weight732.23'}), (734, {'res': '$x734.24'}), (736, {'res': '$n736.25'}), (738, {'res': '$k738.26'}), (740, {'op': '+', 'lhs': '$n736.25', 'rhs': '$k738.26', 'res': '$binop_add740.27'}), (742, {}), (744, {'res': '$const744.28'}), (746, {'op': '+', 'lhs': '$binop_add740.27', 'rhs': '$const744.28', 'res': '$binop_add746.29'}), (748, {}), (750, {'index': '$binop_add746.29', 'target': '$x734.24', 'res': '$750binary_subscr.30'}), (752, {}), (754, {}), (756, {}), (758, {}), (760, {'op': '*', 'lhs': '$weight732.23', 'rhs': '$750binary_subscr.30', 'res': '$binop_mul760.31'}), (762, {}), (764, {'op': '+=', 'lhs': '$722binary_subscr.22', 'rhs': '$binop_mul760.31', 'res': '$binop_iadd764.32'}), (766, {}), (772, {'target': '$y714.20', 'index': '$t716.21', 'value': '$binop_iadd764.32'}), (774, {}), (776, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi648.0', '$phi648.1')})
DEBUG 2024-06-11 14:50:54,563 - block_infos State(pc_initial=778 nstack_initial=1):
AdaptBlockInfo(insts=((778, {}), (780, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$phi778.0',)})
DEBUG 2024-06-11 14:50:54,563 - block_infos State(pc_initial=782 nstack_initial=0):
AdaptBlockInfo(insts=((782, {'res': '$const782.0'}), (784, {'retval': '$const782.0', 'castval': '$784return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 14:50:54,566 - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(int: <class 'int'>) ['$4load_global.0']
    $binop_mul20.4 = scale * num_table       ['$binop_mul20.4', 'num_table', 'scale']
    index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_global.0', '$binop_mul20.4', 'index_step']
    time_register = const(float, 0.0)        ['time_register']
    n = const(int, 0)                        ['n']
    frac = const(float, 0.0)                 ['frac']
    index_frac = const(float, 0.0)           ['index_frac']
    offset = const(int, 0)                   ['offset']
    eta = const(float, 0.0)                  ['eta']
    weight = const(float, 0.0)               ['weight']
    $70load_attr.14 = getattr(value=interp_win, attr=shape) ['$70load_attr.14', 'interp_win']
    $const80.15 = const(int, 0)              ['$const80.15']
    nwin = getitem(value=$70load_attr.14, index=$const80.15, fn=<built-in function getitem>) ['$70load_attr.14', '$const80.15', 'nwin']
    $96load_attr.18 = getattr(value=x, attr=shape) ['$96load_attr.18', 'x']
    $const106.19 = const(int, 0)             ['$const106.19']
    n_orig = getitem(value=$96load_attr.18, index=$const106.19, fn=<built-in function getitem>) ['$96load_attr.18', '$const106.19', 'n_orig']
    $122load_attr.22 = getattr(value=t_out, attr=shape) ['$122load_attr.22', 't_out']
    $const132.23 = const(int, 0)             ['$const132.23']
    n_out = getitem(value=$122load_attr.22, index=$const132.23, fn=<built-in function getitem>) ['$122load_attr.22', '$const132.23', 'n_out']
    $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>) ['$146load_global.25']
    $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None) ['$146load_global.25', '$164call.28', 'n_out']
    $174get_iter.29 = getiter(value=$164call.28) ['$164call.28', '$174get_iter.29']
    $phi178.0 = $174get_iter.29              ['$174get_iter.29', '$phi178.0']
    jump 176                                 []
label 176:
    jump 178                                 []
label 178:
    $178for_iter.1 = iternext(value=$phi178.0) ['$178for_iter.1', '$phi178.0']
    $178for_iter.2 = pair_first(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.2']
    $178for_iter.3 = pair_second(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.3']
    $phi180.1 = $178for_iter.2               ['$178for_iter.2', '$phi180.1']
    branch $178for_iter.3, 180, 782          ['$178for_iter.3']
label 180:
    t = $phi180.1                            ['$phi180.1', 't']
    time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>) ['t', 't_out', 'time_register']
    $198load_global.5 = global(int: <class 'int'>) ['$198load_global.5']
    n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None) ['$198load_global.5', 'n', 'time_register']
    $binop_sub234.12 = time_register - n     ['$binop_sub234.12', 'n', 'time_register']
    frac = scale * $binop_sub234.12          ['$binop_sub234.12', 'frac', 'scale']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $254load_global.17 = global(int: <class 'int'>) ['$254load_global.17']
    offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$254load_global.17', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $294load_global.24 = global(min: <built-in function min>) ['$294load_global.24']
    $const308.27 = const(int, 1)             ['$const308.27']
    $binop_add310.28 = n + $const308.27      ['$binop_add310.28', '$const308.27', 'n']
    $binop_sub318.31 = nwin - offset         ['$binop_sub318.31', 'nwin', 'offset']
    $binop_floordiv324.33 = $binop_sub318.31 // index_step ['$binop_floordiv324.33', '$binop_sub318.31', 'index_step']
    i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33', 'i_max']
    $344load_global.35 = global(range: <class 'range'>) ['$344load_global.35']
    $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$344load_global.35', '$362call.38', 'i_max']
    $372get_iter.39 = getiter(value=$362call.38) ['$362call.38', '$372get_iter.39']
    $phi374.1 = $372get_iter.39              ['$372get_iter.39', '$phi374.1']
    jump 374                                 []
label 374:
    $374for_iter.2 = iternext(value=$phi374.1) ['$374for_iter.2', '$phi374.1']
    $374for_iter.3 = pair_first(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.3']
    $374for_iter.4 = pair_second(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.4']
    $phi376.2 = $374for_iter.3               ['$374for_iter.3', '$phi376.2']
    branch $374for_iter.4, 376, 500          ['$374for_iter.4']
label 376:
    i = $phi376.2                            ['$phi376.2', 'i']
    $binop_mul386.7 = i * index_step         ['$binop_mul386.7', 'i', 'index_step']
    $binop_add390.8 = offset + $binop_mul386.7 ['$binop_add390.8', '$binop_mul386.7', 'offset']
    $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>) ['$394binary_subscr.9', '$binop_add390.8', 'interp_win']
    $binop_mul414.15 = i * index_step        ['$binop_mul414.15', 'i', 'index_step']
    $binop_add418.16 = offset + $binop_mul414.15 ['$binop_add418.16', '$binop_mul414.15', 'offset']
    $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>) ['$422binary_subscr.17', '$binop_add418.16', 'interp_delta']
    $binop_mul432.18 = eta * $422binary_subscr.17 ['$422binary_subscr.17', '$binop_mul432.18', 'eta']
    weight = $394binary_subscr.9 + $binop_mul432.18 ['$394binary_subscr.9', '$binop_mul432.18', 'weight']
    $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$450binary_subscr.22', 't', 'y']
    $binop_sub468.27 = n - i                 ['$binop_sub468.27', 'i', 'n']
    $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>) ['$472binary_subscr.28', '$binop_sub468.27', 'x']
    $binop_mul482.29 = weight * $472binary_subscr.28 ['$472binary_subscr.28', '$binop_mul482.29', 'weight']
    $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined) ['$450binary_subscr.22', '$binop_iadd486.30', '$binop_mul482.29']
    y[t] = $binop_iadd486.30                 ['$binop_iadd486.30', 't', 'y']
    jump 374                                 []
label 500:
    $binop_sub504.3 = scale - frac           ['$binop_sub504.3', 'frac', 'scale']
    frac = $binop_sub504.3                   ['$binop_sub504.3', 'frac']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $520load_global.7 = global(int: <class 'int'>) ['$520load_global.7']
    offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$520load_global.7', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $560load_global.14 = global(min: <built-in function min>) ['$560load_global.14']
    $binop_sub576.18 = n_orig - n            ['$binop_sub576.18', 'n', 'n_orig']
    $const580.19 = const(int, 1)             ['$const580.19']
    $binop_sub582.20 = $binop_sub576.18 - $const580.19 ['$binop_sub576.18', '$binop_sub582.20', '$const580.19']
    $binop_sub590.23 = nwin - offset         ['$binop_sub590.23', 'nwin', 'offset']
    $binop_floordiv596.25 = $binop_sub590.23 // index_step ['$binop_floordiv596.25', '$binop_sub590.23', 'index_step']
    k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$560load_global.14', '$binop_floordiv596.25', '$binop_sub582.20', 'k_max']
    $616load_global.27 = global(range: <class 'range'>) ['$616load_global.27']
    $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$616load_global.27', '$634call.30', 'k_max']
    $644get_iter.31 = getiter(value=$634call.30) ['$634call.30', '$644get_iter.31']
    $phi646.1 = $644get_iter.31              ['$644get_iter.31', '$phi646.1']
    jump 646                                 []
label 646:
    $646for_iter.2 = iternext(value=$phi646.1) ['$646for_iter.2', '$phi646.1']
    $646for_iter.3 = pair_first(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.3']
    $646for_iter.4 = pair_second(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.4']
    $phi648.2 = $646for_iter.3               ['$646for_iter.3', '$phi648.2']
    branch $646for_iter.4, 648, 778          ['$646for_iter.4']
label 648:
    k = $phi648.2                            ['$phi648.2', 'k']
    $binop_mul658.7 = k * index_step         ['$binop_mul658.7', 'index_step', 'k']
    $binop_add662.8 = offset + $binop_mul658.7 ['$binop_add662.8', '$binop_mul658.7', 'offset']
    $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>) ['$666binary_subscr.9', '$binop_add662.8', 'interp_win']
    $binop_mul686.15 = k * index_step        ['$binop_mul686.15', 'index_step', 'k']
    $binop_add690.16 = offset + $binop_mul686.15 ['$binop_add690.16', '$binop_mul686.15', 'offset']
    $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>) ['$694binary_subscr.17', '$binop_add690.16', 'interp_delta']
    $binop_mul704.18 = eta * $694binary_subscr.17 ['$694binary_subscr.17', '$binop_mul704.18', 'eta']
    weight = $666binary_subscr.9 + $binop_mul704.18 ['$666binary_subscr.9', '$binop_mul704.18', 'weight']
    $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$722binary_subscr.22', 't', 'y']
    $binop_add740.27 = n + k                 ['$binop_add740.27', 'k', 'n']
    $const744.28 = const(int, 1)             ['$const744.28']
    $binop_add746.29 = $binop_add740.27 + $const744.28 ['$binop_add740.27', '$binop_add746.29', '$const744.28']
    $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>) ['$750binary_subscr.30', '$binop_add746.29', 'x']
    $binop_mul760.31 = weight * $750binary_subscr.30 ['$750binary_subscr.30', '$binop_mul760.31', 'weight']
    $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined) ['$722binary_subscr.22', '$binop_iadd764.32', '$binop_mul760.31']
    y[t] = $binop_iadd764.32                 ['$binop_iadd764.32', 't', 'y']
    jump 646                                 []
label 778:
    jump 176                                 []
label 782:
    $const782.0 = const(NoneType, None)      ['$const782.0']
    $784return_value.1 = cast(value=$const782.0) ['$784return_value.1', '$const782.0']
    return $784return_value.1                ['$784return_value.1']

DEBUG 2024-06-11 14:50:54,588 - ==== SSA block analysis pass on 0
DEBUG 2024-06-11 14:50:54,588 - Running <numba.core.ssa._GatherDefsHandler object at 0x000002C654231890>
DEBUG 2024-06-11 14:50:54,588 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:50:54,588 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:50:54,588 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:50:54,588 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:50:54,588 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:50:54,588 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:50:54,588 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:50:54,588 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,588 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:50:54,588 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,588 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,588 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:50:54,588 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,588 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,588 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:50:54,588 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,589 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,589 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:50:54,589 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:50:54,589 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,589 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:50:54,589 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:50:54,589 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,589 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:50:54,589 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:50:54,589 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,589 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:50:54,589 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,589 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:50:54,589 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:50:54,589 - on stmt: jump 176
DEBUG 2024-06-11 14:50:54,589 - ==== SSA block analysis pass on 176
DEBUG 2024-06-11 14:50:54,589 - Running <numba.core.ssa._GatherDefsHandler object at 0x000002C654231890>
DEBUG 2024-06-11 14:50:54,589 - on stmt: jump 178
DEBUG 2024-06-11 14:50:54,589 - ==== SSA block analysis pass on 178
DEBUG 2024-06-11 14:50:54,589 - Running <numba.core.ssa._GatherDefsHandler object at 0x000002C654231890>
DEBUG 2024-06-11 14:50:54,589 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:50:54,589 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:50:54,589 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:50:54,590 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:50:54,590 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:50:54,590 - ==== SSA block analysis pass on 180
DEBUG 2024-06-11 14:50:54,590 - Running <numba.core.ssa._GatherDefsHandler object at 0x000002C654231890>
DEBUG 2024-06-11 14:50:54,590 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:50:54,590 - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,590 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,590 - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,590 - on stmt: $binop_sub234.12 = time_register - n
DEBUG 2024-06-11 14:50:54,590 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 14:50:54,590 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:50:54,590 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,590 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,590 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:50:54,590 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:50:54,590 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:50:54,590 - on stmt: $binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 14:50:54,590 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:50:54,590 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:50:54,590 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,590 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:50:54,590 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,590 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:50:54,591 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:50:54,591 - on stmt: jump 374
DEBUG 2024-06-11 14:50:54,591 - ==== SSA block analysis pass on 374
DEBUG 2024-06-11 14:50:54,591 - Running <numba.core.ssa._GatherDefsHandler object at 0x000002C654231890>
DEBUG 2024-06-11 14:50:54,591 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:50:54,591 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:50:54,591 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:50:54,591 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:50:54,591 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:50:54,591 - ==== SSA block analysis pass on 376
DEBUG 2024-06-11 14:50:54,591 - Running <numba.core.ssa._GatherDefsHandler object at 0x000002C654231890>
DEBUG 2024-06-11 14:50:54,591 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:50:54,591 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:50:54,591 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:50:54,591 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,591 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:50:54,591 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:50:54,591 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,591 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:50:54,591 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:50:54,591 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,591 - on stmt: $binop_sub468.27 = n - i
DEBUG 2024-06-11 14:50:54,591 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,591 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:50:54,591 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:50:54,591 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:50:54,592 - on stmt: jump 374
DEBUG 2024-06-11 14:50:54,592 - ==== SSA block analysis pass on 500
DEBUG 2024-06-11 14:50:54,592 - Running <numba.core.ssa._GatherDefsHandler object at 0x000002C654231890>
DEBUG 2024-06-11 14:50:54,592 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 14:50:54,592 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 14:50:54,592 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:50:54,592 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,592 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,592 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:50:54,592 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:50:54,592 - on stmt: $binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 14:50:54,592 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:50:54,592 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:50:54,592 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:50:54,592 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:50:54,592 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,592 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:50:54,592 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,592 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:50:54,592 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:50:54,592 - on stmt: jump 646
DEBUG 2024-06-11 14:50:54,592 - ==== SSA block analysis pass on 646
DEBUG 2024-06-11 14:50:54,592 - Running <numba.core.ssa._GatherDefsHandler object at 0x000002C654231890>
DEBUG 2024-06-11 14:50:54,593 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:50:54,593 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:50:54,593 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:50:54,593 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:50:54,593 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:50:54,593 - ==== SSA block analysis pass on 648
DEBUG 2024-06-11 14:50:54,593 - Running <numba.core.ssa._GatherDefsHandler object at 0x000002C654231890>
DEBUG 2024-06-11 14:50:54,593 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:50:54,593 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:50:54,593 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:50:54,593 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,593 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:50:54,593 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:50:54,593 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,593 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:50:54,593 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:50:54,593 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,593 - on stmt: $binop_add740.27 = n + k
DEBUG 2024-06-11 14:50:54,593 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:50:54,594 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:50:54,594 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,594 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:50:54,594 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:50:54,594 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:50:54,594 - on stmt: jump 646
DEBUG 2024-06-11 14:50:54,594 - ==== SSA block analysis pass on 778
DEBUG 2024-06-11 14:50:54,594 - Running <numba.core.ssa._GatherDefsHandler object at 0x000002C654231890>
DEBUG 2024-06-11 14:50:54,594 - on stmt: jump 176
DEBUG 2024-06-11 14:50:54,594 - ==== SSA block analysis pass on 782
DEBUG 2024-06-11 14:50:54,594 - Running <numba.core.ssa._GatherDefsHandler object at 0x000002C654231890>
DEBUG 2024-06-11 14:50:54,594 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:50:54,594 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:50:54,594 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:50:54,597 - defs defaultdict(<class 'list'>,
            {'$122load_attr.22': [(<numba.core.ir.Assign object at 0x000002C654216250>,
                                   0)],
             '$146load_global.25': [(<numba.core.ir.Assign object at 0x000002C654214490>,
                                     0)],
             '$164call.28': [(<numba.core.ir.Assign object at 0x000002C654215E50>,
                              0)],
             '$174get_iter.29': [(<numba.core.ir.Assign object at 0x000002C654212ED0>,
                                  0)],
             '$178for_iter.1': [(<numba.core.ir.Assign object at 0x000002C654213410>,
                                 178)],
             '$178for_iter.2': [(<numba.core.ir.Assign object at 0x000002C654213E10>,
                                 178)],
             '$178for_iter.3': [(<numba.core.ir.Assign object at 0x000002C654213B50>,
                                 178)],
             '$198load_global.5': [(<numba.core.ir.Assign object at 0x000002C654212F10>,
                                    180)],
             '$254load_global.17': [(<numba.core.ir.Assign object at 0x000002C654210350>,
                                     180)],
             '$294load_global.24': [(<numba.core.ir.Assign object at 0x000002C654212B50>,
                                     180)],
             '$344load_global.35': [(<numba.core.ir.Assign object at 0x000002C654224CD0>,
                                     180)],
             '$362call.38': [(<numba.core.ir.Assign object at 0x000002C654227D50>,
                              180)],
             '$372get_iter.39': [(<numba.core.ir.Assign object at 0x000002C654227B10>,
                                  180)],
             '$374for_iter.2': [(<numba.core.ir.Assign object at 0x000002C6542131D0>,
                                 374)],
             '$374for_iter.3': [(<numba.core.ir.Assign object at 0x000002C654211550>,
                                 374)],
             '$374for_iter.4': [(<numba.core.ir.Assign object at 0x000002C654210B10>,
                                 374)],
             '$394binary_subscr.9': [(<numba.core.ir.Assign object at 0x000002C654227150>,
                                      376)],
             '$422binary_subscr.17': [(<numba.core.ir.Assign object at 0x000002C654226350>,
                                       376)],
             '$450binary_subscr.22': [(<numba.core.ir.Assign object at 0x000002C654225610>,
                                       376)],
             '$472binary_subscr.28': [(<numba.core.ir.Assign object at 0x000002C6541DE950>,
                                       376)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000002C654233810>,
                                  0)],
             '$520load_global.7': [(<numba.core.ir.Assign object at 0x000002C6541DDB10>,
                                    500)],
             '$560load_global.14': [(<numba.core.ir.Assign object at 0x000002C6541DD550>,
                                     500)],
             '$616load_global.27': [(<numba.core.ir.Assign object at 0x000002C6541BFB10>,
                                     500)],
             '$634call.30': [(<numba.core.ir.Assign object at 0x000002C6541BFC50>,
                              500)],
             '$644get_iter.31': [(<numba.core.ir.Assign object at 0x000002C6541BEED0>,
                                  500)],
             '$646for_iter.2': [(<numba.core.ir.Assign object at 0x000002C6541DE3D0>,
                                 646)],
             '$646for_iter.3': [(<numba.core.ir.Assign object at 0x000002C6541DC890>,
                                 646)],
             '$646for_iter.4': [(<numba.core.ir.Assign object at 0x000002C6541BFD90>,
                                 646)],
             '$666binary_subscr.9': [(<numba.core.ir.Assign object at 0x000002C6541BDD10>,
                                      648)],
             '$694binary_subscr.17': [(<numba.core.ir.Assign object at 0x000002C6541BFAD0>,
                                       648)],
             '$70load_attr.14': [(<numba.core.ir.Assign object at 0x000002C6542170D0>,
                                  0)],
             '$722binary_subscr.22': [(<numba.core.ir.Assign object at 0x000002C6541BCA50>,
                                       648)],
             '$750binary_subscr.30': [(<numba.core.ir.Assign object at 0x000002C6541D3F10>,
                                       648)],
             '$784return_value.1': [(<numba.core.ir.Assign object at 0x000002C6541BC690>,
                                     782)],
             '$96load_attr.18': [(<numba.core.ir.Assign object at 0x000002C654215710>,
                                  0)],
             '$binop_add310.28': [(<numba.core.ir.Assign object at 0x000002C654227810>,
                                   180)],
             '$binop_add390.8': [(<numba.core.ir.Assign object at 0x000002C654226310>,
                                  376)],
             '$binop_add418.16': [(<numba.core.ir.Assign object at 0x000002C654226550>,
                                   376)],
             '$binop_add662.8': [(<numba.core.ir.Assign object at 0x000002C6541BE050>,
                                  648)],
             '$binop_add690.16': [(<numba.core.ir.Assign object at 0x000002C6541BE710>,
                                   648)],
             '$binop_add740.27': [(<numba.core.ir.Assign object at 0x000002C6541D2790>,
                                   648)],
             '$binop_add746.29': [(<numba.core.ir.Assign object at 0x000002C6541D3FD0>,
                                   648)],
             '$binop_floordiv324.33': [(<numba.core.ir.Assign object at 0x000002C654224F90>,
                                        180)],
             '$binop_floordiv596.25': [(<numba.core.ir.Assign object at 0x000002C6541BF590>,
                                        500)],
             '$binop_iadd486.30': [(<numba.core.ir.Assign object at 0x000002C6541DE290>,
                                    376)],
             '$binop_iadd764.32': [(<numba.core.ir.Assign object at 0x000002C6541D33D0>,
                                    648)],
             '$binop_mul20.4': [(<numba.core.ir.Assign object at 0x000002C654217C10>,
                                 0)],
             '$binop_mul386.7': [(<numba.core.ir.Assign object at 0x000002C654227350>,
                                  376)],
             '$binop_mul414.15': [(<numba.core.ir.Assign object at 0x000002C6542266D0>,
                                   376)],
             '$binop_mul432.18': [(<numba.core.ir.Assign object at 0x000002C654225BD0>,
                                   376)],
             '$binop_mul482.29': [(<numba.core.ir.Assign object at 0x000002C6541DE790>,
                                   376)],
             '$binop_mul658.7': [(<numba.core.ir.Assign object at 0x000002C6541BD7D0>,
                                  648)],
             '$binop_mul686.15': [(<numba.core.ir.Assign object at 0x000002C6541BF4D0>,
                                   648)],
             '$binop_mul704.18': [(<numba.core.ir.Assign object at 0x000002C6541BD3D0>,
                                   648)],
             '$binop_mul760.31': [(<numba.core.ir.Assign object at 0x000002C6541D3C10>,
                                   648)],
             '$binop_sub234.12': [(<numba.core.ir.Assign object at 0x000002C6542116D0>,
                                   180)],
             '$binop_sub318.31': [(<numba.core.ir.Assign object at 0x000002C654224690>,
                                   180)],
             '$binop_sub468.27': [(<numba.core.ir.Assign object at 0x000002C6541DF190>,
                                   376)],
             '$binop_sub504.3': [(<numba.core.ir.Assign object at 0x000002C6541DF150>,
                                  500)],
             '$binop_sub576.18': [(<numba.core.ir.Assign object at 0x000002C6541DCD50>,
                                   500)],
             '$binop_sub582.20': [(<numba.core.ir.Assign object at 0x000002C6541DC950>,
                                   500)],
             '$binop_sub590.23': [(<numba.core.ir.Assign object at 0x000002C6541DC590>,
                                   500)],
             '$const106.19': [(<numba.core.ir.Assign object at 0x000002C654215490>,
                               0)],
             '$const132.23': [(<numba.core.ir.Assign object at 0x000002C654214DD0>,
                               0)],
             '$const308.27': [(<numba.core.ir.Assign object at 0x000002C654211B50>,
                               180)],
             '$const580.19': [(<numba.core.ir.Assign object at 0x000002C6541DD050>,
                               500)],
             '$const744.28': [(<numba.core.ir.Assign object at 0x000002C6541D3550>,
                               648)],
             '$const782.0': [(<numba.core.ir.Assign object at 0x000002C6541BE450>,
                              782)],
             '$const80.15': [(<numba.core.ir.Assign object at 0x000002C654215FD0>,
                              0)],
             '$phi178.0': [(<numba.core.ir.Assign object at 0x000002C6541F3690>,
                            0)],
             '$phi180.1': [(<numba.core.ir.Assign object at 0x000002C654213C50>,
                            178)],
             '$phi374.1': [(<numba.core.ir.Assign object at 0x000002C654212E50>,
                            180)],
             '$phi376.2': [(<numba.core.ir.Assign object at 0x000002C654212450>,
                            374)],
             '$phi646.1': [(<numba.core.ir.Assign object at 0x000002C6542262D0>,
                            500)],
             '$phi648.2': [(<numba.core.ir.Assign object at 0x000002C6541BFFD0>,
                            646)],
             'eta': [(<numba.core.ir.Assign object at 0x000002C6542168D0>, 0),
                     (<numba.core.ir.Assign object at 0x000002C6542128D0>, 180),
                     (<numba.core.ir.Assign object at 0x000002C6541DD650>,
                      500)],
             'frac': [(<numba.core.ir.Assign object at 0x000002C654217350>, 0),
                      (<numba.core.ir.Assign object at 0x000002C654211510>,
                       180),
                      (<numba.core.ir.Assign object at 0x000002C654226BD0>,
                       500)],
             'i': [(<numba.core.ir.Assign object at 0x000002C654224890>, 376)],
             'i_max': [(<numba.core.ir.Assign object at 0x000002C654224990>,
                        180)],
             'index_frac': [(<numba.core.ir.Assign object at 0x000002C654217510>,
                             0),
                            (<numba.core.ir.Assign object at 0x000002C654210450>,
                             180),
                            (<numba.core.ir.Assign object at 0x000002C6541DDED0>,
                             500)],
             'index_step': [(<numba.core.ir.Assign object at 0x000002C654217AD0>,
                             0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x000002C65420CB10>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x000002C654291A90>,
                             0)],
             'k': [(<numba.core.ir.Assign object at 0x000002C6541BEF10>, 648)],
             'k_max': [(<numba.core.ir.Assign object at 0x000002C6541BE910>,
                        500)],
             'n': [(<numba.core.ir.Assign object at 0x000002C654216490>, 0),
                   (<numba.core.ir.Assign object at 0x000002C654211C10>, 180)],
             'n_orig': [(<numba.core.ir.Assign object at 0x000002C654231B90>,
                         0)],
             'n_out': [(<numba.core.ir.Assign object at 0x000002C654232090>,
                        0)],
             'num_table': [(<numba.core.ir.Assign object at 0x000002C65420C750>,
                            0)],
             'nwin': [(<numba.core.ir.Assign object at 0x000002C65428C190>, 0)],
             'offset': [(<numba.core.ir.Assign object at 0x000002C654216650>,
                         0),
                        (<numba.core.ir.Assign object at 0x000002C654212290>,
                         180),
                        (<numba.core.ir.Assign object at 0x000002C6541DD9D0>,
                         500)],
             'scale': [(<numba.core.ir.Assign object at 0x000002C65420FB50>,
                        0)],
             't': [(<numba.core.ir.Assign object at 0x000002C654213A10>, 180)],
             't_out': [(<numba.core.ir.Assign object at 0x000002C65420A390>,
                        0)],
             'time_register': [(<numba.core.ir.Assign object at 0x000002C654217ED0>,
                                0),
                               (<numba.core.ir.Assign object at 0x000002C654213050>,
                                180)],
             'weight': [(<numba.core.ir.Assign object at 0x000002C654216CD0>,
                         0),
                        (<numba.core.ir.Assign object at 0x000002C654225950>,
                         376),
                        (<numba.core.ir.Assign object at 0x000002C6541BC710>,
                         648)],
             'x': [(<numba.core.ir.Assign object at 0x000002C654208B10>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x000002C65420FF50>, 0)]})
DEBUG 2024-06-11 14:50:54,597 - SSA violators <numba.core.utils.OrderedSet object at 0x000002C654290190>
DEBUG 2024-06-11 14:50:54,597 - Fix SSA violator on var time_register
DEBUG 2024-06-11 14:50:54,597 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:50:54,597 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C65420B310>
DEBUG 2024-06-11 14:50:54,598 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:50:54,598 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:50:54,598 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:50:54,598 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:50:54,598 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:50:54,598 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:50:54,598 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:50:54,598 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,598 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:50:54,598 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,598 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,598 - first assign: time_register
DEBUG 2024-06-11 14:50:54,598 - replaced with: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,598 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:50:54,598 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,598 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,598 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:50:54,598 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,598 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,598 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:50:54,598 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:50:54,598 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,598 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:50:54,598 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:50:54,598 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,598 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:50:54,599 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:50:54,599 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,599 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:50:54,599 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,599 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:50:54,599 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:50:54,599 - on stmt: jump 176
DEBUG 2024-06-11 14:50:54,599 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:50:54,599 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C65420B310>
DEBUG 2024-06-11 14:50:54,599 - on stmt: jump 178
DEBUG 2024-06-11 14:50:54,599 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:50:54,599 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C65420B310>
DEBUG 2024-06-11 14:50:54,599 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:50:54,599 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:50:54,599 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:50:54,599 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:50:54,599 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:50:54,599 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:50:54,599 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C65420B310>
DEBUG 2024-06-11 14:50:54,599 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:50:54,599 - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,599 - replaced with: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,599 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,599 - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,599 - on stmt: $binop_sub234.12 = time_register - n
DEBUG 2024-06-11 14:50:54,599 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 14:50:54,599 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:50:54,599 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,599 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,600 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:50:54,600 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:50:54,600 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:50:54,600 - on stmt: $binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 14:50:54,600 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:50:54,600 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:50:54,600 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,600 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:50:54,600 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,600 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:50:54,600 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:50:54,600 - on stmt: jump 374
DEBUG 2024-06-11 14:50:54,600 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:50:54,600 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C65420B310>
DEBUG 2024-06-11 14:50:54,600 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:50:54,600 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:50:54,600 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:50:54,600 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:50:54,600 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:50:54,600 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:50:54,600 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C65420B310>
DEBUG 2024-06-11 14:50:54,600 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:50:54,600 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:50:54,600 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:50:54,600 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,600 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:50:54,600 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:50:54,600 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,600 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:50:54,600 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:50:54,600 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,601 - on stmt: $binop_sub468.27 = n - i
DEBUG 2024-06-11 14:50:54,601 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,601 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:50:54,601 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:50:54,601 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:50:54,601 - on stmt: jump 374
DEBUG 2024-06-11 14:50:54,601 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:50:54,601 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C65420B310>
DEBUG 2024-06-11 14:50:54,601 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 14:50:54,601 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 14:50:54,601 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:50:54,601 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,601 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,601 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:50:54,601 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:50:54,601 - on stmt: $binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 14:50:54,601 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:50:54,601 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:50:54,601 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:50:54,601 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:50:54,601 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,601 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:50:54,601 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,601 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:50:54,601 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:50:54,601 - on stmt: jump 646
DEBUG 2024-06-11 14:50:54,601 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:50:54,601 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C65420B310>
DEBUG 2024-06-11 14:50:54,601 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:50:54,601 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:50:54,602 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:50:54,602 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:50:54,602 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:50:54,602 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:50:54,602 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C65420B310>
DEBUG 2024-06-11 14:50:54,602 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:50:54,602 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:50:54,602 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:50:54,602 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,602 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:50:54,602 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:50:54,602 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,602 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:50:54,602 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:50:54,602 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,602 - on stmt: $binop_add740.27 = n + k
DEBUG 2024-06-11 14:50:54,602 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:50:54,602 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:50:54,602 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,602 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:50:54,602 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:50:54,602 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:50:54,602 - on stmt: jump 646
DEBUG 2024-06-11 14:50:54,602 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:50:54,602 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C65420B310>
DEBUG 2024-06-11 14:50:54,602 - on stmt: jump 176
DEBUG 2024-06-11 14:50:54,602 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:50:54,602 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C65420B310>
DEBUG 2024-06-11 14:50:54,602 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:50:54,602 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:50:54,602 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:50:54,603 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000002C65420A190>],
             180: [<numba.core.ir.Assign object at 0x000002C654232F10>]})
DEBUG 2024-06-11 14:50:54,603 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:50:54,603 - Running <numba.core.ssa._FixSSAVars object at 0x000002C654291F50>
DEBUG 2024-06-11 14:50:54,603 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:50:54,603 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:50:54,603 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:50:54,603 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:50:54,603 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:50:54,603 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:50:54,603 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:50:54,603 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,603 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:50:54,603 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,603 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,603 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:50:54,603 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,603 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,603 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:50:54,603 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,603 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,603 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:50:54,603 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:50:54,603 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,603 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:50:54,603 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:50:54,604 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,604 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:50:54,604 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:50:54,604 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,604 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:50:54,604 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,604 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:50:54,604 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:50:54,604 - on stmt: jump 176
DEBUG 2024-06-11 14:50:54,604 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:50:54,604 - Running <numba.core.ssa._FixSSAVars object at 0x000002C654291F50>
DEBUG 2024-06-11 14:50:54,604 - on stmt: jump 178
DEBUG 2024-06-11 14:50:54,604 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:50:54,604 - Running <numba.core.ssa._FixSSAVars object at 0x000002C654291F50>
DEBUG 2024-06-11 14:50:54,604 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:50:54,604 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:50:54,604 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:50:54,604 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:50:54,604 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:50:54,604 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:50:54,604 - Running <numba.core.ssa._FixSSAVars object at 0x000002C654291F50>
DEBUG 2024-06-11 14:50:54,604 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:50:54,604 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,604 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,604 - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,604 - find_def var='time_register' stmt=n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,604 - replaced with: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,605 - on stmt: $binop_sub234.12 = time_register - n
DEBUG 2024-06-11 14:50:54,605 - find_def var='time_register' stmt=$binop_sub234.12 = time_register - n
DEBUG 2024-06-11 14:50:54,605 - replaced with: $binop_sub234.12 = time_register.1 - n
DEBUG 2024-06-11 14:50:54,605 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 14:50:54,605 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:50:54,605 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,605 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,605 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:50:54,605 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:50:54,605 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:50:54,605 - on stmt: $binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 14:50:54,605 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:50:54,605 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:50:54,605 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,605 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:50:54,605 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,605 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:50:54,605 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:50:54,605 - on stmt: jump 374
DEBUG 2024-06-11 14:50:54,605 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:50:54,605 - Running <numba.core.ssa._FixSSAVars object at 0x000002C654291F50>
DEBUG 2024-06-11 14:50:54,605 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:50:54,605 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:50:54,605 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:50:54,605 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:50:54,605 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:50:54,606 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:50:54,606 - Running <numba.core.ssa._FixSSAVars object at 0x000002C654291F50>
DEBUG 2024-06-11 14:50:54,606 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:50:54,606 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:50:54,606 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:50:54,606 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,606 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:50:54,606 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:50:54,606 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,606 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:50:54,606 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:50:54,606 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,606 - on stmt: $binop_sub468.27 = n - i
DEBUG 2024-06-11 14:50:54,606 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,606 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:50:54,606 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:50:54,606 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:50:54,606 - on stmt: jump 374
DEBUG 2024-06-11 14:50:54,606 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:50:54,606 - Running <numba.core.ssa._FixSSAVars object at 0x000002C654291F50>
DEBUG 2024-06-11 14:50:54,606 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 14:50:54,606 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 14:50:54,606 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:50:54,606 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,606 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,606 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:50:54,606 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:50:54,606 - on stmt: $binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 14:50:54,607 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:50:54,607 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:50:54,607 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:50:54,607 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:50:54,607 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,607 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:50:54,607 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,607 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:50:54,607 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:50:54,607 - on stmt: jump 646
DEBUG 2024-06-11 14:50:54,607 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:50:54,607 - Running <numba.core.ssa._FixSSAVars object at 0x000002C654291F50>
DEBUG 2024-06-11 14:50:54,607 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:50:54,607 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:50:54,607 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:50:54,607 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:50:54,607 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:50:54,607 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:50:54,607 - Running <numba.core.ssa._FixSSAVars object at 0x000002C654291F50>
DEBUG 2024-06-11 14:50:54,607 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:50:54,607 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:50:54,607 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:50:54,607 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,607 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:50:54,607 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:50:54,607 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,607 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:50:54,607 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:50:54,608 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,608 - on stmt: $binop_add740.27 = n + k
DEBUG 2024-06-11 14:50:54,608 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:50:54,608 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:50:54,608 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,608 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:50:54,608 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:50:54,608 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:50:54,608 - on stmt: jump 646
DEBUG 2024-06-11 14:50:54,608 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:50:54,608 - Running <numba.core.ssa._FixSSAVars object at 0x000002C654291F50>
DEBUG 2024-06-11 14:50:54,608 - on stmt: jump 176
DEBUG 2024-06-11 14:50:54,608 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:50:54,608 - Running <numba.core.ssa._FixSSAVars object at 0x000002C654291F50>
DEBUG 2024-06-11 14:50:54,608 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:50:54,608 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:50:54,608 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:50:54,608 - Fix SSA violator on var n
DEBUG 2024-06-11 14:50:54,608 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:50:54,608 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C6542319D0>
DEBUG 2024-06-11 14:50:54,608 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:50:54,608 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:50:54,608 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:50:54,608 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:50:54,608 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:50:54,608 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:50:54,608 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:50:54,608 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,609 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:50:54,609 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,609 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,609 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:50:54,609 - first assign: n
DEBUG 2024-06-11 14:50:54,609 - replaced with: n = const(int, 0)
DEBUG 2024-06-11 14:50:54,609 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,609 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,609 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:50:54,609 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,609 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,609 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:50:54,609 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:50:54,609 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,609 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:50:54,609 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:50:54,609 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,609 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:50:54,609 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:50:54,609 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,609 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:50:54,609 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,609 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:50:54,609 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:50:54,609 - on stmt: jump 176
DEBUG 2024-06-11 14:50:54,609 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:50:54,609 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C6542319D0>
DEBUG 2024-06-11 14:50:54,609 - on stmt: jump 178
DEBUG 2024-06-11 14:50:54,609 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:50:54,609 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C6542319D0>
DEBUG 2024-06-11 14:50:54,609 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:50:54,609 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:50:54,610 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:50:54,610 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:50:54,610 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:50:54,610 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:50:54,610 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C6542319D0>
DEBUG 2024-06-11 14:50:54,610 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:50:54,610 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,610 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,610 - on stmt: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,610 - replaced with: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,610 - on stmt: $binop_sub234.12 = time_register.1 - n
DEBUG 2024-06-11 14:50:54,610 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 14:50:54,610 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:50:54,610 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,610 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,610 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:50:54,610 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:50:54,610 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:50:54,610 - on stmt: $binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 14:50:54,610 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:50:54,610 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:50:54,610 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,610 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:50:54,610 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,610 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:50:54,610 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:50:54,610 - on stmt: jump 374
DEBUG 2024-06-11 14:50:54,610 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:50:54,610 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C6542319D0>
DEBUG 2024-06-11 14:50:54,610 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:50:54,610 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:50:54,611 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:50:54,611 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:50:54,611 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:50:54,611 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:50:54,611 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C6542319D0>
DEBUG 2024-06-11 14:50:54,611 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:50:54,611 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:50:54,611 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:50:54,611 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,611 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:50:54,611 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:50:54,611 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,611 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:50:54,611 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:50:54,611 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,611 - on stmt: $binop_sub468.27 = n - i
DEBUG 2024-06-11 14:50:54,611 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,611 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:50:54,611 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:50:54,611 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:50:54,611 - on stmt: jump 374
DEBUG 2024-06-11 14:50:54,611 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:50:54,611 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C6542319D0>
DEBUG 2024-06-11 14:50:54,611 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 14:50:54,611 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 14:50:54,611 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:50:54,611 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,611 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,611 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:50:54,611 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:50:54,611 - on stmt: $binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 14:50:54,612 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:50:54,612 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:50:54,612 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:50:54,612 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:50:54,612 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,612 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:50:54,612 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,612 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:50:54,612 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:50:54,612 - on stmt: jump 646
DEBUG 2024-06-11 14:50:54,612 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:50:54,612 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C6542319D0>
DEBUG 2024-06-11 14:50:54,612 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:50:54,612 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:50:54,612 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:50:54,612 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:50:54,612 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:50:54,612 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:50:54,612 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C6542319D0>
DEBUG 2024-06-11 14:50:54,612 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:50:54,612 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:50:54,612 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:50:54,612 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,612 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:50:54,612 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:50:54,612 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,612 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:50:54,612 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:50:54,612 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,612 - on stmt: $binop_add740.27 = n + k
DEBUG 2024-06-11 14:50:54,612 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:50:54,612 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:50:54,613 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,613 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:50:54,613 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:50:54,613 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:50:54,613 - on stmt: jump 646
DEBUG 2024-06-11 14:50:54,613 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:50:54,613 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C6542319D0>
DEBUG 2024-06-11 14:50:54,613 - on stmt: jump 176
DEBUG 2024-06-11 14:50:54,613 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:50:54,613 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C6542319D0>
DEBUG 2024-06-11 14:50:54,613 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:50:54,613 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:50:54,613 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:50:54,613 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000002C6526B6110>],
             180: [<numba.core.ir.Assign object at 0x000002C654293E90>]})
DEBUG 2024-06-11 14:50:54,613 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:50:54,613 - Running <numba.core.ssa._FixSSAVars object at 0x000002C65428C610>
DEBUG 2024-06-11 14:50:54,613 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:50:54,613 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:50:54,613 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:50:54,613 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:50:54,613 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:50:54,613 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:50:54,613 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:50:54,613 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,613 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:50:54,613 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,613 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,613 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:50:54,613 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,613 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,614 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:50:54,614 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,614 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,614 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:50:54,614 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:50:54,614 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,614 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:50:54,614 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:50:54,614 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,614 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:50:54,614 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:50:54,614 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,614 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:50:54,614 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,614 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:50:54,614 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:50:54,614 - on stmt: jump 176
DEBUG 2024-06-11 14:50:54,614 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:50:54,614 - Running <numba.core.ssa._FixSSAVars object at 0x000002C65428C610>
DEBUG 2024-06-11 14:50:54,614 - on stmt: jump 178
DEBUG 2024-06-11 14:50:54,614 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:50:54,614 - Running <numba.core.ssa._FixSSAVars object at 0x000002C65428C610>
DEBUG 2024-06-11 14:50:54,614 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:50:54,614 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:50:54,614 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:50:54,614 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:50:54,614 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:50:54,614 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:50:54,614 - Running <numba.core.ssa._FixSSAVars object at 0x000002C65428C610>
DEBUG 2024-06-11 14:50:54,614 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:50:54,614 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,615 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,615 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,615 - on stmt: $binop_sub234.12 = time_register.1 - n
DEBUG 2024-06-11 14:50:54,615 - find_def var='n' stmt=$binop_sub234.12 = time_register.1 - n
DEBUG 2024-06-11 14:50:54,615 - replaced with: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 14:50:54,615 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 14:50:54,615 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:50:54,615 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,615 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,615 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:50:54,615 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:50:54,615 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:50:54,615 - on stmt: $binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 14:50:54,615 - find_def var='n' stmt=$binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 14:50:54,615 - replaced with: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 14:50:54,615 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:50:54,615 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:50:54,615 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,615 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:50:54,615 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,615 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:50:54,615 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:50:54,615 - on stmt: jump 374
DEBUG 2024-06-11 14:50:54,615 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:50:54,615 - Running <numba.core.ssa._FixSSAVars object at 0x000002C65428C610>
DEBUG 2024-06-11 14:50:54,615 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:50:54,615 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:50:54,615 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:50:54,615 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:50:54,616 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:50:54,616 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:50:54,616 - Running <numba.core.ssa._FixSSAVars object at 0x000002C65428C610>
DEBUG 2024-06-11 14:50:54,616 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:50:54,616 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:50:54,616 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:50:54,616 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,616 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:50:54,616 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:50:54,616 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,616 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:50:54,616 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:50:54,616 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,616 - on stmt: $binop_sub468.27 = n - i
DEBUG 2024-06-11 14:50:54,616 - find_def var='n' stmt=$binop_sub468.27 = n - i
DEBUG 2024-06-11 14:50:54,616 - find_def_from_top label 376
DEBUG 2024-06-11 14:50:54,616 - idom 374 from label 376
DEBUG 2024-06-11 14:50:54,616 - find_def_from_bottom label 374
DEBUG 2024-06-11 14:50:54,616 - find_def_from_top label 374
DEBUG 2024-06-11 14:50:54,616 - idom 180 from label 374
DEBUG 2024-06-11 14:50:54,616 - find_def_from_bottom label 180
DEBUG 2024-06-11 14:50:54,616 - replaced with: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 14:50:54,616 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,616 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:50:54,616 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:50:54,616 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:50:54,616 - on stmt: jump 374
DEBUG 2024-06-11 14:50:54,616 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:50:54,616 - Running <numba.core.ssa._FixSSAVars object at 0x000002C65428C610>
DEBUG 2024-06-11 14:50:54,617 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 14:50:54,617 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 14:50:54,617 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:50:54,617 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,617 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,617 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:50:54,617 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:50:54,617 - on stmt: $binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 14:50:54,617 - find_def var='n' stmt=$binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 14:50:54,617 - find_def_from_top label 500
DEBUG 2024-06-11 14:50:54,617 - idom 374 from label 500
DEBUG 2024-06-11 14:50:54,617 - find_def_from_bottom label 374
DEBUG 2024-06-11 14:50:54,617 - find_def_from_top label 374
DEBUG 2024-06-11 14:50:54,617 - idom 180 from label 374
DEBUG 2024-06-11 14:50:54,617 - find_def_from_bottom label 180
DEBUG 2024-06-11 14:50:54,617 - replaced with: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 14:50:54,617 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:50:54,617 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:50:54,617 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:50:54,617 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:50:54,617 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,617 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:50:54,617 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,617 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:50:54,617 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:50:54,617 - on stmt: jump 646
DEBUG 2024-06-11 14:50:54,617 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:50:54,617 - Running <numba.core.ssa._FixSSAVars object at 0x000002C65428C610>
DEBUG 2024-06-11 14:50:54,618 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:50:54,618 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:50:54,618 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:50:54,618 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:50:54,618 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:50:54,618 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:50:54,618 - Running <numba.core.ssa._FixSSAVars object at 0x000002C65428C610>
DEBUG 2024-06-11 14:50:54,618 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:50:54,618 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:50:54,618 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:50:54,618 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,618 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:50:54,618 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:50:54,618 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,618 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:50:54,619 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:50:54,619 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,619 - on stmt: $binop_add740.27 = n + k
DEBUG 2024-06-11 14:50:54,619 - find_def var='n' stmt=$binop_add740.27 = n + k
DEBUG 2024-06-11 14:50:54,619 - find_def_from_top label 648
DEBUG 2024-06-11 14:50:54,619 - idom 646 from label 648
DEBUG 2024-06-11 14:50:54,619 - find_def_from_bottom label 646
DEBUG 2024-06-11 14:50:54,619 - find_def_from_top label 646
DEBUG 2024-06-11 14:50:54,619 - idom 500 from label 646
DEBUG 2024-06-11 14:50:54,619 - find_def_from_bottom label 500
DEBUG 2024-06-11 14:50:54,619 - find_def_from_top label 500
DEBUG 2024-06-11 14:50:54,619 - idom 374 from label 500
DEBUG 2024-06-11 14:50:54,619 - find_def_from_bottom label 374
DEBUG 2024-06-11 14:50:54,619 - find_def_from_top label 374
DEBUG 2024-06-11 14:50:54,619 - idom 180 from label 374
DEBUG 2024-06-11 14:50:54,619 - find_def_from_bottom label 180
DEBUG 2024-06-11 14:50:54,619 - replaced with: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 14:50:54,619 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:50:54,619 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:50:54,619 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,619 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:50:54,619 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:50:54,619 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:50:54,619 - on stmt: jump 646
DEBUG 2024-06-11 14:50:54,619 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:50:54,619 - Running <numba.core.ssa._FixSSAVars object at 0x000002C65428C610>
DEBUG 2024-06-11 14:50:54,619 - on stmt: jump 176
DEBUG 2024-06-11 14:50:54,619 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:50:54,619 - Running <numba.core.ssa._FixSSAVars object at 0x000002C65428C610>
DEBUG 2024-06-11 14:50:54,619 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:50:54,620 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:50:54,620 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:50:54,620 - Fix SSA violator on var frac
DEBUG 2024-06-11 14:50:54,620 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:50:54,620 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654206A10>
DEBUG 2024-06-11 14:50:54,620 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:50:54,620 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:50:54,620 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:50:54,620 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:50:54,620 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:50:54,620 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:50:54,620 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:50:54,620 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,620 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:50:54,620 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,620 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,620 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:50:54,620 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,620 - first assign: frac
DEBUG 2024-06-11 14:50:54,620 - replaced with: frac = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,620 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,620 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:50:54,620 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,620 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,620 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:50:54,620 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:50:54,620 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,620 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:50:54,620 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:50:54,620 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,620 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:50:54,621 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:50:54,621 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,621 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:50:54,621 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,621 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:50:54,621 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:50:54,621 - on stmt: jump 176
DEBUG 2024-06-11 14:50:54,621 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:50:54,621 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654206A10>
DEBUG 2024-06-11 14:50:54,621 - on stmt: jump 178
DEBUG 2024-06-11 14:50:54,621 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:50:54,621 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654206A10>
DEBUG 2024-06-11 14:50:54,621 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:50:54,621 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:50:54,621 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:50:54,621 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:50:54,621 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:50:54,621 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:50:54,621 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654206A10>
DEBUG 2024-06-11 14:50:54,621 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:50:54,621 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,621 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,621 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,621 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 14:50:54,621 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 14:50:54,621 - replaced with: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 14:50:54,621 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:50:54,621 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,621 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,622 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:50:54,622 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:50:54,622 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:50:54,622 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 14:50:54,622 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:50:54,622 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:50:54,622 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,622 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:50:54,622 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,622 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:50:54,622 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:50:54,622 - on stmt: jump 374
DEBUG 2024-06-11 14:50:54,622 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:50:54,622 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654206A10>
DEBUG 2024-06-11 14:50:54,622 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:50:54,622 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:50:54,622 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:50:54,622 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:50:54,622 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:50:54,622 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:50:54,622 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654206A10>
DEBUG 2024-06-11 14:50:54,622 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:50:54,622 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:50:54,622 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:50:54,622 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,622 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:50:54,622 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:50:54,622 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,622 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:50:54,622 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:50:54,623 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,623 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 14:50:54,623 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,623 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:50:54,623 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:50:54,623 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:50:54,623 - on stmt: jump 374
DEBUG 2024-06-11 14:50:54,623 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:50:54,623 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654206A10>
DEBUG 2024-06-11 14:50:54,623 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 14:50:54,623 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 14:50:54,623 - replaced with: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 14:50:54,623 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:50:54,623 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,623 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,623 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:50:54,623 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:50:54,623 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 14:50:54,623 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:50:54,623 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:50:54,623 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:50:54,623 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:50:54,623 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,623 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:50:54,623 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,623 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:50:54,623 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:50:54,623 - on stmt: jump 646
DEBUG 2024-06-11 14:50:54,623 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:50:54,623 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654206A10>
DEBUG 2024-06-11 14:50:54,624 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:50:54,624 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:50:54,624 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:50:54,624 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:50:54,624 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:50:54,624 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:50:54,624 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654206A10>
DEBUG 2024-06-11 14:50:54,624 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:50:54,624 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:50:54,624 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:50:54,624 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,624 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:50:54,624 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:50:54,624 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,624 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:50:54,624 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:50:54,624 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,624 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 14:50:54,624 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:50:54,625 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:50:54,625 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,625 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:50:54,625 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:50:54,625 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:50:54,625 - on stmt: jump 646
DEBUG 2024-06-11 14:50:54,625 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:50:54,625 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654206A10>
DEBUG 2024-06-11 14:50:54,625 - on stmt: jump 176
DEBUG 2024-06-11 14:50:54,625 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:50:54,625 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654206A10>
DEBUG 2024-06-11 14:50:54,625 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:50:54,625 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:50:54,625 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:50:54,625 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000002C654204710>],
             180: [<numba.core.ir.Assign object at 0x000002C654233C90>],
             500: [<numba.core.ir.Assign object at 0x000002C6541BE5D0>]})
DEBUG 2024-06-11 14:50:54,625 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:50:54,625 - Running <numba.core.ssa._FixSSAVars object at 0x000002C654292390>
DEBUG 2024-06-11 14:50:54,625 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:50:54,625 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:50:54,625 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:50:54,625 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:50:54,625 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:50:54,626 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:50:54,626 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:50:54,626 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,626 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:50:54,626 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,626 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,626 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:50:54,626 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,626 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,626 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:50:54,626 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,626 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,626 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:50:54,626 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:50:54,626 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,626 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:50:54,626 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:50:54,626 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,626 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:50:54,628 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:50:54,628 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,628 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:50:54,628 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,628 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:50:54,628 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:50:54,628 - on stmt: jump 176
DEBUG 2024-06-11 14:50:54,628 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:50:54,628 - Running <numba.core.ssa._FixSSAVars object at 0x000002C654292390>
DEBUG 2024-06-11 14:50:54,628 - on stmt: jump 178
DEBUG 2024-06-11 14:50:54,628 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:50:54,628 - Running <numba.core.ssa._FixSSAVars object at 0x000002C654292390>
DEBUG 2024-06-11 14:50:54,628 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:50:54,628 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:50:54,628 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:50:54,628 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:50:54,628 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:50:54,628 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:50:54,628 - Running <numba.core.ssa._FixSSAVars object at 0x000002C654292390>
DEBUG 2024-06-11 14:50:54,628 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:50:54,628 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,628 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,628 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,628 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 14:50:54,628 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 14:50:54,629 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:50:54,629 - find_def var='frac' stmt=index_frac = frac * num_table
DEBUG 2024-06-11 14:50:54,629 - replaced with: index_frac = frac.1 * num_table
DEBUG 2024-06-11 14:50:54,629 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,629 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,629 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:50:54,629 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:50:54,629 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:50:54,629 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 14:50:54,629 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:50:54,629 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:50:54,630 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,630 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:50:54,630 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,630 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:50:54,630 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:50:54,630 - on stmt: jump 374
DEBUG 2024-06-11 14:50:54,630 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:50:54,630 - Running <numba.core.ssa._FixSSAVars object at 0x000002C654292390>
DEBUG 2024-06-11 14:50:54,630 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:50:54,630 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:50:54,630 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:50:54,630 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:50:54,630 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:50:54,630 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:50:54,630 - Running <numba.core.ssa._FixSSAVars object at 0x000002C654292390>
DEBUG 2024-06-11 14:50:54,630 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:50:54,630 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:50:54,630 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:50:54,630 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,630 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:50:54,630 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:50:54,630 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,630 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:50:54,630 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:50:54,630 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,630 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 14:50:54,630 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,631 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:50:54,631 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:50:54,631 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:50:54,631 - on stmt: jump 374
DEBUG 2024-06-11 14:50:54,631 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:50:54,631 - Running <numba.core.ssa._FixSSAVars object at 0x000002C654292390>
DEBUG 2024-06-11 14:50:54,631 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 14:50:54,631 - find_def var='frac' stmt=$binop_sub504.3 = scale - frac
DEBUG 2024-06-11 14:50:54,631 - find_def_from_top label 500
DEBUG 2024-06-11 14:50:54,631 - idom 374 from label 500
DEBUG 2024-06-11 14:50:54,631 - find_def_from_bottom label 374
DEBUG 2024-06-11 14:50:54,631 - find_def_from_top label 374
DEBUG 2024-06-11 14:50:54,631 - idom 180 from label 374
DEBUG 2024-06-11 14:50:54,631 - find_def_from_bottom label 180
DEBUG 2024-06-11 14:50:54,631 - replaced with: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 14:50:54,631 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 14:50:54,631 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:50:54,631 - find_def var='frac' stmt=index_frac = frac * num_table
DEBUG 2024-06-11 14:50:54,631 - replaced with: index_frac = frac.2 * num_table
DEBUG 2024-06-11 14:50:54,631 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,631 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,631 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:50:54,631 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:50:54,631 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 14:50:54,631 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:50:54,631 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:50:54,631 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:50:54,631 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:50:54,632 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,632 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:50:54,632 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,632 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:50:54,632 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:50:54,632 - on stmt: jump 646
DEBUG 2024-06-11 14:50:54,632 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:50:54,632 - Running <numba.core.ssa._FixSSAVars object at 0x000002C654292390>
DEBUG 2024-06-11 14:50:54,632 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:50:54,632 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:50:54,632 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:50:54,632 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:50:54,632 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:50:54,632 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:50:54,632 - Running <numba.core.ssa._FixSSAVars object at 0x000002C654292390>
DEBUG 2024-06-11 14:50:54,632 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:50:54,632 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:50:54,632 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:50:54,632 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,632 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:50:54,632 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:50:54,632 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,632 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:50:54,632 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:50:54,632 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,632 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 14:50:54,632 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:50:54,633 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:50:54,633 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,633 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:50:54,633 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:50:54,633 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:50:54,633 - on stmt: jump 646
DEBUG 2024-06-11 14:50:54,633 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:50:54,633 - Running <numba.core.ssa._FixSSAVars object at 0x000002C654292390>
DEBUG 2024-06-11 14:50:54,633 - on stmt: jump 176
DEBUG 2024-06-11 14:50:54,633 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:50:54,633 - Running <numba.core.ssa._FixSSAVars object at 0x000002C654292390>
DEBUG 2024-06-11 14:50:54,633 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:50:54,633 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:50:54,633 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:50:54,633 - Fix SSA violator on var index_frac
DEBUG 2024-06-11 14:50:54,633 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:50:54,633 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654209B50>
DEBUG 2024-06-11 14:50:54,633 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:50:54,633 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:50:54,633 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:50:54,633 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:50:54,633 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:50:54,633 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:50:54,633 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:50:54,633 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,633 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:50:54,633 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,633 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,633 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:50:54,634 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,634 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,634 - first assign: index_frac
DEBUG 2024-06-11 14:50:54,634 - replaced with: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,634 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:50:54,634 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,634 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,634 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:50:54,634 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:50:54,634 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,634 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:50:54,634 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:50:54,634 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,634 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:50:54,634 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:50:54,634 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,634 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:50:54,634 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,634 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:50:54,634 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:50:54,634 - on stmt: jump 176
DEBUG 2024-06-11 14:50:54,634 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:50:54,634 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654209B50>
DEBUG 2024-06-11 14:50:54,634 - on stmt: jump 178
DEBUG 2024-06-11 14:50:54,634 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:50:54,634 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654209B50>
DEBUG 2024-06-11 14:50:54,634 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:50:54,634 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:50:54,634 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:50:54,634 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:50:54,634 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:50:54,635 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:50:54,635 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654209B50>
DEBUG 2024-06-11 14:50:54,635 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:50:54,635 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,635 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,635 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,635 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 14:50:54,635 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 14:50:54,635 - on stmt: index_frac = frac.1 * num_table
DEBUG 2024-06-11 14:50:54,635 - replaced with: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 14:50:54,635 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,635 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,635 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:50:54,635 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:50:54,635 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:50:54,635 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 14:50:54,635 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:50:54,635 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:50:54,635 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,635 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:50:54,635 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,635 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:50:54,635 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:50:54,635 - on stmt: jump 374
DEBUG 2024-06-11 14:50:54,635 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:50:54,635 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654209B50>
DEBUG 2024-06-11 14:50:54,635 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:50:54,635 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:50:54,636 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:50:54,636 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:50:54,636 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:50:54,636 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:50:54,636 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654209B50>
DEBUG 2024-06-11 14:50:54,636 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:50:54,636 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:50:54,636 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:50:54,636 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,636 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:50:54,636 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:50:54,636 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,636 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:50:54,636 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:50:54,636 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,636 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 14:50:54,636 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,636 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:50:54,636 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:50:54,636 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:50:54,636 - on stmt: jump 374
DEBUG 2024-06-11 14:50:54,636 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:50:54,636 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654209B50>
DEBUG 2024-06-11 14:50:54,636 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 14:50:54,636 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 14:50:54,636 - on stmt: index_frac = frac.2 * num_table
DEBUG 2024-06-11 14:50:54,636 - replaced with: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 14:50:54,636 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,636 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,637 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:50:54,637 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:50:54,637 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 14:50:54,637 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:50:54,637 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:50:54,637 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:50:54,637 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:50:54,637 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,637 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:50:54,637 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,637 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:50:54,637 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:50:54,637 - on stmt: jump 646
DEBUG 2024-06-11 14:50:54,637 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:50:54,637 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654209B50>
DEBUG 2024-06-11 14:50:54,637 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:50:54,637 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:50:54,637 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:50:54,637 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:50:54,637 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:50:54,637 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:50:54,637 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654209B50>
DEBUG 2024-06-11 14:50:54,637 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:50:54,637 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:50:54,637 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:50:54,637 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,637 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:50:54,637 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:50:54,637 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,637 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:50:54,638 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:50:54,638 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,638 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 14:50:54,638 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:50:54,638 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:50:54,638 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,638 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:50:54,638 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:50:54,638 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:50:54,638 - on stmt: jump 646
DEBUG 2024-06-11 14:50:54,638 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:50:54,638 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654209B50>
DEBUG 2024-06-11 14:50:54,638 - on stmt: jump 176
DEBUG 2024-06-11 14:50:54,638 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:50:54,638 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654209B50>
DEBUG 2024-06-11 14:50:54,638 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:50:54,638 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:50:54,638 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:50:54,638 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000002C654206810>],
             180: [<numba.core.ir.Assign object at 0x000002C6541BC6D0>],
             500: [<numba.core.ir.Assign object at 0x000002C6541BF810>]})
DEBUG 2024-06-11 14:50:54,638 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:50:54,638 - Running <numba.core.ssa._FixSSAVars object at 0x000002C6541BD390>
DEBUG 2024-06-11 14:50:54,638 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:50:54,638 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:50:54,638 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:50:54,638 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:50:54,638 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:50:54,638 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:50:54,638 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:50:54,638 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,639 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:50:54,639 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,639 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,639 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:50:54,639 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,639 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,639 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:50:54,639 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,639 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,639 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:50:54,639 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:50:54,639 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,639 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:50:54,639 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:50:54,639 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,639 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:50:54,639 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:50:54,639 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,639 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:50:54,639 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,639 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:50:54,639 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:50:54,639 - on stmt: jump 176
DEBUG 2024-06-11 14:50:54,639 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:50:54,639 - Running <numba.core.ssa._FixSSAVars object at 0x000002C6541BD390>
DEBUG 2024-06-11 14:50:54,639 - on stmt: jump 178
DEBUG 2024-06-11 14:50:54,639 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:50:54,639 - Running <numba.core.ssa._FixSSAVars object at 0x000002C6541BD390>
DEBUG 2024-06-11 14:50:54,639 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:50:54,640 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:50:54,640 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:50:54,640 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:50:54,640 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:50:54,640 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:50:54,640 - Running <numba.core.ssa._FixSSAVars object at 0x000002C6541BD390>
DEBUG 2024-06-11 14:50:54,640 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:50:54,640 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,640 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,640 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,640 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 14:50:54,640 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 14:50:54,640 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 14:50:54,640 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,640 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,640 - find_def var='index_frac' stmt=offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,640 - replaced with: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,640 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:50:54,640 - find_def var='index_frac' stmt=eta = index_frac - offset
DEBUG 2024-06-11 14:50:54,640 - replaced with: eta = index_frac.1 - offset
DEBUG 2024-06-11 14:50:54,640 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:50:54,640 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:50:54,640 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 14:50:54,640 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:50:54,640 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:50:54,640 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,641 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:50:54,641 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,641 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:50:54,641 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:50:54,641 - on stmt: jump 374
DEBUG 2024-06-11 14:50:54,641 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:50:54,641 - Running <numba.core.ssa._FixSSAVars object at 0x000002C6541BD390>
DEBUG 2024-06-11 14:50:54,641 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:50:54,641 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:50:54,641 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:50:54,641 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:50:54,641 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:50:54,641 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:50:54,641 - Running <numba.core.ssa._FixSSAVars object at 0x000002C6541BD390>
DEBUG 2024-06-11 14:50:54,641 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:50:54,641 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:50:54,641 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:50:54,641 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,641 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:50:54,641 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:50:54,641 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,641 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:50:54,641 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:50:54,641 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,641 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 14:50:54,641 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,641 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:50:54,641 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:50:54,642 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:50:54,642 - on stmt: jump 374
DEBUG 2024-06-11 14:50:54,642 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:50:54,642 - Running <numba.core.ssa._FixSSAVars object at 0x000002C6541BD390>
DEBUG 2024-06-11 14:50:54,642 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 14:50:54,642 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 14:50:54,642 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 14:50:54,642 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,642 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,642 - find_def var='index_frac' stmt=offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,642 - replaced with: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,642 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:50:54,642 - find_def var='index_frac' stmt=eta = index_frac - offset
DEBUG 2024-06-11 14:50:54,642 - replaced with: eta = index_frac.2 - offset
DEBUG 2024-06-11 14:50:54,642 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:50:54,642 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 14:50:54,642 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:50:54,642 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:50:54,642 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:50:54,642 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:50:54,642 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,642 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:50:54,642 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,642 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:50:54,642 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:50:54,642 - on stmt: jump 646
DEBUG 2024-06-11 14:50:54,642 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:50:54,642 - Running <numba.core.ssa._FixSSAVars object at 0x000002C6541BD390>
DEBUG 2024-06-11 14:50:54,642 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:50:54,642 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:50:54,642 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:50:54,642 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:50:54,642 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:50:54,642 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:50:54,642 - Running <numba.core.ssa._FixSSAVars object at 0x000002C6541BD390>
DEBUG 2024-06-11 14:50:54,642 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:50:54,642 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:50:54,642 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:50:54,643 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,643 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:50:54,643 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:50:54,643 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,643 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:50:54,643 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:50:54,643 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,643 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 14:50:54,643 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:50:54,643 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:50:54,643 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,643 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:50:54,643 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:50:54,643 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:50:54,644 - on stmt: jump 646
DEBUG 2024-06-11 14:50:54,644 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:50:54,644 - Running <numba.core.ssa._FixSSAVars object at 0x000002C6541BD390>
DEBUG 2024-06-11 14:50:54,644 - on stmt: jump 176
DEBUG 2024-06-11 14:50:54,644 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:50:54,644 - Running <numba.core.ssa._FixSSAVars object at 0x000002C6541BD390>
DEBUG 2024-06-11 14:50:54,644 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:50:54,644 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:50:54,644 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:50:54,644 - Fix SSA violator on var offset
DEBUG 2024-06-11 14:50:54,644 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:50:54,644 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654291F50>
DEBUG 2024-06-11 14:50:54,644 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:50:54,644 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:50:54,644 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:50:54,644 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:50:54,644 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:50:54,644 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:50:54,644 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:50:54,644 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,644 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:50:54,644 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,644 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,644 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:50:54,644 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,644 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,644 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:50:54,644 - first assign: offset
DEBUG 2024-06-11 14:50:54,644 - replaced with: offset = const(int, 0)
DEBUG 2024-06-11 14:50:54,644 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,645 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,645 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:50:54,645 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:50:54,645 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,645 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:50:54,645 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:50:54,645 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,645 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:50:54,645 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:50:54,645 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,645 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:50:54,645 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,645 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:50:54,645 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:50:54,645 - on stmt: jump 176
DEBUG 2024-06-11 14:50:54,645 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:50:54,645 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654291F50>
DEBUG 2024-06-11 14:50:54,645 - on stmt: jump 178
DEBUG 2024-06-11 14:50:54,645 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:50:54,645 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654291F50>
DEBUG 2024-06-11 14:50:54,645 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:50:54,645 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:50:54,645 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:50:54,645 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:50:54,645 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:50:54,645 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:50:54,645 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654291F50>
DEBUG 2024-06-11 14:50:54,645 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:50:54,645 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,645 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,646 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,646 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 14:50:54,646 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 14:50:54,646 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 14:50:54,646 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,646 - on stmt: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,646 - replaced with: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,646 - on stmt: eta = index_frac.1 - offset
DEBUG 2024-06-11 14:50:54,646 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:50:54,646 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:50:54,646 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 14:50:54,646 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:50:54,646 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:50:54,646 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,646 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:50:54,646 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,646 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:50:54,646 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:50:54,646 - on stmt: jump 374
DEBUG 2024-06-11 14:50:54,646 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:50:54,646 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654291F50>
DEBUG 2024-06-11 14:50:54,646 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:50:54,646 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:50:54,646 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:50:54,646 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:50:54,647 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:50:54,647 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:50:54,647 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654291F50>
DEBUG 2024-06-11 14:50:54,647 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:50:54,647 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:50:54,647 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:50:54,647 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,647 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:50:54,647 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:50:54,647 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,647 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:50:54,647 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:50:54,647 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,647 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 14:50:54,647 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,647 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:50:54,647 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:50:54,647 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:50:54,647 - on stmt: jump 374
DEBUG 2024-06-11 14:50:54,647 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:50:54,647 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654291F50>
DEBUG 2024-06-11 14:50:54,647 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 14:50:54,648 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 14:50:54,648 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 14:50:54,648 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,648 - on stmt: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,648 - replaced with: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,648 - on stmt: eta = index_frac.2 - offset
DEBUG 2024-06-11 14:50:54,648 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:50:54,648 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 14:50:54,648 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:50:54,648 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:50:54,648 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:50:54,648 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:50:54,648 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,648 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:50:54,648 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,648 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:50:54,648 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:50:54,648 - on stmt: jump 646
DEBUG 2024-06-11 14:50:54,648 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:50:54,648 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654291F50>
DEBUG 2024-06-11 14:50:54,648 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:50:54,648 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:50:54,648 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:50:54,648 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:50:54,648 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:50:54,648 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:50:54,649 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654291F50>
DEBUG 2024-06-11 14:50:54,649 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:50:54,649 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:50:54,649 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:50:54,649 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,649 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:50:54,649 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:50:54,649 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,649 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:50:54,649 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:50:54,649 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,649 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 14:50:54,649 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:50:54,649 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:50:54,649 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,649 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:50:54,649 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:50:54,649 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:50:54,649 - on stmt: jump 646
DEBUG 2024-06-11 14:50:54,649 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:50:54,649 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654291F50>
DEBUG 2024-06-11 14:50:54,649 - on stmt: jump 176
DEBUG 2024-06-11 14:50:54,649 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:50:54,649 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654291F50>
DEBUG 2024-06-11 14:50:54,649 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:50:54,649 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:50:54,649 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:50:54,649 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000002C654292390>],
             180: [<numba.core.ir.Assign object at 0x000002C654212C10>],
             500: [<numba.core.ir.Assign object at 0x000002C6542104D0>]})
DEBUG 2024-06-11 14:50:54,650 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:50:54,650 - Running <numba.core.ssa._FixSSAVars object at 0x000002C654204CD0>
DEBUG 2024-06-11 14:50:54,650 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:50:54,650 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:50:54,650 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:50:54,650 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:50:54,650 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:50:54,650 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:50:54,650 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:50:54,650 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,650 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:50:54,650 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,650 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,650 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:50:54,650 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,650 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,650 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:50:54,650 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,650 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,650 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:50:54,650 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:50:54,650 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,650 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:50:54,650 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:50:54,650 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,650 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:50:54,650 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:50:54,651 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,651 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:50:54,651 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,651 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:50:54,651 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:50:54,651 - on stmt: jump 176
DEBUG 2024-06-11 14:50:54,651 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:50:54,651 - Running <numba.core.ssa._FixSSAVars object at 0x000002C654204CD0>
DEBUG 2024-06-11 14:50:54,651 - on stmt: jump 178
DEBUG 2024-06-11 14:50:54,651 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:50:54,651 - Running <numba.core.ssa._FixSSAVars object at 0x000002C654204CD0>
DEBUG 2024-06-11 14:50:54,651 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:50:54,651 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:50:54,651 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:50:54,651 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:50:54,651 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:50:54,651 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:50:54,651 - Running <numba.core.ssa._FixSSAVars object at 0x000002C654204CD0>
DEBUG 2024-06-11 14:50:54,651 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:50:54,651 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,651 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,651 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,651 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 14:50:54,651 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 14:50:54,651 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 14:50:54,651 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,651 - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,652 - on stmt: eta = index_frac.1 - offset
DEBUG 2024-06-11 14:50:54,652 - find_def var='offset' stmt=eta = index_frac.1 - offset
DEBUG 2024-06-11 14:50:54,652 - replaced with: eta = index_frac.1 - offset.1
DEBUG 2024-06-11 14:50:54,652 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:50:54,652 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:50:54,652 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 14:50:54,652 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:50:54,652 - find_def var='offset' stmt=$binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:50:54,652 - replaced with: $binop_sub318.31 = nwin - offset.1
DEBUG 2024-06-11 14:50:54,652 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:50:54,652 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,652 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:50:54,652 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,652 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:50:54,652 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:50:54,652 - on stmt: jump 374
DEBUG 2024-06-11 14:50:54,652 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:50:54,652 - Running <numba.core.ssa._FixSSAVars object at 0x000002C654204CD0>
DEBUG 2024-06-11 14:50:54,652 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:50:54,652 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:50:54,652 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:50:54,652 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:50:54,652 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:50:54,652 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:50:54,652 - Running <numba.core.ssa._FixSSAVars object at 0x000002C654204CD0>
DEBUG 2024-06-11 14:50:54,652 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:50:54,652 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:50:54,652 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:50:54,653 - find_def var='offset' stmt=$binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:50:54,653 - find_def_from_top label 376
DEBUG 2024-06-11 14:50:54,653 - idom 374 from label 376
DEBUG 2024-06-11 14:50:54,653 - find_def_from_bottom label 374
DEBUG 2024-06-11 14:50:54,653 - find_def_from_top label 374
DEBUG 2024-06-11 14:50:54,653 - idom 180 from label 374
DEBUG 2024-06-11 14:50:54,653 - find_def_from_bottom label 180
DEBUG 2024-06-11 14:50:54,653 - replaced with: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG 2024-06-11 14:50:54,653 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,653 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:50:54,653 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:50:54,653 - find_def var='offset' stmt=$binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:50:54,653 - find_def_from_top label 376
DEBUG 2024-06-11 14:50:54,653 - idom 374 from label 376
DEBUG 2024-06-11 14:50:54,653 - find_def_from_bottom label 374
DEBUG 2024-06-11 14:50:54,653 - find_def_from_top label 374
DEBUG 2024-06-11 14:50:54,653 - idom 180 from label 374
DEBUG 2024-06-11 14:50:54,653 - find_def_from_bottom label 180
DEBUG 2024-06-11 14:50:54,653 - replaced with: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG 2024-06-11 14:50:54,653 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,653 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:50:54,653 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:50:54,653 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,653 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 14:50:54,653 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,653 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:50:54,653 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:50:54,654 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:50:54,654 - on stmt: jump 374
DEBUG 2024-06-11 14:50:54,654 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:50:54,654 - Running <numba.core.ssa._FixSSAVars object at 0x000002C654204CD0>
DEBUG 2024-06-11 14:50:54,654 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 14:50:54,654 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 14:50:54,654 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 14:50:54,654 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,654 - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,654 - on stmt: eta = index_frac.2 - offset
DEBUG 2024-06-11 14:50:54,654 - find_def var='offset' stmt=eta = index_frac.2 - offset
DEBUG 2024-06-11 14:50:54,654 - replaced with: eta = index_frac.2 - offset.2
DEBUG 2024-06-11 14:50:54,654 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:50:54,654 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 14:50:54,654 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:50:54,654 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:50:54,654 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:50:54,654 - find_def var='offset' stmt=$binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:50:54,654 - replaced with: $binop_sub590.23 = nwin - offset.2
DEBUG 2024-06-11 14:50:54,654 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:50:54,654 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,654 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:50:54,654 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,654 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:50:54,654 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:50:54,654 - on stmt: jump 646
DEBUG 2024-06-11 14:50:54,654 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:50:54,654 - Running <numba.core.ssa._FixSSAVars object at 0x000002C654204CD0>
DEBUG 2024-06-11 14:50:54,655 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:50:54,655 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:50:54,655 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:50:54,655 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:50:54,655 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:50:54,655 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:50:54,655 - Running <numba.core.ssa._FixSSAVars object at 0x000002C654204CD0>
DEBUG 2024-06-11 14:50:54,655 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:50:54,655 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:50:54,655 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:50:54,655 - find_def var='offset' stmt=$binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:50:54,655 - find_def_from_top label 648
DEBUG 2024-06-11 14:50:54,655 - idom 646 from label 648
DEBUG 2024-06-11 14:50:54,655 - find_def_from_bottom label 646
DEBUG 2024-06-11 14:50:54,655 - find_def_from_top label 646
DEBUG 2024-06-11 14:50:54,655 - idom 500 from label 646
DEBUG 2024-06-11 14:50:54,655 - find_def_from_bottom label 500
DEBUG 2024-06-11 14:50:54,655 - replaced with: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG 2024-06-11 14:50:54,655 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,655 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:50:54,655 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:50:54,655 - find_def var='offset' stmt=$binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:50:54,655 - find_def_from_top label 648
DEBUG 2024-06-11 14:50:54,655 - idom 646 from label 648
DEBUG 2024-06-11 14:50:54,655 - find_def_from_bottom label 646
DEBUG 2024-06-11 14:50:54,655 - find_def_from_top label 646
DEBUG 2024-06-11 14:50:54,655 - idom 500 from label 646
DEBUG 2024-06-11 14:50:54,655 - find_def_from_bottom label 500
DEBUG 2024-06-11 14:50:54,655 - replaced with: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG 2024-06-11 14:50:54,655 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,655 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:50:54,655 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:50:54,657 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,657 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 14:50:54,657 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:50:54,657 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:50:54,657 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,657 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:50:54,657 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:50:54,657 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:50:54,657 - on stmt: jump 646
DEBUG 2024-06-11 14:50:54,657 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:50:54,657 - Running <numba.core.ssa._FixSSAVars object at 0x000002C654204CD0>
DEBUG 2024-06-11 14:50:54,657 - on stmt: jump 176
DEBUG 2024-06-11 14:50:54,657 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:50:54,657 - Running <numba.core.ssa._FixSSAVars object at 0x000002C654204CD0>
DEBUG 2024-06-11 14:50:54,657 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:50:54,657 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:50:54,657 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:50:54,657 - Fix SSA violator on var eta
DEBUG 2024-06-11 14:50:54,657 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:50:54,657 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654211310>
DEBUG 2024-06-11 14:50:54,657 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:50:54,657 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:50:54,657 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:50:54,657 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:50:54,657 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:50:54,657 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:50:54,657 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:50:54,657 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,657 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:50:54,657 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,657 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,657 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:50:54,657 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,657 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,657 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:50:54,657 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,657 - first assign: eta
DEBUG 2024-06-11 14:50:54,657 - replaced with: eta = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,657 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,657 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:50:54,657 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:50:54,657 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,657 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:50:54,658 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:50:54,658 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,658 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:50:54,658 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:50:54,658 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,658 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:50:54,658 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,658 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:50:54,658 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:50:54,658 - on stmt: jump 176
DEBUG 2024-06-11 14:50:54,658 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:50:54,658 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654211310>
DEBUG 2024-06-11 14:50:54,658 - on stmt: jump 178
DEBUG 2024-06-11 14:50:54,658 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:50:54,658 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654211310>
DEBUG 2024-06-11 14:50:54,658 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:50:54,658 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:50:54,658 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:50:54,658 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:50:54,658 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:50:54,658 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:50:54,658 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654211310>
DEBUG 2024-06-11 14:50:54,658 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:50:54,658 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,658 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,658 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,658 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 14:50:54,658 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 14:50:54,658 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 14:50:54,659 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,659 - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,659 - on stmt: eta = index_frac.1 - offset.1
DEBUG 2024-06-11 14:50:54,659 - replaced with: eta.1 = index_frac.1 - offset.1
DEBUG 2024-06-11 14:50:54,659 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:50:54,659 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:50:54,659 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 14:50:54,659 - on stmt: $binop_sub318.31 = nwin - offset.1
DEBUG 2024-06-11 14:50:54,659 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:50:54,659 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,659 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:50:54,659 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,659 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:50:54,659 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:50:54,659 - on stmt: jump 374
DEBUG 2024-06-11 14:50:54,659 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:50:54,659 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654211310>
DEBUG 2024-06-11 14:50:54,659 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:50:54,659 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:50:54,659 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:50:54,659 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:50:54,659 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:50:54,659 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:50:54,659 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654211310>
DEBUG 2024-06-11 14:50:54,659 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:50:54,659 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:50:54,659 - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG 2024-06-11 14:50:54,659 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,660 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:50:54,660 - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG 2024-06-11 14:50:54,660 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,660 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:50:54,660 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:50:54,660 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,660 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 14:50:54,660 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,660 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:50:54,660 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:50:54,660 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:50:54,660 - on stmt: jump 374
DEBUG 2024-06-11 14:50:54,660 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:50:54,660 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654211310>
DEBUG 2024-06-11 14:50:54,660 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 14:50:54,660 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 14:50:54,660 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 14:50:54,660 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,660 - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,660 - on stmt: eta = index_frac.2 - offset.2
DEBUG 2024-06-11 14:50:54,660 - replaced with: eta.2 = index_frac.2 - offset.2
DEBUG 2024-06-11 14:50:54,660 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:50:54,660 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 14:50:54,660 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:50:54,660 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:50:54,660 - on stmt: $binop_sub590.23 = nwin - offset.2
DEBUG 2024-06-11 14:50:54,660 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:50:54,660 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,661 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:50:54,661 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,661 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:50:54,661 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:50:54,661 - on stmt: jump 646
DEBUG 2024-06-11 14:50:54,661 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:50:54,661 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654211310>
DEBUG 2024-06-11 14:50:54,661 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:50:54,661 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:50:54,661 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:50:54,661 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:50:54,661 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:50:54,661 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:50:54,661 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654211310>
DEBUG 2024-06-11 14:50:54,661 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:50:54,661 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:50:54,661 - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG 2024-06-11 14:50:54,661 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,661 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:50:54,661 - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG 2024-06-11 14:50:54,661 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,661 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:50:54,661 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:50:54,661 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,661 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 14:50:54,661 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:50:54,661 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:50:54,661 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,661 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:50:54,662 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:50:54,662 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:50:54,662 - on stmt: jump 646
DEBUG 2024-06-11 14:50:54,662 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:50:54,662 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654211310>
DEBUG 2024-06-11 14:50:54,662 - on stmt: jump 176
DEBUG 2024-06-11 14:50:54,662 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:50:54,662 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654211310>
DEBUG 2024-06-11 14:50:54,662 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:50:54,662 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:50:54,662 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:50:54,662 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000002C654212250>],
             180: [<numba.core.ir.Assign object at 0x000002C654204CD0>],
             500: [<numba.core.ir.Assign object at 0x000002C6541D12D0>]})
DEBUG 2024-06-11 14:50:54,662 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:50:54,662 - Running <numba.core.ssa._FixSSAVars object at 0x000002C6541BDB50>
DEBUG 2024-06-11 14:50:54,662 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:50:54,662 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:50:54,662 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:50:54,662 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:50:54,662 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:50:54,662 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:50:54,662 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:50:54,662 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,662 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:50:54,662 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,662 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,662 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:50:54,663 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,663 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,663 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:50:54,663 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,663 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,663 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:50:54,663 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:50:54,663 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,663 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:50:54,663 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:50:54,663 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,663 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:50:54,663 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:50:54,663 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,663 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:50:54,663 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,663 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:50:54,663 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:50:54,663 - on stmt: jump 176
DEBUG 2024-06-11 14:50:54,663 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:50:54,663 - Running <numba.core.ssa._FixSSAVars object at 0x000002C6541BDB50>
DEBUG 2024-06-11 14:50:54,663 - on stmt: jump 178
DEBUG 2024-06-11 14:50:54,663 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:50:54,663 - Running <numba.core.ssa._FixSSAVars object at 0x000002C6541BDB50>
DEBUG 2024-06-11 14:50:54,663 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:50:54,663 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:50:54,663 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:50:54,663 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:50:54,663 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:50:54,664 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:50:54,664 - Running <numba.core.ssa._FixSSAVars object at 0x000002C6541BDB50>
DEBUG 2024-06-11 14:50:54,664 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:50:54,664 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,664 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,664 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,664 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 14:50:54,664 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 14:50:54,664 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 14:50:54,664 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,664 - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,664 - on stmt: eta.1 = index_frac.1 - offset.1
DEBUG 2024-06-11 14:50:54,664 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:50:54,664 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:50:54,664 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 14:50:54,664 - on stmt: $binop_sub318.31 = nwin - offset.1
DEBUG 2024-06-11 14:50:54,664 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:50:54,664 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,664 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:50:54,664 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,664 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:50:54,664 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:50:54,664 - on stmt: jump 374
DEBUG 2024-06-11 14:50:54,664 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:50:54,664 - Running <numba.core.ssa._FixSSAVars object at 0x000002C6541BDB50>
DEBUG 2024-06-11 14:50:54,664 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:50:54,664 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:50:54,665 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:50:54,665 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:50:54,665 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:50:54,665 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:50:54,665 - Running <numba.core.ssa._FixSSAVars object at 0x000002C6541BDB50>
DEBUG 2024-06-11 14:50:54,665 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:50:54,665 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:50:54,665 - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG 2024-06-11 14:50:54,665 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,665 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:50:54,665 - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG 2024-06-11 14:50:54,665 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,665 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:50:54,665 - find_def var='eta' stmt=$binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:50:54,665 - find_def_from_top label 376
DEBUG 2024-06-11 14:50:54,665 - idom 374 from label 376
DEBUG 2024-06-11 14:50:54,665 - find_def_from_bottom label 374
DEBUG 2024-06-11 14:50:54,665 - find_def_from_top label 374
DEBUG 2024-06-11 14:50:54,665 - idom 180 from label 374
DEBUG 2024-06-11 14:50:54,665 - find_def_from_bottom label 180
DEBUG 2024-06-11 14:50:54,665 - replaced with: $binop_mul432.18 = eta.1 * $422binary_subscr.17
DEBUG 2024-06-11 14:50:54,665 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:50:54,665 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,665 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 14:50:54,665 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,665 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:50:54,666 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:50:54,666 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:50:54,666 - on stmt: jump 374
DEBUG 2024-06-11 14:50:54,666 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:50:54,666 - Running <numba.core.ssa._FixSSAVars object at 0x000002C6541BDB50>
DEBUG 2024-06-11 14:50:54,666 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 14:50:54,666 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 14:50:54,666 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 14:50:54,666 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,666 - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,666 - on stmt: eta.2 = index_frac.2 - offset.2
DEBUG 2024-06-11 14:50:54,666 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:50:54,666 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 14:50:54,666 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:50:54,666 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:50:54,666 - on stmt: $binop_sub590.23 = nwin - offset.2
DEBUG 2024-06-11 14:50:54,666 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:50:54,666 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,666 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:50:54,666 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,666 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:50:54,666 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:50:54,666 - on stmt: jump 646
DEBUG 2024-06-11 14:50:54,666 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:50:54,666 - Running <numba.core.ssa._FixSSAVars object at 0x000002C6541BDB50>
DEBUG 2024-06-11 14:50:54,666 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:50:54,666 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:50:54,667 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:50:54,667 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:50:54,667 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:50:54,667 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:50:54,667 - Running <numba.core.ssa._FixSSAVars object at 0x000002C6541BDB50>
DEBUG 2024-06-11 14:50:54,667 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:50:54,667 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:50:54,667 - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG 2024-06-11 14:50:54,667 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,667 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:50:54,667 - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG 2024-06-11 14:50:54,667 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,667 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:50:54,667 - find_def var='eta' stmt=$binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:50:54,667 - find_def_from_top label 648
DEBUG 2024-06-11 14:50:54,667 - idom 646 from label 648
DEBUG 2024-06-11 14:50:54,667 - find_def_from_bottom label 646
DEBUG 2024-06-11 14:50:54,667 - find_def_from_top label 646
DEBUG 2024-06-11 14:50:54,667 - idom 500 from label 646
DEBUG 2024-06-11 14:50:54,667 - find_def_from_bottom label 500
DEBUG 2024-06-11 14:50:54,667 - replaced with: $binop_mul704.18 = eta.2 * $694binary_subscr.17
DEBUG 2024-06-11 14:50:54,667 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:50:54,667 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,667 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 14:50:54,667 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:50:54,667 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:50:54,667 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,668 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:50:54,668 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:50:54,668 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:50:54,668 - on stmt: jump 646
DEBUG 2024-06-11 14:50:54,668 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:50:54,668 - Running <numba.core.ssa._FixSSAVars object at 0x000002C6541BDB50>
DEBUG 2024-06-11 14:50:54,668 - on stmt: jump 176
DEBUG 2024-06-11 14:50:54,668 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:50:54,668 - Running <numba.core.ssa._FixSSAVars object at 0x000002C6541BDB50>
DEBUG 2024-06-11 14:50:54,668 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:50:54,668 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:50:54,668 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:50:54,668 - Fix SSA violator on var weight
DEBUG 2024-06-11 14:50:54,668 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:50:54,668 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654212110>
DEBUG 2024-06-11 14:50:54,668 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:50:54,668 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:50:54,668 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:50:54,668 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:50:54,668 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:50:54,668 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:50:54,668 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:50:54,668 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,668 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:50:54,668 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,668 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,668 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:50:54,668 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,668 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,668 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:50:54,669 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,669 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,669 - first assign: weight
DEBUG 2024-06-11 14:50:54,669 - replaced with: weight = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,669 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:50:54,669 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:50:54,669 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,669 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:50:54,669 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:50:54,669 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,669 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:50:54,669 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:50:54,669 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,669 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:50:54,669 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,669 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:50:54,669 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:50:54,669 - on stmt: jump 176
DEBUG 2024-06-11 14:50:54,669 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:50:54,669 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654212110>
DEBUG 2024-06-11 14:50:54,669 - on stmt: jump 178
DEBUG 2024-06-11 14:50:54,669 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:50:54,669 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654212110>
DEBUG 2024-06-11 14:50:54,669 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:50:54,669 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:50:54,669 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:50:54,669 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:50:54,669 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:50:54,669 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:50:54,670 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654212110>
DEBUG 2024-06-11 14:50:54,670 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:50:54,670 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,670 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,670 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,670 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 14:50:54,670 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 14:50:54,670 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 14:50:54,670 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,670 - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,670 - on stmt: eta.1 = index_frac.1 - offset.1
DEBUG 2024-06-11 14:50:54,670 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:50:54,670 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:50:54,670 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 14:50:54,670 - on stmt: $binop_sub318.31 = nwin - offset.1
DEBUG 2024-06-11 14:50:54,670 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:50:54,670 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,671 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:50:54,671 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,671 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:50:54,671 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:50:54,671 - on stmt: jump 374
DEBUG 2024-06-11 14:50:54,671 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:50:54,671 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654212110>
DEBUG 2024-06-11 14:50:54,671 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:50:54,671 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:50:54,671 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:50:54,671 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:50:54,671 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:50:54,671 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:50:54,671 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654212110>
DEBUG 2024-06-11 14:50:54,671 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:50:54,671 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:50:54,671 - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG 2024-06-11 14:50:54,671 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,671 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:50:54,671 - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG 2024-06-11 14:50:54,671 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,673 - on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
DEBUG 2024-06-11 14:50:54,673 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:50:54,673 - replaced with: weight.1 = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:50:54,673 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,673 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 14:50:54,673 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,673 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:50:54,673 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:50:54,673 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:50:54,673 - on stmt: jump 374
DEBUG 2024-06-11 14:50:54,673 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:50:54,673 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654212110>
DEBUG 2024-06-11 14:50:54,673 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 14:50:54,673 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 14:50:54,673 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 14:50:54,673 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,673 - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,673 - on stmt: eta.2 = index_frac.2 - offset.2
DEBUG 2024-06-11 14:50:54,673 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:50:54,673 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 14:50:54,673 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:50:54,673 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:50:54,673 - on stmt: $binop_sub590.23 = nwin - offset.2
DEBUG 2024-06-11 14:50:54,673 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:50:54,673 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,673 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:50:54,673 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,675 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:50:54,675 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:50:54,675 - on stmt: jump 646
DEBUG 2024-06-11 14:50:54,675 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:50:54,675 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654212110>
DEBUG 2024-06-11 14:50:54,675 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:50:54,675 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:50:54,675 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:50:54,675 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:50:54,675 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:50:54,675 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:50:54,675 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654212110>
DEBUG 2024-06-11 14:50:54,675 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:50:54,675 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:50:54,675 - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG 2024-06-11 14:50:54,675 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,675 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:50:54,676 - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG 2024-06-11 14:50:54,676 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,676 - on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
DEBUG 2024-06-11 14:50:54,676 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:50:54,676 - replaced with: weight.2 = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:50:54,676 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,676 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 14:50:54,676 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:50:54,676 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:50:54,676 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,676 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:50:54,676 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:50:54,676 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:50:54,676 - on stmt: jump 646
DEBUG 2024-06-11 14:50:54,676 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:50:54,676 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654212110>
DEBUG 2024-06-11 14:50:54,676 - on stmt: jump 176
DEBUG 2024-06-11 14:50:54,676 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:50:54,676 - Running <numba.core.ssa._FreshVarHandler object at 0x000002C654212110>
DEBUG 2024-06-11 14:50:54,676 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:50:54,676 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:50:54,676 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:50:54,676 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000002C654212A50>],
             376: [<numba.core.ir.Assign object at 0x000002C6541D10D0>],
             648: [<numba.core.ir.Assign object at 0x000002C6541D1190>]})
DEBUG 2024-06-11 14:50:54,676 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:50:54,676 - Running <numba.core.ssa._FixSSAVars object at 0x000002C6541BED10>
DEBUG 2024-06-11 14:50:54,676 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:50:54,676 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:50:54,676 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:50:54,676 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:50:54,677 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:50:54,677 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:50:54,677 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:50:54,677 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,677 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:50:54,677 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,677 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,677 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:50:54,677 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,677 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,677 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:50:54,677 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,677 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:50:54,677 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:50:54,677 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:50:54,677 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,677 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:50:54,677 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:50:54,677 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,677 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:50:54,677 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:50:54,677 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,677 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:50:54,677 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,677 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:50:54,677 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:50:54,677 - on stmt: jump 176
DEBUG 2024-06-11 14:50:54,677 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:50:54,677 - Running <numba.core.ssa._FixSSAVars object at 0x000002C6541BED10>
DEBUG 2024-06-11 14:50:54,677 - on stmt: jump 178
DEBUG 2024-06-11 14:50:54,678 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:50:54,678 - Running <numba.core.ssa._FixSSAVars object at 0x000002C6541BED10>
DEBUG 2024-06-11 14:50:54,678 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:50:54,678 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:50:54,678 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:50:54,678 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:50:54,678 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:50:54,678 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:50:54,678 - Running <numba.core.ssa._FixSSAVars object at 0x000002C6541BED10>
DEBUG 2024-06-11 14:50:54,678 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:50:54,678 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,678 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,678 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,678 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 14:50:54,678 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 14:50:54,678 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 14:50:54,678 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,678 - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,678 - on stmt: eta.1 = index_frac.1 - offset.1
DEBUG 2024-06-11 14:50:54,678 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:50:54,678 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:50:54,678 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 14:50:54,678 - on stmt: $binop_sub318.31 = nwin - offset.1
DEBUG 2024-06-11 14:50:54,678 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:50:54,678 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,678 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:50:54,678 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,678 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:50:54,678 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:50:54,678 - on stmt: jump 374
DEBUG 2024-06-11 14:50:54,678 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:50:54,678 - Running <numba.core.ssa._FixSSAVars object at 0x000002C6541BED10>
DEBUG 2024-06-11 14:50:54,678 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:50:54,678 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:50:54,678 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:50:54,678 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:50:54,678 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:50:54,678 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:50:54,678 - Running <numba.core.ssa._FixSSAVars object at 0x000002C6541BED10>
DEBUG 2024-06-11 14:50:54,678 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:50:54,678 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:50:54,678 - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG 2024-06-11 14:50:54,679 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,679 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:50:54,679 - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG 2024-06-11 14:50:54,679 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,679 - on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
DEBUG 2024-06-11 14:50:54,679 - on stmt: weight.1 = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:50:54,679 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,679 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 14:50:54,679 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,679 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:50:54,679 - find_def var='weight' stmt=$binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:50:54,679 - replaced with: $binop_mul482.29 = weight.1 * $472binary_subscr.28
DEBUG 2024-06-11 14:50:54,679 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:50:54,679 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:50:54,679 - on stmt: jump 374
DEBUG 2024-06-11 14:50:54,679 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:50:54,679 - Running <numba.core.ssa._FixSSAVars object at 0x000002C6541BED10>
DEBUG 2024-06-11 14:50:54,679 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 14:50:54,679 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 14:50:54,679 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 14:50:54,679 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:50:54,679 - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,679 - on stmt: eta.2 = index_frac.2 - offset.2
DEBUG 2024-06-11 14:50:54,679 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:50:54,679 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 14:50:54,679 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:50:54,680 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:50:54,680 - on stmt: $binop_sub590.23 = nwin - offset.2
DEBUG 2024-06-11 14:50:54,680 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:50:54,680 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,680 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:50:54,680 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:50:54,680 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:50:54,680 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:50:54,680 - on stmt: jump 646
DEBUG 2024-06-11 14:50:54,680 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:50:54,680 - Running <numba.core.ssa._FixSSAVars object at 0x000002C6541BED10>
DEBUG 2024-06-11 14:50:54,680 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:50:54,680 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:50:54,680 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:50:54,680 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:50:54,680 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:50:54,680 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:50:54,680 - Running <numba.core.ssa._FixSSAVars object at 0x000002C6541BED10>
DEBUG 2024-06-11 14:50:54,680 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:50:54,680 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:50:54,680 - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG 2024-06-11 14:50:54,680 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,680 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:50:54,680 - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG 2024-06-11 14:50:54,680 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,680 - on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
DEBUG 2024-06-11 14:50:54,680 - on stmt: weight.2 = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:50:54,680 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,681 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 14:50:54,681 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:50:54,681 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:50:54,681 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:50:54,681 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:50:54,681 - find_def var='weight' stmt=$binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:50:54,681 - replaced with: $binop_mul760.31 = weight.2 * $750binary_subscr.30
DEBUG 2024-06-11 14:50:54,681 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:50:54,681 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:50:54,681 - on stmt: jump 646
DEBUG 2024-06-11 14:50:54,681 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:50:54,681 - Running <numba.core.ssa._FixSSAVars object at 0x000002C6541BED10>
DEBUG 2024-06-11 14:50:54,681 - on stmt: jump 176
DEBUG 2024-06-11 14:50:54,681 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:50:54,681 - Running <numba.core.ssa._FixSSAVars object at 0x000002C6541BED10>
DEBUG 2024-06-11 14:50:54,681 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:50:54,681 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:50:54,681 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:50:55,395 - bytecode dump:
>          0	NOP(arg=None, lineno=425)
           2	RESUME(arg=0, lineno=425)
           4	LOAD_FAST(arg=0, lineno=428)
           6	LOAD_CONST(arg=1, lineno=428)
           8	BINARY_SUBSCR(arg=None, lineno=428)
          18	LOAD_FAST(arg=0, lineno=428)
          20	LOAD_CONST(arg=2, lineno=428)
          22	BINARY_SUBSCR(arg=None, lineno=428)
          32	BINARY_OP(arg=0, lineno=428)
          36	LOAD_CONST(arg=3, lineno=428)
          38	LOAD_FAST(arg=0, lineno=428)
          40	LOAD_CONST(arg=4, lineno=428)
          42	BINARY_SUBSCR(arg=None, lineno=428)
          52	BINARY_OP(arg=5, lineno=428)
          56	BINARY_OP(arg=10, lineno=428)
          60	STORE_FAST(arg=1, lineno=428)
          62	LOAD_FAST(arg=0, lineno=429)
          64	LOAD_CONST(arg=1, lineno=429)
          66	BINARY_SUBSCR(arg=None, lineno=429)
          76	LOAD_FAST(arg=0, lineno=429)
          78	LOAD_CONST(arg=2, lineno=429)
          80	BINARY_SUBSCR(arg=None, lineno=429)
          90	BINARY_OP(arg=10, lineno=429)
          94	LOAD_CONST(arg=3, lineno=429)
          96	BINARY_OP(arg=11, lineno=429)
         100	STORE_FAST(arg=2, lineno=429)
         102	LOAD_GLOBAL(arg=1, lineno=431)
         114	LOAD_ATTR(arg=1, lineno=431)
         124	LOAD_FAST(arg=2, lineno=431)
         126	PRECALL(arg=1, lineno=431)
         130	CALL(arg=1, lineno=431)
         140	LOAD_GLOBAL(arg=1, lineno=431)
         152	LOAD_ATTR(arg=1, lineno=431)
         162	LOAD_FAST(arg=1, lineno=431)
         164	PRECALL(arg=1, lineno=431)
         168	CALL(arg=1, lineno=431)
         178	COMPARE_OP(arg=5, lineno=431)
         184	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=431)
         186	LOAD_CONST(arg=4, lineno=434)
         188	RETURN_VALUE(arg=None, lineno=434)
>        190	LOAD_FAST(arg=2, lineno=436)
         192	UNARY_NEGATIVE(arg=None, lineno=436)
         194	LOAD_FAST(arg=1, lineno=436)
         196	BINARY_OP(arg=11, lineno=436)
         200	RETURN_VALUE(arg=None, lineno=436)
DEBUG 2024-06-11 14:50:55,395 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 14:50:55,395 - stack: []
DEBUG 2024-06-11 14:50:55,395 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 14:50:55,395 - dispatch pc=0, inst=NOP(arg=None, lineno=425)
DEBUG 2024-06-11 14:50:55,395 - stack []
DEBUG 2024-06-11 14:50:55,395 - dispatch pc=2, inst=RESUME(arg=0, lineno=425)
DEBUG 2024-06-11 14:50:55,395 - stack []
DEBUG 2024-06-11 14:50:55,395 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=428)
DEBUG 2024-06-11 14:50:55,395 - stack []
DEBUG 2024-06-11 14:50:55,395 - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=428)
DEBUG 2024-06-11 14:50:55,395 - stack ['$x4.0']
DEBUG 2024-06-11 14:50:55,395 - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=428)
DEBUG 2024-06-11 14:50:55,396 - stack ['$x4.0', '$const6.1']
DEBUG 2024-06-11 14:50:55,396 - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=428)
DEBUG 2024-06-11 14:50:55,396 - stack ['$8binary_subscr.2']
DEBUG 2024-06-11 14:50:55,396 - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=428)
DEBUG 2024-06-11 14:50:55,396 - stack ['$8binary_subscr.2', '$x18.3']
DEBUG 2024-06-11 14:50:55,396 - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=428)
DEBUG 2024-06-11 14:50:55,396 - stack ['$8binary_subscr.2', '$x18.3', '$const20.4']
DEBUG 2024-06-11 14:50:55,396 - dispatch pc=32, inst=BINARY_OP(arg=0, lineno=428)
DEBUG 2024-06-11 14:50:55,396 - stack ['$8binary_subscr.2', '$22binary_subscr.5']
DEBUG 2024-06-11 14:50:55,396 - dispatch pc=36, inst=LOAD_CONST(arg=3, lineno=428)
DEBUG 2024-06-11 14:50:55,396 - stack ['$binop_add32.6']
DEBUG 2024-06-11 14:50:55,396 - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=428)
DEBUG 2024-06-11 14:50:55,396 - stack ['$binop_add32.6', '$const36.7']
DEBUG 2024-06-11 14:50:55,396 - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=428)
DEBUG 2024-06-11 14:50:55,396 - stack ['$binop_add32.6', '$const36.7', '$x38.8']
DEBUG 2024-06-11 14:50:55,396 - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=428)
DEBUG 2024-06-11 14:50:55,396 - stack ['$binop_add32.6', '$const36.7', '$x38.8', '$const40.9']
DEBUG 2024-06-11 14:50:55,396 - dispatch pc=52, inst=BINARY_OP(arg=5, lineno=428)
DEBUG 2024-06-11 14:50:55,396 - stack ['$binop_add32.6', '$const36.7', '$42binary_subscr.10']
DEBUG 2024-06-11 14:50:55,396 - dispatch pc=56, inst=BINARY_OP(arg=10, lineno=428)
DEBUG 2024-06-11 14:50:55,396 - stack ['$binop_add32.6', '$binop_mul52.11']
DEBUG 2024-06-11 14:50:55,396 - dispatch pc=60, inst=STORE_FAST(arg=1, lineno=428)
DEBUG 2024-06-11 14:50:55,396 - stack ['$binop_sub56.12']
DEBUG 2024-06-11 14:50:55,396 - dispatch pc=62, inst=LOAD_FAST(arg=0, lineno=429)
DEBUG 2024-06-11 14:50:55,396 - stack []
DEBUG 2024-06-11 14:50:55,396 - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=429)
DEBUG 2024-06-11 14:50:55,396 - stack ['$x62.13']
DEBUG 2024-06-11 14:50:55,396 - dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=429)
DEBUG 2024-06-11 14:50:55,397 - stack ['$x62.13', '$const64.14']
DEBUG 2024-06-11 14:50:55,397 - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=429)
DEBUG 2024-06-11 14:50:55,397 - stack ['$66binary_subscr.15']
DEBUG 2024-06-11 14:50:55,397 - dispatch pc=78, inst=LOAD_CONST(arg=2, lineno=429)
DEBUG 2024-06-11 14:50:55,397 - stack ['$66binary_subscr.15', '$x76.16']
DEBUG 2024-06-11 14:50:55,397 - dispatch pc=80, inst=BINARY_SUBSCR(arg=None, lineno=429)
DEBUG 2024-06-11 14:50:55,397 - stack ['$66binary_subscr.15', '$x76.16', '$const78.17']
DEBUG 2024-06-11 14:50:55,397 - dispatch pc=90, inst=BINARY_OP(arg=10, lineno=429)
DEBUG 2024-06-11 14:50:55,397 - stack ['$66binary_subscr.15', '$80binary_subscr.18']
DEBUG 2024-06-11 14:50:55,397 - dispatch pc=94, inst=LOAD_CONST(arg=3, lineno=429)
DEBUG 2024-06-11 14:50:55,397 - stack ['$binop_sub90.19']
DEBUG 2024-06-11 14:50:55,397 - dispatch pc=96, inst=BINARY_OP(arg=11, lineno=429)
DEBUG 2024-06-11 14:50:55,397 - stack ['$binop_sub90.19', '$const94.20']
DEBUG 2024-06-11 14:50:55,397 - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=429)
DEBUG 2024-06-11 14:50:55,397 - stack ['$binop_truediv96.21']
DEBUG 2024-06-11 14:50:55,397 - dispatch pc=102, inst=LOAD_GLOBAL(arg=1, lineno=431)
DEBUG 2024-06-11 14:50:55,397 - stack []
DEBUG 2024-06-11 14:50:55,397 - dispatch pc=114, inst=LOAD_ATTR(arg=1, lineno=431)
DEBUG 2024-06-11 14:50:55,397 - stack ['$null$102.23', '$102load_global.22']
DEBUG 2024-06-11 14:50:55,397 - dispatch pc=124, inst=LOAD_FAST(arg=2, lineno=431)
DEBUG 2024-06-11 14:50:55,397 - stack ['$null$102.23', '$114load_attr.24']
DEBUG 2024-06-11 14:50:55,397 - dispatch pc=126, inst=PRECALL(arg=1, lineno=431)
DEBUG 2024-06-11 14:50:55,397 - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
DEBUG 2024-06-11 14:50:55,397 - dispatch pc=130, inst=CALL(arg=1, lineno=431)
DEBUG 2024-06-11 14:50:55,397 - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
DEBUG 2024-06-11 14:50:55,397 - dispatch pc=140, inst=LOAD_GLOBAL(arg=1, lineno=431)
DEBUG 2024-06-11 14:50:55,397 - stack ['$130call.26']
DEBUG 2024-06-11 14:50:55,398 - dispatch pc=152, inst=LOAD_ATTR(arg=1, lineno=431)
DEBUG 2024-06-11 14:50:55,398 - stack ['$130call.26', '$null$140.28', '$140load_global.27']
DEBUG 2024-06-11 14:50:55,398 - dispatch pc=162, inst=LOAD_FAST(arg=1, lineno=431)
DEBUG 2024-06-11 14:50:55,398 - stack ['$130call.26', '$null$140.28', '$152load_attr.29']
DEBUG 2024-06-11 14:50:55,398 - dispatch pc=164, inst=PRECALL(arg=1, lineno=431)
DEBUG 2024-06-11 14:50:55,398 - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
DEBUG 2024-06-11 14:50:55,398 - dispatch pc=168, inst=CALL(arg=1, lineno=431)
DEBUG 2024-06-11 14:50:55,398 - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
DEBUG 2024-06-11 14:50:55,398 - dispatch pc=178, inst=COMPARE_OP(arg=5, lineno=431)
DEBUG 2024-06-11 14:50:55,398 - stack ['$130call.26', '$168call.31']
DEBUG 2024-06-11 14:50:55,398 - dispatch pc=184, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=431)
DEBUG 2024-06-11 14:50:55,398 - stack ['$178compare_op.32']
DEBUG 2024-06-11 14:50:55,398 - end state. edges=[Edge(pc=186, stack=(), blockstack=(), npush=0), Edge(pc=190, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:50:55,398 - pending: deque([State(pc_initial=186 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
DEBUG 2024-06-11 14:50:55,398 - stack: []
DEBUG 2024-06-11 14:50:55,398 - state.pc_initial: State(pc_initial=186 nstack_initial=0)
DEBUG 2024-06-11 14:50:55,398 - dispatch pc=186, inst=LOAD_CONST(arg=4, lineno=434)
DEBUG 2024-06-11 14:50:55,398 - stack []
DEBUG 2024-06-11 14:50:55,398 - dispatch pc=188, inst=RETURN_VALUE(arg=None, lineno=434)
DEBUG 2024-06-11 14:50:55,398 - stack ['$const186.0']
DEBUG 2024-06-11 14:50:55,398 - end state. edges=[]
DEBUG 2024-06-11 14:50:55,398 - pending: deque([State(pc_initial=190 nstack_initial=0)])
DEBUG 2024-06-11 14:50:55,398 - stack: []
DEBUG 2024-06-11 14:50:55,398 - state.pc_initial: State(pc_initial=190 nstack_initial=0)
DEBUG 2024-06-11 14:50:55,398 - dispatch pc=190, inst=LOAD_FAST(arg=2, lineno=436)
DEBUG 2024-06-11 14:50:55,399 - stack []
DEBUG 2024-06-11 14:50:55,399 - dispatch pc=192, inst=UNARY_NEGATIVE(arg=None, lineno=436)
DEBUG 2024-06-11 14:50:55,399 - stack ['$b190.0']
DEBUG 2024-06-11 14:50:55,399 - dispatch pc=194, inst=LOAD_FAST(arg=1, lineno=436)
DEBUG 2024-06-11 14:50:55,399 - stack ['$192unary_negative.1']
DEBUG 2024-06-11 14:50:55,399 - dispatch pc=196, inst=BINARY_OP(arg=11, lineno=436)
DEBUG 2024-06-11 14:50:55,399 - stack ['$192unary_negative.1', '$a194.2']
DEBUG 2024-06-11 14:50:55,399 - dispatch pc=200, inst=RETURN_VALUE(arg=None, lineno=436)
DEBUG 2024-06-11 14:50:55,399 - stack ['$binop_truediv196.3']
DEBUG 2024-06-11 14:50:55,399 - end state. edges=[]
DEBUG 2024-06-11 14:50:55,399 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 14:50:55,399 - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=186 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set()})
DEBUG 2024-06-11 14:50:55,399 - defmap: {}
DEBUG 2024-06-11 14:50:55,399 - phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 14:50:55,399 - changing phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 14:50:55,399 - keep phismap: {}
DEBUG 2024-06-11 14:50:55,399 - new_out: defaultdict(<class 'dict'>, {})
DEBUG 2024-06-11 14:50:55,399 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 14:50:55,399 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4'}), (22, {'index': '$const20.4', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'op': '+', 'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$binop_add32.6'}), (34, {}), (36, {'res': '$const36.7'}), (38, {'res': '$x38.8'}), (40, {'res': '$const40.9'}), (42, {'index': '$const40.9', 'target': '$x38.8', 'res': '$42binary_subscr.10'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'op': '*', 'lhs': '$const36.7', 'rhs': '$42binary_subscr.10', 'res': '$binop_mul52.11'}), (54, {}), (56, {'op': '-', 'lhs': '$binop_add32.6', 'rhs': '$binop_mul52.11', 'res': '$binop_sub56.12'}), (58, {}), (60, {'value': '$binop_sub56.12'}), (62, {'res': '$x62.13'}), (64, {'res': '$const64.14'}), (66, {'index': '$const64.14', 'target': '$x62.13', 'res': '$66binary_subscr.15'}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {'res': '$x76.16'}), (78, {'res': '$const78.17'}), (80, {'index': '$const78.17', 'target': '$x76.16', 'res': '$80binary_subscr.18'}), (82, {}), (84, {}), (86, {}), (88, {}), (90, {'op': '-', 'lhs': '$66binary_subscr.15', 'rhs': '$80binary_subscr.18', 'res': '$binop_sub90.19'}), (92, {}), (94, {'res': '$const94.20'}), (96, {'op': '/', 'lhs': '$binop_sub90.19', 'rhs': '$const94.20', 'res': '$binop_truediv96.21'}), (98, {}), (100, {'value': '$binop_truediv96.21'}), (102, {'idx': 0, 'res': '$102load_global.22'}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'item': '$102load_global.22', 'res': '$114load_attr.24'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$b124.25'}), (126, {}), (128, {}), (130, {'func': '$114load_attr.24', 'args': ['$b124.25'], 'kw_names': None, 'res': '$130call.26'}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {'idx': 0, 'res': '$140load_global.27'}), (142, {}), (144, {}), (146, {}), (148, {}), (150, {}), (152, {'item': '$140load_global.27', 'res': '$152load_attr.29'}), (154, {}), (156, {}), (158, {}), (160, {}), (162, {'res': '$a162.30'}), (164, {}), (166, {}), (168, {'func': '$152load_attr.29', 'args': ['$a162.30'], 'kw_names': None, 'res': '$168call.31'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {'lhs': '$130call.26', 'rhs': '$168call.31', 'res': '$178compare_op.32'}), (180, {}), (182, {}), (184, {'pred': '$178compare_op.32'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={186: (), 190: ()})
DEBUG 2024-06-11 14:50:55,399 - block_infos State(pc_initial=186 nstack_initial=0):
AdaptBlockInfo(insts=((186, {'res': '$const186.0'}), (188, {'retval': '$const186.0', 'castval': '$188return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 14:50:55,399 - block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$b190.0'}), (192, {'value': '$b190.0', 'res': '$192unary_negative.1'}), (194, {'res': '$a194.2'}), (196, {'op': '/', 'lhs': '$192unary_negative.1', 'rhs': '$a194.2', 'res': '$binop_truediv196.3'}), (198, {}), (200, {'retval': '$binop_truediv196.3', 'castval': '$200return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 14:50:55,400 - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1 = const(int, 1)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $const20.4 = const(int, -1)              ['$const20.4']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4', 'x']
    $binop_add32.6 = $8binary_subscr.2 + $22binary_subscr.5 ['$22binary_subscr.5', '$8binary_subscr.2', '$binop_add32.6']
    $const36.7 = const(int, 2)               ['$const36.7']
    $const40.9 = const(int, 0)               ['$const40.9']
    $42binary_subscr.10 = getitem(value=x, index=$const40.9, fn=<built-in function getitem>) ['$42binary_subscr.10', '$const40.9', 'x']
    $binop_mul52.11 = $const36.7 * $42binary_subscr.10 ['$42binary_subscr.10', '$binop_mul52.11', '$const36.7']
    a = $binop_add32.6 - $binop_mul52.11     ['$binop_add32.6', '$binop_mul52.11', 'a']
    $const64.14 = const(int, 1)              ['$const64.14']
    $66binary_subscr.15 = getitem(value=x, index=$const64.14, fn=<built-in function getitem>) ['$66binary_subscr.15', '$const64.14', 'x']
    $const78.17 = const(int, -1)             ['$const78.17']
    $80binary_subscr.18 = getitem(value=x, index=$const78.17, fn=<built-in function getitem>) ['$80binary_subscr.18', '$const78.17', 'x']
    $binop_sub90.19 = $66binary_subscr.15 - $80binary_subscr.18 ['$66binary_subscr.15', '$80binary_subscr.18', '$binop_sub90.19']
    $const94.20 = const(int, 2)              ['$const94.20']
    b = $binop_sub90.19 / $const94.20        ['$binop_sub90.19', '$const94.20', 'b']
    $102load_global.22 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$102load_global.22']
    $114load_attr.24 = getattr(value=$102load_global.22, attr=abs) ['$102load_global.22', '$114load_attr.24']
    $130call.26 = call $114load_attr.24(b, func=$114load_attr.24, args=[Var(b, pitch.py:429)], kws=(), vararg=None, varkwarg=None, target=None) ['$114load_attr.24', '$130call.26', 'b']
    $140load_global.27 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$140load_global.27']
    $152load_attr.29 = getattr(value=$140load_global.27, attr=abs) ['$140load_global.27', '$152load_attr.29']
    $168call.31 = call $152load_attr.29(a, func=$152load_attr.29, args=[Var(a, pitch.py:428)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_attr.29', '$168call.31', 'a']
    $178compare_op.32 = $130call.26 >= $168call.31 ['$130call.26', '$168call.31', '$178compare_op.32']
    bool184 = global(bool: <class 'bool'>)   ['bool184']
    $184pred = call bool184($178compare_op.32, func=bool184, args=(Var($178compare_op.32, pitch.py:431),), kws=(), vararg=None, varkwarg=None, target=None) ['$178compare_op.32', '$184pred', 'bool184']
    branch $184pred, 186, 190                ['$184pred']
label 186:
    $const186.0 = const(int, 0)              ['$const186.0']
    $188return_value.1 = cast(value=$const186.0) ['$188return_value.1', '$const186.0']
    return $188return_value.1                ['$188return_value.1']
label 190:
    $192unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$192unary_negative.1', 'b']
    $binop_truediv196.3 = $192unary_negative.1 / a ['$192unary_negative.1', '$binop_truediv196.3', 'a']
    $200return_value.4 = cast(value=$binop_truediv196.3) ['$200return_value.4', '$binop_truediv196.3']
    return $200return_value.4                ['$200return_value.4']

DEBUG 2024-06-11 14:59:29,279 - bytecode dump:
>          0	NOP(arg=None, lineno=1141)
           2	RESUME(arg=0, lineno=1141)
           4	LOAD_FAST(arg=0, lineno=1144)
           6	LOAD_CONST(arg=1, lineno=1144)
           8	BINARY_SUBSCR(arg=None, lineno=1144)
          18	STORE_FAST(arg=3, lineno=1144)
          20	LOAD_FAST(arg=1, lineno=1145)
          22	UNARY_NEGATIVE(arg=None, lineno=1145)
          24	LOAD_FAST(arg=3, lineno=1145)
          26	SWAP(arg=2, lineno=1145)
          28	COPY(arg=2, lineno=1145)
          30	COMPARE_OP(arg=1, lineno=1145)
          36	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1145)
          38	LOAD_FAST(arg=1, lineno=1145)
          40	COMPARE_OP(arg=1, lineno=1145)
          46	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1145)
          48	JUMP_FORWARD(arg=2, lineno=1145)
>         50	POP_TOP(arg=None, lineno=1145)
          52	JUMP_FORWARD(arg=2, lineno=1145)
>         54	LOAD_CONST(arg=1, lineno=1146)
          56	STORE_FAST(arg=3, lineno=1146)
>         58	LOAD_FAST(arg=0, lineno=1148)
          60	LOAD_CONST(arg=2, lineno=1148)
          62	BINARY_SUBSCR(arg=None, lineno=1148)
          72	STORE_FAST(arg=4, lineno=1148)
          74	LOAD_FAST(arg=1, lineno=1149)
          76	UNARY_NEGATIVE(arg=None, lineno=1149)
          78	LOAD_FAST(arg=4, lineno=1149)
          80	SWAP(arg=2, lineno=1149)
          82	COPY(arg=2, lineno=1149)
          84	COMPARE_OP(arg=1, lineno=1149)
          90	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1149)
          92	LOAD_FAST(arg=1, lineno=1149)
          94	COMPARE_OP(arg=1, lineno=1149)
         100	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1149)
         102	JUMP_FORWARD(arg=2, lineno=1149)
>        104	POP_TOP(arg=None, lineno=1149)
         106	JUMP_FORWARD(arg=2, lineno=1149)
>        108	LOAD_CONST(arg=1, lineno=1150)
         110	STORE_FAST(arg=4, lineno=1150)
>        112	LOAD_FAST(arg=2, lineno=1152)
         114	POP_JUMP_FORWARD_IF_FALSE(arg=42, lineno=1152)
         116	LOAD_GLOBAL(arg=1, lineno=1153)
         128	LOAD_ATTR(arg=1, lineno=1153)
         138	LOAD_FAST(arg=3, lineno=1153)
         140	PRECALL(arg=1, lineno=1153)
         144	CALL(arg=1, lineno=1153)
         154	LOAD_GLOBAL(arg=1, lineno=1153)
         166	LOAD_ATTR(arg=1, lineno=1153)
         176	LOAD_FAST(arg=4, lineno=1153)
         178	PRECALL(arg=1, lineno=1153)
         182	CALL(arg=1, lineno=1153)
         192	COMPARE_OP(arg=3, lineno=1153)
         198	RETURN_VALUE(arg=None, lineno=1153)
>        200	LOAD_GLOBAL(arg=1, lineno=1155)
         212	LOAD_ATTR(arg=2, lineno=1155)
         222	LOAD_FAST(arg=3, lineno=1155)
         224	PRECALL(arg=1, lineno=1155)
         228	CALL(arg=1, lineno=1155)
         238	LOAD_GLOBAL(arg=1, lineno=1155)
         250	LOAD_ATTR(arg=2, lineno=1155)
         260	LOAD_FAST(arg=4, lineno=1155)
         262	PRECALL(arg=1, lineno=1155)
         266	CALL(arg=1, lineno=1155)
         276	COMPARE_OP(arg=3, lineno=1155)
         282	RETURN_VALUE(arg=None, lineno=1155)
DEBUG 2024-06-11 14:59:29,281 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 14:59:29,281 - stack: []
DEBUG 2024-06-11 14:59:29,281 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 14:59:29,281 - dispatch pc=0, inst=NOP(arg=None, lineno=1141)
DEBUG 2024-06-11 14:59:29,281 - stack []
DEBUG 2024-06-11 14:59:29,281 - dispatch pc=2, inst=RESUME(arg=0, lineno=1141)
DEBUG 2024-06-11 14:59:29,281 - stack []
DEBUG 2024-06-11 14:59:29,281 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1144)
DEBUG 2024-06-11 14:59:29,281 - stack []
DEBUG 2024-06-11 14:59:29,281 - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1144)
DEBUG 2024-06-11 14:59:29,281 - stack ['$x4.0']
DEBUG 2024-06-11 14:59:29,281 - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1144)
DEBUG 2024-06-11 14:59:29,281 - stack ['$x4.0', '$const6.1']
DEBUG 2024-06-11 14:59:29,281 - dispatch pc=18, inst=STORE_FAST(arg=3, lineno=1144)
DEBUG 2024-06-11 14:59:29,281 - stack ['$8binary_subscr.2']
DEBUG 2024-06-11 14:59:29,281 - dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=1145)
DEBUG 2024-06-11 14:59:29,281 - stack []
DEBUG 2024-06-11 14:59:29,281 - dispatch pc=22, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
DEBUG 2024-06-11 14:59:29,281 - stack ['$threshold20.3']
DEBUG 2024-06-11 14:59:29,281 - dispatch pc=24, inst=LOAD_FAST(arg=3, lineno=1145)
DEBUG 2024-06-11 14:59:29,281 - stack ['$22unary_negative.4']
DEBUG 2024-06-11 14:59:29,281 - dispatch pc=26, inst=SWAP(arg=2, lineno=1145)
DEBUG 2024-06-11 14:59:29,281 - stack ['$22unary_negative.4', '$x024.5']
DEBUG 2024-06-11 14:59:29,281 - dispatch pc=28, inst=COPY(arg=2, lineno=1145)
DEBUG 2024-06-11 14:59:29,281 - stack ['$x024.5', '$22unary_negative.4']
DEBUG 2024-06-11 14:59:29,281 - dispatch pc=30, inst=COMPARE_OP(arg=1, lineno=1145)
DEBUG 2024-06-11 14:59:29,281 - stack ['$x024.5', '$22unary_negative.4', '$x024.5']
DEBUG 2024-06-11 14:59:29,281 - dispatch pc=36, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1145)
DEBUG 2024-06-11 14:59:29,281 - stack ['$x024.5', '$30compare_op.6']
DEBUG 2024-06-11 14:59:29,281 - end state. edges=[Edge(pc=38, stack=('$x024.5',), blockstack=(), npush=0), Edge(pc=50, stack=('$x024.5',), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:59:29,281 - pending: deque([State(pc_initial=38 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
DEBUG 2024-06-11 14:59:29,281 - stack: ['$phi38.0']
DEBUG 2024-06-11 14:59:29,281 - state.pc_initial: State(pc_initial=38 nstack_initial=1)
DEBUG 2024-06-11 14:59:29,281 - dispatch pc=38, inst=LOAD_FAST(arg=1, lineno=1145)
DEBUG 2024-06-11 14:59:29,281 - stack ['$phi38.0']
DEBUG 2024-06-11 14:59:29,281 - dispatch pc=40, inst=COMPARE_OP(arg=1, lineno=1145)
DEBUG 2024-06-11 14:59:29,281 - stack ['$phi38.0', '$threshold38.1']
DEBUG 2024-06-11 14:59:29,281 - dispatch pc=46, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1145)
DEBUG 2024-06-11 14:59:29,281 - stack ['$40compare_op.2']
DEBUG 2024-06-11 14:59:29,281 - end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:59:29,281 - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=48 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
DEBUG 2024-06-11 14:59:29,281 - stack: ['$phi50.0']
DEBUG 2024-06-11 14:59:29,281 - state.pc_initial: State(pc_initial=50 nstack_initial=1)
DEBUG 2024-06-11 14:59:29,281 - dispatch pc=50, inst=POP_TOP(arg=None, lineno=1145)
DEBUG 2024-06-11 14:59:29,281 - stack ['$phi50.0']
DEBUG 2024-06-11 14:59:29,281 - dispatch pc=52, inst=JUMP_FORWARD(arg=2, lineno=1145)
DEBUG 2024-06-11 14:59:29,281 - stack []
DEBUG 2024-06-11 14:59:29,281 - end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:59:29,281 - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
DEBUG 2024-06-11 14:59:29,281 - stack: []
DEBUG 2024-06-11 14:59:29,281 - state.pc_initial: State(pc_initial=48 nstack_initial=0)
DEBUG 2024-06-11 14:59:29,281 - dispatch pc=48, inst=JUMP_FORWARD(arg=2, lineno=1145)
DEBUG 2024-06-11 14:59:29,281 - stack []
DEBUG 2024-06-11 14:59:29,281 - end state. edges=[Edge(pc=54, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:59:29,281 - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=54 nstack_initial=0)])
DEBUG 2024-06-11 14:59:29,281 - stack: []
DEBUG 2024-06-11 14:59:29,281 - state.pc_initial: State(pc_initial=58 nstack_initial=0)
DEBUG 2024-06-11 14:59:29,281 - dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1148)
DEBUG 2024-06-11 14:59:29,281 - stack []
DEBUG 2024-06-11 14:59:29,281 - dispatch pc=60, inst=LOAD_CONST(arg=2, lineno=1148)
DEBUG 2024-06-11 14:59:29,281 - stack ['$x58.0']
DEBUG 2024-06-11 14:59:29,281 - dispatch pc=62, inst=BINARY_SUBSCR(arg=None, lineno=1148)
DEBUG 2024-06-11 14:59:29,281 - stack ['$x58.0', '$const60.1']
DEBUG 2024-06-11 14:59:29,284 - dispatch pc=72, inst=STORE_FAST(arg=4, lineno=1148)
DEBUG 2024-06-11 14:59:29,284 - stack ['$62binary_subscr.2']
DEBUG 2024-06-11 14:59:29,284 - dispatch pc=74, inst=LOAD_FAST(arg=1, lineno=1149)
DEBUG 2024-06-11 14:59:29,284 - stack []
DEBUG 2024-06-11 14:59:29,284 - dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=1149)
DEBUG 2024-06-11 14:59:29,284 - stack ['$threshold74.3']
DEBUG 2024-06-11 14:59:29,284 - dispatch pc=78, inst=LOAD_FAST(arg=4, lineno=1149)
DEBUG 2024-06-11 14:59:29,284 - stack ['$76unary_negative.4']
DEBUG 2024-06-11 14:59:29,284 - dispatch pc=80, inst=SWAP(arg=2, lineno=1149)
DEBUG 2024-06-11 14:59:29,284 - stack ['$76unary_negative.4', '$x178.5']
DEBUG 2024-06-11 14:59:29,284 - dispatch pc=82, inst=COPY(arg=2, lineno=1149)
DEBUG 2024-06-11 14:59:29,284 - stack ['$x178.5', '$76unary_negative.4']
DEBUG 2024-06-11 14:59:29,284 - dispatch pc=84, inst=COMPARE_OP(arg=1, lineno=1149)
DEBUG 2024-06-11 14:59:29,284 - stack ['$x178.5', '$76unary_negative.4', '$x178.5']
DEBUG 2024-06-11 14:59:29,284 - dispatch pc=90, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1149)
DEBUG 2024-06-11 14:59:29,284 - stack ['$x178.5', '$84compare_op.6']
DEBUG 2024-06-11 14:59:29,284 - end state. edges=[Edge(pc=92, stack=('$x178.5',), blockstack=(), npush=0), Edge(pc=104, stack=('$x178.5',), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:59:29,284 - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=54 nstack_initial=0), State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1)])
DEBUG 2024-06-11 14:59:29,284 - pending: deque([State(pc_initial=54 nstack_initial=0), State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1)])
DEBUG 2024-06-11 14:59:29,284 - stack: []
DEBUG 2024-06-11 14:59:29,284 - state.pc_initial: State(pc_initial=54 nstack_initial=0)
DEBUG 2024-06-11 14:59:29,284 - dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=1146)
DEBUG 2024-06-11 14:59:29,284 - stack []
DEBUG 2024-06-11 14:59:29,284 - dispatch pc=56, inst=STORE_FAST(arg=3, lineno=1146)
DEBUG 2024-06-11 14:59:29,284 - stack ['$const54.0']
DEBUG 2024-06-11 14:59:29,284 - end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:59:29,284 - pending: deque([State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1), State(pc_initial=58 nstack_initial=0)])
DEBUG 2024-06-11 14:59:29,284 - stack: ['$phi92.0']
DEBUG 2024-06-11 14:59:29,284 - state.pc_initial: State(pc_initial=92 nstack_initial=1)
DEBUG 2024-06-11 14:59:29,284 - dispatch pc=92, inst=LOAD_FAST(arg=1, lineno=1149)
DEBUG 2024-06-11 14:59:29,284 - stack ['$phi92.0']
DEBUG 2024-06-11 14:59:29,284 - dispatch pc=94, inst=COMPARE_OP(arg=1, lineno=1149)
DEBUG 2024-06-11 14:59:29,284 - stack ['$phi92.0', '$threshold92.1']
DEBUG 2024-06-11 14:59:29,284 - dispatch pc=100, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1149)
DEBUG 2024-06-11 14:59:29,284 - stack ['$94compare_op.2']
DEBUG 2024-06-11 14:59:29,284 - end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=112, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:59:29,285 - pending: deque([State(pc_initial=104 nstack_initial=1), State(pc_initial=58 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 14:59:29,285 - stack: ['$phi104.0']
DEBUG 2024-06-11 14:59:29,285 - state.pc_initial: State(pc_initial=104 nstack_initial=1)
DEBUG 2024-06-11 14:59:29,285 - dispatch pc=104, inst=POP_TOP(arg=None, lineno=1149)
DEBUG 2024-06-11 14:59:29,285 - stack ['$phi104.0']
DEBUG 2024-06-11 14:59:29,285 - dispatch pc=106, inst=JUMP_FORWARD(arg=2, lineno=1149)
DEBUG 2024-06-11 14:59:29,285 - stack []
DEBUG 2024-06-11 14:59:29,285 - end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:59:29,285 - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 14:59:29,285 - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 14:59:29,285 - stack: []
DEBUG 2024-06-11 14:59:29,285 - state.pc_initial: State(pc_initial=102 nstack_initial=0)
DEBUG 2024-06-11 14:59:29,285 - dispatch pc=102, inst=JUMP_FORWARD(arg=2, lineno=1149)
DEBUG 2024-06-11 14:59:29,285 - stack []
DEBUG 2024-06-11 14:59:29,285 - end state. edges=[Edge(pc=108, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:59:29,285 - pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=108 nstack_initial=0)])
DEBUG 2024-06-11 14:59:29,285 - stack: []
DEBUG 2024-06-11 14:59:29,285 - state.pc_initial: State(pc_initial=112 nstack_initial=0)
DEBUG 2024-06-11 14:59:29,285 - dispatch pc=112, inst=LOAD_FAST(arg=2, lineno=1152)
DEBUG 2024-06-11 14:59:29,285 - stack []
DEBUG 2024-06-11 14:59:29,285 - dispatch pc=114, inst=POP_JUMP_FORWARD_IF_FALSE(arg=42, lineno=1152)
DEBUG 2024-06-11 14:59:29,285 - stack ['$zero_pos112.0']
DEBUG 2024-06-11 14:59:29,285 - end state. edges=[Edge(pc=116, stack=(), blockstack=(), npush=0), Edge(pc=200, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:59:29,285 - pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0)])
DEBUG 2024-06-11 14:59:29,285 - pending: deque([State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0)])
DEBUG 2024-06-11 14:59:29,285 - stack: []
DEBUG 2024-06-11 14:59:29,285 - state.pc_initial: State(pc_initial=108 nstack_initial=0)
DEBUG 2024-06-11 14:59:29,285 - dispatch pc=108, inst=LOAD_CONST(arg=1, lineno=1150)
DEBUG 2024-06-11 14:59:29,285 - stack []
DEBUG 2024-06-11 14:59:29,285 - dispatch pc=110, inst=STORE_FAST(arg=4, lineno=1150)
DEBUG 2024-06-11 14:59:29,285 - stack ['$const108.0']
DEBUG 2024-06-11 14:59:29,285 - end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:59:29,285 - pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 14:59:29,285 - stack: []
DEBUG 2024-06-11 14:59:29,285 - state.pc_initial: State(pc_initial=116 nstack_initial=0)
DEBUG 2024-06-11 14:59:29,285 - dispatch pc=116, inst=LOAD_GLOBAL(arg=1, lineno=1153)
DEBUG 2024-06-11 14:59:29,285 - stack []
DEBUG 2024-06-11 14:59:29,285 - dispatch pc=128, inst=LOAD_ATTR(arg=1, lineno=1153)
DEBUG 2024-06-11 14:59:29,285 - stack ['$null$116.1', '$116load_global.0']
DEBUG 2024-06-11 14:59:29,285 - dispatch pc=138, inst=LOAD_FAST(arg=3, lineno=1153)
DEBUG 2024-06-11 14:59:29,285 - stack ['$null$116.1', '$128load_attr.2']
DEBUG 2024-06-11 14:59:29,285 - dispatch pc=140, inst=PRECALL(arg=1, lineno=1153)
DEBUG 2024-06-11 14:59:29,285 - stack ['$null$116.1', '$128load_attr.2', '$x0138.3']
DEBUG 2024-06-11 14:59:29,285 - dispatch pc=144, inst=CALL(arg=1, lineno=1153)
DEBUG 2024-06-11 14:59:29,285 - stack ['$null$116.1', '$128load_attr.2', '$x0138.3']
DEBUG 2024-06-11 14:59:29,285 - dispatch pc=154, inst=LOAD_GLOBAL(arg=1, lineno=1153)
DEBUG 2024-06-11 14:59:29,285 - stack ['$144call.4']
DEBUG 2024-06-11 14:59:29,285 - dispatch pc=166, inst=LOAD_ATTR(arg=1, lineno=1153)
DEBUG 2024-06-11 14:59:29,285 - stack ['$144call.4', '$null$154.6', '$154load_global.5']
DEBUG 2024-06-11 14:59:29,285 - dispatch pc=176, inst=LOAD_FAST(arg=4, lineno=1153)
DEBUG 2024-06-11 14:59:29,285 - stack ['$144call.4', '$null$154.6', '$166load_attr.7']
DEBUG 2024-06-11 14:59:29,285 - dispatch pc=178, inst=PRECALL(arg=1, lineno=1153)
DEBUG 2024-06-11 14:59:29,285 - stack ['$144call.4', '$null$154.6', '$166load_attr.7', '$x1176.8']
DEBUG 2024-06-11 14:59:29,285 - dispatch pc=182, inst=CALL(arg=1, lineno=1153)
DEBUG 2024-06-11 14:59:29,285 - stack ['$144call.4', '$null$154.6', '$166load_attr.7', '$x1176.8']
DEBUG 2024-06-11 14:59:29,285 - dispatch pc=192, inst=COMPARE_OP(arg=3, lineno=1153)
DEBUG 2024-06-11 14:59:29,285 - stack ['$144call.4', '$182call.9']
DEBUG 2024-06-11 14:59:29,285 - dispatch pc=198, inst=RETURN_VALUE(arg=None, lineno=1153)
DEBUG 2024-06-11 14:59:29,285 - stack ['$192compare_op.10']
DEBUG 2024-06-11 14:59:29,285 - end state. edges=[]
DEBUG 2024-06-11 14:59:29,285 - pending: deque([State(pc_initial=200 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 14:59:29,285 - stack: []
DEBUG 2024-06-11 14:59:29,285 - state.pc_initial: State(pc_initial=200 nstack_initial=0)
DEBUG 2024-06-11 14:59:29,285 - dispatch pc=200, inst=LOAD_GLOBAL(arg=1, lineno=1155)
DEBUG 2024-06-11 14:59:29,285 - stack []
DEBUG 2024-06-11 14:59:29,285 - dispatch pc=212, inst=LOAD_ATTR(arg=2, lineno=1155)
DEBUG 2024-06-11 14:59:29,285 - stack ['$null$200.1', '$200load_global.0']
DEBUG 2024-06-11 14:59:29,285 - dispatch pc=222, inst=LOAD_FAST(arg=3, lineno=1155)
DEBUG 2024-06-11 14:59:29,285 - stack ['$null$200.1', '$212load_attr.2']
DEBUG 2024-06-11 14:59:29,285 - dispatch pc=224, inst=PRECALL(arg=1, lineno=1155)
DEBUG 2024-06-11 14:59:29,285 - stack ['$null$200.1', '$212load_attr.2', '$x0222.3']
DEBUG 2024-06-11 14:59:29,285 - dispatch pc=228, inst=CALL(arg=1, lineno=1155)
DEBUG 2024-06-11 14:59:29,285 - stack ['$null$200.1', '$212load_attr.2', '$x0222.3']
DEBUG 2024-06-11 14:59:29,285 - dispatch pc=238, inst=LOAD_GLOBAL(arg=1, lineno=1155)
DEBUG 2024-06-11 14:59:29,285 - stack ['$228call.4']
DEBUG 2024-06-11 14:59:29,285 - dispatch pc=250, inst=LOAD_ATTR(arg=2, lineno=1155)
DEBUG 2024-06-11 14:59:29,285 - stack ['$228call.4', '$null$238.6', '$238load_global.5']
DEBUG 2024-06-11 14:59:29,285 - dispatch pc=260, inst=LOAD_FAST(arg=4, lineno=1155)
DEBUG 2024-06-11 14:59:29,285 - stack ['$228call.4', '$null$238.6', '$250load_attr.7']
DEBUG 2024-06-11 14:59:29,285 - dispatch pc=262, inst=PRECALL(arg=1, lineno=1155)
DEBUG 2024-06-11 14:59:29,285 - stack ['$228call.4', '$null$238.6', '$250load_attr.7', '$x1260.8']
DEBUG 2024-06-11 14:59:29,285 - dispatch pc=266, inst=CALL(arg=1, lineno=1155)
DEBUG 2024-06-11 14:59:29,285 - stack ['$228call.4', '$null$238.6', '$250load_attr.7', '$x1260.8']
DEBUG 2024-06-11 14:59:29,285 - dispatch pc=276, inst=COMPARE_OP(arg=3, lineno=1155)
DEBUG 2024-06-11 14:59:29,285 - stack ['$228call.4', '$266call.9']
DEBUG 2024-06-11 14:59:29,285 - dispatch pc=282, inst=RETURN_VALUE(arg=None, lineno=1155)
DEBUG 2024-06-11 14:59:29,285 - stack ['$276compare_op.10']
DEBUG 2024-06-11 14:59:29,285 - end state. edges=[]
DEBUG 2024-06-11 14:59:29,285 - pending: deque([State(pc_initial=112 nstack_initial=0)])
DEBUG 2024-06-11 14:59:29,285 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 14:59:29,285 - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=38 nstack_initial=1): {'$phi38.0'},
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): set(),
             State(pc_initial=54 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=1): {'$phi92.0'},
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=104 nstack_initial=1): set(),
             State(pc_initial=108 nstack_initial=0): set(),
             State(pc_initial=112 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=200 nstack_initial=0): set()})
DEBUG 2024-06-11 14:59:29,285 - defmap: {'$phi104.0': State(pc_initial=58 nstack_initial=0),
 '$phi38.0': State(pc_initial=0 nstack_initial=0),
 '$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi92.0': State(pc_initial=58 nstack_initial=0)}
DEBUG 2024-06-11 14:59:29,285 - phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))},
             '$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}})
DEBUG 2024-06-11 14:59:29,285 - changing phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))},
             '$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}})
DEBUG 2024-06-11 14:59:29,285 - keep phismap: {'$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
 '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}}
DEBUG 2024-06-11 14:59:29,285 - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi38.0': '$x024.5'},
             State(pc_initial=58 nstack_initial=0): {'$phi92.0': '$x178.5'}})
DEBUG 2024-06-11 14:59:29,285 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 14:59:29,285 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'value': '$8binary_subscr.2'}), (20, {'res': '$threshold20.3'}), (22, {'value': '$threshold20.3', 'res': '$22unary_negative.4'}), (24, {'res': '$x024.5'}), (30, {'lhs': '$22unary_negative.4', 'rhs': '$x024.5', 'res': '$30compare_op.6'}), (32, {}), (34, {}), (36, {'pred': '$30compare_op.6'})), outgoing_phis={'$phi38.0': '$x024.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={38: ('$x024.5',), 50: ('$x024.5',)})
DEBUG 2024-06-11 14:59:29,285 - block_infos State(pc_initial=38 nstack_initial=1):
AdaptBlockInfo(insts=((38, {'res': '$threshold38.1'}), (40, {'lhs': '$phi38.0', 'rhs': '$threshold38.1', 'res': '$40compare_op.2'}), (42, {}), (44, {}), (46, {'pred': '$40compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: (), 58: ()})
DEBUG 2024-06-11 14:59:29,285 - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={54: ()})
DEBUG 2024-06-11 14:59:29,285 - block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((52, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ()})
DEBUG 2024-06-11 14:59:29,285 - block_infos State(pc_initial=54 nstack_initial=0):
AdaptBlockInfo(insts=((54, {'res': '$const54.0'}), (56, {'value': '$const54.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ()})
DEBUG 2024-06-11 14:59:29,285 - block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$x58.0'}), (60, {'res': '$const60.1'}), (62, {'index': '$const60.1', 'target': '$x58.0', 'res': '$62binary_subscr.2'}), (64, {}), (66, {}), (68, {}), (70, {}), (72, {'value': '$62binary_subscr.2'}), (74, {'res': '$threshold74.3'}), (76, {'value': '$threshold74.3', 'res': '$76unary_negative.4'}), (78, {'res': '$x178.5'}), (84, {'lhs': '$76unary_negative.4', 'rhs': '$x178.5', 'res': '$84compare_op.6'}), (86, {}), (88, {}), (90, {'pred': '$84compare_op.6'})), outgoing_phis={'$phi92.0': '$x178.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: ('$x178.5',), 104: ('$x178.5',)})
DEBUG 2024-06-11 14:59:29,285 - block_infos State(pc_initial=92 nstack_initial=1):
AdaptBlockInfo(insts=((92, {'res': '$threshold92.1'}), (94, {'lhs': '$phi92.0', 'rhs': '$threshold92.1', 'res': '$94compare_op.2'}), (96, {}), (98, {}), (100, {'pred': '$94compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 112: ()})
DEBUG 2024-06-11 14:59:29,285 - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={108: ()})
DEBUG 2024-06-11 14:59:29,285 - block_infos State(pc_initial=104 nstack_initial=1):
AdaptBlockInfo(insts=((106, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ()})
DEBUG 2024-06-11 14:59:29,285 - block_infos State(pc_initial=108 nstack_initial=0):
AdaptBlockInfo(insts=((108, {'res': '$const108.0'}), (110, {'value': '$const108.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ()})
DEBUG 2024-06-11 14:59:29,285 - block_infos State(pc_initial=112 nstack_initial=0):
AdaptBlockInfo(insts=((112, {'res': '$zero_pos112.0'}), (114, {'pred': '$zero_pos112.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={116: (), 200: ()})
DEBUG 2024-06-11 14:59:29,285 - block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'idx': 0, 'res': '$116load_global.0'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {}), (128, {'item': '$116load_global.0', 'res': '$128load_attr.2'}), (130, {}), (132, {}), (134, {}), (136, {}), (138, {'res': '$x0138.3'}), (140, {}), (142, {}), (144, {'func': '$128load_attr.2', 'args': ['$x0138.3'], 'kw_names': None, 'res': '$144call.4'}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'idx': 0, 'res': '$154load_global.5'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {}), (166, {'item': '$154load_global.5', 'res': '$166load_attr.7'}), (168, {}), (170, {}), (172, {}), (174, {}), (176, {'res': '$x1176.8'}), (178, {}), (180, {}), (182, {'func': '$166load_attr.7', 'args': ['$x1176.8'], 'kw_names': None, 'res': '$182call.9'}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'lhs': '$144call.4', 'rhs': '$182call.9', 'res': '$192compare_op.10'}), (194, {}), (196, {}), (198, {'retval': '$192compare_op.10', 'castval': '$198return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 14:59:29,285 - block_infos State(pc_initial=200 nstack_initial=0):
AdaptBlockInfo(insts=((200, {'idx': 0, 'res': '$200load_global.0'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {'item': '$200load_global.0', 'res': '$212load_attr.2'}), (214, {}), (216, {}), (218, {}), (220, {}), (222, {'res': '$x0222.3'}), (224, {}), (226, {}), (228, {'func': '$212load_attr.2', 'args': ['$x0222.3'], 'kw_names': None, 'res': '$228call.4'}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'idx': 0, 'res': '$238load_global.5'}), (240, {}), (242, {}), (244, {}), (246, {}), (248, {}), (250, {'item': '$238load_global.5', 'res': '$250load_attr.7'}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {'res': '$x1260.8'}), (262, {}), (264, {}), (266, {'func': '$250load_attr.7', 'args': ['$x1260.8'], 'kw_names': None, 'res': '$266call.9'}), (268, {}), (270, {}), (272, {}), (274, {}), (276, {'lhs': '$228call.4', 'rhs': '$266call.9', 'res': '$276compare_op.10'}), (278, {}), (280, {}), (282, {'retval': '$276compare_op.10', 'castval': '$282return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 14:59:29,285 - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const6.1 = const(int, 0)                ['$const6.1']
    x0 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$const6.1', 'x', 'x0']
    $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$22unary_negative.4', 'threshold']
    $30compare_op.6 = $22unary_negative.4 <= x0 ['$22unary_negative.4', '$30compare_op.6', 'x0']
    bool36 = global(bool: <class 'bool'>)    ['bool36']
    $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.6', '$36pred', 'bool36']
    $phi38.0 = x0                            ['$phi38.0', 'x0']
    branch $36pred, 38, 50                   ['$36pred']
label 38:
    $40compare_op.2 = $phi38.0 <= threshold  ['$40compare_op.2', '$phi38.0', 'threshold']
    bool46 = global(bool: <class 'bool'>)    ['bool46']
    $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.2', '$46pred', 'bool46']
    branch $46pred, 48, 58                   ['$46pred']
label 48:
    jump 54                                  []
label 50:
    jump 58                                  []
label 54:
    x0 = const(int, 0)                       ['x0']
    jump 58                                  []
label 58:
    $const60.1 = const(int, -1)              ['$const60.1']
    x1 = getitem(value=x, index=$const60.1, fn=<built-in function getitem>) ['$const60.1', 'x', 'x1']
    $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$76unary_negative.4', 'threshold']
    $84compare_op.6 = $76unary_negative.4 <= x1 ['$76unary_negative.4', '$84compare_op.6', 'x1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None) ['$84compare_op.6', '$90pred', 'bool90']
    $phi92.0 = x1                            ['$phi92.0', 'x1']
    branch $90pred, 92, 104                  ['$90pred']
label 92:
    $94compare_op.2 = $phi92.0 <= threshold  ['$94compare_op.2', '$phi92.0', 'threshold']
    bool100 = global(bool: <class 'bool'>)   ['bool100']
    $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$94compare_op.2', 'bool100']
    branch $100pred, 102, 112                ['$100pred']
label 102:
    jump 108                                 []
label 104:
    jump 112                                 []
label 108:
    x1 = const(int, 0)                       ['x1']
    jump 112                                 []
label 112:
    bool114 = global(bool: <class 'bool'>)   ['bool114']
    $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$114pred', 'bool114', 'zero_pos']
    branch $114pred, 116, 200                ['$114pred']
label 116:
    $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$116load_global.0']
    $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit) ['$116load_global.0', '$128load_attr.2']
    $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$128load_attr.2', '$144call.4', 'x0']
    $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$154load_global.5']
    $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit) ['$154load_global.5', '$166load_attr.7']
    $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_attr.7', '$182call.9', 'x1']
    $192compare_op.10 = $144call.4 != $182call.9 ['$144call.4', '$182call.9', '$192compare_op.10']
    $198return_value.11 = cast(value=$192compare_op.10) ['$192compare_op.10', '$198return_value.11']
    return $198return_value.11               ['$198return_value.11']
label 200:
    $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$200load_global.0']
    $212load_attr.2 = getattr(value=$200load_global.0, attr=sign) ['$200load_global.0', '$212load_attr.2']
    $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$212load_attr.2', '$228call.4', 'x0']
    $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$238load_global.5']
    $250load_attr.7 = getattr(value=$238load_global.5, attr=sign) ['$238load_global.5', '$250load_attr.7']
    $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None) ['$250load_attr.7', '$266call.9', 'x1']
    $276compare_op.10 = $228call.4 != $266call.9 ['$228call.4', '$266call.9', '$276compare_op.10']
    $282return_value.11 = cast(value=$276compare_op.10) ['$276compare_op.10', '$282return_value.11']
    return $282return_value.11               ['$282return_value.11']

DEBUG 2024-06-11 14:59:29,610 - bytecode dump:
>          0	NOP(arg=None, lineno=1039)
           2	RESUME(arg=0, lineno=1039)
           4	LOAD_FAST(arg=0, lineno=1042)
           6	LOAD_CONST(arg=1, lineno=1042)
           8	BINARY_SUBSCR(arg=None, lineno=1042)
          18	LOAD_FAST(arg=0, lineno=1042)
          20	LOAD_CONST(arg=2, lineno=1042)
          22	BINARY_SUBSCR(arg=None, lineno=1042)
          32	COMPARE_OP(arg=4, lineno=1042)
          38	LOAD_FAST(arg=0, lineno=1042)
          40	LOAD_CONST(arg=1, lineno=1042)
          42	BINARY_SUBSCR(arg=None, lineno=1042)
          52	LOAD_FAST(arg=0, lineno=1042)
          54	LOAD_CONST(arg=3, lineno=1042)
          56	BINARY_SUBSCR(arg=None, lineno=1042)
          66	COMPARE_OP(arg=5, lineno=1042)
          72	BINARY_OP(arg=1, lineno=1042)
          76	RETURN_VALUE(arg=None, lineno=1042)
DEBUG 2024-06-11 14:59:29,610 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 14:59:29,610 - stack: []
DEBUG 2024-06-11 14:59:29,610 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 14:59:29,610 - dispatch pc=0, inst=NOP(arg=None, lineno=1039)
DEBUG 2024-06-11 14:59:29,617 - stack []
DEBUG 2024-06-11 14:59:29,617 - dispatch pc=2, inst=RESUME(arg=0, lineno=1039)
DEBUG 2024-06-11 14:59:29,617 - stack []
DEBUG 2024-06-11 14:59:29,617 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1042)
DEBUG 2024-06-11 14:59:29,617 - stack []
DEBUG 2024-06-11 14:59:29,617 - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1042)
DEBUG 2024-06-11 14:59:29,617 - stack ['$x4.0']
DEBUG 2024-06-11 14:59:29,617 - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1042)
DEBUG 2024-06-11 14:59:29,617 - stack ['$x4.0', '$const6.1']
DEBUG 2024-06-11 14:59:29,617 - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=1042)
DEBUG 2024-06-11 14:59:29,617 - stack ['$8binary_subscr.2']
DEBUG 2024-06-11 14:59:29,617 - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=1042)
DEBUG 2024-06-11 14:59:29,617 - stack ['$8binary_subscr.2', '$x18.3']
DEBUG 2024-06-11 14:59:29,617 - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=1042)
DEBUG 2024-06-11 14:59:29,617 - stack ['$8binary_subscr.2', '$x18.3', '$const20.4']
DEBUG 2024-06-11 14:59:29,617 - dispatch pc=32, inst=COMPARE_OP(arg=4, lineno=1042)
DEBUG 2024-06-11 14:59:29,617 - stack ['$8binary_subscr.2', '$22binary_subscr.5']
DEBUG 2024-06-11 14:59:29,617 - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=1042)
DEBUG 2024-06-11 14:59:29,617 - stack ['$32compare_op.6']
DEBUG 2024-06-11 14:59:29,617 - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1042)
DEBUG 2024-06-11 14:59:29,617 - stack ['$32compare_op.6', '$x38.7']
DEBUG 2024-06-11 14:59:29,617 - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=1042)
DEBUG 2024-06-11 14:59:29,617 - stack ['$32compare_op.6', '$x38.7', '$const40.8']
DEBUG 2024-06-11 14:59:29,617 - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1042)
DEBUG 2024-06-11 14:59:29,618 - stack ['$32compare_op.6', '$42binary_subscr.9']
DEBUG 2024-06-11 14:59:29,618 - dispatch pc=54, inst=LOAD_CONST(arg=3, lineno=1042)
DEBUG 2024-06-11 14:59:29,618 - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10']
DEBUG 2024-06-11 14:59:29,618 - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1042)
DEBUG 2024-06-11 14:59:29,618 - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10', '$const54.11']
DEBUG 2024-06-11 14:59:29,618 - dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=1042)
DEBUG 2024-06-11 14:59:29,618 - stack ['$32compare_op.6', '$42binary_subscr.9', '$56binary_subscr.12']
DEBUG 2024-06-11 14:59:29,618 - dispatch pc=72, inst=BINARY_OP(arg=1, lineno=1042)
DEBUG 2024-06-11 14:59:29,618 - stack ['$32compare_op.6', '$66compare_op.13']
DEBUG 2024-06-11 14:59:29,618 - dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=1042)
DEBUG 2024-06-11 14:59:29,618 - stack ['$binop_and_72.14']
DEBUG 2024-06-11 14:59:29,618 - end state. edges=[]
DEBUG 2024-06-11 14:59:29,618 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 14:59:29,618 - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG 2024-06-11 14:59:29,618 - defmap: {}
DEBUG 2024-06-11 14:59:29,618 - phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 14:59:29,618 - changing phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 14:59:29,618 - keep phismap: {}
DEBUG 2024-06-11 14:59:29,618 - new_out: defaultdict(<class 'dict'>, {})
DEBUG 2024-06-11 14:59:29,618 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 14:59:29,618 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4'}), (22, {'index': '$const20.4', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$32compare_op.6'}), (34, {}), (36, {}), (38, {'res': '$x38.7'}), (40, {'res': '$const40.8'}), (42, {'index': '$const40.8', 'target': '$x38.7', 'res': '$42binary_subscr.9'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$x52.10'}), (54, {'res': '$const54.11'}), (56, {'index': '$const54.11', 'target': '$x52.10', 'res': '$56binary_subscr.12'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'lhs': '$42binary_subscr.9', 'rhs': '$56binary_subscr.12', 'res': '$66compare_op.13'}), (68, {}), (70, {}), (72, {'op': '&', 'lhs': '$32compare_op.6', 'rhs': '$66compare_op.13', 'res': '$binop_and_72.14'}), (74, {}), (76, {'retval': '$binop_and_72.14', 'castval': '$76return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 14:59:29,618 - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $const20.4 = const(int, -1)              ['$const20.4']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4', 'x']
    $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5 ['$22binary_subscr.5', '$32compare_op.6', '$8binary_subscr.2']
    $const40.8 = const(int, 0)               ['$const40.8']
    $42binary_subscr.9 = getitem(value=x, index=$const40.8, fn=<built-in function getitem>) ['$42binary_subscr.9', '$const40.8', 'x']
    $const54.11 = const(int, 1)              ['$const54.11']
    $56binary_subscr.12 = getitem(value=x, index=$const54.11, fn=<built-in function getitem>) ['$56binary_subscr.12', '$const54.11', 'x']
    $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12 ['$42binary_subscr.9', '$56binary_subscr.12', '$66compare_op.13']
    $binop_and_72.14 = $32compare_op.6 & $66compare_op.13 ['$32compare_op.6', '$66compare_op.13', '$binop_and_72.14']
    $76return_value.15 = cast(value=$binop_and_72.14) ['$76return_value.15', '$binop_and_72.14']
    return $76return_value.15                ['$76return_value.15']

DEBUG 2024-06-11 14:59:29,618 - bytecode dump:
>          0	NOP(arg=None, lineno=1045)
           2	RESUME(arg=0, lineno=1045)
           4	LOAD_FAST(arg=0, lineno=1048)
           6	LOAD_CONST(arg=1, lineno=1048)
           8	BINARY_SUBSCR(arg=None, lineno=1048)
          18	LOAD_FAST(arg=0, lineno=1048)
          20	LOAD_CONST(arg=2, lineno=1048)
          22	BINARY_SUBSCR(arg=None, lineno=1048)
          32	COMPARE_OP(arg=0, lineno=1048)
          38	LOAD_FAST(arg=0, lineno=1048)
          40	LOAD_CONST(arg=1, lineno=1048)
          42	BINARY_SUBSCR(arg=None, lineno=1048)
          52	LOAD_FAST(arg=0, lineno=1048)
          54	LOAD_CONST(arg=3, lineno=1048)
          56	BINARY_SUBSCR(arg=None, lineno=1048)
          66	COMPARE_OP(arg=1, lineno=1048)
          72	BINARY_OP(arg=1, lineno=1048)
          76	RETURN_VALUE(arg=None, lineno=1048)
DEBUG 2024-06-11 14:59:29,618 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 14:59:29,618 - stack: []
DEBUG 2024-06-11 14:59:29,618 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 14:59:29,618 - dispatch pc=0, inst=NOP(arg=None, lineno=1045)
DEBUG 2024-06-11 14:59:29,618 - stack []
DEBUG 2024-06-11 14:59:29,618 - dispatch pc=2, inst=RESUME(arg=0, lineno=1045)
DEBUG 2024-06-11 14:59:29,618 - stack []
DEBUG 2024-06-11 14:59:29,618 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1048)
DEBUG 2024-06-11 14:59:29,618 - stack []
DEBUG 2024-06-11 14:59:29,618 - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1048)
DEBUG 2024-06-11 14:59:29,618 - stack ['$x4.0']
DEBUG 2024-06-11 14:59:29,618 - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1048)
DEBUG 2024-06-11 14:59:29,618 - stack ['$x4.0', '$const6.1']
DEBUG 2024-06-11 14:59:29,618 - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=1048)
DEBUG 2024-06-11 14:59:29,618 - stack ['$8binary_subscr.2']
DEBUG 2024-06-11 14:59:29,618 - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=1048)
DEBUG 2024-06-11 14:59:29,618 - stack ['$8binary_subscr.2', '$x18.3']
DEBUG 2024-06-11 14:59:29,618 - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=1048)
DEBUG 2024-06-11 14:59:29,618 - stack ['$8binary_subscr.2', '$x18.3', '$const20.4']
DEBUG 2024-06-11 14:59:29,618 - dispatch pc=32, inst=COMPARE_OP(arg=0, lineno=1048)
DEBUG 2024-06-11 14:59:29,618 - stack ['$8binary_subscr.2', '$22binary_subscr.5']
DEBUG 2024-06-11 14:59:29,618 - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=1048)
DEBUG 2024-06-11 14:59:29,618 - stack ['$32compare_op.6']
DEBUG 2024-06-11 14:59:29,618 - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1048)
DEBUG 2024-06-11 14:59:29,618 - stack ['$32compare_op.6', '$x38.7']
DEBUG 2024-06-11 14:59:29,618 - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=1048)
DEBUG 2024-06-11 14:59:29,618 - stack ['$32compare_op.6', '$x38.7', '$const40.8']
DEBUG 2024-06-11 14:59:29,618 - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1048)
DEBUG 2024-06-11 14:59:29,618 - stack ['$32compare_op.6', '$42binary_subscr.9']
DEBUG 2024-06-11 14:59:29,618 - dispatch pc=54, inst=LOAD_CONST(arg=3, lineno=1048)
DEBUG 2024-06-11 14:59:29,618 - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10']
DEBUG 2024-06-11 14:59:29,618 - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1048)
DEBUG 2024-06-11 14:59:29,618 - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10', '$const54.11']
DEBUG 2024-06-11 14:59:29,618 - dispatch pc=66, inst=COMPARE_OP(arg=1, lineno=1048)
DEBUG 2024-06-11 14:59:29,618 - stack ['$32compare_op.6', '$42binary_subscr.9', '$56binary_subscr.12']
DEBUG 2024-06-11 14:59:29,618 - dispatch pc=72, inst=BINARY_OP(arg=1, lineno=1048)
DEBUG 2024-06-11 14:59:29,618 - stack ['$32compare_op.6', '$66compare_op.13']
DEBUG 2024-06-11 14:59:29,618 - dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=1048)
DEBUG 2024-06-11 14:59:29,618 - stack ['$binop_and_72.14']
DEBUG 2024-06-11 14:59:29,618 - end state. edges=[]
DEBUG 2024-06-11 14:59:29,618 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 14:59:29,618 - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG 2024-06-11 14:59:29,618 - defmap: {}
DEBUG 2024-06-11 14:59:29,618 - phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 14:59:29,618 - changing phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 14:59:29,618 - keep phismap: {}
DEBUG 2024-06-11 14:59:29,618 - new_out: defaultdict(<class 'dict'>, {})
DEBUG 2024-06-11 14:59:29,618 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 14:59:29,618 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4'}), (22, {'index': '$const20.4', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$32compare_op.6'}), (34, {}), (36, {}), (38, {'res': '$x38.7'}), (40, {'res': '$const40.8'}), (42, {'index': '$const40.8', 'target': '$x38.7', 'res': '$42binary_subscr.9'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$x52.10'}), (54, {'res': '$const54.11'}), (56, {'index': '$const54.11', 'target': '$x52.10', 'res': '$56binary_subscr.12'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'lhs': '$42binary_subscr.9', 'rhs': '$56binary_subscr.12', 'res': '$66compare_op.13'}), (68, {}), (70, {}), (72, {'op': '&', 'lhs': '$32compare_op.6', 'rhs': '$66compare_op.13', 'res': '$binop_and_72.14'}), (74, {}), (76, {'retval': '$binop_and_72.14', 'castval': '$76return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 14:59:29,618 - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $const20.4 = const(int, -1)              ['$const20.4']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4', 'x']
    $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5 ['$22binary_subscr.5', '$32compare_op.6', '$8binary_subscr.2']
    $const40.8 = const(int, 0)               ['$const40.8']
    $42binary_subscr.9 = getitem(value=x, index=$const40.8, fn=<built-in function getitem>) ['$42binary_subscr.9', '$const40.8', 'x']
    $const54.11 = const(int, 1)              ['$const54.11']
    $56binary_subscr.12 = getitem(value=x, index=$const54.11, fn=<built-in function getitem>) ['$56binary_subscr.12', '$const54.11', 'x']
    $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12 ['$42binary_subscr.9', '$56binary_subscr.12', '$66compare_op.13']
    $binop_and_72.14 = $32compare_op.6 & $66compare_op.13 ['$32compare_op.6', '$66compare_op.13', '$binop_and_72.14']
    $76return_value.15 = cast(value=$binop_and_72.14) ['$76return_value.15', '$binop_and_72.14']
    return $76return_value.15                ['$76return_value.15']

DEBUG 2024-06-11 14:59:30,049 - bytecode dump:
>          0	NOP(arg=None, lineno=81)
           2	RESUME(arg=0, lineno=81)
           4	LOAD_GLOBAL(arg=1, lineno=86)
          16	LOAD_FAST(arg=0, lineno=86)
          18	LOAD_FAST(arg=1, lineno=86)
          20	LOAD_FAST(arg=2, lineno=86)
          22	LOAD_FAST(arg=3, lineno=86)
          24	LOAD_FAST(arg=4, lineno=86)
          26	LOAD_FAST(arg=5, lineno=86)
          28	LOAD_FAST(arg=6, lineno=86)
          30	PRECALL(arg=7, lineno=86)
          34	CALL(arg=7, lineno=86)
          44	POP_TOP(arg=None, lineno=86)
          46	LOAD_CONST(arg=0, lineno=86)
          48	RETURN_VALUE(arg=None, lineno=86)
DEBUG 2024-06-11 14:59:30,049 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 14:59:30,049 - stack: []
DEBUG 2024-06-11 14:59:30,049 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 14:59:30,049 - dispatch pc=0, inst=NOP(arg=None, lineno=81)
DEBUG 2024-06-11 14:59:30,049 - stack []
DEBUG 2024-06-11 14:59:30,049 - dispatch pc=2, inst=RESUME(arg=0, lineno=81)
DEBUG 2024-06-11 14:59:30,049 - stack []
DEBUG 2024-06-11 14:59:30,049 - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=86)
DEBUG 2024-06-11 14:59:30,049 - stack []
DEBUG 2024-06-11 14:59:30,049 - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=86)
DEBUG 2024-06-11 14:59:30,049 - stack ['$null$4.1', '$4load_global.0']
DEBUG 2024-06-11 14:59:30,049 - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=86)
DEBUG 2024-06-11 14:59:30,049 - stack ['$null$4.1', '$4load_global.0', '$x16.2']
DEBUG 2024-06-11 14:59:30,049 - dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=86)
DEBUG 2024-06-11 14:59:30,049 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3']
DEBUG 2024-06-11 14:59:30,049 - dispatch pc=22, inst=LOAD_FAST(arg=3, lineno=86)
DEBUG 2024-06-11 14:59:30,049 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4']
DEBUG 2024-06-11 14:59:30,049 - dispatch pc=24, inst=LOAD_FAST(arg=4, lineno=86)
DEBUG 2024-06-11 14:59:30,049 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5']
DEBUG 2024-06-11 14:59:30,049 - dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=86)
DEBUG 2024-06-11 14:59:30,049 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6']
DEBUG 2024-06-11 14:59:30,049 - dispatch pc=28, inst=LOAD_FAST(arg=6, lineno=86)
DEBUG 2024-06-11 14:59:30,049 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7']
DEBUG 2024-06-11 14:59:30,049 - dispatch pc=30, inst=PRECALL(arg=7, lineno=86)
DEBUG 2024-06-11 14:59:30,049 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
DEBUG 2024-06-11 14:59:30,049 - dispatch pc=34, inst=CALL(arg=7, lineno=86)
DEBUG 2024-06-11 14:59:30,049 - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
DEBUG 2024-06-11 14:59:30,049 - dispatch pc=44, inst=POP_TOP(arg=None, lineno=86)
DEBUG 2024-06-11 14:59:30,049 - stack ['$34call.9']
DEBUG 2024-06-11 14:59:30,049 - dispatch pc=46, inst=LOAD_CONST(arg=0, lineno=86)
DEBUG 2024-06-11 14:59:30,049 - stack []
DEBUG 2024-06-11 14:59:30,049 - dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=86)
DEBUG 2024-06-11 14:59:30,049 - stack ['$const46.10']
DEBUG 2024-06-11 14:59:30,049 - end state. edges=[]
DEBUG 2024-06-11 14:59:30,049 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 14:59:30,049 - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG 2024-06-11 14:59:30,049 - defmap: {}
DEBUG 2024-06-11 14:59:30,049 - phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 14:59:30,049 - changing phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 14:59:30,049 - keep phismap: {}
DEBUG 2024-06-11 14:59:30,049 - new_out: defaultdict(<class 'dict'>, {})
DEBUG 2024-06-11 14:59:30,049 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 14:59:30,049 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {'res': '$t_out18.3'}), (20, {'res': '$interp_win20.4'}), (22, {'res': '$interp_delta22.5'}), (24, {'res': '$num_table24.6'}), (26, {'res': '$scale26.7'}), (28, {'res': '$y28.8'}), (30, {}), (32, {}), (34, {'func': '$4load_global.0', 'args': ['$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8'], 'kw_names': None, 'res': '$34call.9'}), (36, {}), (38, {}), (40, {}), (42, {}), (46, {'res': '$const46.10'}), (48, {'retval': '$const46.10', 'castval': '$48return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 14:59:30,049 - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x0000027CEB00B6A0>)) ['$4load_global.0']
    $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None) ['$34call.9', '$4load_global.0', 'interp_delta', 'interp_win', 'num_table', 'scale', 't_out', 'x', 'y']
    $const46.10 = const(NoneType, None)      ['$const46.10']
    $48return_value.11 = cast(value=$const46.10) ['$48return_value.11', '$const46.10']
    return $48return_value.11                ['$48return_value.11']

DEBUG 2024-06-11 14:59:30,058 - ==== SSA block analysis pass on 0
DEBUG 2024-06-11 14:59:30,062 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000027CEC145490>
DEBUG 2024-06-11 14:59:30,062 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:59:30,062 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:59:30,062 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:59:30,062 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:59:30,062 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:59:30,062 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:59:30,062 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:59:30,062 - on stmt: $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x0000027CEB00B6A0>))
DEBUG 2024-06-11 14:59:30,062 - on stmt: $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,062 - on stmt: $const46.10 = const(NoneType, None)
DEBUG 2024-06-11 14:59:30,062 - on stmt: $48return_value.11 = cast(value=$const46.10)
DEBUG 2024-06-11 14:59:30,062 - on stmt: return $48return_value.11
DEBUG 2024-06-11 14:59:30,062 - defs defaultdict(<class 'list'>,
            {'$34call.9': [(<numba.core.ir.Assign object at 0x0000027CEC125550>,
                            0)],
             '$48return_value.11': [(<numba.core.ir.Assign object at 0x0000027CEC125A10>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000027CEC1245D0>,
                                  0)],
             '$const46.10': [(<numba.core.ir.Assign object at 0x0000027CEC1257D0>,
                              0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x0000027CEC1240D0>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x0000027CEC117F90>,
                             0)],
             'num_table': [(<numba.core.ir.Assign object at 0x0000027CEC1241D0>,
                            0)],
             'scale': [(<numba.core.ir.Assign object at 0x0000027CEC124310>,
                        0)],
             't_out': [(<numba.core.ir.Assign object at 0x0000027CEC117E90>,
                        0)],
             'x': [(<numba.core.ir.Assign object at 0x0000027CEC117D50>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000027CEC124410>, 0)]})
DEBUG 2024-06-11 14:59:30,062 - SSA violators <numba.core.utils.OrderedSet object at 0x0000027CEC124590>
DEBUG 2024-06-11 14:59:30,066 - bytecode dump:
>          0	NOP(arg=None, lineno=7)
           2	RESUME(arg=0, lineno=7)
           4	LOAD_GLOBAL(arg=1, lineno=9)
          16	LOAD_FAST(arg=5, lineno=9)
          18	LOAD_FAST(arg=4, lineno=9)
          20	BINARY_OP(arg=5, lineno=9)
          24	PRECALL(arg=1, lineno=9)
          28	CALL(arg=1, lineno=9)
          38	STORE_FAST(arg=7, lineno=9)
          40	LOAD_CONST(arg=1, lineno=10)
          42	STORE_FAST(arg=8, lineno=10)
          44	LOAD_CONST(arg=2, lineno=12)
          46	STORE_FAST(arg=9, lineno=12)
          48	LOAD_CONST(arg=1, lineno=13)
          50	STORE_FAST(arg=10, lineno=13)
          52	LOAD_CONST(arg=1, lineno=14)
          54	STORE_FAST(arg=11, lineno=14)
          56	LOAD_CONST(arg=2, lineno=15)
          58	STORE_FAST(arg=12, lineno=15)
          60	LOAD_CONST(arg=1, lineno=16)
          62	STORE_FAST(arg=13, lineno=16)
          64	LOAD_CONST(arg=1, lineno=17)
          66	STORE_FAST(arg=14, lineno=17)
          68	LOAD_FAST(arg=2, lineno=19)
          70	LOAD_ATTR(arg=1, lineno=19)
          80	LOAD_CONST(arg=2, lineno=19)
          82	BINARY_SUBSCR(arg=None, lineno=19)
          92	STORE_FAST(arg=15, lineno=19)
          94	LOAD_FAST(arg=0, lineno=20)
          96	LOAD_ATTR(arg=1, lineno=20)
         106	LOAD_CONST(arg=2, lineno=20)
         108	BINARY_SUBSCR(arg=None, lineno=20)
         118	STORE_FAST(arg=16, lineno=20)
         120	LOAD_FAST(arg=1, lineno=21)
         122	LOAD_ATTR(arg=1, lineno=21)
         132	LOAD_CONST(arg=2, lineno=21)
         134	BINARY_SUBSCR(arg=None, lineno=21)
         144	STORE_FAST(arg=17, lineno=21)
         146	LOAD_GLOBAL(arg=5, lineno=23)
         158	LOAD_FAST(arg=17, lineno=23)
         160	PRECALL(arg=1, lineno=23)
         164	CALL(arg=1, lineno=23)
         174	GET_ITER(arg=None, lineno=23)
>        176	NOP(arg=1, lineno=23)
         178	FOR_ITER(arg=301, lineno=23)
         180	STORE_FAST(arg=18, lineno=23)
         182	LOAD_FAST(arg=1, lineno=24)
         184	LOAD_FAST(arg=18, lineno=24)
         186	BINARY_SUBSCR(arg=None, lineno=24)
         196	STORE_FAST(arg=8, lineno=24)
         198	LOAD_GLOBAL(arg=1, lineno=27)
         210	LOAD_FAST(arg=8, lineno=27)
         212	PRECALL(arg=1, lineno=27)
         216	CALL(arg=1, lineno=27)
         226	STORE_FAST(arg=9, lineno=27)
         228	LOAD_FAST(arg=5, lineno=30)
         230	LOAD_FAST(arg=8, lineno=30)
         232	LOAD_FAST(arg=9, lineno=30)
         234	BINARY_OP(arg=10, lineno=30)
         238	BINARY_OP(arg=5, lineno=30)
         242	STORE_FAST(arg=10, lineno=30)
         244	LOAD_FAST(arg=10, lineno=33)
         246	LOAD_FAST(arg=4, lineno=33)
         248	BINARY_OP(arg=5, lineno=33)
         252	STORE_FAST(arg=11, lineno=33)
         254	LOAD_GLOBAL(arg=1, lineno=34)
         266	LOAD_FAST(arg=11, lineno=34)
         268	PRECALL(arg=1, lineno=34)
         272	CALL(arg=1, lineno=34)
         282	STORE_FAST(arg=12, lineno=34)
         284	LOAD_FAST(arg=11, lineno=37)
         286	LOAD_FAST(arg=12, lineno=37)
         288	BINARY_OP(arg=10, lineno=37)
         292	STORE_FAST(arg=13, lineno=37)
         294	LOAD_GLOBAL(arg=7, lineno=40)
         306	LOAD_FAST(arg=9, lineno=40)
         308	LOAD_CONST(arg=3, lineno=40)
         310	BINARY_OP(arg=0, lineno=40)
         314	LOAD_FAST(arg=15, lineno=40)
         316	LOAD_FAST(arg=12, lineno=40)
         318	BINARY_OP(arg=10, lineno=40)
         322	LOAD_FAST(arg=7, lineno=40)
         324	BINARY_OP(arg=2, lineno=40)
         328	PRECALL(arg=2, lineno=40)
         332	CALL(arg=2, lineno=40)
         342	STORE_FAST(arg=19, lineno=40)
         344	LOAD_GLOBAL(arg=9, lineno=41)
         356	LOAD_FAST(arg=19, lineno=41)
         358	PRECALL(arg=1, lineno=41)
         362	CALL(arg=1, lineno=41)
         372	GET_ITER(arg=None, lineno=41)
>        374	FOR_ITER(arg=62, lineno=41)
         376	STORE_FAST(arg=20, lineno=41)
         378	LOAD_FAST(arg=2, lineno=44)
         380	LOAD_FAST(arg=12, lineno=44)
         382	LOAD_FAST(arg=20, lineno=44)
         384	LOAD_FAST(arg=7, lineno=44)
         386	BINARY_OP(arg=5, lineno=44)
         390	BINARY_OP(arg=0, lineno=44)
         394	BINARY_SUBSCR(arg=None, lineno=44)
         404	LOAD_FAST(arg=13, lineno=45)
         406	LOAD_FAST(arg=3, lineno=45)
         408	LOAD_FAST(arg=12, lineno=45)
         410	LOAD_FAST(arg=20, lineno=45)
         412	LOAD_FAST(arg=7, lineno=45)
         414	BINARY_OP(arg=5, lineno=45)
         418	BINARY_OP(arg=0, lineno=45)
         422	BINARY_SUBSCR(arg=None, lineno=45)
         432	BINARY_OP(arg=5, lineno=45)
         436	BINARY_OP(arg=0, lineno=44)
         440	STORE_FAST(arg=14, lineno=43)
         442	LOAD_FAST(arg=6, lineno=47)
         444	LOAD_FAST(arg=18, lineno=47)
         446	COPY(arg=2, lineno=47)
         448	COPY(arg=2, lineno=47)
         450	BINARY_SUBSCR(arg=None, lineno=47)
         460	LOAD_FAST(arg=14, lineno=47)
         462	LOAD_FAST(arg=0, lineno=47)
         464	LOAD_FAST(arg=9, lineno=47)
         466	LOAD_FAST(arg=20, lineno=47)
         468	BINARY_OP(arg=10, lineno=47)
         472	BINARY_SUBSCR(arg=None, lineno=47)
         482	BINARY_OP(arg=5, lineno=47)
         486	BINARY_OP(arg=13, lineno=47)
         490	SWAP(arg=3, lineno=47)
         492	SWAP(arg=2, lineno=47)
         494	STORE_SUBSCR(arg=None, lineno=47)
         498	JUMP_BACKWARD(arg=63, lineno=47)
>        500	LOAD_FAST(arg=5, lineno=50)
         502	LOAD_FAST(arg=10, lineno=50)
         504	BINARY_OP(arg=10, lineno=50)
         508	STORE_FAST(arg=10, lineno=50)
         510	LOAD_FAST(arg=10, lineno=53)
         512	LOAD_FAST(arg=4, lineno=53)
         514	BINARY_OP(arg=5, lineno=53)
         518	STORE_FAST(arg=11, lineno=53)
         520	LOAD_GLOBAL(arg=1, lineno=54)
         532	LOAD_FAST(arg=11, lineno=54)
         534	PRECALL(arg=1, lineno=54)
         538	CALL(arg=1, lineno=54)
         548	STORE_FAST(arg=12, lineno=54)
         550	LOAD_FAST(arg=11, lineno=57)
         552	LOAD_FAST(arg=12, lineno=57)
         554	BINARY_OP(arg=10, lineno=57)
         558	STORE_FAST(arg=13, lineno=57)
         560	LOAD_GLOBAL(arg=7, lineno=60)
         572	LOAD_FAST(arg=16, lineno=60)
         574	LOAD_FAST(arg=9, lineno=60)
         576	BINARY_OP(arg=10, lineno=60)
         580	LOAD_CONST(arg=3, lineno=60)
         582	BINARY_OP(arg=10, lineno=60)
         586	LOAD_FAST(arg=15, lineno=60)
         588	LOAD_FAST(arg=12, lineno=60)
         590	BINARY_OP(arg=10, lineno=60)
         594	LOAD_FAST(arg=7, lineno=60)
         596	BINARY_OP(arg=2, lineno=60)
         600	PRECALL(arg=2, lineno=60)
         604	CALL(arg=2, lineno=60)
         614	STORE_FAST(arg=21, lineno=60)
         616	LOAD_GLOBAL(arg=9, lineno=61)
         628	LOAD_FAST(arg=21, lineno=61)
         630	PRECALL(arg=1, lineno=61)
         634	CALL(arg=1, lineno=61)
         644	GET_ITER(arg=None, lineno=61)
>        646	FOR_ITER(arg=65, lineno=61)
         648	STORE_FAST(arg=22, lineno=61)
         650	LOAD_FAST(arg=2, lineno=63)
         652	LOAD_FAST(arg=12, lineno=63)
         654	LOAD_FAST(arg=22, lineno=63)
         656	LOAD_FAST(arg=7, lineno=63)
         658	BINARY_OP(arg=5, lineno=63)
         662	BINARY_OP(arg=0, lineno=63)
         666	BINARY_SUBSCR(arg=None, lineno=63)
         676	LOAD_FAST(arg=13, lineno=64)
         678	LOAD_FAST(arg=3, lineno=64)
         680	LOAD_FAST(arg=12, lineno=64)
         682	LOAD_FAST(arg=22, lineno=64)
         684	LOAD_FAST(arg=7, lineno=64)
         686	BINARY_OP(arg=5, lineno=64)
         690	BINARY_OP(arg=0, lineno=64)
         694	BINARY_SUBSCR(arg=None, lineno=64)
         704	BINARY_OP(arg=5, lineno=64)
         708	BINARY_OP(arg=0, lineno=63)
         712	STORE_FAST(arg=14, lineno=62)
         714	LOAD_FAST(arg=6, lineno=66)
         716	LOAD_FAST(arg=18, lineno=66)
         718	COPY(arg=2, lineno=66)
         720	COPY(arg=2, lineno=66)
         722	BINARY_SUBSCR(arg=None, lineno=66)
         732	LOAD_FAST(arg=14, lineno=66)
         734	LOAD_FAST(arg=0, lineno=66)
         736	LOAD_FAST(arg=9, lineno=66)
         738	LOAD_FAST(arg=22, lineno=66)
         740	BINARY_OP(arg=0, lineno=66)
         744	LOAD_CONST(arg=3, lineno=66)
         746	BINARY_OP(arg=0, lineno=66)
         750	BINARY_SUBSCR(arg=None, lineno=66)
         760	BINARY_OP(arg=5, lineno=66)
         764	BINARY_OP(arg=13, lineno=66)
         768	SWAP(arg=3, lineno=66)
         770	SWAP(arg=2, lineno=66)
         772	STORE_SUBSCR(arg=None, lineno=66)
         776	JUMP_BACKWARD(arg=66, lineno=66)
>        778	NOP(arg=1, lineno=61)
         780	JUMP_BACKWARD(arg=303, lineno=61)
>        782	LOAD_CONST(arg=0, lineno=23)
         784	RETURN_VALUE(arg=None, lineno=23)
DEBUG 2024-06-11 14:59:30,066 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 14:59:30,066 - stack: []
DEBUG 2024-06-11 14:59:30,066 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=0, inst=NOP(arg=None, lineno=7)
DEBUG 2024-06-11 14:59:30,066 - stack []
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=2, inst=RESUME(arg=0, lineno=7)
DEBUG 2024-06-11 14:59:30,066 - stack []
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=9)
DEBUG 2024-06-11 14:59:30,066 - stack []
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=16, inst=LOAD_FAST(arg=5, lineno=9)
DEBUG 2024-06-11 14:59:30,066 - stack ['$null$4.1', '$4load_global.0']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=18, inst=LOAD_FAST(arg=4, lineno=9)
DEBUG 2024-06-11 14:59:30,066 - stack ['$null$4.1', '$4load_global.0', '$scale16.2']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=20, inst=BINARY_OP(arg=5, lineno=9)
DEBUG 2024-06-11 14:59:30,066 - stack ['$null$4.1', '$4load_global.0', '$scale16.2', '$num_table18.3']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=24, inst=PRECALL(arg=1, lineno=9)
DEBUG 2024-06-11 14:59:30,066 - stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=28, inst=CALL(arg=1, lineno=9)
DEBUG 2024-06-11 14:59:30,066 - stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=38, inst=STORE_FAST(arg=7, lineno=9)
DEBUG 2024-06-11 14:59:30,066 - stack ['$28call.5']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=10)
DEBUG 2024-06-11 14:59:30,066 - stack []
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=42, inst=STORE_FAST(arg=8, lineno=10)
DEBUG 2024-06-11 14:59:30,066 - stack ['$const40.6']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=12)
DEBUG 2024-06-11 14:59:30,066 - stack []
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=46, inst=STORE_FAST(arg=9, lineno=12)
DEBUG 2024-06-11 14:59:30,066 - stack ['$const44.7']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=13)
DEBUG 2024-06-11 14:59:30,066 - stack []
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=50, inst=STORE_FAST(arg=10, lineno=13)
DEBUG 2024-06-11 14:59:30,066 - stack ['$const48.8']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=52, inst=LOAD_CONST(arg=1, lineno=14)
DEBUG 2024-06-11 14:59:30,066 - stack []
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=54, inst=STORE_FAST(arg=11, lineno=14)
DEBUG 2024-06-11 14:59:30,066 - stack ['$const52.9']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=56, inst=LOAD_CONST(arg=2, lineno=15)
DEBUG 2024-06-11 14:59:30,066 - stack []
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=58, inst=STORE_FAST(arg=12, lineno=15)
DEBUG 2024-06-11 14:59:30,066 - stack ['$const56.10']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=60, inst=LOAD_CONST(arg=1, lineno=16)
DEBUG 2024-06-11 14:59:30,066 - stack []
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=62, inst=STORE_FAST(arg=13, lineno=16)
DEBUG 2024-06-11 14:59:30,066 - stack ['$const60.11']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=17)
DEBUG 2024-06-11 14:59:30,066 - stack []
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=66, inst=STORE_FAST(arg=14, lineno=17)
DEBUG 2024-06-11 14:59:30,066 - stack ['$const64.12']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=68, inst=LOAD_FAST(arg=2, lineno=19)
DEBUG 2024-06-11 14:59:30,066 - stack []
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=70, inst=LOAD_ATTR(arg=1, lineno=19)
DEBUG 2024-06-11 14:59:30,066 - stack ['$interp_win68.13']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=80, inst=LOAD_CONST(arg=2, lineno=19)
DEBUG 2024-06-11 14:59:30,066 - stack ['$70load_attr.14']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=19)
DEBUG 2024-06-11 14:59:30,066 - stack ['$70load_attr.14', '$const80.15']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=92, inst=STORE_FAST(arg=15, lineno=19)
DEBUG 2024-06-11 14:59:30,066 - stack ['$82binary_subscr.16']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=94, inst=LOAD_FAST(arg=0, lineno=20)
DEBUG 2024-06-11 14:59:30,066 - stack []
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=96, inst=LOAD_ATTR(arg=1, lineno=20)
DEBUG 2024-06-11 14:59:30,066 - stack ['$x94.17']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=20)
DEBUG 2024-06-11 14:59:30,066 - stack ['$96load_attr.18']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=108, inst=BINARY_SUBSCR(arg=None, lineno=20)
DEBUG 2024-06-11 14:59:30,066 - stack ['$96load_attr.18', '$const106.19']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=118, inst=STORE_FAST(arg=16, lineno=20)
DEBUG 2024-06-11 14:59:30,066 - stack ['$108binary_subscr.20']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=120, inst=LOAD_FAST(arg=1, lineno=21)
DEBUG 2024-06-11 14:59:30,066 - stack []
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=122, inst=LOAD_ATTR(arg=1, lineno=21)
DEBUG 2024-06-11 14:59:30,066 - stack ['$t_out120.21']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=21)
DEBUG 2024-06-11 14:59:30,066 - stack ['$122load_attr.22']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=134, inst=BINARY_SUBSCR(arg=None, lineno=21)
DEBUG 2024-06-11 14:59:30,066 - stack ['$122load_attr.22', '$const132.23']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=144, inst=STORE_FAST(arg=17, lineno=21)
DEBUG 2024-06-11 14:59:30,066 - stack ['$134binary_subscr.24']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=146, inst=LOAD_GLOBAL(arg=5, lineno=23)
DEBUG 2024-06-11 14:59:30,066 - stack []
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=158, inst=LOAD_FAST(arg=17, lineno=23)
DEBUG 2024-06-11 14:59:30,066 - stack ['$null$146.26', '$146load_global.25']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=160, inst=PRECALL(arg=1, lineno=23)
DEBUG 2024-06-11 14:59:30,066 - stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=164, inst=CALL(arg=1, lineno=23)
DEBUG 2024-06-11 14:59:30,066 - stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=174, inst=GET_ITER(arg=None, lineno=23)
DEBUG 2024-06-11 14:59:30,066 - stack ['$164call.28']
DEBUG 2024-06-11 14:59:30,066 - end state. edges=[Edge(pc=176, stack=('$174get_iter.29',), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:59:30,066 - pending: deque([State(pc_initial=176 nstack_initial=1)])
DEBUG 2024-06-11 14:59:30,066 - stack: ['$phi176.0']
DEBUG 2024-06-11 14:59:30,066 - state.pc_initial: State(pc_initial=176 nstack_initial=1)
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=176, inst=NOP(arg=1, lineno=23)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi176.0']
DEBUG 2024-06-11 14:59:30,066 - end state. edges=[Edge(pc=178, stack=('$phi176.0',), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:59:30,066 - pending: deque([State(pc_initial=178 nstack_initial=1)])
DEBUG 2024-06-11 14:59:30,066 - stack: ['$phi178.0']
DEBUG 2024-06-11 14:59:30,066 - state.pc_initial: State(pc_initial=178 nstack_initial=1)
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=178, inst=FOR_ITER(arg=301, lineno=23)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi178.0']
DEBUG 2024-06-11 14:59:30,066 - end state. edges=[Edge(pc=782, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=('$phi178.0', '$178for_iter.2'), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:59:30,066 - pending: deque([State(pc_initial=782 nstack_initial=0), State(pc_initial=180 nstack_initial=2)])
DEBUG 2024-06-11 14:59:30,066 - stack: []
DEBUG 2024-06-11 14:59:30,066 - state.pc_initial: State(pc_initial=782 nstack_initial=0)
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=782, inst=LOAD_CONST(arg=0, lineno=23)
DEBUG 2024-06-11 14:59:30,066 - stack []
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=784, inst=RETURN_VALUE(arg=None, lineno=23)
DEBUG 2024-06-11 14:59:30,066 - stack ['$const782.0']
DEBUG 2024-06-11 14:59:30,066 - end state. edges=[]
DEBUG 2024-06-11 14:59:30,066 - pending: deque([State(pc_initial=180 nstack_initial=2)])
DEBUG 2024-06-11 14:59:30,066 - stack: ['$phi180.0', '$phi180.1']
DEBUG 2024-06-11 14:59:30,066 - state.pc_initial: State(pc_initial=180 nstack_initial=2)
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=180, inst=STORE_FAST(arg=18, lineno=23)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0', '$phi180.1']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=182, inst=LOAD_FAST(arg=1, lineno=24)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=184, inst=LOAD_FAST(arg=18, lineno=24)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0', '$t_out182.2']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=186, inst=BINARY_SUBSCR(arg=None, lineno=24)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0', '$t_out182.2', '$t184.3']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=196, inst=STORE_FAST(arg=8, lineno=24)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0', '$186binary_subscr.4']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=198, inst=LOAD_GLOBAL(arg=1, lineno=27)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=210, inst=LOAD_FAST(arg=8, lineno=27)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0', '$null$198.6', '$198load_global.5']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=212, inst=PRECALL(arg=1, lineno=27)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=216, inst=CALL(arg=1, lineno=27)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=226, inst=STORE_FAST(arg=9, lineno=27)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0', '$216call.8']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=228, inst=LOAD_FAST(arg=5, lineno=30)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=230, inst=LOAD_FAST(arg=8, lineno=30)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0', '$scale228.9']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=232, inst=LOAD_FAST(arg=9, lineno=30)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0', '$scale228.9', '$time_register230.10']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=234, inst=BINARY_OP(arg=10, lineno=30)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0', '$scale228.9', '$time_register230.10', '$n232.11']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=238, inst=BINARY_OP(arg=5, lineno=30)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0', '$scale228.9', '$binop_sub234.12']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=242, inst=STORE_FAST(arg=10, lineno=30)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0', '$binop_mul238.13']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=244, inst=LOAD_FAST(arg=10, lineno=33)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=246, inst=LOAD_FAST(arg=4, lineno=33)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0', '$frac244.14']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=248, inst=BINARY_OP(arg=5, lineno=33)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0', '$frac244.14', '$num_table246.15']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=252, inst=STORE_FAST(arg=11, lineno=33)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0', '$binop_mul248.16']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=254, inst=LOAD_GLOBAL(arg=1, lineno=34)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=266, inst=LOAD_FAST(arg=11, lineno=34)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0', '$null$254.18', '$254load_global.17']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=268, inst=PRECALL(arg=1, lineno=34)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=272, inst=CALL(arg=1, lineno=34)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=282, inst=STORE_FAST(arg=12, lineno=34)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0', '$272call.20']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=284, inst=LOAD_FAST(arg=11, lineno=37)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=286, inst=LOAD_FAST(arg=12, lineno=37)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0', '$index_frac284.21']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=288, inst=BINARY_OP(arg=10, lineno=37)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0', '$index_frac284.21', '$offset286.22']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=292, inst=STORE_FAST(arg=13, lineno=37)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0', '$binop_sub288.23']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=294, inst=LOAD_GLOBAL(arg=7, lineno=40)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=306, inst=LOAD_FAST(arg=9, lineno=40)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0', '$null$294.25', '$294load_global.24']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=308, inst=LOAD_CONST(arg=3, lineno=40)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=310, inst=BINARY_OP(arg=0, lineno=40)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26', '$const308.27']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=314, inst=LOAD_FAST(arg=15, lineno=40)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=316, inst=LOAD_FAST(arg=12, lineno=40)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=318, inst=BINARY_OP(arg=10, lineno=40)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29', '$offset316.30']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=322, inst=LOAD_FAST(arg=7, lineno=40)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=324, inst=BINARY_OP(arg=2, lineno=40)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31', '$index_step322.32']
DEBUG 2024-06-11 14:59:30,066 - dispatch pc=328, inst=PRECALL(arg=2, lineno=40)
DEBUG 2024-06-11 14:59:30,066 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=332, inst=CALL(arg=2, lineno=40)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=342, inst=STORE_FAST(arg=19, lineno=40)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi180.0', '$332call.34']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=344, inst=LOAD_GLOBAL(arg=9, lineno=41)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi180.0']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=356, inst=LOAD_FAST(arg=19, lineno=41)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi180.0', '$null$344.36', '$344load_global.35']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=358, inst=PRECALL(arg=1, lineno=41)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=362, inst=CALL(arg=1, lineno=41)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=372, inst=GET_ITER(arg=None, lineno=41)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi180.0', '$362call.38']
DEBUG 2024-06-11 14:59:30,075 - end state. edges=[Edge(pc=374, stack=('$phi180.0', '$372get_iter.39'), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:59:30,075 - pending: deque([State(pc_initial=374 nstack_initial=2)])
DEBUG 2024-06-11 14:59:30,075 - stack: ['$phi374.0', '$phi374.1']
DEBUG 2024-06-11 14:59:30,075 - state.pc_initial: State(pc_initial=374 nstack_initial=2)
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=374, inst=FOR_ITER(arg=62, lineno=41)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi374.0', '$phi374.1']
DEBUG 2024-06-11 14:59:30,075 - end state. edges=[Edge(pc=500, stack=('$phi374.0',), blockstack=(), npush=0), Edge(pc=376, stack=('$phi374.0', '$phi374.1', '$374for_iter.3'), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:59:30,075 - pending: deque([State(pc_initial=500 nstack_initial=1), State(pc_initial=376 nstack_initial=3)])
DEBUG 2024-06-11 14:59:30,075 - stack: ['$phi500.0']
DEBUG 2024-06-11 14:59:30,075 - state.pc_initial: State(pc_initial=500 nstack_initial=1)
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=500, inst=LOAD_FAST(arg=5, lineno=50)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi500.0']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=502, inst=LOAD_FAST(arg=10, lineno=50)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi500.0', '$scale500.1']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=504, inst=BINARY_OP(arg=10, lineno=50)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi500.0', '$scale500.1', '$frac502.2']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=508, inst=STORE_FAST(arg=10, lineno=50)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi500.0', '$binop_sub504.3']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=510, inst=LOAD_FAST(arg=10, lineno=53)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi500.0']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=512, inst=LOAD_FAST(arg=4, lineno=53)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi500.0', '$frac510.4']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=514, inst=BINARY_OP(arg=5, lineno=53)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi500.0', '$frac510.4', '$num_table512.5']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=518, inst=STORE_FAST(arg=11, lineno=53)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi500.0', '$binop_mul514.6']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=520, inst=LOAD_GLOBAL(arg=1, lineno=54)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi500.0']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=532, inst=LOAD_FAST(arg=11, lineno=54)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi500.0', '$null$520.8', '$520load_global.7']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=534, inst=PRECALL(arg=1, lineno=54)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=538, inst=CALL(arg=1, lineno=54)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=548, inst=STORE_FAST(arg=12, lineno=54)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi500.0', '$538call.10']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=550, inst=LOAD_FAST(arg=11, lineno=57)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi500.0']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=552, inst=LOAD_FAST(arg=12, lineno=57)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi500.0', '$index_frac550.11']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=554, inst=BINARY_OP(arg=10, lineno=57)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi500.0', '$index_frac550.11', '$offset552.12']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=558, inst=STORE_FAST(arg=13, lineno=57)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi500.0', '$binop_sub554.13']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=560, inst=LOAD_GLOBAL(arg=7, lineno=60)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi500.0']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=572, inst=LOAD_FAST(arg=16, lineno=60)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi500.0', '$null$560.15', '$560load_global.14']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=574, inst=LOAD_FAST(arg=9, lineno=60)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=576, inst=BINARY_OP(arg=10, lineno=60)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16', '$n574.17']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=580, inst=LOAD_CONST(arg=3, lineno=60)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=582, inst=BINARY_OP(arg=10, lineno=60)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18', '$const580.19']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=586, inst=LOAD_FAST(arg=15, lineno=60)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=588, inst=LOAD_FAST(arg=12, lineno=60)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=590, inst=BINARY_OP(arg=10, lineno=60)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21', '$offset588.22']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=594, inst=LOAD_FAST(arg=7, lineno=60)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=596, inst=BINARY_OP(arg=2, lineno=60)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23', '$index_step594.24']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=600, inst=PRECALL(arg=2, lineno=60)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=604, inst=CALL(arg=2, lineno=60)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=614, inst=STORE_FAST(arg=21, lineno=60)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi500.0', '$604call.26']
DEBUG 2024-06-11 14:59:30,075 - dispatch pc=616, inst=LOAD_GLOBAL(arg=9, lineno=61)
DEBUG 2024-06-11 14:59:30,075 - stack ['$phi500.0']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=628, inst=LOAD_FAST(arg=21, lineno=61)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi500.0', '$null$616.28', '$616load_global.27']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=630, inst=PRECALL(arg=1, lineno=61)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=634, inst=CALL(arg=1, lineno=61)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=644, inst=GET_ITER(arg=None, lineno=61)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi500.0', '$634call.30']
DEBUG 2024-06-11 14:59:30,079 - end state. edges=[Edge(pc=646, stack=('$phi500.0', '$644get_iter.31'), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:59:30,079 - pending: deque([State(pc_initial=376 nstack_initial=3), State(pc_initial=646 nstack_initial=2)])
DEBUG 2024-06-11 14:59:30,079 - stack: ['$phi376.0', '$phi376.1', '$phi376.2']
DEBUG 2024-06-11 14:59:30,079 - state.pc_initial: State(pc_initial=376 nstack_initial=3)
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=376, inst=STORE_FAST(arg=20, lineno=41)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1', '$phi376.2']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=378, inst=LOAD_FAST(arg=2, lineno=44)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=380, inst=LOAD_FAST(arg=12, lineno=44)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=382, inst=LOAD_FAST(arg=20, lineno=44)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=384, inst=LOAD_FAST(arg=7, lineno=44)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=386, inst=BINARY_OP(arg=5, lineno=44)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5', '$index_step384.6']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=390, inst=BINARY_OP(arg=0, lineno=44)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$binop_mul386.7']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=394, inst=BINARY_SUBSCR(arg=None, lineno=44)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$binop_add390.8']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=404, inst=LOAD_FAST(arg=13, lineno=45)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=406, inst=LOAD_FAST(arg=3, lineno=45)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=408, inst=LOAD_FAST(arg=12, lineno=45)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=410, inst=LOAD_FAST(arg=20, lineno=45)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=412, inst=LOAD_FAST(arg=7, lineno=45)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=414, inst=BINARY_OP(arg=5, lineno=45)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13', '$index_step412.14']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=418, inst=BINARY_OP(arg=0, lineno=45)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$binop_mul414.15']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=422, inst=BINARY_SUBSCR(arg=None, lineno=45)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$binop_add418.16']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=432, inst=BINARY_OP(arg=5, lineno=45)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$422binary_subscr.17']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=436, inst=BINARY_OP(arg=0, lineno=44)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$binop_mul432.18']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=440, inst=STORE_FAST(arg=14, lineno=43)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1', '$binop_add436.19']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=442, inst=LOAD_FAST(arg=6, lineno=47)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=444, inst=LOAD_FAST(arg=18, lineno=47)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1', '$y442.20']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=446, inst=COPY(arg=2, lineno=47)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=448, inst=COPY(arg=2, lineno=47)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=450, inst=BINARY_SUBSCR(arg=None, lineno=47)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20', '$t444.21']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=460, inst=LOAD_FAST(arg=14, lineno=47)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=462, inst=LOAD_FAST(arg=0, lineno=47)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=464, inst=LOAD_FAST(arg=9, lineno=47)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=466, inst=LOAD_FAST(arg=20, lineno=47)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=468, inst=BINARY_OP(arg=10, lineno=47)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25', '$i466.26']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=472, inst=BINARY_SUBSCR(arg=None, lineno=47)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$binop_sub468.27']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=482, inst=BINARY_OP(arg=5, lineno=47)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$472binary_subscr.28']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=486, inst=BINARY_OP(arg=13, lineno=47)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$binop_mul482.29']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=490, inst=SWAP(arg=3, lineno=47)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$binop_iadd486.30']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=492, inst=SWAP(arg=2, lineno=47)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$t444.21', '$y442.20']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=494, inst=STORE_SUBSCR(arg=None, lineno=47)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$y442.20', '$t444.21']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=498, inst=JUMP_BACKWARD(arg=63, lineno=47)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi376.0', '$phi376.1']
DEBUG 2024-06-11 14:59:30,079 - end state. edges=[Edge(pc=374, stack=('$phi376.0', '$phi376.1'), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:59:30,079 - pending: deque([State(pc_initial=646 nstack_initial=2), State(pc_initial=374 nstack_initial=2)])
DEBUG 2024-06-11 14:59:30,079 - stack: ['$phi646.0', '$phi646.1']
DEBUG 2024-06-11 14:59:30,079 - state.pc_initial: State(pc_initial=646 nstack_initial=2)
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=646, inst=FOR_ITER(arg=65, lineno=61)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi646.0', '$phi646.1']
DEBUG 2024-06-11 14:59:30,079 - end state. edges=[Edge(pc=778, stack=('$phi646.0',), blockstack=(), npush=0), Edge(pc=648, stack=('$phi646.0', '$phi646.1', '$646for_iter.3'), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:59:30,079 - pending: deque([State(pc_initial=374 nstack_initial=2), State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
DEBUG 2024-06-11 14:59:30,079 - pending: deque([State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
DEBUG 2024-06-11 14:59:30,079 - stack: ['$phi778.0']
DEBUG 2024-06-11 14:59:30,079 - state.pc_initial: State(pc_initial=778 nstack_initial=1)
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=778, inst=NOP(arg=1, lineno=61)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi778.0']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=780, inst=JUMP_BACKWARD(arg=303, lineno=61)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi778.0']
DEBUG 2024-06-11 14:59:30,079 - end state. edges=[Edge(pc=176, stack=('$phi778.0',), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:59:30,079 - pending: deque([State(pc_initial=648 nstack_initial=3), State(pc_initial=176 nstack_initial=1)])
DEBUG 2024-06-11 14:59:30,079 - stack: ['$phi648.0', '$phi648.1', '$phi648.2']
DEBUG 2024-06-11 14:59:30,079 - state.pc_initial: State(pc_initial=648 nstack_initial=3)
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=648, inst=STORE_FAST(arg=22, lineno=61)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$phi648.2']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=650, inst=LOAD_FAST(arg=2, lineno=63)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=652, inst=LOAD_FAST(arg=12, lineno=63)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=654, inst=LOAD_FAST(arg=22, lineno=63)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=656, inst=LOAD_FAST(arg=7, lineno=63)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=658, inst=BINARY_OP(arg=5, lineno=63)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5', '$index_step656.6']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=662, inst=BINARY_OP(arg=0, lineno=63)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$binop_mul658.7']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=666, inst=BINARY_SUBSCR(arg=None, lineno=63)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$binop_add662.8']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=676, inst=LOAD_FAST(arg=13, lineno=64)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=678, inst=LOAD_FAST(arg=3, lineno=64)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=680, inst=LOAD_FAST(arg=12, lineno=64)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=682, inst=LOAD_FAST(arg=22, lineno=64)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=684, inst=LOAD_FAST(arg=7, lineno=64)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=686, inst=BINARY_OP(arg=5, lineno=64)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13', '$index_step684.14']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=690, inst=BINARY_OP(arg=0, lineno=64)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$binop_mul686.15']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=694, inst=BINARY_SUBSCR(arg=None, lineno=64)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$binop_add690.16']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=704, inst=BINARY_OP(arg=5, lineno=64)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$694binary_subscr.17']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=708, inst=BINARY_OP(arg=0, lineno=63)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$binop_mul704.18']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=712, inst=STORE_FAST(arg=14, lineno=62)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$binop_add708.19']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=714, inst=LOAD_FAST(arg=6, lineno=66)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=716, inst=LOAD_FAST(arg=18, lineno=66)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$y714.20']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=718, inst=COPY(arg=2, lineno=66)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=720, inst=COPY(arg=2, lineno=66)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=722, inst=BINARY_SUBSCR(arg=None, lineno=66)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20', '$t716.21']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=732, inst=LOAD_FAST(arg=14, lineno=66)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=734, inst=LOAD_FAST(arg=0, lineno=66)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=736, inst=LOAD_FAST(arg=9, lineno=66)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=738, inst=LOAD_FAST(arg=22, lineno=66)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=740, inst=BINARY_OP(arg=0, lineno=66)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25', '$k738.26']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=744, inst=LOAD_CONST(arg=3, lineno=66)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=746, inst=BINARY_OP(arg=0, lineno=66)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27', '$const744.28']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=750, inst=BINARY_SUBSCR(arg=None, lineno=66)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add746.29']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=760, inst=BINARY_OP(arg=5, lineno=66)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$750binary_subscr.30']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=764, inst=BINARY_OP(arg=13, lineno=66)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$binop_mul760.31']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=768, inst=SWAP(arg=3, lineno=66)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$binop_iadd764.32']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=770, inst=SWAP(arg=2, lineno=66)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$t716.21', '$y714.20']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=772, inst=STORE_SUBSCR(arg=None, lineno=66)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$y714.20', '$t716.21']
DEBUG 2024-06-11 14:59:30,079 - dispatch pc=776, inst=JUMP_BACKWARD(arg=66, lineno=66)
DEBUG 2024-06-11 14:59:30,079 - stack ['$phi648.0', '$phi648.1']
DEBUG 2024-06-11 14:59:30,079 - end state. edges=[Edge(pc=646, stack=('$phi648.0', '$phi648.1'), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:59:30,079 - pending: deque([State(pc_initial=176 nstack_initial=1), State(pc_initial=646 nstack_initial=2)])
DEBUG 2024-06-11 14:59:30,079 - pending: deque([State(pc_initial=646 nstack_initial=2)])
DEBUG 2024-06-11 14:59:30,079 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 14:59:30,079 - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=1): set(),
             State(pc_initial=178 nstack_initial=1): {'$phi178.0'},
             State(pc_initial=180 nstack_initial=2): {'$phi180.1'},
             State(pc_initial=374 nstack_initial=2): {'$phi374.1'},
             State(pc_initial=376 nstack_initial=3): {'$phi376.2'},
             State(pc_initial=500 nstack_initial=1): set(),
             State(pc_initial=646 nstack_initial=2): {'$phi646.1'},
             State(pc_initial=648 nstack_initial=3): {'$phi648.2'},
             State(pc_initial=778 nstack_initial=1): set(),
             State(pc_initial=782 nstack_initial=0): set()})
DEBUG 2024-06-11 14:59:30,079 - defmap: {'$phi176.0': State(pc_initial=0 nstack_initial=0),
 '$phi180.1': State(pc_initial=178 nstack_initial=1),
 '$phi374.1': State(pc_initial=180 nstack_initial=2),
 '$phi376.2': State(pc_initial=374 nstack_initial=2),
 '$phi646.1': State(pc_initial=500 nstack_initial=1),
 '$phi648.2': State(pc_initial=646 nstack_initial=2)}
DEBUG 2024-06-11 14:59:30,079 - phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi778.0',
                            State(pc_initial=778 nstack_initial=1))},
             '$phi178.0': {('$phi176.0',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi180.0': {('$phi178.0',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$phi180.0',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.0',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.1',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi376.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.1': {('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi646.0': {('$phi500.0',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.0',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.1',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi648.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.1': {('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))}})
DEBUG 2024-06-11 14:59:30,079 - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi374.0',
                            State(pc_initial=374 nstack_initial=2)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
DEBUG 2024-06-11 14:59:30,079 - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
DEBUG 2024-06-11 14:59:30,079 - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
DEBUG 2024-06-11 14:59:30,079 - keep phismap: {'$phi178.0': {('$174get_iter.29', State(pc_initial=0 nstack_initial=0))},
 '$phi180.1': {('$178for_iter.2', State(pc_initial=178 nstack_initial=1))},
 '$phi374.1': {('$372get_iter.39', State(pc_initial=180 nstack_initial=2))},
 '$phi376.2': {('$374for_iter.3', State(pc_initial=374 nstack_initial=2))},
 '$phi646.1': {('$644get_iter.31', State(pc_initial=500 nstack_initial=1))},
 '$phi648.2': {('$646for_iter.3', State(pc_initial=646 nstack_initial=2))}}
DEBUG 2024-06-11 14:59:30,079 - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi178.0': '$174get_iter.29'},
             State(pc_initial=178 nstack_initial=1): {'$phi180.1': '$178for_iter.2'},
             State(pc_initial=180 nstack_initial=2): {'$phi374.1': '$372get_iter.39'},
             State(pc_initial=374 nstack_initial=2): {'$phi376.2': '$374for_iter.3'},
             State(pc_initial=500 nstack_initial=1): {'$phi646.1': '$644get_iter.31'},
             State(pc_initial=646 nstack_initial=2): {'$phi648.2': '$646for_iter.3'}})
DEBUG 2024-06-11 14:59:30,079 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 14:59:30,079 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$scale16.2'}), (18, {'res': '$num_table18.3'}), (20, {'op': '*', 'lhs': '$scale16.2', 'rhs': '$num_table18.3', 'res': '$binop_mul20.4'}), (22, {}), (24, {}), (26, {}), (28, {'func': '$4load_global.0', 'args': ['$binop_mul20.4'], 'kw_names': None, 'res': '$28call.5'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {'value': '$28call.5'}), (40, {'res': '$const40.6'}), (42, {'value': '$const40.6'}), (44, {'res': '$const44.7'}), (46, {'value': '$const44.7'}), (48, {'res': '$const48.8'}), (50, {'value': '$const48.8'}), (52, {'res': '$const52.9'}), (54, {'value': '$const52.9'}), (56, {'res': '$const56.10'}), (58, {'value': '$const56.10'}), (60, {'res': '$const60.11'}), (62, {'value': '$const60.11'}), (64, {'res': '$const64.12'}), (66, {'value': '$const64.12'}), (68, {'res': '$interp_win68.13'}), (70, {'item': '$interp_win68.13', 'res': '$70load_attr.14'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$const80.15'}), (82, {'index': '$const80.15', 'target': '$70load_attr.14', 'res': '$82binary_subscr.16'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82binary_subscr.16'}), (94, {'res': '$x94.17'}), (96, {'item': '$x94.17', 'res': '$96load_attr.18'}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {'res': '$const106.19'}), (108, {'index': '$const106.19', 'target': '$96load_attr.18', 'res': '$108binary_subscr.20'}), (110, {}), (112, {}), (114, {}), (116, {}), (118, {'value': '$108binary_subscr.20'}), (120, {'res': '$t_out120.21'}), (122, {'item': '$t_out120.21', 'res': '$122load_attr.22'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {'res': '$const132.23'}), (134, {'index': '$const132.23', 'target': '$122load_attr.22', 'res': '$134binary_subscr.24'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {'value': '$134binary_subscr.24'}), (146, {'idx': 2, 'res': '$146load_global.25'}), (148, {}), (150, {}), (152, {}), (154, {}), (156, {}), (158, {'res': '$n_out158.27'}), (160, {}), (162, {}), (164, {'func': '$146load_global.25', 'args': ['$n_out158.27'], 'kw_names': None, 'res': '$164call.28'}), (166, {}), (168, {}), (170, {}), (172, {}), (174, {'value': '$164call.28', 'res': '$174get_iter.29'})), outgoing_phis={'$phi178.0': '$174get_iter.29'}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$174get_iter.29',)})
DEBUG 2024-06-11 14:59:30,079 - block_infos State(pc_initial=176 nstack_initial=1):
AdaptBlockInfo(insts=((176, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={178: ('$phi176.0',)})
DEBUG 2024-06-11 14:59:30,079 - block_infos State(pc_initial=178 nstack_initial=1):
AdaptBlockInfo(insts=((178, {'iterator': '$phi178.0', 'pair': '$178for_iter.1', 'indval': '$178for_iter.2', 'pred': '$178for_iter.3'}),), outgoing_phis={'$phi180.1': '$178for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={782: (), 180: ('$phi178.0', '$178for_iter.2')})
DEBUG 2024-06-11 14:59:30,079 - block_infos State(pc_initial=180 nstack_initial=2):
AdaptBlockInfo(insts=((180, {'value': '$phi180.1'}), (182, {'res': '$t_out182.2'}), (184, {'res': '$t184.3'}), (186, {'index': '$t184.3', 'target': '$t_out182.2', 'res': '$186binary_subscr.4'}), (188, {}), (190, {}), (192, {}), (194, {}), (196, {'value': '$186binary_subscr.4'}), (198, {'idx': 0, 'res': '$198load_global.5'}), (200, {}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'res': '$time_register210.7'}), (212, {}), (214, {}), (216, {'func': '$198load_global.5', 'args': ['$time_register210.7'], 'kw_names': None, 'res': '$216call.8'}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {'value': '$216call.8'}), (228, {'res': '$scale228.9'}), (230, {'res': '$time_register230.10'}), (232, {'res': '$n232.11'}), (234, {'op': '-', 'lhs': '$time_register230.10', 'rhs': '$n232.11', 'res': '$binop_sub234.12'}), (236, {}), (238, {'op': '*', 'lhs': '$scale228.9', 'rhs': '$binop_sub234.12', 'res': '$binop_mul238.13'}), (240, {}), (242, {'value': '$binop_mul238.13'}), (244, {'res': '$frac244.14'}), (246, {'res': '$num_table246.15'}), (248, {'op': '*', 'lhs': '$frac244.14', 'rhs': '$num_table246.15', 'res': '$binop_mul248.16'}), (250, {}), (252, {'value': '$binop_mul248.16'}), (254, {'idx': 0, 'res': '$254load_global.17'}), (256, {}), (258, {}), (260, {}), (262, {}), (264, {}), (266, {'res': '$index_frac266.19'}), (268, {}), (270, {}), (272, {'func': '$254load_global.17', 'args': ['$index_frac266.19'], 'kw_names': None, 'res': '$272call.20'}), (274, {}), (276, {}), (278, {}), (280, {}), (282, {'value': '$272call.20'}), (284, {'res': '$index_frac284.21'}), (286, {'res': '$offset286.22'}), (288, {'op': '-', 'lhs': '$index_frac284.21', 'rhs': '$offset286.22', 'res': '$binop_sub288.23'}), (290, {}), (292, {'value': '$binop_sub288.23'}), (294, {'idx': 3, 'res': '$294load_global.24'}), (296, {}), (298, {}), (300, {}), (302, {}), (304, {}), (306, {'res': '$n306.26'}), (308, {'res': '$const308.27'}), (310, {'op': '+', 'lhs': '$n306.26', 'rhs': '$const308.27', 'res': '$binop_add310.28'}), (312, {}), (314, {'res': '$nwin314.29'}), (316, {'res': '$offset316.30'}), (318, {'op': '-', 'lhs': '$nwin314.29', 'rhs': '$offset316.30', 'res': '$binop_sub318.31'}), (320, {}), (322, {'res': '$index_step322.32'}), (324, {'op': '//', 'lhs': '$binop_sub318.31', 'rhs': '$index_step322.32', 'res': '$binop_floordiv324.33'}), (326, {}), (328, {}), (330, {}), (332, {'func': '$294load_global.24', 'args': ['$binop_add310.28', '$binop_floordiv324.33'], 'kw_names': None, 'res': '$332call.34'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'value': '$332call.34'}), (344, {'idx': 4, 'res': '$344load_global.35'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {}), (356, {'res': '$i_max356.37'}), (358, {}), (360, {}), (362, {'func': '$344load_global.35', 'args': ['$i_max356.37'], 'kw_names': None, 'res': '$362call.38'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {'value': '$362call.38', 'res': '$372get_iter.39'})), outgoing_phis={'$phi374.1': '$372get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi180.0', '$372get_iter.39')})
DEBUG 2024-06-11 14:59:30,079 - block_infos State(pc_initial=374 nstack_initial=2):
AdaptBlockInfo(insts=((374, {'iterator': '$phi374.1', 'pair': '$374for_iter.2', 'indval': '$374for_iter.3', 'pred': '$374for_iter.4'}),), outgoing_phis={'$phi376.2': '$374for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={500: ('$phi374.0',), 376: ('$phi374.0', '$phi374.1', '$374for_iter.3')})
DEBUG 2024-06-11 14:59:30,079 - block_infos State(pc_initial=376 nstack_initial=3):
AdaptBlockInfo(insts=((376, {'value': '$phi376.2'}), (378, {'res': '$interp_win378.3'}), (380, {'res': '$offset380.4'}), (382, {'res': '$i382.5'}), (384, {'res': '$index_step384.6'}), (386, {'op': '*', 'lhs': '$i382.5', 'rhs': '$index_step384.6', 'res': '$binop_mul386.7'}), (388, {}), (390, {'op': '+', 'lhs': '$offset380.4', 'rhs': '$binop_mul386.7', 'res': '$binop_add390.8'}), (392, {}), (394, {'index': '$binop_add390.8', 'target': '$interp_win378.3', 'res': '$394binary_subscr.9'}), (396, {}), (398, {}), (400, {}), (402, {}), (404, {'res': '$eta404.10'}), (406, {'res': '$interp_delta406.11'}), (408, {'res': '$offset408.12'}), (410, {'res': '$i410.13'}), (412, {'res': '$index_step412.14'}), (414, {'op': '*', 'lhs': '$i410.13', 'rhs': '$index_step412.14', 'res': '$binop_mul414.15'}), (416, {}), (418, {'op': '+', 'lhs': '$offset408.12', 'rhs': '$binop_mul414.15', 'res': '$binop_add418.16'}), (420, {}), (422, {'index': '$binop_add418.16', 'target': '$interp_delta406.11', 'res': '$422binary_subscr.17'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {'op': '*', 'lhs': '$eta404.10', 'rhs': '$422binary_subscr.17', 'res': '$binop_mul432.18'}), (434, {}), (436, {'op': '+', 'lhs': '$394binary_subscr.9', 'rhs': '$binop_mul432.18', 'res': '$binop_add436.19'}), (438, {}), (440, {'value': '$binop_add436.19'}), (442, {'res': '$y442.20'}), (444, {'res': '$t444.21'}), (450, {'index': '$t444.21', 'target': '$y442.20', 'res': '$450binary_subscr.22'}), (452, {}), (454, {}), (456, {}), (458, {}), (460, {'res': '$weight460.23'}), (462, {'res': '$x462.24'}), (464, {'res': '$n464.25'}), (466, {'res': '$i466.26'}), (468, {'op': '-', 'lhs': '$n464.25', 'rhs': '$i466.26', 'res': '$binop_sub468.27'}), (470, {}), (472, {'index': '$binop_sub468.27', 'target': '$x462.24', 'res': '$472binary_subscr.28'}), (474, {}), (476, {}), (478, {}), (480, {}), (482, {'op': '*', 'lhs': '$weight460.23', 'rhs': '$472binary_subscr.28', 'res': '$binop_mul482.29'}), (484, {}), (486, {'op': '+=', 'lhs': '$450binary_subscr.22', 'rhs': '$binop_mul482.29', 'res': '$binop_iadd486.30'}), (488, {}), (494, {'target': '$y442.20', 'index': '$t444.21', 'value': '$binop_iadd486.30'}), (496, {}), (498, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi376.0', '$phi376.1')})
DEBUG 2024-06-11 14:59:30,079 - block_infos State(pc_initial=500 nstack_initial=1):
AdaptBlockInfo(insts=((500, {'res': '$scale500.1'}), (502, {'res': '$frac502.2'}), (504, {'op': '-', 'lhs': '$scale500.1', 'rhs': '$frac502.2', 'res': '$binop_sub504.3'}), (506, {}), (508, {'value': '$binop_sub504.3'}), (510, {'res': '$frac510.4'}), (512, {'res': '$num_table512.5'}), (514, {'op': '*', 'lhs': '$frac510.4', 'rhs': '$num_table512.5', 'res': '$binop_mul514.6'}), (516, {}), (518, {'value': '$binop_mul514.6'}), (520, {'idx': 0, 'res': '$520load_global.7'}), (522, {}), (524, {}), (526, {}), (528, {}), (530, {}), (532, {'res': '$index_frac532.9'}), (534, {}), (536, {}), (538, {'func': '$520load_global.7', 'args': ['$index_frac532.9'], 'kw_names': None, 'res': '$538call.10'}), (540, {}), (542, {}), (544, {}), (546, {}), (548, {'value': '$538call.10'}), (550, {'res': '$index_frac550.11'}), (552, {'res': '$offset552.12'}), (554, {'op': '-', 'lhs': '$index_frac550.11', 'rhs': '$offset552.12', 'res': '$binop_sub554.13'}), (556, {}), (558, {'value': '$binop_sub554.13'}), (560, {'idx': 3, 'res': '$560load_global.14'}), (562, {}), (564, {}), (566, {}), (568, {}), (570, {}), (572, {'res': '$n_orig572.16'}), (574, {'res': '$n574.17'}), (576, {'op': '-', 'lhs': '$n_orig572.16', 'rhs': '$n574.17', 'res': '$binop_sub576.18'}), (578, {}), (580, {'res': '$const580.19'}), (582, {'op': '-', 'lhs': '$binop_sub576.18', 'rhs': '$const580.19', 'res': '$binop_sub582.20'}), (584, {}), (586, {'res': '$nwin586.21'}), (588, {'res': '$offset588.22'}), (590, {'op': '-', 'lhs': '$nwin586.21', 'rhs': '$offset588.22', 'res': '$binop_sub590.23'}), (592, {}), (594, {'res': '$index_step594.24'}), (596, {'op': '//', 'lhs': '$binop_sub590.23', 'rhs': '$index_step594.24', 'res': '$binop_floordiv596.25'}), (598, {}), (600, {}), (602, {}), (604, {'func': '$560load_global.14', 'args': ['$binop_sub582.20', '$binop_floordiv596.25'], 'kw_names': None, 'res': '$604call.26'}), (606, {}), (608, {}), (610, {}), (612, {}), (614, {'value': '$604call.26'}), (616, {'idx': 4, 'res': '$616load_global.27'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {}), (628, {'res': '$k_max628.29'}), (630, {}), (632, {}), (634, {'func': '$616load_global.27', 'args': ['$k_max628.29'], 'kw_names': None, 'res': '$634call.30'}), (636, {}), (638, {}), (640, {}), (642, {}), (644, {'value': '$634call.30', 'res': '$644get_iter.31'})), outgoing_phis={'$phi646.1': '$644get_iter.31'}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi500.0', '$644get_iter.31')})
DEBUG 2024-06-11 14:59:30,079 - block_infos State(pc_initial=646 nstack_initial=2):
AdaptBlockInfo(insts=((646, {'iterator': '$phi646.1', 'pair': '$646for_iter.2', 'indval': '$646for_iter.3', 'pred': '$646for_iter.4'}),), outgoing_phis={'$phi648.2': '$646for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={778: ('$phi646.0',), 648: ('$phi646.0', '$phi646.1', '$646for_iter.3')})
DEBUG 2024-06-11 14:59:30,079 - block_infos State(pc_initial=648 nstack_initial=3):
AdaptBlockInfo(insts=((648, {'value': '$phi648.2'}), (650, {'res': '$interp_win650.3'}), (652, {'res': '$offset652.4'}), (654, {'res': '$k654.5'}), (656, {'res': '$index_step656.6'}), (658, {'op': '*', 'lhs': '$k654.5', 'rhs': '$index_step656.6', 'res': '$binop_mul658.7'}), (660, {}), (662, {'op': '+', 'lhs': '$offset652.4', 'rhs': '$binop_mul658.7', 'res': '$binop_add662.8'}), (664, {}), (666, {'index': '$binop_add662.8', 'target': '$interp_win650.3', 'res': '$666binary_subscr.9'}), (668, {}), (670, {}), (672, {}), (674, {}), (676, {'res': '$eta676.10'}), (678, {'res': '$interp_delta678.11'}), (680, {'res': '$offset680.12'}), (682, {'res': '$k682.13'}), (684, {'res': '$index_step684.14'}), (686, {'op': '*', 'lhs': '$k682.13', 'rhs': '$index_step684.14', 'res': '$binop_mul686.15'}), (688, {}), (690, {'op': '+', 'lhs': '$offset680.12', 'rhs': '$binop_mul686.15', 'res': '$binop_add690.16'}), (692, {}), (694, {'index': '$binop_add690.16', 'target': '$interp_delta678.11', 'res': '$694binary_subscr.17'}), (696, {}), (698, {}), (700, {}), (702, {}), (704, {'op': '*', 'lhs': '$eta676.10', 'rhs': '$694binary_subscr.17', 'res': '$binop_mul704.18'}), (706, {}), (708, {'op': '+', 'lhs': '$666binary_subscr.9', 'rhs': '$binop_mul704.18', 'res': '$binop_add708.19'}), (710, {}), (712, {'value': '$binop_add708.19'}), (714, {'res': '$y714.20'}), (716, {'res': '$t716.21'}), (722, {'index': '$t716.21', 'target': '$y714.20', 'res': '$722binary_subscr.22'}), (724, {}), (726, {}), (728, {}), (730, {}), (732, {'res': '$weight732.23'}), (734, {'res': '$x734.24'}), (736, {'res': '$n736.25'}), (738, {'res': '$k738.26'}), (740, {'op': '+', 'lhs': '$n736.25', 'rhs': '$k738.26', 'res': '$binop_add740.27'}), (742, {}), (744, {'res': '$const744.28'}), (746, {'op': '+', 'lhs': '$binop_add740.27', 'rhs': '$const744.28', 'res': '$binop_add746.29'}), (748, {}), (750, {'index': '$binop_add746.29', 'target': '$x734.24', 'res': '$750binary_subscr.30'}), (752, {}), (754, {}), (756, {}), (758, {}), (760, {'op': '*', 'lhs': '$weight732.23', 'rhs': '$750binary_subscr.30', 'res': '$binop_mul760.31'}), (762, {}), (764, {'op': '+=', 'lhs': '$722binary_subscr.22', 'rhs': '$binop_mul760.31', 'res': '$binop_iadd764.32'}), (766, {}), (772, {'target': '$y714.20', 'index': '$t716.21', 'value': '$binop_iadd764.32'}), (774, {}), (776, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi648.0', '$phi648.1')})
DEBUG 2024-06-11 14:59:30,079 - block_infos State(pc_initial=778 nstack_initial=1):
AdaptBlockInfo(insts=((778, {}), (780, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$phi778.0',)})
DEBUG 2024-06-11 14:59:30,079 - block_infos State(pc_initial=782 nstack_initial=0):
AdaptBlockInfo(insts=((782, {'res': '$const782.0'}), (784, {'retval': '$const782.0', 'castval': '$784return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 14:59:30,090 - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(int: <class 'int'>) ['$4load_global.0']
    $binop_mul20.4 = scale * num_table       ['$binop_mul20.4', 'num_table', 'scale']
    index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_global.0', '$binop_mul20.4', 'index_step']
    time_register = const(float, 0.0)        ['time_register']
    n = const(int, 0)                        ['n']
    frac = const(float, 0.0)                 ['frac']
    index_frac = const(float, 0.0)           ['index_frac']
    offset = const(int, 0)                   ['offset']
    eta = const(float, 0.0)                  ['eta']
    weight = const(float, 0.0)               ['weight']
    $70load_attr.14 = getattr(value=interp_win, attr=shape) ['$70load_attr.14', 'interp_win']
    $const80.15 = const(int, 0)              ['$const80.15']
    nwin = getitem(value=$70load_attr.14, index=$const80.15, fn=<built-in function getitem>) ['$70load_attr.14', '$const80.15', 'nwin']
    $96load_attr.18 = getattr(value=x, attr=shape) ['$96load_attr.18', 'x']
    $const106.19 = const(int, 0)             ['$const106.19']
    n_orig = getitem(value=$96load_attr.18, index=$const106.19, fn=<built-in function getitem>) ['$96load_attr.18', '$const106.19', 'n_orig']
    $122load_attr.22 = getattr(value=t_out, attr=shape) ['$122load_attr.22', 't_out']
    $const132.23 = const(int, 0)             ['$const132.23']
    n_out = getitem(value=$122load_attr.22, index=$const132.23, fn=<built-in function getitem>) ['$122load_attr.22', '$const132.23', 'n_out']
    $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>) ['$146load_global.25']
    $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None) ['$146load_global.25', '$164call.28', 'n_out']
    $174get_iter.29 = getiter(value=$164call.28) ['$164call.28', '$174get_iter.29']
    $phi178.0 = $174get_iter.29              ['$174get_iter.29', '$phi178.0']
    jump 176                                 []
label 176:
    jump 178                                 []
label 178:
    $178for_iter.1 = iternext(value=$phi178.0) ['$178for_iter.1', '$phi178.0']
    $178for_iter.2 = pair_first(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.2']
    $178for_iter.3 = pair_second(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.3']
    $phi180.1 = $178for_iter.2               ['$178for_iter.2', '$phi180.1']
    branch $178for_iter.3, 180, 782          ['$178for_iter.3']
label 180:
    t = $phi180.1                            ['$phi180.1', 't']
    time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>) ['t', 't_out', 'time_register']
    $198load_global.5 = global(int: <class 'int'>) ['$198load_global.5']
    n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None) ['$198load_global.5', 'n', 'time_register']
    $binop_sub234.12 = time_register - n     ['$binop_sub234.12', 'n', 'time_register']
    frac = scale * $binop_sub234.12          ['$binop_sub234.12', 'frac', 'scale']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $254load_global.17 = global(int: <class 'int'>) ['$254load_global.17']
    offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$254load_global.17', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $294load_global.24 = global(min: <built-in function min>) ['$294load_global.24']
    $const308.27 = const(int, 1)             ['$const308.27']
    $binop_add310.28 = n + $const308.27      ['$binop_add310.28', '$const308.27', 'n']
    $binop_sub318.31 = nwin - offset         ['$binop_sub318.31', 'nwin', 'offset']
    $binop_floordiv324.33 = $binop_sub318.31 // index_step ['$binop_floordiv324.33', '$binop_sub318.31', 'index_step']
    i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33', 'i_max']
    $344load_global.35 = global(range: <class 'range'>) ['$344load_global.35']
    $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$344load_global.35', '$362call.38', 'i_max']
    $372get_iter.39 = getiter(value=$362call.38) ['$362call.38', '$372get_iter.39']
    $phi374.1 = $372get_iter.39              ['$372get_iter.39', '$phi374.1']
    jump 374                                 []
label 374:
    $374for_iter.2 = iternext(value=$phi374.1) ['$374for_iter.2', '$phi374.1']
    $374for_iter.3 = pair_first(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.3']
    $374for_iter.4 = pair_second(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.4']
    $phi376.2 = $374for_iter.3               ['$374for_iter.3', '$phi376.2']
    branch $374for_iter.4, 376, 500          ['$374for_iter.4']
label 376:
    i = $phi376.2                            ['$phi376.2', 'i']
    $binop_mul386.7 = i * index_step         ['$binop_mul386.7', 'i', 'index_step']
    $binop_add390.8 = offset + $binop_mul386.7 ['$binop_add390.8', '$binop_mul386.7', 'offset']
    $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>) ['$394binary_subscr.9', '$binop_add390.8', 'interp_win']
    $binop_mul414.15 = i * index_step        ['$binop_mul414.15', 'i', 'index_step']
    $binop_add418.16 = offset + $binop_mul414.15 ['$binop_add418.16', '$binop_mul414.15', 'offset']
    $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>) ['$422binary_subscr.17', '$binop_add418.16', 'interp_delta']
    $binop_mul432.18 = eta * $422binary_subscr.17 ['$422binary_subscr.17', '$binop_mul432.18', 'eta']
    weight = $394binary_subscr.9 + $binop_mul432.18 ['$394binary_subscr.9', '$binop_mul432.18', 'weight']
    $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$450binary_subscr.22', 't', 'y']
    $binop_sub468.27 = n - i                 ['$binop_sub468.27', 'i', 'n']
    $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>) ['$472binary_subscr.28', '$binop_sub468.27', 'x']
    $binop_mul482.29 = weight * $472binary_subscr.28 ['$472binary_subscr.28', '$binop_mul482.29', 'weight']
    $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined) ['$450binary_subscr.22', '$binop_iadd486.30', '$binop_mul482.29']
    y[t] = $binop_iadd486.30                 ['$binop_iadd486.30', 't', 'y']
    jump 374                                 []
label 500:
    $binop_sub504.3 = scale - frac           ['$binop_sub504.3', 'frac', 'scale']
    frac = $binop_sub504.3                   ['$binop_sub504.3', 'frac']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $520load_global.7 = global(int: <class 'int'>) ['$520load_global.7']
    offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$520load_global.7', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $560load_global.14 = global(min: <built-in function min>) ['$560load_global.14']
    $binop_sub576.18 = n_orig - n            ['$binop_sub576.18', 'n', 'n_orig']
    $const580.19 = const(int, 1)             ['$const580.19']
    $binop_sub582.20 = $binop_sub576.18 - $const580.19 ['$binop_sub576.18', '$binop_sub582.20', '$const580.19']
    $binop_sub590.23 = nwin - offset         ['$binop_sub590.23', 'nwin', 'offset']
    $binop_floordiv596.25 = $binop_sub590.23 // index_step ['$binop_floordiv596.25', '$binop_sub590.23', 'index_step']
    k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$560load_global.14', '$binop_floordiv596.25', '$binop_sub582.20', 'k_max']
    $616load_global.27 = global(range: <class 'range'>) ['$616load_global.27']
    $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$616load_global.27', '$634call.30', 'k_max']
    $644get_iter.31 = getiter(value=$634call.30) ['$634call.30', '$644get_iter.31']
    $phi646.1 = $644get_iter.31              ['$644get_iter.31', '$phi646.1']
    jump 646                                 []
label 646:
    $646for_iter.2 = iternext(value=$phi646.1) ['$646for_iter.2', '$phi646.1']
    $646for_iter.3 = pair_first(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.3']
    $646for_iter.4 = pair_second(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.4']
    $phi648.2 = $646for_iter.3               ['$646for_iter.3', '$phi648.2']
    branch $646for_iter.4, 648, 778          ['$646for_iter.4']
label 648:
    k = $phi648.2                            ['$phi648.2', 'k']
    $binop_mul658.7 = k * index_step         ['$binop_mul658.7', 'index_step', 'k']
    $binop_add662.8 = offset + $binop_mul658.7 ['$binop_add662.8', '$binop_mul658.7', 'offset']
    $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>) ['$666binary_subscr.9', '$binop_add662.8', 'interp_win']
    $binop_mul686.15 = k * index_step        ['$binop_mul686.15', 'index_step', 'k']
    $binop_add690.16 = offset + $binop_mul686.15 ['$binop_add690.16', '$binop_mul686.15', 'offset']
    $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>) ['$694binary_subscr.17', '$binop_add690.16', 'interp_delta']
    $binop_mul704.18 = eta * $694binary_subscr.17 ['$694binary_subscr.17', '$binop_mul704.18', 'eta']
    weight = $666binary_subscr.9 + $binop_mul704.18 ['$666binary_subscr.9', '$binop_mul704.18', 'weight']
    $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$722binary_subscr.22', 't', 'y']
    $binop_add740.27 = n + k                 ['$binop_add740.27', 'k', 'n']
    $const744.28 = const(int, 1)             ['$const744.28']
    $binop_add746.29 = $binop_add740.27 + $const744.28 ['$binop_add740.27', '$binop_add746.29', '$const744.28']
    $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>) ['$750binary_subscr.30', '$binop_add746.29', 'x']
    $binop_mul760.31 = weight * $750binary_subscr.30 ['$750binary_subscr.30', '$binop_mul760.31', 'weight']
    $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined) ['$722binary_subscr.22', '$binop_iadd764.32', '$binop_mul760.31']
    y[t] = $binop_iadd764.32                 ['$binop_iadd764.32', 't', 'y']
    jump 646                                 []
label 778:
    jump 176                                 []
label 782:
    $const782.0 = const(NoneType, None)      ['$const782.0']
    $784return_value.1 = cast(value=$const782.0) ['$784return_value.1', '$const782.0']
    return $784return_value.1                ['$784return_value.1']

DEBUG 2024-06-11 14:59:30,111 - ==== SSA block analysis pass on 0
DEBUG 2024-06-11 14:59:30,111 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000027CEC0DDE10>
DEBUG 2024-06-11 14:59:30,111 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:59:30,111 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:59:30,111 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:59:30,111 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:59:30,111 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:59:30,111 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:59:30,111 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:59:30,111 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,111 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,111 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:59:30,111 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,111 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,111 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:59:30,111 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,111 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:59:30,111 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:59:30,111 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:59:30,111 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:59:30,111 - on stmt: jump 176
DEBUG 2024-06-11 14:59:30,111 - ==== SSA block analysis pass on 176
DEBUG 2024-06-11 14:59:30,111 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000027CEC0DDE10>
DEBUG 2024-06-11 14:59:30,111 - on stmt: jump 178
DEBUG 2024-06-11 14:59:30,111 - ==== SSA block analysis pass on 178
DEBUG 2024-06-11 14:59:30,111 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000027CEC0DDE10>
DEBUG 2024-06-11 14:59:30,111 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:59:30,111 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:59:30,111 - ==== SSA block analysis pass on 180
DEBUG 2024-06-11 14:59:30,111 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000027CEC0DDE10>
DEBUG 2024-06-11 14:59:30,111 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:59:30,111 - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,111 - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $binop_sub234.12 = time_register - n
DEBUG 2024-06-11 14:59:30,111 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 14:59:30,111 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:59:30,111 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,111 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,111 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:59:30,111 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 14:59:30,111 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:59:30,111 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:59:30,111 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:59:30,111 - on stmt: jump 374
DEBUG 2024-06-11 14:59:30,111 - ==== SSA block analysis pass on 374
DEBUG 2024-06-11 14:59:30,111 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000027CEC0DDE10>
DEBUG 2024-06-11 14:59:30,111 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:59:30,111 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:59:30,111 - ==== SSA block analysis pass on 376
DEBUG 2024-06-11 14:59:30,111 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000027CEC0DDE10>
DEBUG 2024-06-11 14:59:30,111 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:59:30,111 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:59:30,111 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:59:30,111 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:59:30,111 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:59:30,111 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:59:30,111 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:59:30,111 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $binop_sub468.27 = n - i
DEBUG 2024-06-11 14:59:30,111 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:59:30,111 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:59:30,111 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:59:30,111 - on stmt: jump 374
DEBUG 2024-06-11 14:59:30,111 - ==== SSA block analysis pass on 500
DEBUG 2024-06-11 14:59:30,111 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000027CEC0DDE10>
DEBUG 2024-06-11 14:59:30,111 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 14:59:30,111 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 14:59:30,111 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:59:30,111 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,111 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,111 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:59:30,111 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 14:59:30,111 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:59:30,111 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:59:30,111 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:59:30,111 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:59:30,111 - on stmt: jump 646
DEBUG 2024-06-11 14:59:30,111 - ==== SSA block analysis pass on 646
DEBUG 2024-06-11 14:59:30,111 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000027CEC0DDE10>
DEBUG 2024-06-11 14:59:30,111 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:59:30,111 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:59:30,111 - ==== SSA block analysis pass on 648
DEBUG 2024-06-11 14:59:30,111 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000027CEC0DDE10>
DEBUG 2024-06-11 14:59:30,111 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:59:30,111 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:59:30,111 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:59:30,111 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:59:30,111 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:59:30,111 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:59:30,111 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:59:30,111 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $binop_add740.27 = n + k
DEBUG 2024-06-11 14:59:30,111 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:59:30,111 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:59:30,111 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:59:30,111 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:59:30,111 - on stmt: jump 646
DEBUG 2024-06-11 14:59:30,111 - ==== SSA block analysis pass on 778
DEBUG 2024-06-11 14:59:30,111 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000027CEC0DDE10>
DEBUG 2024-06-11 14:59:30,111 - on stmt: jump 176
DEBUG 2024-06-11 14:59:30,111 - ==== SSA block analysis pass on 782
DEBUG 2024-06-11 14:59:30,111 - Running <numba.core.ssa._GatherDefsHandler object at 0x0000027CEC0DDE10>
DEBUG 2024-06-11 14:59:30,111 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:59:30,111 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:59:30,111 - defs defaultdict(<class 'list'>,
            {'$122load_attr.22': [(<numba.core.ir.Assign object at 0x0000027CEC0AC750>,
                                   0)],
             '$146load_global.25': [(<numba.core.ir.Assign object at 0x0000027CEC0A34D0>,
                                     0)],
             '$164call.28': [(<numba.core.ir.Assign object at 0x0000027CEC0A3F50>,
                              0)],
             '$174get_iter.29': [(<numba.core.ir.Assign object at 0x0000027CEC0A3910>,
                                  0)],
             '$178for_iter.1': [(<numba.core.ir.Assign object at 0x0000027CEC0A3590>,
                                 178)],
             '$178for_iter.2': [(<numba.core.ir.Assign object at 0x0000027CEC0A3290>,
                                 178)],
             '$178for_iter.3': [(<numba.core.ir.Assign object at 0x0000027CEC0A2E50>,
                                 178)],
             '$198load_global.5': [(<numba.core.ir.Assign object at 0x0000027CEC0A2910>,
                                    180)],
             '$254load_global.17': [(<numba.core.ir.Assign object at 0x0000027CEC0A0FD0>,
                                     180)],
             '$294load_global.24': [(<numba.core.ir.Assign object at 0x0000027CEC0B3950>,
                                     180)],
             '$344load_global.35': [(<numba.core.ir.Assign object at 0x0000027CEC0B1950>,
                                     180)],
             '$362call.38': [(<numba.core.ir.Assign object at 0x0000027CEC0B1310>,
                              180)],
             '$372get_iter.39': [(<numba.core.ir.Assign object at 0x0000027CEC0B2510>,
                                  180)],
             '$374for_iter.2': [(<numba.core.ir.Assign object at 0x0000027CEC0A1B10>,
                                 374)],
             '$374for_iter.3': [(<numba.core.ir.Assign object at 0x0000027CEC0A0050>,
                                 374)],
             '$374for_iter.4': [(<numba.core.ir.Assign object at 0x0000027CEC0A13D0>,
                                 374)],
             '$394binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000027CEC0B08D0>,
                                      376)],
             '$422binary_subscr.17': [(<numba.core.ir.Assign object at 0x0000027CEC0B21D0>,
                                       376)],
             '$450binary_subscr.22': [(<numba.core.ir.Assign object at 0x0000027CEC097890>,
                                       376)],
             '$472binary_subscr.28': [(<numba.core.ir.Assign object at 0x0000027CEC097610>,
                                       376)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000027CEC102E50>,
                                  0)],
             '$520load_global.7': [(<numba.core.ir.Assign object at 0x0000027CEC0BC310>,
                                    500)],
             '$560load_global.14': [(<numba.core.ir.Assign object at 0x0000027CEC0BE890>,
                                     500)],
             '$616load_global.27': [(<numba.core.ir.Assign object at 0x0000027CEC0BE090>,
                                     500)],
             '$634call.30': [(<numba.core.ir.Assign object at 0x0000027CEC0BD0D0>,
                              500)],
             '$644get_iter.31': [(<numba.core.ir.Assign object at 0x0000027CEC0BC2D0>,
                                  500)],
             '$646for_iter.2': [(<numba.core.ir.Assign object at 0x0000027CEC0BE3D0>,
                                 646)],
             '$646for_iter.3': [(<numba.core.ir.Assign object at 0x0000027CEC0BDED0>,
                                 646)],
             '$646for_iter.4': [(<numba.core.ir.Assign object at 0x0000027CEC0BD990>,
                                 646)],
             '$666binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000027CEC0B7350>,
                                      648)],
             '$694binary_subscr.17': [(<numba.core.ir.Assign object at 0x0000027CEC0B5C90>,
                                       648)],
             '$70load_attr.14': [(<numba.core.ir.Assign object at 0x0000027CEC0ACA90>,
                                  0)],
             '$722binary_subscr.22': [(<numba.core.ir.Assign object at 0x0000027CEC0B4450>,
                                       648)],
             '$750binary_subscr.30': [(<numba.core.ir.Assign object at 0x0000027CEC0B6350>,
                                       648)],
             '$784return_value.1': [(<numba.core.ir.Assign object at 0x0000027CEC0B5050>,
                                     782)],
             '$96load_attr.18': [(<numba.core.ir.Assign object at 0x0000027CEC0AC910>,
                                  0)],
             '$binop_add310.28': [(<numba.core.ir.Assign object at 0x0000027CEC0B3350>,
                                   180)],
             '$binop_add390.8': [(<numba.core.ir.Assign object at 0x0000027CEC0B0690>,
                                  376)],
             '$binop_add418.16': [(<numba.core.ir.Assign object at 0x0000027CEC0B1510>,
                                   376)],
             '$binop_add662.8': [(<numba.core.ir.Assign object at 0x0000027CEC0B7950>,
                                  648)],
             '$binop_add690.16': [(<numba.core.ir.Assign object at 0x0000027CEC0B5E90>,
                                   648)],
             '$binop_add740.27': [(<numba.core.ir.Assign object at 0x0000027CEC0B4150>,
                                   648)],
             '$binop_add746.29': [(<numba.core.ir.Assign object at 0x0000027CEC0B4B10>,
                                   648)],
             '$binop_floordiv324.33': [(<numba.core.ir.Assign object at 0x0000027CEC0B1CD0>,
                                        180)],
             '$binop_floordiv596.25': [(<numba.core.ir.Assign object at 0x0000027CEC0BCE90>,
                                        500)],
             '$binop_iadd486.30': [(<numba.core.ir.Assign object at 0x0000027CEC0BF390>,
                                    376)],
             '$binop_iadd764.32': [(<numba.core.ir.Assign object at 0x0000027CEC0B65D0>,
                                    648)],
             '$binop_mul20.4': [(<numba.core.ir.Assign object at 0x0000027CEC0AFED0>,
                                 0)],
             '$binop_mul386.7': [(<numba.core.ir.Assign object at 0x0000027CEC0B0DD0>,
                                  376)],
             '$binop_mul414.15': [(<numba.core.ir.Assign object at 0x0000027CEC0B3E90>,
                                   376)],
             '$binop_mul432.18': [(<numba.core.ir.Assign object at 0x0000027CEC097B90>,
                                   376)],
             '$binop_mul482.29': [(<numba.core.ir.Assign object at 0x0000027CEC0BFA90>,
                                   376)],
             '$binop_mul658.7': [(<numba.core.ir.Assign object at 0x0000027CEC0B7B90>,
                                  648)],
             '$binop_mul686.15': [(<numba.core.ir.Assign object at 0x0000027CEC0B6010>,
                                   648)],
             '$binop_mul704.18': [(<numba.core.ir.Assign object at 0x0000027CEC0B5910>,
                                   648)],
             '$binop_mul760.31': [(<numba.core.ir.Assign object at 0x0000027CEC0B6410>,
                                   648)],
             '$binop_sub234.12': [(<numba.core.ir.Assign object at 0x0000027CEC0A0BD0>,
                                   180)],
             '$binop_sub318.31': [(<numba.core.ir.Assign object at 0x0000027CEC0B11D0>,
                                   180)],
             '$binop_sub468.27': [(<numba.core.ir.Assign object at 0x0000027CEC0969D0>,
                                   376)],
             '$binop_sub504.3': [(<numba.core.ir.Assign object at 0x0000027CEC0B05D0>,
                                  500)],
             '$binop_sub576.18': [(<numba.core.ir.Assign object at 0x0000027CEC0BED10>,
                                   500)],
             '$binop_sub582.20': [(<numba.core.ir.Assign object at 0x0000027CEC0BD9D0>,
                                   500)],
             '$binop_sub590.23': [(<numba.core.ir.Assign object at 0x0000027CEC0BD4D0>,
                                   500)],
             '$const106.19': [(<numba.core.ir.Assign object at 0x0000027CEC0ACC10>,
                               0)],
             '$const132.23': [(<numba.core.ir.Assign object at 0x0000027CEC0AE510>,
                               0)],
             '$const308.27': [(<numba.core.ir.Assign object at 0x0000027CEC0B3590>,
                               180)],
             '$const580.19': [(<numba.core.ir.Assign object at 0x0000027CEC0BDB50>,
                               500)],
             '$const744.28': [(<numba.core.ir.Assign object at 0x0000027CEC0B4810>,
                               648)],
             '$const782.0': [(<numba.core.ir.Assign object at 0x0000027CEC0B5610>,
                              782)],
             '$const80.15': [(<numba.core.ir.Assign object at 0x0000027CEC0AD8D0>,
                              0)],
             '$phi178.0': [(<numba.core.ir.Assign object at 0x0000027CEC0DEA50>,
                            0)],
             '$phi180.1': [(<numba.core.ir.Assign object at 0x0000027CEC0DDAD0>,
                            178)],
             '$phi374.1': [(<numba.core.ir.Assign object at 0x0000027CEC0D26D0>,
                            180)],
             '$phi376.2': [(<numba.core.ir.Assign object at 0x0000027CEC0A3790>,
                            374)],
             '$phi646.1': [(<numba.core.ir.Assign object at 0x0000027CEC0B1E50>,
                            500)],
             '$phi648.2': [(<numba.core.ir.Assign object at 0x0000027CEC0BC050>,
                            646)],
             'eta': [(<numba.core.ir.Assign object at 0x0000027CEC0AD510>, 0),
                     (<numba.core.ir.Assign object at 0x0000027CEC0B3AD0>, 180),
                     (<numba.core.ir.Assign object at 0x0000027CEC0BE510>,
                      500)],
             'frac': [(<numba.core.ir.Assign object at 0x0000027CEC0AF290>, 0),
                      (<numba.core.ir.Assign object at 0x0000027CEC0A05D0>,
                       180),
                      (<numba.core.ir.Assign object at 0x0000027CEC109A50>,
                       500)],
             'i': [(<numba.core.ir.Assign object at 0x0000027CEC0B3890>, 376)],
             'i_max': [(<numba.core.ir.Assign object at 0x0000027CEC0B1ED0>,
                        180)],
             'index_frac': [(<numba.core.ir.Assign object at 0x0000027CEC0AE7D0>,
                             0),
                            (<numba.core.ir.Assign object at 0x0000027CEC0A0F50>,
                             180),
                            (<numba.core.ir.Assign object at 0x0000027CEC0BF150>,
                             500)],
             'index_step': [(<numba.core.ir.Assign object at 0x0000027CEC0AF910>,
                             0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x0000027CEC0FBF50>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x0000027CEC0FA910>,
                             0)],
             'k': [(<numba.core.ir.Assign object at 0x0000027CEC0BF550>, 648)],
             'k_max': [(<numba.core.ir.Assign object at 0x0000027CEC0BCAD0>,
                        500)],
             'n': [(<numba.core.ir.Assign object at 0x0000027CEC0AF3D0>, 0),
                   (<numba.core.ir.Assign object at 0x0000027CEC0A2690>, 180)],
             'n_orig': [(<numba.core.ir.Assign object at 0x0000027CEC0A3E90>,
                         0)],
             'n_out': [(<numba.core.ir.Assign object at 0x0000027CEC0FFD90>,
                        0)],
             'num_table': [(<numba.core.ir.Assign object at 0x0000027CEC0FBA10>,
                            0)],
             'nwin': [(<numba.core.ir.Assign object at 0x0000027CEC097CD0>, 0)],
             'offset': [(<numba.core.ir.Assign object at 0x0000027CEC0AE110>,
                         0),
                        (<numba.core.ir.Assign object at 0x0000027CEC0A33D0>,
                         180),
                        (<numba.core.ir.Assign object at 0x0000027CEC0BF990>,
                         500)],
             'scale': [(<numba.core.ir.Assign object at 0x0000027CEC0FF710>,
                        0)],
             't': [(<numba.core.ir.Assign object at 0x0000027CEC0A1BD0>, 180)],
             't_out': [(<numba.core.ir.Assign object at 0x0000027CEC0FBD50>,
                        0)],
             'time_register': [(<numba.core.ir.Assign object at 0x0000027CEC0AFB90>,
                                0),
                               (<numba.core.ir.Assign object at 0x0000027CEC0A2F50>,
                                180)],
             'weight': [(<numba.core.ir.Assign object at 0x0000027CEC0AC350>,
                         0),
                        (<numba.core.ir.Assign object at 0x0000027CEC096710>,
                         376),
                        (<numba.core.ir.Assign object at 0x0000027CEC0B57D0>,
                         648)],
             'x': [(<numba.core.ir.Assign object at 0x0000027CEC0FAF50>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000027CEC0FFD50>, 0)]})
DEBUG 2024-06-11 14:59:30,111 - SSA violators <numba.core.utils.OrderedSet object at 0x0000027CEC117210>
DEBUG 2024-06-11 14:59:30,111 - Fix SSA violator on var time_register
DEBUG 2024-06-11 14:59:30,111 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:59:30,111 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0EAAD0>
DEBUG 2024-06-11 14:59:30,111 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:59:30,111 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:59:30,111 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:59:30,111 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:59:30,111 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:59:30,111 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:59:30,111 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:59:30,111 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,111 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,111 - first assign: time_register
DEBUG 2024-06-11 14:59:30,111 - replaced with: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,111 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:59:30,111 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,111 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,111 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:59:30,111 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,111 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:59:30,111 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:59:30,111 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:59:30,111 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:59:30,111 - on stmt: jump 176
DEBUG 2024-06-11 14:59:30,111 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:59:30,111 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0EAAD0>
DEBUG 2024-06-11 14:59:30,111 - on stmt: jump 178
DEBUG 2024-06-11 14:59:30,111 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:59:30,111 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0EAAD0>
DEBUG 2024-06-11 14:59:30,111 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:59:30,111 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:59:30,122 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:59:30,122 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:59:30,122 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0EAAD0>
DEBUG 2024-06-11 14:59:30,122 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:59:30,122 - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,122 - replaced with: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,122 - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $binop_sub234.12 = time_register - n
DEBUG 2024-06-11 14:59:30,122 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 14:59:30,122 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:59:30,122 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,122 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,122 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:59:30,122 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 14:59:30,122 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:59:30,122 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:59:30,122 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:59:30,122 - on stmt: jump 374
DEBUG 2024-06-11 14:59:30,122 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:59:30,122 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0EAAD0>
DEBUG 2024-06-11 14:59:30,122 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:59:30,122 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:59:30,122 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:59:30,122 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0EAAD0>
DEBUG 2024-06-11 14:59:30,122 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:59:30,122 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:59:30,122 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:59:30,122 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:59:30,122 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:59:30,122 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:59:30,122 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:59:30,122 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $binop_sub468.27 = n - i
DEBUG 2024-06-11 14:59:30,122 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:59:30,122 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:59:30,122 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:59:30,122 - on stmt: jump 374
DEBUG 2024-06-11 14:59:30,122 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:59:30,122 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0EAAD0>
DEBUG 2024-06-11 14:59:30,122 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 14:59:30,122 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 14:59:30,122 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:59:30,122 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,122 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,122 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:59:30,122 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 14:59:30,122 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:59:30,122 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:59:30,122 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:59:30,122 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:59:30,122 - on stmt: jump 646
DEBUG 2024-06-11 14:59:30,122 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:59:30,122 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0EAAD0>
DEBUG 2024-06-11 14:59:30,122 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:59:30,122 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:59:30,122 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:59:30,122 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0EAAD0>
DEBUG 2024-06-11 14:59:30,122 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:59:30,122 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:59:30,122 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:59:30,122 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:59:30,122 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:59:30,122 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:59:30,122 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:59:30,122 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $binop_add740.27 = n + k
DEBUG 2024-06-11 14:59:30,122 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:59:30,122 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:59:30,122 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:59:30,122 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:59:30,122 - on stmt: jump 646
DEBUG 2024-06-11 14:59:30,122 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:59:30,122 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0EAAD0>
DEBUG 2024-06-11 14:59:30,122 - on stmt: jump 176
DEBUG 2024-06-11 14:59:30,122 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:59:30,122 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0EAAD0>
DEBUG 2024-06-11 14:59:30,122 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:59:30,122 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:59:30,122 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000027CEC0EACD0>],
             180: [<numba.core.ir.Assign object at 0x0000027CEC0D0890>]})
DEBUG 2024-06-11 14:59:30,122 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:59:30,122 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0D2D10>
DEBUG 2024-06-11 14:59:30,122 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:59:30,122 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:59:30,122 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:59:30,122 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:59:30,122 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:59:30,122 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:59:30,122 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:59:30,122 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,122 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,122 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:59:30,122 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,122 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,122 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:59:30,122 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,122 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:59:30,122 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:59:30,122 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:59:30,122 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:59:30,122 - on stmt: jump 176
DEBUG 2024-06-11 14:59:30,122 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:59:30,122 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0D2D10>
DEBUG 2024-06-11 14:59:30,122 - on stmt: jump 178
DEBUG 2024-06-11 14:59:30,122 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:59:30,122 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0D2D10>
DEBUG 2024-06-11 14:59:30,122 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:59:30,122 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:59:30,122 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:59:30,122 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0D2D10>
DEBUG 2024-06-11 14:59:30,122 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:59:30,122 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,122 - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,122 - find_def var='time_register' stmt=n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,122 - replaced with: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $binop_sub234.12 = time_register - n
DEBUG 2024-06-11 14:59:30,122 - find_def var='time_register' stmt=$binop_sub234.12 = time_register - n
DEBUG 2024-06-11 14:59:30,122 - replaced with: $binop_sub234.12 = time_register.1 - n
DEBUG 2024-06-11 14:59:30,122 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 14:59:30,122 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:59:30,122 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,122 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,122 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:59:30,122 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 14:59:30,122 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:59:30,122 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:59:30,122 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:59:30,122 - on stmt: jump 374
DEBUG 2024-06-11 14:59:30,122 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:59:30,122 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0D2D10>
DEBUG 2024-06-11 14:59:30,122 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:59:30,122 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:59:30,122 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:59:30,122 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0D2D10>
DEBUG 2024-06-11 14:59:30,122 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:59:30,122 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:59:30,122 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:59:30,122 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,122 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:59:30,129 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:59:30,129 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,129 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:59:30,129 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:59:30,129 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,129 - on stmt: $binop_sub468.27 = n - i
DEBUG 2024-06-11 14:59:30,129 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,129 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:59:30,129 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:59:30,129 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:59:30,129 - on stmt: jump 374
DEBUG 2024-06-11 14:59:30,129 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:59:30,130 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0D2D10>
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 14:59:30,130 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 14:59:30,130 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:59:30,130 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,130 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,130 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:59:30,130 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 14:59:30,130 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:59:30,130 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:59:30,130 - on stmt: jump 646
DEBUG 2024-06-11 14:59:30,130 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:59:30,130 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0D2D10>
DEBUG 2024-06-11 14:59:30,130 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:59:30,130 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:59:30,130 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:59:30,130 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0D2D10>
DEBUG 2024-06-11 14:59:30,130 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:59:30,130 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:59:30,130 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:59:30,130 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:59:30,130 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_add740.27 = n + k
DEBUG 2024-06-11 14:59:30,130 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:59:30,130 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:59:30,130 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:59:30,130 - on stmt: jump 646
DEBUG 2024-06-11 14:59:30,130 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:59:30,130 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0D2D10>
DEBUG 2024-06-11 14:59:30,130 - on stmt: jump 176
DEBUG 2024-06-11 14:59:30,130 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:59:30,130 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0D2D10>
DEBUG 2024-06-11 14:59:30,130 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:59:30,130 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:59:30,130 - Fix SSA violator on var n
DEBUG 2024-06-11 14:59:30,130 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:59:30,130 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0EAB10>
DEBUG 2024-06-11 14:59:30,130 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:59:30,130 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:59:30,130 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:59:30,130 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:59:30,130 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:59:30,130 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:59:30,130 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:59:30,130 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,130 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,130 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:59:30,130 - first assign: n
DEBUG 2024-06-11 14:59:30,130 - replaced with: n = const(int, 0)
DEBUG 2024-06-11 14:59:30,130 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,130 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,130 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:59:30,130 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,130 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:59:30,130 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:59:30,130 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:59:30,130 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:59:30,130 - on stmt: jump 176
DEBUG 2024-06-11 14:59:30,130 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:59:30,130 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0EAB10>
DEBUG 2024-06-11 14:59:30,130 - on stmt: jump 178
DEBUG 2024-06-11 14:59:30,130 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:59:30,130 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0EAB10>
DEBUG 2024-06-11 14:59:30,130 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:59:30,130 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:59:30,130 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:59:30,130 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0EAB10>
DEBUG 2024-06-11 14:59:30,130 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:59:30,130 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,130 - on stmt: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,130 - replaced with: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_sub234.12 = time_register.1 - n
DEBUG 2024-06-11 14:59:30,130 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 14:59:30,130 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:59:30,130 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,130 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,130 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:59:30,130 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:59:30,130 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:59:30,130 - on stmt: jump 374
DEBUG 2024-06-11 14:59:30,130 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:59:30,130 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0EAB10>
DEBUG 2024-06-11 14:59:30,130 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:59:30,130 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:59:30,130 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:59:30,130 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0EAB10>
DEBUG 2024-06-11 14:59:30,130 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:59:30,130 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:59:30,130 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:59:30,130 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:59:30,130 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_sub468.27 = n - i
DEBUG 2024-06-11 14:59:30,130 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:59:30,130 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:59:30,130 - on stmt: jump 374
DEBUG 2024-06-11 14:59:30,130 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:59:30,130 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0EAB10>
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 14:59:30,130 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 14:59:30,130 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:59:30,130 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,130 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,130 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:59:30,130 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 14:59:30,130 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:59:30,130 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:59:30,130 - on stmt: jump 646
DEBUG 2024-06-11 14:59:30,130 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:59:30,130 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0EAB10>
DEBUG 2024-06-11 14:59:30,130 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:59:30,130 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:59:30,130 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:59:30,130 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0EAB10>
DEBUG 2024-06-11 14:59:30,130 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:59:30,130 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:59:30,130 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:59:30,130 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:59:30,130 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_add740.27 = n + k
DEBUG 2024-06-11 14:59:30,130 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:59:30,130 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:59:30,130 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:59:30,130 - on stmt: jump 646
DEBUG 2024-06-11 14:59:30,130 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:59:30,130 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0EAB10>
DEBUG 2024-06-11 14:59:30,130 - on stmt: jump 176
DEBUG 2024-06-11 14:59:30,130 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:59:30,130 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0EAB10>
DEBUG 2024-06-11 14:59:30,130 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:59:30,130 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:59:30,130 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000027CEC0EB010>],
             180: [<numba.core.ir.Assign object at 0x0000027CEC0D0F50>]})
DEBUG 2024-06-11 14:59:30,130 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:59:30,130 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0DCD50>
DEBUG 2024-06-11 14:59:30,130 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:59:30,130 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:59:30,130 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:59:30,130 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:59:30,130 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:59:30,130 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:59:30,130 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:59:30,130 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,130 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,130 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:59:30,130 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,130 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,130 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:59:30,130 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,130 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:59:30,130 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:59:30,130 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:59:30,130 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:59:30,130 - on stmt: jump 176
DEBUG 2024-06-11 14:59:30,130 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:59:30,130 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0DCD50>
DEBUG 2024-06-11 14:59:30,130 - on stmt: jump 178
DEBUG 2024-06-11 14:59:30,130 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:59:30,130 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0DCD50>
DEBUG 2024-06-11 14:59:30,130 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:59:30,130 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:59:30,130 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:59:30,130 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:59:30,130 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0DCD50>
DEBUG 2024-06-11 14:59:30,130 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:59:30,138 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,138 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,138 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,138 - on stmt: $binop_sub234.12 = time_register.1 - n
DEBUG 2024-06-11 14:59:30,138 - find_def var='n' stmt=$binop_sub234.12 = time_register.1 - n
DEBUG 2024-06-11 14:59:30,138 - replaced with: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 14:59:30,138 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 14:59:30,138 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:59:30,138 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,138 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,138 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:59:30,138 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:59:30,138 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:59:30,138 - on stmt: $binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 14:59:30,138 - find_def var='n' stmt=$binop_add310.28 = n + $const308.27
DEBUG 2024-06-11 14:59:30,138 - replaced with: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 14:59:30,138 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:59:30,138 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:59:30,138 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,138 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:59:30,138 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,138 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:59:30,138 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:59:30,138 - on stmt: jump 374
DEBUG 2024-06-11 14:59:30,138 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:59:30,138 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0DCD50>
DEBUG 2024-06-11 14:59:30,139 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:59:30,139 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:59:30,139 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:59:30,139 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:59:30,139 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:59:30,139 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:59:30,139 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0DCD50>
DEBUG 2024-06-11 14:59:30,139 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:59:30,139 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:59:30,139 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:59:30,139 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,139 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:59:30,139 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:59:30,139 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,139 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:59:30,139 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:59:30,140 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_sub468.27 = n - i
DEBUG 2024-06-11 14:59:30,140 - find_def var='n' stmt=$binop_sub468.27 = n - i
DEBUG 2024-06-11 14:59:30,140 - find_def_from_top label 376
DEBUG 2024-06-11 14:59:30,140 - idom 374 from label 376
DEBUG 2024-06-11 14:59:30,140 - find_def_from_bottom label 374
DEBUG 2024-06-11 14:59:30,140 - find_def_from_top label 374
DEBUG 2024-06-11 14:59:30,140 - idom 180 from label 374
DEBUG 2024-06-11 14:59:30,140 - find_def_from_bottom label 180
DEBUG 2024-06-11 14:59:30,140 - replaced with: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 14:59:30,140 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:59:30,140 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:59:30,140 - on stmt: jump 374
DEBUG 2024-06-11 14:59:30,140 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:59:30,140 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0DCD50>
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 14:59:30,140 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 14:59:30,140 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:59:30,140 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,140 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:59:30,140 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 14:59:30,140 - find_def var='n' stmt=$binop_sub576.18 = n_orig - n
DEBUG 2024-06-11 14:59:30,140 - find_def_from_top label 500
DEBUG 2024-06-11 14:59:30,140 - idom 374 from label 500
DEBUG 2024-06-11 14:59:30,140 - find_def_from_bottom label 374
DEBUG 2024-06-11 14:59:30,140 - find_def_from_top label 374
DEBUG 2024-06-11 14:59:30,140 - idom 180 from label 374
DEBUG 2024-06-11 14:59:30,140 - find_def_from_bottom label 180
DEBUG 2024-06-11 14:59:30,140 - replaced with: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 14:59:30,140 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:59:30,140 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:59:30,140 - on stmt: jump 646
DEBUG 2024-06-11 14:59:30,140 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:59:30,140 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0DCD50>
DEBUG 2024-06-11 14:59:30,140 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:59:30,140 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:59:30,140 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:59:30,140 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0DCD50>
DEBUG 2024-06-11 14:59:30,140 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:59:30,140 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:59:30,140 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:59:30,140 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:59:30,140 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_add740.27 = n + k
DEBUG 2024-06-11 14:59:30,140 - find_def var='n' stmt=$binop_add740.27 = n + k
DEBUG 2024-06-11 14:59:30,140 - find_def_from_top label 648
DEBUG 2024-06-11 14:59:30,140 - idom 646 from label 648
DEBUG 2024-06-11 14:59:30,140 - find_def_from_bottom label 646
DEBUG 2024-06-11 14:59:30,140 - find_def_from_top label 646
DEBUG 2024-06-11 14:59:30,140 - idom 500 from label 646
DEBUG 2024-06-11 14:59:30,140 - find_def_from_bottom label 500
DEBUG 2024-06-11 14:59:30,140 - find_def_from_top label 500
DEBUG 2024-06-11 14:59:30,140 - idom 374 from label 500
DEBUG 2024-06-11 14:59:30,140 - find_def_from_bottom label 374
DEBUG 2024-06-11 14:59:30,140 - find_def_from_top label 374
DEBUG 2024-06-11 14:59:30,140 - idom 180 from label 374
DEBUG 2024-06-11 14:59:30,140 - find_def_from_bottom label 180
DEBUG 2024-06-11 14:59:30,140 - replaced with: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 14:59:30,140 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:59:30,140 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:59:30,140 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:59:30,140 - on stmt: jump 646
DEBUG 2024-06-11 14:59:30,140 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:59:30,140 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0DCD50>
DEBUG 2024-06-11 14:59:30,140 - on stmt: jump 176
DEBUG 2024-06-11 14:59:30,140 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:59:30,140 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0DCD50>
DEBUG 2024-06-11 14:59:30,140 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:59:30,140 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:59:30,140 - Fix SSA violator on var frac
DEBUG 2024-06-11 14:59:30,140 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:59:30,140 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0D1E10>
DEBUG 2024-06-11 14:59:30,140 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:59:30,140 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:59:30,140 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:59:30,140 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:59:30,140 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:59:30,140 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:59:30,140 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:59:30,140 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,140 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,140 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:59:30,140 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,140 - first assign: frac
DEBUG 2024-06-11 14:59:30,140 - replaced with: frac = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,140 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,140 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:59:30,140 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,140 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:59:30,140 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:59:30,140 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:59:30,140 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:59:30,140 - on stmt: jump 176
DEBUG 2024-06-11 14:59:30,140 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:59:30,140 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0D1E10>
DEBUG 2024-06-11 14:59:30,140 - on stmt: jump 178
DEBUG 2024-06-11 14:59:30,140 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:59:30,140 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0D1E10>
DEBUG 2024-06-11 14:59:30,140 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:59:30,140 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:59:30,140 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:59:30,140 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0D1E10>
DEBUG 2024-06-11 14:59:30,140 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:59:30,140 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 14:59:30,140 - on stmt: frac = scale * $binop_sub234.12
DEBUG 2024-06-11 14:59:30,140 - replaced with: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 14:59:30,140 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:59:30,140 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,140 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:59:30,140 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:59:30,140 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:59:30,140 - on stmt: jump 374
DEBUG 2024-06-11 14:59:30,140 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:59:30,140 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0D1E10>
DEBUG 2024-06-11 14:59:30,140 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:59:30,140 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:59:30,140 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:59:30,140 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0D1E10>
DEBUG 2024-06-11 14:59:30,140 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:59:30,140 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:59:30,140 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:59:30,140 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:59:30,140 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 14:59:30,140 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:59:30,140 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:59:30,140 - on stmt: jump 374
DEBUG 2024-06-11 14:59:30,140 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:59:30,140 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0D1E10>
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 14:59:30,140 - on stmt: frac = $binop_sub504.3
DEBUG 2024-06-11 14:59:30,140 - replaced with: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 14:59:30,140 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:59:30,140 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,140 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:59:30,140 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 14:59:30,140 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:59:30,140 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:59:30,140 - on stmt: jump 646
DEBUG 2024-06-11 14:59:30,140 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:59:30,140 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0D1E10>
DEBUG 2024-06-11 14:59:30,140 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:59:30,140 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:59:30,140 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:59:30,140 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0D1E10>
DEBUG 2024-06-11 14:59:30,140 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:59:30,140 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:59:30,140 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:59:30,140 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:59:30,140 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 14:59:30,140 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:59:30,140 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:59:30,140 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:59:30,140 - on stmt: jump 646
DEBUG 2024-06-11 14:59:30,140 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:59:30,140 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0D1E10>
DEBUG 2024-06-11 14:59:30,140 - on stmt: jump 176
DEBUG 2024-06-11 14:59:30,140 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:59:30,140 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0D1E10>
DEBUG 2024-06-11 14:59:30,140 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:59:30,140 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:59:30,140 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000027CEC0E9DD0>],
             180: [<numba.core.ir.Assign object at 0x0000027CEC0FE050>],
             500: [<numba.core.ir.Assign object at 0x0000027CEC0FD610>]})
DEBUG 2024-06-11 14:59:30,140 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:59:30,140 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC116F10>
DEBUG 2024-06-11 14:59:30,140 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:59:30,140 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:59:30,140 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:59:30,140 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:59:30,140 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:59:30,140 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:59:30,140 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:59:30,140 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,140 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,140 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:59:30,140 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,140 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,140 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:59:30,140 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,140 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:59:30,140 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:59:30,140 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:59:30,140 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:59:30,140 - on stmt: jump 176
DEBUG 2024-06-11 14:59:30,140 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:59:30,140 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC116F10>
DEBUG 2024-06-11 14:59:30,140 - on stmt: jump 178
DEBUG 2024-06-11 14:59:30,140 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:59:30,140 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC116F10>
DEBUG 2024-06-11 14:59:30,140 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:59:30,140 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:59:30,140 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:59:30,140 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC116F10>
DEBUG 2024-06-11 14:59:30,140 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:59:30,140 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 14:59:30,140 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 14:59:30,140 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:59:30,140 - find_def var='frac' stmt=index_frac = frac * num_table
DEBUG 2024-06-11 14:59:30,140 - replaced with: index_frac = frac.1 * num_table
DEBUG 2024-06-11 14:59:30,140 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,140 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:59:30,140 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:59:30,140 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:59:30,140 - on stmt: jump 374
DEBUG 2024-06-11 14:59:30,140 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:59:30,140 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC116F10>
DEBUG 2024-06-11 14:59:30,140 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:59:30,140 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:59:30,140 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:59:30,140 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC116F10>
DEBUG 2024-06-11 14:59:30,140 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:59:30,140 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:59:30,140 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:59:30,140 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:59:30,140 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 14:59:30,140 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:59:30,140 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:59:30,140 - on stmt: jump 374
DEBUG 2024-06-11 14:59:30,140 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:59:30,140 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC116F10>
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_sub504.3 = scale - frac
DEBUG 2024-06-11 14:59:30,140 - find_def var='frac' stmt=$binop_sub504.3 = scale - frac
DEBUG 2024-06-11 14:59:30,140 - find_def_from_top label 500
DEBUG 2024-06-11 14:59:30,140 - idom 374 from label 500
DEBUG 2024-06-11 14:59:30,140 - find_def_from_bottom label 374
DEBUG 2024-06-11 14:59:30,140 - find_def_from_top label 374
DEBUG 2024-06-11 14:59:30,140 - idom 180 from label 374
DEBUG 2024-06-11 14:59:30,140 - find_def_from_bottom label 180
DEBUG 2024-06-11 14:59:30,140 - replaced with: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 14:59:30,140 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 14:59:30,140 - on stmt: index_frac = frac * num_table
DEBUG 2024-06-11 14:59:30,140 - find_def var='frac' stmt=index_frac = frac * num_table
DEBUG 2024-06-11 14:59:30,140 - replaced with: index_frac = frac.2 * num_table
DEBUG 2024-06-11 14:59:30,140 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,140 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:59:30,140 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 14:59:30,140 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:59:30,140 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:59:30,140 - on stmt: jump 646
DEBUG 2024-06-11 14:59:30,140 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:59:30,140 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC116F10>
DEBUG 2024-06-11 14:59:30,140 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:59:30,140 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:59:30,140 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:59:30,140 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC116F10>
DEBUG 2024-06-11 14:59:30,140 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:59:30,140 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:59:30,140 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:59:30,140 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:59:30,140 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 14:59:30,140 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:59:30,140 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:59:30,140 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:59:30,140 - on stmt: jump 646
DEBUG 2024-06-11 14:59:30,140 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:59:30,140 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC116F10>
DEBUG 2024-06-11 14:59:30,140 - on stmt: jump 176
DEBUG 2024-06-11 14:59:30,140 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:59:30,140 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC116F10>
DEBUG 2024-06-11 14:59:30,140 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:59:30,140 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:59:30,140 - Fix SSA violator on var index_frac
DEBUG 2024-06-11 14:59:30,140 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:59:30,140 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0FC210>
DEBUG 2024-06-11 14:59:30,140 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:59:30,140 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:59:30,140 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:59:30,140 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:59:30,140 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:59:30,140 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:59:30,140 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,140 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:59:30,140 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,140 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,140 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:59:30,140 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,140 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,140 - first assign: index_frac
DEBUG 2024-06-11 14:59:30,140 - replaced with: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,154 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:59:30,154 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,154 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:59:30,154 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:59:30,154 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:59:30,154 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:59:30,154 - on stmt: jump 176
DEBUG 2024-06-11 14:59:30,154 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:59:30,154 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0FC210>
DEBUG 2024-06-11 14:59:30,154 - on stmt: jump 178
DEBUG 2024-06-11 14:59:30,154 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:59:30,154 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0FC210>
DEBUG 2024-06-11 14:59:30,154 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:59:30,154 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:59:30,154 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:59:30,154 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0FC210>
DEBUG 2024-06-11 14:59:30,154 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:59:30,154 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,154 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 14:59:30,154 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 14:59:30,154 - on stmt: index_frac = frac.1 * num_table
DEBUG 2024-06-11 14:59:30,154 - replaced with: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 14:59:30,154 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,154 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,154 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:59:30,154 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 14:59:30,154 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:59:30,154 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:59:30,154 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:59:30,154 - on stmt: jump 374
DEBUG 2024-06-11 14:59:30,154 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:59:30,154 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0FC210>
DEBUG 2024-06-11 14:59:30,154 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:59:30,154 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:59:30,154 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:59:30,154 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0FC210>
DEBUG 2024-06-11 14:59:30,154 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:59:30,154 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:59:30,154 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:59:30,154 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:59:30,154 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:59:30,154 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:59:30,154 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:59:30,154 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 14:59:30,154 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:59:30,154 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:59:30,154 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:59:30,154 - on stmt: jump 374
DEBUG 2024-06-11 14:59:30,154 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:59:30,154 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0FC210>
DEBUG 2024-06-11 14:59:30,154 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 14:59:30,154 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 14:59:30,154 - on stmt: index_frac = frac.2 * num_table
DEBUG 2024-06-11 14:59:30,154 - replaced with: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 14:59:30,154 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,154 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,154 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:59:30,154 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 14:59:30,154 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:59:30,154 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:59:30,154 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:59:30,154 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:59:30,154 - on stmt: jump 646
DEBUG 2024-06-11 14:59:30,154 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:59:30,154 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0FC210>
DEBUG 2024-06-11 14:59:30,154 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:59:30,154 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:59:30,154 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:59:30,154 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0FC210>
DEBUG 2024-06-11 14:59:30,154 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:59:30,154 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:59:30,154 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:59:30,154 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:59:30,154 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:59:30,154 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:59:30,154 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:59:30,154 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 14:59:30,154 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:59:30,154 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:59:30,154 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:59:30,154 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:59:30,154 - on stmt: jump 646
DEBUG 2024-06-11 14:59:30,154 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:59:30,154 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0FC210>
DEBUG 2024-06-11 14:59:30,154 - on stmt: jump 176
DEBUG 2024-06-11 14:59:30,154 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:59:30,154 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0FC210>
DEBUG 2024-06-11 14:59:30,154 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:59:30,154 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:59:30,154 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000027CEC0DCD50>],
             180: [<numba.core.ir.Assign object at 0x0000027CEC0D2E10>],
             500: [<numba.core.ir.Assign object at 0x0000027CEC0CBBD0>]})
DEBUG 2024-06-11 14:59:30,154 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:59:30,154 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC109CD0>
DEBUG 2024-06-11 14:59:30,154 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:59:30,154 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:59:30,154 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:59:30,154 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:59:30,154 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:59:30,154 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:59:30,154 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:59:30,154 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,154 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,154 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:59:30,154 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,154 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,154 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:59:30,154 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,154 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:59:30,154 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:59:30,154 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:59:30,154 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:59:30,154 - on stmt: jump 176
DEBUG 2024-06-11 14:59:30,154 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:59:30,154 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC109CD0>
DEBUG 2024-06-11 14:59:30,154 - on stmt: jump 178
DEBUG 2024-06-11 14:59:30,154 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:59:30,154 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC109CD0>
DEBUG 2024-06-11 14:59:30,154 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:59:30,154 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:59:30,160 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:59:30,160 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:59:30,160 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:59:30,160 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:59:30,160 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC109CD0>
DEBUG 2024-06-11 14:59:30,160 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:59:30,160 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,160 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,160 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,160 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 14:59:30,160 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 14:59:30,160 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 14:59:30,160 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,160 - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,160 - find_def var='index_frac' stmt=offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,160 - replaced with: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,160 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:59:30,160 - find_def var='index_frac' stmt=eta = index_frac - offset
DEBUG 2024-06-11 14:59:30,160 - replaced with: eta = index_frac.1 - offset
DEBUG 2024-06-11 14:59:30,160 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:59:30,160 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:59:30,160 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 14:59:30,160 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:59:30,160 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:59:30,160 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,160 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:59:30,160 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,160 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:59:30,160 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:59:30,160 - on stmt: jump 374
DEBUG 2024-06-11 14:59:30,160 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:59:30,160 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC109CD0>
DEBUG 2024-06-11 14:59:30,160 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:59:30,160 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:59:30,160 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:59:30,160 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:59:30,160 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:59:30,160 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:59:30,160 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC109CD0>
DEBUG 2024-06-11 14:59:30,160 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:59:30,160 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:59:30,160 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:59:30,160 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,160 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:59:30,160 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:59:30,160 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,160 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:59:30,160 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:59:30,160 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,160 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 14:59:30,160 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,160 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:59:30,160 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:59:30,160 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:59:30,160 - on stmt: jump 374
DEBUG 2024-06-11 14:59:30,160 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:59:30,160 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC109CD0>
DEBUG 2024-06-11 14:59:30,160 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 14:59:30,160 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 14:59:30,160 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 14:59:30,160 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,160 - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,160 - find_def var='index_frac' stmt=offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,160 - replaced with: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,160 - on stmt: eta = index_frac - offset
DEBUG 2024-06-11 14:59:30,160 - find_def var='index_frac' stmt=eta = index_frac - offset
DEBUG 2024-06-11 14:59:30,160 - replaced with: eta = index_frac.2 - offset
DEBUG 2024-06-11 14:59:30,160 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:59:30,160 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 14:59:30,160 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:59:30,160 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:59:30,160 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:59:30,160 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:59:30,160 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,160 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:59:30,160 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:59:30,163 - on stmt: jump 646
DEBUG 2024-06-11 14:59:30,163 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:59:30,163 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC109CD0>
DEBUG 2024-06-11 14:59:30,163 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:59:30,163 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:59:30,163 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:59:30,163 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC109CD0>
DEBUG 2024-06-11 14:59:30,163 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:59:30,163 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:59:30,163 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:59:30,163 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:59:30,163 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 14:59:30,163 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:59:30,163 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:59:30,163 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:59:30,163 - on stmt: jump 646
DEBUG 2024-06-11 14:59:30,163 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:59:30,163 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC109CD0>
DEBUG 2024-06-11 14:59:30,163 - on stmt: jump 176
DEBUG 2024-06-11 14:59:30,163 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:59:30,163 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC109CD0>
DEBUG 2024-06-11 14:59:30,163 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:59:30,163 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:59:30,163 - Fix SSA violator on var offset
DEBUG 2024-06-11 14:59:30,163 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:59:30,163 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC116F10>
DEBUG 2024-06-11 14:59:30,163 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:59:30,163 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:59:30,163 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:59:30,163 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:59:30,163 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:59:30,163 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:59:30,163 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:59:30,163 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,163 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,163 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:59:30,163 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,163 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,163 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:59:30,163 - first assign: offset
DEBUG 2024-06-11 14:59:30,163 - replaced with: offset = const(int, 0)
DEBUG 2024-06-11 14:59:30,163 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,163 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:59:30,163 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:59:30,163 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:59:30,163 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:59:30,163 - on stmt: jump 176
DEBUG 2024-06-11 14:59:30,163 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:59:30,163 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC116F10>
DEBUG 2024-06-11 14:59:30,163 - on stmt: jump 178
DEBUG 2024-06-11 14:59:30,163 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:59:30,163 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC116F10>
DEBUG 2024-06-11 14:59:30,163 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:59:30,163 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:59:30,163 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:59:30,163 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC116F10>
DEBUG 2024-06-11 14:59:30,163 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:59:30,163 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,163 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 14:59:30,163 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 14:59:30,163 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 14:59:30,163 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,163 - on stmt: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,163 - replaced with: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,163 - on stmt: eta = index_frac.1 - offset
DEBUG 2024-06-11 14:59:30,163 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:59:30,163 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:59:30,163 - on stmt: jump 374
DEBUG 2024-06-11 14:59:30,163 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:59:30,163 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC116F10>
DEBUG 2024-06-11 14:59:30,163 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:59:30,163 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:59:30,163 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:59:30,163 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC116F10>
DEBUG 2024-06-11 14:59:30,163 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:59:30,163 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:59:30,163 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:59:30,163 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:59:30,163 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 14:59:30,163 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:59:30,163 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:59:30,163 - on stmt: jump 374
DEBUG 2024-06-11 14:59:30,163 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:59:30,163 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC116F10>
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 14:59:30,163 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 14:59:30,163 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 14:59:30,163 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,163 - on stmt: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,163 - replaced with: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,163 - on stmt: eta = index_frac.2 - offset
DEBUG 2024-06-11 14:59:30,163 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 14:59:30,163 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:59:30,163 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:59:30,163 - on stmt: jump 646
DEBUG 2024-06-11 14:59:30,163 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:59:30,163 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC116F10>
DEBUG 2024-06-11 14:59:30,163 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:59:30,163 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:59:30,163 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:59:30,163 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC116F10>
DEBUG 2024-06-11 14:59:30,163 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:59:30,163 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:59:30,163 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:59:30,163 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:59:30,163 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 14:59:30,163 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:59:30,163 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:59:30,163 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:59:30,163 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:59:30,163 - on stmt: jump 646
DEBUG 2024-06-11 14:59:30,163 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:59:30,163 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC116F10>
DEBUG 2024-06-11 14:59:30,163 - on stmt: jump 176
DEBUG 2024-06-11 14:59:30,163 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:59:30,163 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC116F10>
DEBUG 2024-06-11 14:59:30,163 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:59:30,163 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:59:30,163 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:59:30,163 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000027CEC109CD0>],
             180: [<numba.core.ir.Assign object at 0x0000027CEC0CBB50>],
             500: [<numba.core.ir.Assign object at 0x0000027CEC0CA950>]})
DEBUG 2024-06-11 14:59:30,163 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:59:30,163 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC101A10>
DEBUG 2024-06-11 14:59:30,163 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:59:30,163 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:59:30,163 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:59:30,163 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:59:30,163 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:59:30,163 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:59:30,163 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:59:30,170 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,170 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,170 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:59:30,170 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,170 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,170 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:59:30,170 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,170 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:59:30,170 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:59:30,170 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:59:30,170 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:59:30,170 - on stmt: jump 176
DEBUG 2024-06-11 14:59:30,170 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:59:30,170 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC101A10>
DEBUG 2024-06-11 14:59:30,170 - on stmt: jump 178
DEBUG 2024-06-11 14:59:30,170 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:59:30,170 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC101A10>
DEBUG 2024-06-11 14:59:30,170 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:59:30,170 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:59:30,170 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:59:30,170 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC101A10>
DEBUG 2024-06-11 14:59:30,170 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:59:30,170 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,170 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 14:59:30,170 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 14:59:30,170 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 14:59:30,170 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,170 - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,170 - on stmt: eta = index_frac.1 - offset
DEBUG 2024-06-11 14:59:30,170 - find_def var='offset' stmt=eta = index_frac.1 - offset
DEBUG 2024-06-11 14:59:30,170 - replaced with: eta = index_frac.1 - offset.1
DEBUG 2024-06-11 14:59:30,170 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 14:59:30,170 - on stmt: $binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:59:30,170 - find_def var='offset' stmt=$binop_sub318.31 = nwin - offset
DEBUG 2024-06-11 14:59:30,170 - replaced with: $binop_sub318.31 = nwin - offset.1
DEBUG 2024-06-11 14:59:30,170 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:59:30,170 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:59:30,170 - on stmt: jump 374
DEBUG 2024-06-11 14:59:30,170 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:59:30,170 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC101A10>
DEBUG 2024-06-11 14:59:30,170 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:59:30,170 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:59:30,170 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:59:30,170 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC101A10>
DEBUG 2024-06-11 14:59:30,170 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:59:30,170 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:59:30,170 - on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:59:30,170 - find_def var='offset' stmt=$binop_add390.8 = offset + $binop_mul386.7
DEBUG 2024-06-11 14:59:30,170 - find_def_from_top label 376
DEBUG 2024-06-11 14:59:30,170 - idom 374 from label 376
DEBUG 2024-06-11 14:59:30,170 - find_def_from_bottom label 374
DEBUG 2024-06-11 14:59:30,170 - find_def_from_top label 374
DEBUG 2024-06-11 14:59:30,170 - idom 180 from label 374
DEBUG 2024-06-11 14:59:30,170 - find_def_from_bottom label 180
DEBUG 2024-06-11 14:59:30,170 - replaced with: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG 2024-06-11 14:59:30,170 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:59:30,170 - on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:59:30,170 - find_def var='offset' stmt=$binop_add418.16 = offset + $binop_mul414.15
DEBUG 2024-06-11 14:59:30,170 - find_def_from_top label 376
DEBUG 2024-06-11 14:59:30,170 - idom 374 from label 376
DEBUG 2024-06-11 14:59:30,170 - find_def_from_bottom label 374
DEBUG 2024-06-11 14:59:30,170 - find_def_from_top label 374
DEBUG 2024-06-11 14:59:30,170 - idom 180 from label 374
DEBUG 2024-06-11 14:59:30,170 - find_def_from_bottom label 180
DEBUG 2024-06-11 14:59:30,170 - replaced with: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG 2024-06-11 14:59:30,170 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:59:30,170 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:59:30,170 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 14:59:30,170 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:59:30,170 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:59:30,170 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:59:30,170 - on stmt: jump 374
DEBUG 2024-06-11 14:59:30,170 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:59:30,170 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC101A10>
DEBUG 2024-06-11 14:59:30,170 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 14:59:30,170 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 14:59:30,170 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 14:59:30,170 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,170 - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,170 - on stmt: eta = index_frac.2 - offset
DEBUG 2024-06-11 14:59:30,170 - find_def var='offset' stmt=eta = index_frac.2 - offset
DEBUG 2024-06-11 14:59:30,170 - replaced with: eta = index_frac.2 - offset.2
DEBUG 2024-06-11 14:59:30,170 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 14:59:30,170 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:59:30,170 - on stmt: $binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:59:30,170 - find_def var='offset' stmt=$binop_sub590.23 = nwin - offset
DEBUG 2024-06-11 14:59:30,170 - replaced with: $binop_sub590.23 = nwin - offset.2
DEBUG 2024-06-11 14:59:30,170 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:59:30,170 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:59:30,170 - on stmt: jump 646
DEBUG 2024-06-11 14:59:30,170 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:59:30,170 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC101A10>
DEBUG 2024-06-11 14:59:30,170 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:59:30,170 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:59:30,174 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:59:30,174 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:59:30,174 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC101A10>
DEBUG 2024-06-11 14:59:30,174 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:59:30,174 - find_def var='offset' stmt=$binop_add662.8 = offset + $binop_mul658.7
DEBUG 2024-06-11 14:59:30,174 - find_def_from_top label 648
DEBUG 2024-06-11 14:59:30,174 - idom 646 from label 648
DEBUG 2024-06-11 14:59:30,174 - find_def_from_bottom label 646
DEBUG 2024-06-11 14:59:30,174 - find_def_from_top label 646
DEBUG 2024-06-11 14:59:30,174 - idom 500 from label 646
DEBUG 2024-06-11 14:59:30,174 - find_def_from_bottom label 500
DEBUG 2024-06-11 14:59:30,174 - replaced with: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG 2024-06-11 14:59:30,174 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:59:30,174 - find_def var='offset' stmt=$binop_add690.16 = offset + $binop_mul686.15
DEBUG 2024-06-11 14:59:30,174 - find_def_from_top label 648
DEBUG 2024-06-11 14:59:30,174 - idom 646 from label 648
DEBUG 2024-06-11 14:59:30,174 - find_def_from_bottom label 646
DEBUG 2024-06-11 14:59:30,174 - find_def_from_top label 646
DEBUG 2024-06-11 14:59:30,174 - idom 500 from label 646
DEBUG 2024-06-11 14:59:30,174 - find_def_from_bottom label 500
DEBUG 2024-06-11 14:59:30,174 - replaced with: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG 2024-06-11 14:59:30,174 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:59:30,174 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:59:30,174 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 14:59:30,174 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:59:30,174 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:59:30,174 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:59:30,174 - on stmt: jump 646
DEBUG 2024-06-11 14:59:30,174 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:59:30,174 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC101A10>
DEBUG 2024-06-11 14:59:30,174 - on stmt: jump 176
DEBUG 2024-06-11 14:59:30,174 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:59:30,174 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC101A10>
DEBUG 2024-06-11 14:59:30,174 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:59:30,174 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:59:30,174 - Fix SSA violator on var eta
DEBUG 2024-06-11 14:59:30,174 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:59:30,174 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0FDBD0>
DEBUG 2024-06-11 14:59:30,174 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:59:30,174 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:59:30,174 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:59:30,174 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:59:30,174 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:59:30,174 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:59:30,174 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:59:30,174 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,174 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,174 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:59:30,174 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,174 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,174 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:59:30,174 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,174 - first assign: eta
DEBUG 2024-06-11 14:59:30,174 - replaced with: eta = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,174 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:59:30,174 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:59:30,174 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:59:30,174 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:59:30,174 - on stmt: jump 176
DEBUG 2024-06-11 14:59:30,174 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:59:30,174 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0FDBD0>
DEBUG 2024-06-11 14:59:30,174 - on stmt: jump 178
DEBUG 2024-06-11 14:59:30,174 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:59:30,174 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0FDBD0>
DEBUG 2024-06-11 14:59:30,174 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:59:30,174 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:59:30,174 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:59:30,174 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0FDBD0>
DEBUG 2024-06-11 14:59:30,174 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:59:30,174 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 14:59:30,174 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 14:59:30,174 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 14:59:30,174 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,174 - on stmt: eta = index_frac.1 - offset.1
DEBUG 2024-06-11 14:59:30,174 - replaced with: eta.1 = index_frac.1 - offset.1
DEBUG 2024-06-11 14:59:30,174 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_sub318.31 = nwin - offset.1
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:59:30,174 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:59:30,174 - on stmt: jump 374
DEBUG 2024-06-11 14:59:30,174 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:59:30,174 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0FDBD0>
DEBUG 2024-06-11 14:59:30,174 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:59:30,174 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:59:30,174 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:59:30,174 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0FDBD0>
DEBUG 2024-06-11 14:59:30,174 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG 2024-06-11 14:59:30,174 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG 2024-06-11 14:59:30,174 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:59:30,174 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:59:30,174 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 14:59:30,174 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:59:30,174 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:59:30,174 - on stmt: jump 374
DEBUG 2024-06-11 14:59:30,174 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:59:30,174 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0FDBD0>
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 14:59:30,174 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 14:59:30,174 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 14:59:30,174 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,174 - on stmt: eta = index_frac.2 - offset.2
DEBUG 2024-06-11 14:59:30,174 - replaced with: eta.2 = index_frac.2 - offset.2
DEBUG 2024-06-11 14:59:30,174 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 14:59:30,174 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_sub590.23 = nwin - offset.2
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:59:30,174 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:59:30,174 - on stmt: jump 646
DEBUG 2024-06-11 14:59:30,174 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:59:30,174 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0FDBD0>
DEBUG 2024-06-11 14:59:30,174 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:59:30,174 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:59:30,174 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:59:30,174 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0FDBD0>
DEBUG 2024-06-11 14:59:30,174 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG 2024-06-11 14:59:30,174 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG 2024-06-11 14:59:30,174 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:59:30,174 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:59:30,174 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 14:59:30,174 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:59:30,174 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:59:30,174 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:59:30,174 - on stmt: jump 646
DEBUG 2024-06-11 14:59:30,174 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:59:30,174 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0FDBD0>
DEBUG 2024-06-11 14:59:30,174 - on stmt: jump 176
DEBUG 2024-06-11 14:59:30,174 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:59:30,174 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0FDBD0>
DEBUG 2024-06-11 14:59:30,174 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:59:30,174 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:59:30,174 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000027CEC0FD5D0>],
             180: [<numba.core.ir.Assign object at 0x0000027CEC0CA8D0>],
             500: [<numba.core.ir.Assign object at 0x0000027CEC0C92D0>]})
DEBUG 2024-06-11 14:59:30,174 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:59:30,174 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0FC350>
DEBUG 2024-06-11 14:59:30,174 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:59:30,174 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:59:30,174 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:59:30,174 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:59:30,174 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:59:30,174 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:59:30,174 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:59:30,174 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,174 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,174 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:59:30,174 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,174 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,174 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:59:30,174 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,174 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:59:30,174 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:59:30,174 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:59:30,174 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:59:30,174 - on stmt: jump 176
DEBUG 2024-06-11 14:59:30,174 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:59:30,174 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0FC350>
DEBUG 2024-06-11 14:59:30,174 - on stmt: jump 178
DEBUG 2024-06-11 14:59:30,174 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:59:30,174 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0FC350>
DEBUG 2024-06-11 14:59:30,174 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:59:30,174 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:59:30,174 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:59:30,174 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0FC350>
DEBUG 2024-06-11 14:59:30,174 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:59:30,174 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 14:59:30,174 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 14:59:30,174 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 14:59:30,174 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,174 - on stmt: eta.1 = index_frac.1 - offset.1
DEBUG 2024-06-11 14:59:30,174 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_sub318.31 = nwin - offset.1
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:59:30,174 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:59:30,174 - on stmt: jump 374
DEBUG 2024-06-11 14:59:30,174 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:59:30,174 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0FC350>
DEBUG 2024-06-11 14:59:30,174 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:59:30,174 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:59:30,174 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:59:30,174 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0FC350>
DEBUG 2024-06-11 14:59:30,174 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG 2024-06-11 14:59:30,174 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG 2024-06-11 14:59:30,174 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:59:30,174 - find_def var='eta' stmt=$binop_mul432.18 = eta * $422binary_subscr.17
DEBUG 2024-06-11 14:59:30,174 - find_def_from_top label 376
DEBUG 2024-06-11 14:59:30,174 - idom 374 from label 376
DEBUG 2024-06-11 14:59:30,174 - find_def_from_bottom label 374
DEBUG 2024-06-11 14:59:30,174 - find_def_from_top label 374
DEBUG 2024-06-11 14:59:30,174 - idom 180 from label 374
DEBUG 2024-06-11 14:59:30,174 - find_def_from_bottom label 180
DEBUG 2024-06-11 14:59:30,174 - replaced with: $binop_mul432.18 = eta.1 * $422binary_subscr.17
DEBUG 2024-06-11 14:59:30,174 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:59:30,174 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 14:59:30,174 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,174 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:59:30,185 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:59:30,185 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:59:30,185 - on stmt: jump 374
DEBUG 2024-06-11 14:59:30,185 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:59:30,185 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0FC350>
DEBUG 2024-06-11 14:59:30,185 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 14:59:30,185 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 14:59:30,185 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 14:59:30,185 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,185 - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,185 - on stmt: eta.2 = index_frac.2 - offset.2
DEBUG 2024-06-11 14:59:30,185 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:59:30,185 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 14:59:30,185 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:59:30,185 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:59:30,185 - on stmt: $binop_sub590.23 = nwin - offset.2
DEBUG 2024-06-11 14:59:30,185 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:59:30,185 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,185 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:59:30,185 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,185 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:59:30,185 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:59:30,185 - on stmt: jump 646
DEBUG 2024-06-11 14:59:30,185 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:59:30,185 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0FC350>
DEBUG 2024-06-11 14:59:30,186 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:59:30,186 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:59:30,186 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:59:30,186 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0FC350>
DEBUG 2024-06-11 14:59:30,186 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG 2024-06-11 14:59:30,186 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG 2024-06-11 14:59:30,186 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:59:30,186 - find_def var='eta' stmt=$binop_mul704.18 = eta * $694binary_subscr.17
DEBUG 2024-06-11 14:59:30,186 - find_def_from_top label 648
DEBUG 2024-06-11 14:59:30,186 - idom 646 from label 648
DEBUG 2024-06-11 14:59:30,186 - find_def_from_bottom label 646
DEBUG 2024-06-11 14:59:30,186 - find_def_from_top label 646
DEBUG 2024-06-11 14:59:30,186 - idom 500 from label 646
DEBUG 2024-06-11 14:59:30,186 - find_def_from_bottom label 500
DEBUG 2024-06-11 14:59:30,186 - replaced with: $binop_mul704.18 = eta.2 * $694binary_subscr.17
DEBUG 2024-06-11 14:59:30,186 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:59:30,186 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 14:59:30,186 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:59:30,186 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:59:30,186 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:59:30,186 - on stmt: jump 646
DEBUG 2024-06-11 14:59:30,186 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:59:30,186 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0FC350>
DEBUG 2024-06-11 14:59:30,186 - on stmt: jump 176
DEBUG 2024-06-11 14:59:30,186 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:59:30,186 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0FC350>
DEBUG 2024-06-11 14:59:30,186 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:59:30,186 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:59:30,186 - Fix SSA violator on var weight
DEBUG 2024-06-11 14:59:30,186 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:59:30,186 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0FC350>
DEBUG 2024-06-11 14:59:30,186 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:59:30,186 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:59:30,186 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:59:30,186 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:59:30,186 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:59:30,186 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:59:30,186 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:59:30,186 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,186 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,186 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:59:30,186 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,186 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,186 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:59:30,186 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,186 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,186 - first assign: weight
DEBUG 2024-06-11 14:59:30,186 - replaced with: weight = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:59:30,186 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:59:30,186 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:59:30,186 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:59:30,186 - on stmt: jump 176
DEBUG 2024-06-11 14:59:30,186 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:59:30,186 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0FC350>
DEBUG 2024-06-11 14:59:30,186 - on stmt: jump 178
DEBUG 2024-06-11 14:59:30,186 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:59:30,186 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0FC350>
DEBUG 2024-06-11 14:59:30,186 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:59:30,186 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:59:30,186 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:59:30,186 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0FC350>
DEBUG 2024-06-11 14:59:30,186 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:59:30,186 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 14:59:30,186 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 14:59:30,186 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 14:59:30,186 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,186 - on stmt: eta.1 = index_frac.1 - offset.1
DEBUG 2024-06-11 14:59:30,186 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_sub318.31 = nwin - offset.1
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:59:30,186 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:59:30,186 - on stmt: jump 374
DEBUG 2024-06-11 14:59:30,186 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:59:30,186 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0FC350>
DEBUG 2024-06-11 14:59:30,186 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:59:30,186 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:59:30,186 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:59:30,186 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0FC350>
DEBUG 2024-06-11 14:59:30,186 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG 2024-06-11 14:59:30,186 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG 2024-06-11 14:59:30,186 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
DEBUG 2024-06-11 14:59:30,186 - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:59:30,186 - replaced with: weight.1 = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:59:30,186 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 14:59:30,186 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:59:30,186 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:59:30,186 - on stmt: jump 374
DEBUG 2024-06-11 14:59:30,186 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:59:30,186 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0FC350>
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 14:59:30,186 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 14:59:30,186 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 14:59:30,186 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,186 - on stmt: eta.2 = index_frac.2 - offset.2
DEBUG 2024-06-11 14:59:30,186 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 14:59:30,186 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_sub590.23 = nwin - offset.2
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:59:30,186 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:59:30,186 - on stmt: jump 646
DEBUG 2024-06-11 14:59:30,186 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:59:30,186 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0FC350>
DEBUG 2024-06-11 14:59:30,186 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:59:30,186 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:59:30,186 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:59:30,186 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0FC350>
DEBUG 2024-06-11 14:59:30,186 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG 2024-06-11 14:59:30,186 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG 2024-06-11 14:59:30,186 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
DEBUG 2024-06-11 14:59:30,186 - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:59:30,186 - replaced with: weight.2 = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:59:30,186 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 14:59:30,186 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:59:30,186 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:59:30,186 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:59:30,186 - on stmt: jump 646
DEBUG 2024-06-11 14:59:30,186 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:59:30,186 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0FC350>
DEBUG 2024-06-11 14:59:30,186 - on stmt: jump 176
DEBUG 2024-06-11 14:59:30,186 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:59:30,186 - Running <numba.core.ssa._FreshVarHandler object at 0x0000027CEC0FC350>
DEBUG 2024-06-11 14:59:30,186 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:59:30,186 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:59:30,186 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000027CEC0CA810>],
             376: [<numba.core.ir.Assign object at 0x0000027CEC0C9D10>],
             648: [<numba.core.ir.Assign object at 0x0000027CEC0CA250>]})
DEBUG 2024-06-11 14:59:30,186 - ==== SSA block rewrite pass on 0
DEBUG 2024-06-11 14:59:30,186 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0FD310>
DEBUG 2024-06-11 14:59:30,186 - on stmt: x = arg(0, name=x)
DEBUG 2024-06-11 14:59:30,186 - on stmt: t_out = arg(1, name=t_out)
DEBUG 2024-06-11 14:59:30,186 - on stmt: interp_win = arg(2, name=interp_win)
DEBUG 2024-06-11 14:59:30,186 - on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG 2024-06-11 14:59:30,186 - on stmt: num_table = arg(4, name=num_table)
DEBUG 2024-06-11 14:59:30,186 - on stmt: scale = arg(5, name=scale)
DEBUG 2024-06-11 14:59:30,186 - on stmt: y = arg(6, name=y)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_mul20.4 = scale * num_table
DEBUG 2024-06-11 14:59:30,186 - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,186 - on stmt: time_register = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,186 - on stmt: n = const(int, 0)
DEBUG 2024-06-11 14:59:30,186 - on stmt: frac = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,186 - on stmt: index_frac = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,186 - on stmt: offset = const(int, 0)
DEBUG 2024-06-11 14:59:30,186 - on stmt: eta = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,186 - on stmt: weight = const(float, 0.0)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $const80.15 = const(int, 0)
DEBUG 2024-06-11 14:59:30,186 - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $const106.19 = const(int, 0)
DEBUG 2024-06-11 14:59:30,186 - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $const132.23 = const(int, 0)
DEBUG 2024-06-11 14:59:30,186 - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $phi178.0 = $174get_iter.29
DEBUG 2024-06-11 14:59:30,186 - on stmt: jump 176
DEBUG 2024-06-11 14:59:30,186 - ==== SSA block rewrite pass on 176
DEBUG 2024-06-11 14:59:30,186 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0FD310>
DEBUG 2024-06-11 14:59:30,186 - on stmt: jump 178
DEBUG 2024-06-11 14:59:30,186 - ==== SSA block rewrite pass on 178
DEBUG 2024-06-11 14:59:30,186 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0FD310>
DEBUG 2024-06-11 14:59:30,186 - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $phi180.1 = $178for_iter.2
DEBUG 2024-06-11 14:59:30,186 - on stmt: branch $178for_iter.3, 180, 782
DEBUG 2024-06-11 14:59:30,186 - ==== SSA block rewrite pass on 180
DEBUG 2024-06-11 14:59:30,186 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0FD310>
DEBUG 2024-06-11 14:59:30,186 - on stmt: t = $phi180.1
DEBUG 2024-06-11 14:59:30,186 - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG 2024-06-11 14:59:30,186 - on stmt: frac.1 = scale * $binop_sub234.12
DEBUG 2024-06-11 14:59:30,186 - on stmt: index_frac.1 = frac.1 * num_table
DEBUG 2024-06-11 14:59:30,186 - on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,186 - on stmt: eta.1 = index_frac.1 - offset.1
DEBUG 2024-06-11 14:59:30,186 - on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $const308.27 = const(int, 1)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_add310.28 = n.1 + $const308.27
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_sub318.31 = nwin - offset.1
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG 2024-06-11 14:59:30,186 - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $phi374.1 = $372get_iter.39
DEBUG 2024-06-11 14:59:30,186 - on stmt: jump 374
DEBUG 2024-06-11 14:59:30,186 - ==== SSA block rewrite pass on 374
DEBUG 2024-06-11 14:59:30,186 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0FD310>
DEBUG 2024-06-11 14:59:30,186 - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $phi376.2 = $374for_iter.3
DEBUG 2024-06-11 14:59:30,186 - on stmt: branch $374for_iter.4, 376, 500
DEBUG 2024-06-11 14:59:30,186 - ==== SSA block rewrite pass on 376
DEBUG 2024-06-11 14:59:30,186 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0FD310>
DEBUG 2024-06-11 14:59:30,186 - on stmt: i = $phi376.2
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_mul386.7 = i * index_step
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG 2024-06-11 14:59:30,186 - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_mul414.15 = i * index_step
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG 2024-06-11 14:59:30,186 - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
DEBUG 2024-06-11 14:59:30,186 - on stmt: weight.1 = $394binary_subscr.9 + $binop_mul432.18
DEBUG 2024-06-11 14:59:30,186 - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_sub468.27 = n.1 - i
DEBUG 2024-06-11 14:59:30,186 - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:59:30,186 - find_def var='weight' stmt=$binop_mul482.29 = weight * $472binary_subscr.28
DEBUG 2024-06-11 14:59:30,186 - replaced with: $binop_mul482.29 = weight.1 * $472binary_subscr.28
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:59:30,186 - on stmt: y[t] = $binop_iadd486.30
DEBUG 2024-06-11 14:59:30,186 - on stmt: jump 374
DEBUG 2024-06-11 14:59:30,186 - ==== SSA block rewrite pass on 500
DEBUG 2024-06-11 14:59:30,186 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0FD310>
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_sub504.3 = scale - frac.1
DEBUG 2024-06-11 14:59:30,186 - on stmt: frac.2 = $binop_sub504.3
DEBUG 2024-06-11 14:59:30,186 - on stmt: index_frac.2 = frac.2 * num_table
DEBUG 2024-06-11 14:59:30,186 - on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,186 - on stmt: eta.2 = index_frac.2 - offset.2
DEBUG 2024-06-11 14:59:30,186 - on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG 2024-06-11 14:59:30,186 - on stmt: $const580.19 = const(int, 1)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_sub590.23 = nwin - offset.2
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG 2024-06-11 14:59:30,186 - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $phi646.1 = $644get_iter.31
DEBUG 2024-06-11 14:59:30,186 - on stmt: jump 646
DEBUG 2024-06-11 14:59:30,186 - ==== SSA block rewrite pass on 646
DEBUG 2024-06-11 14:59:30,186 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0FD310>
DEBUG 2024-06-11 14:59:30,186 - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $phi648.2 = $646for_iter.3
DEBUG 2024-06-11 14:59:30,186 - on stmt: branch $646for_iter.4, 648, 778
DEBUG 2024-06-11 14:59:30,186 - ==== SSA block rewrite pass on 648
DEBUG 2024-06-11 14:59:30,186 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0FD310>
DEBUG 2024-06-11 14:59:30,186 - on stmt: k = $phi648.2
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_mul658.7 = k * index_step
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG 2024-06-11 14:59:30,186 - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_mul686.15 = k * index_step
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG 2024-06-11 14:59:30,186 - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
DEBUG 2024-06-11 14:59:30,186 - on stmt: weight.2 = $666binary_subscr.9 + $binop_mul704.18
DEBUG 2024-06-11 14:59:30,186 - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_add740.27 = n.1 + k
DEBUG 2024-06-11 14:59:30,186 - on stmt: $const744.28 = const(int, 1)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
DEBUG 2024-06-11 14:59:30,186 - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:59:30,186 - find_def var='weight' stmt=$binop_mul760.31 = weight * $750binary_subscr.30
DEBUG 2024-06-11 14:59:30,186 - replaced with: $binop_mul760.31 = weight.2 * $750binary_subscr.30
DEBUG 2024-06-11 14:59:30,186 - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG 2024-06-11 14:59:30,186 - on stmt: y[t] = $binop_iadd764.32
DEBUG 2024-06-11 14:59:30,186 - on stmt: jump 646
DEBUG 2024-06-11 14:59:30,186 - ==== SSA block rewrite pass on 778
DEBUG 2024-06-11 14:59:30,186 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0FD310>
DEBUG 2024-06-11 14:59:30,186 - on stmt: jump 176
DEBUG 2024-06-11 14:59:30,186 - ==== SSA block rewrite pass on 782
DEBUG 2024-06-11 14:59:30,186 - Running <numba.core.ssa._FixSSAVars object at 0x0000027CEC0FD310>
DEBUG 2024-06-11 14:59:30,186 - on stmt: $const782.0 = const(NoneType, None)
DEBUG 2024-06-11 14:59:30,186 - on stmt: $784return_value.1 = cast(value=$const782.0)
DEBUG 2024-06-11 14:59:30,186 - on stmt: return $784return_value.1
DEBUG 2024-06-11 14:59:30,822 - bytecode dump:
>          0	NOP(arg=None, lineno=425)
           2	RESUME(arg=0, lineno=425)
           4	LOAD_FAST(arg=0, lineno=428)
           6	LOAD_CONST(arg=1, lineno=428)
           8	BINARY_SUBSCR(arg=None, lineno=428)
          18	LOAD_FAST(arg=0, lineno=428)
          20	LOAD_CONST(arg=2, lineno=428)
          22	BINARY_SUBSCR(arg=None, lineno=428)
          32	BINARY_OP(arg=0, lineno=428)
          36	LOAD_CONST(arg=3, lineno=428)
          38	LOAD_FAST(arg=0, lineno=428)
          40	LOAD_CONST(arg=4, lineno=428)
          42	BINARY_SUBSCR(arg=None, lineno=428)
          52	BINARY_OP(arg=5, lineno=428)
          56	BINARY_OP(arg=10, lineno=428)
          60	STORE_FAST(arg=1, lineno=428)
          62	LOAD_FAST(arg=0, lineno=429)
          64	LOAD_CONST(arg=1, lineno=429)
          66	BINARY_SUBSCR(arg=None, lineno=429)
          76	LOAD_FAST(arg=0, lineno=429)
          78	LOAD_CONST(arg=2, lineno=429)
          80	BINARY_SUBSCR(arg=None, lineno=429)
          90	BINARY_OP(arg=10, lineno=429)
          94	LOAD_CONST(arg=3, lineno=429)
          96	BINARY_OP(arg=11, lineno=429)
         100	STORE_FAST(arg=2, lineno=429)
         102	LOAD_GLOBAL(arg=1, lineno=431)
         114	LOAD_ATTR(arg=1, lineno=431)
         124	LOAD_FAST(arg=2, lineno=431)
         126	PRECALL(arg=1, lineno=431)
         130	CALL(arg=1, lineno=431)
         140	LOAD_GLOBAL(arg=1, lineno=431)
         152	LOAD_ATTR(arg=1, lineno=431)
         162	LOAD_FAST(arg=1, lineno=431)
         164	PRECALL(arg=1, lineno=431)
         168	CALL(arg=1, lineno=431)
         178	COMPARE_OP(arg=5, lineno=431)
         184	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=431)
         186	LOAD_CONST(arg=4, lineno=434)
         188	RETURN_VALUE(arg=None, lineno=434)
>        190	LOAD_FAST(arg=2, lineno=436)
         192	UNARY_NEGATIVE(arg=None, lineno=436)
         194	LOAD_FAST(arg=1, lineno=436)
         196	BINARY_OP(arg=11, lineno=436)
         200	RETURN_VALUE(arg=None, lineno=436)
DEBUG 2024-06-11 14:59:30,822 - pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG 2024-06-11 14:59:30,822 - stack: []
DEBUG 2024-06-11 14:59:30,822 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG 2024-06-11 14:59:30,822 - dispatch pc=0, inst=NOP(arg=None, lineno=425)
DEBUG 2024-06-11 14:59:30,824 - stack []
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=2, inst=RESUME(arg=0, lineno=425)
DEBUG 2024-06-11 14:59:30,824 - stack []
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=428)
DEBUG 2024-06-11 14:59:30,824 - stack []
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=428)
DEBUG 2024-06-11 14:59:30,824 - stack ['$x4.0']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=428)
DEBUG 2024-06-11 14:59:30,824 - stack ['$x4.0', '$const6.1']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=428)
DEBUG 2024-06-11 14:59:30,824 - stack ['$8binary_subscr.2']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=428)
DEBUG 2024-06-11 14:59:30,824 - stack ['$8binary_subscr.2', '$x18.3']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=428)
DEBUG 2024-06-11 14:59:30,824 - stack ['$8binary_subscr.2', '$x18.3', '$const20.4']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=32, inst=BINARY_OP(arg=0, lineno=428)
DEBUG 2024-06-11 14:59:30,824 - stack ['$8binary_subscr.2', '$22binary_subscr.5']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=36, inst=LOAD_CONST(arg=3, lineno=428)
DEBUG 2024-06-11 14:59:30,824 - stack ['$binop_add32.6']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=428)
DEBUG 2024-06-11 14:59:30,824 - stack ['$binop_add32.6', '$const36.7']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=428)
DEBUG 2024-06-11 14:59:30,824 - stack ['$binop_add32.6', '$const36.7', '$x38.8']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=428)
DEBUG 2024-06-11 14:59:30,824 - stack ['$binop_add32.6', '$const36.7', '$x38.8', '$const40.9']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=52, inst=BINARY_OP(arg=5, lineno=428)
DEBUG 2024-06-11 14:59:30,824 - stack ['$binop_add32.6', '$const36.7', '$42binary_subscr.10']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=56, inst=BINARY_OP(arg=10, lineno=428)
DEBUG 2024-06-11 14:59:30,824 - stack ['$binop_add32.6', '$binop_mul52.11']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=60, inst=STORE_FAST(arg=1, lineno=428)
DEBUG 2024-06-11 14:59:30,824 - stack ['$binop_sub56.12']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=62, inst=LOAD_FAST(arg=0, lineno=429)
DEBUG 2024-06-11 14:59:30,824 - stack []
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=429)
DEBUG 2024-06-11 14:59:30,824 - stack ['$x62.13']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=429)
DEBUG 2024-06-11 14:59:30,824 - stack ['$x62.13', '$const64.14']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=429)
DEBUG 2024-06-11 14:59:30,824 - stack ['$66binary_subscr.15']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=78, inst=LOAD_CONST(arg=2, lineno=429)
DEBUG 2024-06-11 14:59:30,824 - stack ['$66binary_subscr.15', '$x76.16']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=80, inst=BINARY_SUBSCR(arg=None, lineno=429)
DEBUG 2024-06-11 14:59:30,824 - stack ['$66binary_subscr.15', '$x76.16', '$const78.17']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=90, inst=BINARY_OP(arg=10, lineno=429)
DEBUG 2024-06-11 14:59:30,824 - stack ['$66binary_subscr.15', '$80binary_subscr.18']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=94, inst=LOAD_CONST(arg=3, lineno=429)
DEBUG 2024-06-11 14:59:30,824 - stack ['$binop_sub90.19']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=96, inst=BINARY_OP(arg=11, lineno=429)
DEBUG 2024-06-11 14:59:30,824 - stack ['$binop_sub90.19', '$const94.20']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=429)
DEBUG 2024-06-11 14:59:30,824 - stack ['$binop_truediv96.21']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=102, inst=LOAD_GLOBAL(arg=1, lineno=431)
DEBUG 2024-06-11 14:59:30,824 - stack []
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=114, inst=LOAD_ATTR(arg=1, lineno=431)
DEBUG 2024-06-11 14:59:30,824 - stack ['$null$102.23', '$102load_global.22']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=124, inst=LOAD_FAST(arg=2, lineno=431)
DEBUG 2024-06-11 14:59:30,824 - stack ['$null$102.23', '$114load_attr.24']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=126, inst=PRECALL(arg=1, lineno=431)
DEBUG 2024-06-11 14:59:30,824 - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=130, inst=CALL(arg=1, lineno=431)
DEBUG 2024-06-11 14:59:30,824 - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=140, inst=LOAD_GLOBAL(arg=1, lineno=431)
DEBUG 2024-06-11 14:59:30,824 - stack ['$130call.26']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=152, inst=LOAD_ATTR(arg=1, lineno=431)
DEBUG 2024-06-11 14:59:30,824 - stack ['$130call.26', '$null$140.28', '$140load_global.27']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=162, inst=LOAD_FAST(arg=1, lineno=431)
DEBUG 2024-06-11 14:59:30,824 - stack ['$130call.26', '$null$140.28', '$152load_attr.29']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=164, inst=PRECALL(arg=1, lineno=431)
DEBUG 2024-06-11 14:59:30,824 - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=168, inst=CALL(arg=1, lineno=431)
DEBUG 2024-06-11 14:59:30,824 - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=178, inst=COMPARE_OP(arg=5, lineno=431)
DEBUG 2024-06-11 14:59:30,824 - stack ['$130call.26', '$168call.31']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=184, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=431)
DEBUG 2024-06-11 14:59:30,824 - stack ['$178compare_op.32']
DEBUG 2024-06-11 14:59:30,824 - end state. edges=[Edge(pc=186, stack=(), blockstack=(), npush=0), Edge(pc=190, stack=(), blockstack=(), npush=0)]
DEBUG 2024-06-11 14:59:30,824 - pending: deque([State(pc_initial=186 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
DEBUG 2024-06-11 14:59:30,824 - stack: []
DEBUG 2024-06-11 14:59:30,824 - state.pc_initial: State(pc_initial=186 nstack_initial=0)
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=186, inst=LOAD_CONST(arg=4, lineno=434)
DEBUG 2024-06-11 14:59:30,824 - stack []
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=188, inst=RETURN_VALUE(arg=None, lineno=434)
DEBUG 2024-06-11 14:59:30,824 - stack ['$const186.0']
DEBUG 2024-06-11 14:59:30,824 - end state. edges=[]
DEBUG 2024-06-11 14:59:30,824 - pending: deque([State(pc_initial=190 nstack_initial=0)])
DEBUG 2024-06-11 14:59:30,824 - stack: []
DEBUG 2024-06-11 14:59:30,824 - state.pc_initial: State(pc_initial=190 nstack_initial=0)
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=190, inst=LOAD_FAST(arg=2, lineno=436)
DEBUG 2024-06-11 14:59:30,824 - stack []
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=192, inst=UNARY_NEGATIVE(arg=None, lineno=436)
DEBUG 2024-06-11 14:59:30,824 - stack ['$b190.0']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=194, inst=LOAD_FAST(arg=1, lineno=436)
DEBUG 2024-06-11 14:59:30,824 - stack ['$192unary_negative.1']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=196, inst=BINARY_OP(arg=11, lineno=436)
DEBUG 2024-06-11 14:59:30,824 - stack ['$192unary_negative.1', '$a194.2']
DEBUG 2024-06-11 14:59:30,824 - dispatch pc=200, inst=RETURN_VALUE(arg=None, lineno=436)
DEBUG 2024-06-11 14:59:30,824 - stack ['$binop_truediv196.3']
DEBUG 2024-06-11 14:59:30,824 - end state. edges=[]
DEBUG 2024-06-11 14:59:30,824 - -------------------------Prune PHIs-------------------------
DEBUG 2024-06-11 14:59:30,824 - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=186 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set()})
DEBUG 2024-06-11 14:59:30,824 - defmap: {}
DEBUG 2024-06-11 14:59:30,824 - phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 14:59:30,824 - changing phismap: defaultdict(<class 'set'>, {})
DEBUG 2024-06-11 14:59:30,824 - keep phismap: {}
DEBUG 2024-06-11 14:59:30,824 - new_out: defaultdict(<class 'dict'>, {})
DEBUG 2024-06-11 14:59:30,824 - ----------------------DONE Prune PHIs-----------------------
DEBUG 2024-06-11 14:59:30,824 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4'}), (22, {'index': '$const20.4', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'op': '+', 'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$binop_add32.6'}), (34, {}), (36, {'res': '$const36.7'}), (38, {'res': '$x38.8'}), (40, {'res': '$const40.9'}), (42, {'index': '$const40.9', 'target': '$x38.8', 'res': '$42binary_subscr.10'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'op': '*', 'lhs': '$const36.7', 'rhs': '$42binary_subscr.10', 'res': '$binop_mul52.11'}), (54, {}), (56, {'op': '-', 'lhs': '$binop_add32.6', 'rhs': '$binop_mul52.11', 'res': '$binop_sub56.12'}), (58, {}), (60, {'value': '$binop_sub56.12'}), (62, {'res': '$x62.13'}), (64, {'res': '$const64.14'}), (66, {'index': '$const64.14', 'target': '$x62.13', 'res': '$66binary_subscr.15'}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {'res': '$x76.16'}), (78, {'res': '$const78.17'}), (80, {'index': '$const78.17', 'target': '$x76.16', 'res': '$80binary_subscr.18'}), (82, {}), (84, {}), (86, {}), (88, {}), (90, {'op': '-', 'lhs': '$66binary_subscr.15', 'rhs': '$80binary_subscr.18', 'res': '$binop_sub90.19'}), (92, {}), (94, {'res': '$const94.20'}), (96, {'op': '/', 'lhs': '$binop_sub90.19', 'rhs': '$const94.20', 'res': '$binop_truediv96.21'}), (98, {}), (100, {'value': '$binop_truediv96.21'}), (102, {'idx': 0, 'res': '$102load_global.22'}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'item': '$102load_global.22', 'res': '$114load_attr.24'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$b124.25'}), (126, {}), (128, {}), (130, {'func': '$114load_attr.24', 'args': ['$b124.25'], 'kw_names': None, 'res': '$130call.26'}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {'idx': 0, 'res': '$140load_global.27'}), (142, {}), (144, {}), (146, {}), (148, {}), (150, {}), (152, {'item': '$140load_global.27', 'res': '$152load_attr.29'}), (154, {}), (156, {}), (158, {}), (160, {}), (162, {'res': '$a162.30'}), (164, {}), (166, {}), (168, {'func': '$152load_attr.29', 'args': ['$a162.30'], 'kw_names': None, 'res': '$168call.31'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {'lhs': '$130call.26', 'rhs': '$168call.31', 'res': '$178compare_op.32'}), (180, {}), (182, {}), (184, {'pred': '$178compare_op.32'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={186: (), 190: ()})
DEBUG 2024-06-11 14:59:30,824 - block_infos State(pc_initial=186 nstack_initial=0):
AdaptBlockInfo(insts=((186, {'res': '$const186.0'}), (188, {'retval': '$const186.0', 'castval': '$188return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 14:59:30,824 - block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$b190.0'}), (192, {'value': '$b190.0', 'res': '$192unary_negative.1'}), (194, {'res': '$a194.2'}), (196, {'op': '/', 'lhs': '$192unary_negative.1', 'rhs': '$a194.2', 'res': '$binop_truediv196.3'}), (198, {}), (200, {'retval': '$binop_truediv196.3', 'castval': '$200return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG 2024-06-11 14:59:30,824 - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1 = const(int, 1)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $const20.4 = const(int, -1)              ['$const20.4']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4', 'x']
    $binop_add32.6 = $8binary_subscr.2 + $22binary_subscr.5 ['$22binary_subscr.5', '$8binary_subscr.2', '$binop_add32.6']
    $const36.7 = const(int, 2)               ['$const36.7']
    $const40.9 = const(int, 0)               ['$const40.9']
    $42binary_subscr.10 = getitem(value=x, index=$const40.9, fn=<built-in function getitem>) ['$42binary_subscr.10', '$const40.9', 'x']
    $binop_mul52.11 = $const36.7 * $42binary_subscr.10 ['$42binary_subscr.10', '$binop_mul52.11', '$const36.7']
    a = $binop_add32.6 - $binop_mul52.11     ['$binop_add32.6', '$binop_mul52.11', 'a']
    $const64.14 = const(int, 1)              ['$const64.14']
    $66binary_subscr.15 = getitem(value=x, index=$const64.14, fn=<built-in function getitem>) ['$66binary_subscr.15', '$const64.14', 'x']
    $const78.17 = const(int, -1)             ['$const78.17']
    $80binary_subscr.18 = getitem(value=x, index=$const78.17, fn=<built-in function getitem>) ['$80binary_subscr.18', '$const78.17', 'x']
    $binop_sub90.19 = $66binary_subscr.15 - $80binary_subscr.18 ['$66binary_subscr.15', '$80binary_subscr.18', '$binop_sub90.19']
    $const94.20 = const(int, 2)              ['$const94.20']
    b = $binop_sub90.19 / $const94.20        ['$binop_sub90.19', '$const94.20', 'b']
    $102load_global.22 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$102load_global.22']
    $114load_attr.24 = getattr(value=$102load_global.22, attr=abs) ['$102load_global.22', '$114load_attr.24']
    $130call.26 = call $114load_attr.24(b, func=$114load_attr.24, args=[Var(b, pitch.py:429)], kws=(), vararg=None, varkwarg=None, target=None) ['$114load_attr.24', '$130call.26', 'b']
    $140load_global.27 = global(np: <module 'numpy' from 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\numpy\\__init__.py'>) ['$140load_global.27']
    $152load_attr.29 = getattr(value=$140load_global.27, attr=abs) ['$140load_global.27', '$152load_attr.29']
    $168call.31 = call $152load_attr.29(a, func=$152load_attr.29, args=[Var(a, pitch.py:428)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_attr.29', '$168call.31', 'a']
    $178compare_op.32 = $130call.26 >= $168call.31 ['$130call.26', '$168call.31', '$178compare_op.32']
    bool184 = global(bool: <class 'bool'>)   ['bool184']
    $184pred = call bool184($178compare_op.32, func=bool184, args=(Var($178compare_op.32, pitch.py:431),), kws=(), vararg=None, varkwarg=None, target=None) ['$178compare_op.32', '$184pred', 'bool184']
    branch $184pred, 186, 190                ['$184pred']
label 186:
    $const186.0 = const(int, 0)              ['$const186.0']
    $188return_value.1 = cast(value=$const186.0) ['$188return_value.1', '$const186.0']
    return $188return_value.1                ['$188return_value.1']
label 190:
    $192unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$192unary_negative.1', 'b']
    $binop_truediv196.3 = $192unary_negative.1 / a ['$192unary_negative.1', '$binop_truediv196.3', 'a']
    $200return_value.4 = cast(value=$binop_truediv196.3) ['$200return_value.4', '$binop_truediv196.3']
    return $200return_value.4                ['$200return_value.4']

WARNING 2024-06-11 15:00:39,618 - From C:\Users\Dell\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\backend\common\global_state.py:82: The name tf.reset_default_graph is deprecated. Please use tf.compat.v1.reset_default_graph instead.

WARNING 2024-06-11 15:32:06,963 - 5 out of the last 5 calls to <function TensorFlowTrainer.make_predict_function.<locals>.one_step_on_data_distributed at 0x0000027CEFEF0EA0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has reduce_retracing=True option that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.
WARNING 2024-06-11 15:33:41,006 - 6 out of the last 6 calls to <function TensorFlowTrainer.make_predict_function.<locals>.one_step_on_data_distributed at 0x0000027CEFEF27A0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has reduce_retracing=True option that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.
